/* verilator lint_off PINMISSING */
/* verilator lint_off CASEX */
/* verilator lint_off CASEOVERLAP */
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MLP8_MLP8,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvc1902-vsva2197-2MP-e-S,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.022000,HLS_SYN_LAT=56461,HLS_SYN_TPT=56462,HLS_SYN_MEM=78,HLS_SYN_DSP=0,HLS_SYN_FF=14747,HLS_SYN_LUT=27638,HLS_VERSION=2023_2}" *)

module MLP8 (
        i_stream_TDATA,
        o_stream_TDATA,
        ap_clk,
        ap_rst_n,
        i_stream_TVALID,
        i_stream_TREADY,
        o_stream_TVALID,
        o_stream_TREADY,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] i_stream_TDATA;
output  [31:0] o_stream_TDATA;
input   ap_clk;
input   ap_rst_n;
input   i_stream_TVALID;
output   i_stream_TREADY;
output   o_stream_TVALID;
input   o_stream_TREADY;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [31:0] do_mlp_U0_o_stream_TDATA;
 reg    ap_rst_n_inv;
wire    do_mlp_U0_i_stream_TREADY;
wire    do_mlp_U0_ap_start;
wire    do_mlp_U0_o_stream_TVALID;
wire    do_mlp_U0_ap_done;
wire    do_mlp_U0_ap_ready;
wire    do_mlp_U0_ap_idle;
wire    do_mlp_U0_ap_continue;

MLP8_do_mlp do_mlp_U0(
    .i_stream_TDATA(i_stream_TDATA),
    .o_stream_TDATA(do_mlp_U0_o_stream_TDATA),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .i_stream_TVALID(i_stream_TVALID),
    .i_stream_TREADY(do_mlp_U0_i_stream_TREADY),
    .ap_start(do_mlp_U0_ap_start),
    .o_stream_TVALID(do_mlp_U0_o_stream_TVALID),
    .o_stream_TREADY(o_stream_TREADY),
    .ap_done(do_mlp_U0_ap_done),
    .ap_ready(do_mlp_U0_ap_ready),
    .ap_idle(do_mlp_U0_ap_idle),
    .ap_continue(do_mlp_U0_ap_continue)
);

assign ap_done = do_mlp_U0_ap_done;

assign ap_idle = do_mlp_U0_ap_idle;

assign ap_ready = do_mlp_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign do_mlp_U0_ap_continue = ap_continue;

assign do_mlp_U0_ap_start = ap_start;

assign i_stream_TREADY = do_mlp_U0_i_stream_TREADY;

assign o_stream_TDATA = do_mlp_U0_o_stream_TDATA;

assign o_stream_TVALID = do_mlp_U0_o_stream_TVALID;

endmodule //MLP8
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_adapt (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ge_sm_dout,
        ge_sm_num_data_valid,
        ge_sm_fifo_cap,
        ge_sm_empty_n,
        ge_sm_read,
        adpt_sm_din,
        adpt_sm_num_data_valid,
        adpt_sm_fifo_cap,
        adpt_sm_full_n,
        adpt_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] ge_sm_dout;
input  [2:0] ge_sm_num_data_valid;
input  [2:0] ge_sm_fifo_cap;
input   ge_sm_empty_n;
output   ge_sm_read;
output  [143:0] adpt_sm_din;
input  [5:0] adpt_sm_num_data_valid;
input  [5:0] adpt_sm_fifo_cap;
input   adpt_sm_full_n;
output   adpt_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg ge_sm_read;
reg adpt_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire   [0:0] icmp_ln78_fu_853_p2;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln83_3_reg_2782;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ge_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    adpt_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln79_fu_859_p2;
reg   [0:0] icmp_ln79_reg_2673;
wire   [2:0] trunc_ln86_fu_867_p1;
reg   [2:0] trunc_ln86_reg_2679;
reg   [2:0] trunc_ln86_1_reg_2685;
reg   [2:0] trunc_ln86_2_reg_2691;
reg   [2:0] trunc_ln86_3_reg_2697;
reg   [5:0] tmp_reg_2703;
reg   [5:0] tmp_reg_2703_pp0_iter1_reg;
wire   [5:0] trunc_ln100_fu_911_p1;
reg   [5:0] trunc_ln100_reg_2708;
reg   [5:0] trunc_ln100_reg_2708_pp0_iter1_reg;
reg   [2:0] p_0_0_0_0_0_0273_load_reg_2713;
reg   [2:0] p_0_0_1_0_0_0275_load_reg_2718;
reg   [2:0] p_0_0_2_0_0_0317_load_reg_2723;
wire   [0:0] or_ln79_fu_1000_p2;
reg   [0:0] or_ln79_reg_2728;
wire   [2:0] select_ln79_fu_1005_p3;
reg   [2:0] select_ln79_reg_2775;
wire   [0:0] icmp_ln83_3_fu_1027_p2;
reg   [3:0] t_fu_70;
wire   [3:0] t_6_fu_1019_p3;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [3:0] ap_sig_allocacmp_t_load;
reg   [2:0] p_0_0_01_2233_fu_74;
wire   [2:0] select_ln79_65_fu_1602_p3;
reg    ap_loop_init_pp0_iter2_reg;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_2233_load;
reg   [2:0] p_0_0_01_3235_fu_78;
wire   [2:0] select_ln79_64_fu_1595_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_3235_load;
reg   [2:0] p_0_0_01_4237_fu_82;
wire   [2:0] select_ln79_63_fu_1588_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_4237_load;
reg   [2:0] p_0_0_01_5239_fu_86;
wire   [2:0] select_ln79_62_fu_1581_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_5239_load;
reg   [2:0] p_0_0_01_6241_fu_90;
wire   [2:0] select_ln79_61_fu_1574_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_6241_load;
reg   [2:0] p_0_0_01_7243_fu_94;
wire   [2:0] select_ln79_60_fu_1567_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_7243_load;
reg   [2:0] p_0_0_01_8245_fu_98;
wire   [2:0] select_ln79_59_fu_1560_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_8245_load;
reg   [2:0] p_0_0_01_9247_fu_102;
wire   [2:0] select_ln79_58_fu_1553_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_9247_load;
reg   [2:0] p_0_0_01_10249_fu_106;
wire   [2:0] select_ln79_57_fu_1546_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_10249_load;
reg   [2:0] p_0_0_01_11251_fu_110;
wire   [2:0] select_ln79_56_fu_1539_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_11251_load;
reg   [2:0] p_0_0_01_12253_fu_114;
wire   [2:0] select_ln79_55_fu_1532_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_12253_load;
reg   [2:0] p_0_0_01_13255_fu_118;
wire   [2:0] select_ln79_54_fu_1525_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_13255_load;
reg   [2:0] p_0_0_01_14257_fu_122;
wire   [2:0] select_ln79_53_fu_1518_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_14257_load;
reg   [2:0] p_0_0_01_15259_fu_126;
wire   [2:0] select_ln79_52_fu_1511_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_15259_load;
reg   [2:0] p_0_0_01_16261_fu_130;
wire   [2:0] select_ln79_51_fu_1504_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_16261_load;
reg   [2:0] p_0_0_01_17263_fu_134;
wire   [2:0] select_ln79_50_fu_1497_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_17263_load;
reg   [2:0] p_0_0_01_18265_fu_138;
wire   [2:0] select_ln79_49_fu_1490_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_18265_load;
reg   [2:0] p_0_0_01_19267_fu_142;
wire   [2:0] select_ln79_48_fu_1483_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_19267_load;
reg   [2:0] p_0_0_01_20269_fu_146;
wire   [2:0] select_ln79_47_fu_1477_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_20269_load;
reg   [2:0] p_0_0_01_21271_fu_150;
wire   [2:0] select_ln79_46_fu_1471_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_21271_load;
reg   [2:0] p_0_0_0_0_0_0273_fu_154;
reg   [2:0] ap_sig_allocacmp_p_0_0_0_0_0_0273_load;
reg   [2:0] p_0_0_1_0_0_0275_fu_158;
reg   [2:0] ap_sig_allocacmp_p_0_0_1_0_0_0275_load;
reg   [2:0] p_0_0_01_1_2277_fu_162;
wire   [2:0] select_ln79_43_fu_1450_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_2277_load;
reg   [2:0] p_0_0_01_1_3279_fu_166;
wire   [2:0] select_ln79_42_fu_1443_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_3279_load;
reg   [2:0] p_0_0_01_1_4281_fu_170;
wire   [2:0] select_ln79_41_fu_1436_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_4281_load;
reg   [2:0] p_0_0_01_1_5283_fu_174;
wire   [2:0] select_ln79_40_fu_1429_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_5283_load;
reg   [2:0] p_0_0_01_1_6285_fu_178;
wire   [2:0] select_ln79_39_fu_1422_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_6285_load;
reg   [2:0] p_0_0_01_1_7287_fu_182;
wire   [2:0] select_ln79_38_fu_1415_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_7287_load;
reg   [2:0] p_0_0_01_1_8289_fu_186;
wire   [2:0] select_ln79_37_fu_1408_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_8289_load;
reg   [2:0] p_0_0_01_1_9291_fu_190;
wire   [2:0] select_ln79_36_fu_1401_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_9291_load;
reg   [2:0] p_0_0_01_1_10293_fu_194;
wire   [2:0] select_ln79_35_fu_1394_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_10293_load;
reg   [2:0] p_0_0_01_1_11295_fu_198;
wire   [2:0] select_ln79_34_fu_1387_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_11295_load;
reg   [2:0] p_0_0_01_1_12297_fu_202;
wire   [2:0] select_ln79_33_fu_1380_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_12297_load;
reg   [2:0] p_0_0_01_1_13299_fu_206;
wire   [2:0] select_ln79_32_fu_1373_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_13299_load;
reg   [2:0] p_0_0_01_1_14301_fu_210;
wire   [2:0] select_ln79_31_fu_1366_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_14301_load;
reg   [2:0] p_0_0_01_1_15303_fu_214;
wire   [2:0] select_ln79_30_fu_1359_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_15303_load;
reg   [2:0] p_0_0_01_1_16305_fu_218;
wire   [2:0] select_ln79_29_fu_1352_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_16305_load;
reg   [2:0] p_0_0_01_1_17307_fu_222;
wire   [2:0] select_ln79_28_fu_1345_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_17307_load;
reg   [2:0] p_0_0_01_1_18309_fu_226;
wire   [2:0] select_ln79_27_fu_1338_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_18309_load;
reg   [2:0] p_0_0_01_1_19311_fu_230;
wire   [2:0] select_ln79_26_fu_1331_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_19311_load;
reg   [2:0] p_0_0_01_1_20313_fu_234;
wire   [2:0] select_ln79_25_fu_1325_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_20313_load;
reg   [2:0] p_0_0_01_1_21315_fu_238;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_21315_load;
reg   [2:0] p_0_0_2_0_0_0317_fu_242;
reg   [2:0] ap_sig_allocacmp_p_0_0_2_0_0_0317_load;
reg   [2:0] p_0_0_3_0_0_0319_fu_246;
reg   [2:0] ap_sig_allocacmp_p_0_0_3_0_0_0319_load;
reg   [9:0] indvar_flatten_fu_250;
wire   [9:0] select_ln79_68_fu_921_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] indvar_flatten58_fu_254;
wire   [15:0] add_ln78_fu_847_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten58_load;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] add_ln79_fu_915_p2;
wire   [0:0] icmp_ln83_fu_988_p2;
wire   [0:0] xor_ln78_fu_983_p2;
wire   [0:0] and_ln78_fu_994_p2;
wire   [3:0] add_ln83_fu_1013_p2;
wire   [2:0] select_ln79_44_fu_1457_p3;
wire   [2:0] select_ln79_45_fu_1464_p3;
wire   [2:0] select_ln79_66_fu_1609_p3;
wire   [2:0] select_ln79_67_fu_1616_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_461;
reg    ap_condition_272;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 t_fu_70 = 4'd0;
//#0 p_0_0_01_2233_fu_74 = 3'd0;
//#0 p_0_0_01_3235_fu_78 = 3'd0;
//#0 p_0_0_01_4237_fu_82 = 3'd0;
//#0 p_0_0_01_5239_fu_86 = 3'd0;
//#0 p_0_0_01_6241_fu_90 = 3'd0;
//#0 p_0_0_01_7243_fu_94 = 3'd0;
//#0 p_0_0_01_8245_fu_98 = 3'd0;
//#0 p_0_0_01_9247_fu_102 = 3'd0;
//#0 p_0_0_01_10249_fu_106 = 3'd0;
//#0 p_0_0_01_11251_fu_110 = 3'd0;
//#0 p_0_0_01_12253_fu_114 = 3'd0;
//#0 p_0_0_01_13255_fu_118 = 3'd0;
//#0 p_0_0_01_14257_fu_122 = 3'd0;
//#0 p_0_0_01_15259_fu_126 = 3'd0;
//#0 p_0_0_01_16261_fu_130 = 3'd0;
//#0 p_0_0_01_17263_fu_134 = 3'd0;
//#0 p_0_0_01_18265_fu_138 = 3'd0;
//#0 p_0_0_01_19267_fu_142 = 3'd0;
//#0 p_0_0_01_20269_fu_146 = 3'd0;
//#0 p_0_0_01_21271_fu_150 = 3'd0;
//#0 p_0_0_0_0_0_0273_fu_154 = 3'd0;
//#0 p_0_0_1_0_0_0275_fu_158 = 3'd0;
//#0 p_0_0_01_1_2277_fu_162 = 3'd0;
//#0 p_0_0_01_1_3279_fu_166 = 3'd0;
//#0 p_0_0_01_1_4281_fu_170 = 3'd0;
//#0 p_0_0_01_1_5283_fu_174 = 3'd0;
//#0 p_0_0_01_1_6285_fu_178 = 3'd0;
//#0 p_0_0_01_1_7287_fu_182 = 3'd0;
//#0 p_0_0_01_1_8289_fu_186 = 3'd0;
//#0 p_0_0_01_1_9291_fu_190 = 3'd0;
//#0 p_0_0_01_1_10293_fu_194 = 3'd0;
//#0 p_0_0_01_1_11295_fu_198 = 3'd0;
//#0 p_0_0_01_1_12297_fu_202 = 3'd0;
//#0 p_0_0_01_1_13299_fu_206 = 3'd0;
//#0 p_0_0_01_1_14301_fu_210 = 3'd0;
//#0 p_0_0_01_1_15303_fu_214 = 3'd0;
//#0 p_0_0_01_1_16305_fu_218 = 3'd0;
//#0 p_0_0_01_1_17307_fu_222 = 3'd0;
//#0 p_0_0_01_1_18309_fu_226 = 3'd0;
//#0 p_0_0_01_1_19311_fu_230 = 3'd0;
//#0 p_0_0_01_1_20313_fu_234 = 3'd0;
//#0 p_0_0_01_1_21315_fu_238 = 3'd0;
//#0 p_0_0_2_0_0_0317_fu_242 = 3'd0;
//#0 p_0_0_3_0_0_0319_fu_246 = 3'd0;
//#0 indvar_flatten_fu_250 = 10'd0;
//#0 indvar_flatten58_fu_254 = 16'd0;
end

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_461)) begin
        if ((icmp_ln78_fu_853_p2 == 1'd0)) begin
            indvar_flatten58_fu_254 <= add_ln78_fu_847_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten58_fu_254 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_461)) begin
        if ((icmp_ln78_fu_853_p2 == 1'd0)) begin
            indvar_flatten_fu_250 <= select_ln79_68_fu_921_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_250 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_01_10249_fu_106 <= select_ln79_57_fu_1546_p3;
    end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_11251_fu_110 <= select_ln79_56_fu_1539_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_12253_fu_114 <= select_ln79_55_fu_1532_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_13255_fu_118 <= select_ln79_54_fu_1525_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_14257_fu_122 <= select_ln79_53_fu_1518_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_15259_fu_126 <= select_ln79_52_fu_1511_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_16261_fu_130 <= select_ln79_51_fu_1504_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_17263_fu_134 <= select_ln79_50_fu_1497_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_18265_fu_138 <= select_ln79_49_fu_1490_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_19267_fu_142 <= select_ln79_48_fu_1483_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_10293_fu_194 <= select_ln79_35_fu_1394_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_11295_fu_198 <= select_ln79_34_fu_1387_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_12297_fu_202 <= select_ln79_33_fu_1380_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_13299_fu_206 <= select_ln79_32_fu_1373_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_14301_fu_210 <= select_ln79_31_fu_1366_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_15303_fu_214 <= select_ln79_30_fu_1359_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_16305_fu_218 <= select_ln79_29_fu_1352_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_17307_fu_222 <= select_ln79_28_fu_1345_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_18309_fu_226 <= select_ln79_27_fu_1338_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_19311_fu_230 <= select_ln79_26_fu_1331_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_20313_fu_234 <= select_ln79_25_fu_1325_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_21315_fu_238 <= select_ln79_reg_2775;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_2277_fu_162 <= select_ln79_43_fu_1450_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_3279_fu_166 <= select_ln79_42_fu_1443_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_4281_fu_170 <= select_ln79_41_fu_1436_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_5283_fu_174 <= select_ln79_40_fu_1429_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_6285_fu_178 <= select_ln79_39_fu_1422_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_7287_fu_182 <= select_ln79_38_fu_1415_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_8289_fu_186 <= select_ln79_37_fu_1408_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_9291_fu_190 <= select_ln79_36_fu_1401_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_20269_fu_146 <= select_ln79_47_fu_1477_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_21271_fu_150 <= select_ln79_46_fu_1471_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_2233_fu_74 <= select_ln79_65_fu_1602_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_3235_fu_78 <= select_ln79_64_fu_1595_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_4237_fu_82 <= select_ln79_63_fu_1588_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_5239_fu_86 <= select_ln79_62_fu_1581_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_6241_fu_90 <= select_ln79_61_fu_1574_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_7243_fu_94 <= select_ln79_60_fu_1567_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_8245_fu_98 <= select_ln79_59_fu_1560_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_9247_fu_102 <= select_ln79_58_fu_1553_p3;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_272)) begin
    p_0_0_0_0_0_0273_fu_154 <= trunc_ln86_reg_2679;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_272)) begin
    p_0_0_1_0_0_0275_fu_158 <= trunc_ln86_1_reg_2685;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_272)) begin
    p_0_0_2_0_0_0317_fu_242 <= trunc_ln86_2_reg_2691;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_272)) begin
    p_0_0_3_0_0_0319_fu_246 <= trunc_ln86_3_reg_2697;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_272)) begin
    t_fu_70 <= t_6_fu_1019_p3;
end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        ap_loop_init_pp0_iter2_reg <= ap_loop_init_pp0_iter1_reg;
        icmp_ln79_reg_2673 <= icmp_ln79_fu_859_p2;
        icmp_ln83_3_reg_2782 <= icmp_ln83_3_fu_1027_p2;
        or_ln79_reg_2728 <= or_ln79_fu_1000_p2;
        p_0_0_0_0_0_0273_load_reg_2713 <= ap_sig_allocacmp_p_0_0_0_0_0_0273_load;
        p_0_0_1_0_0_0275_load_reg_2718 <= ap_sig_allocacmp_p_0_0_1_0_0_0275_load;
        p_0_0_2_0_0_0317_load_reg_2723 <= ap_sig_allocacmp_p_0_0_2_0_0_0317_load;
        select_ln79_reg_2775 <= select_ln79_fu_1005_p3;
        tmp_reg_2703 <= {{ge_sm_dout[11:6]}};
        tmp_reg_2703_pp0_iter1_reg <= tmp_reg_2703;
        trunc_ln100_reg_2708 <= trunc_ln100_fu_911_p1;
        trunc_ln100_reg_2708_pp0_iter1_reg <= trunc_ln100_reg_2708;
        trunc_ln86_1_reg_2685 <= {{ge_sm_dout[5:3]}};
        trunc_ln86_2_reg_2691 <= {{ge_sm_dout[8:6]}};
        trunc_ln86_3_reg_2697 <= {{ge_sm_dout[11:9]}};
        trunc_ln86_reg_2679 <= trunc_ln86_fu_867_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln83_3_reg_2782 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_blk_n = adpt_sm_full_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln83_3_reg_2782 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_write = 1'b1;
    end else begin
        adpt_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln78_fu_853_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten58_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten58_load = indvar_flatten58_fu_254;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_250;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_10249_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_10249_load = p_0_0_01_10249_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_11251_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_11251_load = p_0_0_01_11251_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_12253_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_12253_load = p_0_0_01_12253_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_13255_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_13255_load = p_0_0_01_13255_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_14257_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_14257_load = p_0_0_01_14257_fu_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_15259_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_15259_load = p_0_0_01_15259_fu_126;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_16261_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_16261_load = p_0_0_01_16261_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_17263_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_17263_load = p_0_0_01_17263_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_18265_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_18265_load = p_0_0_01_18265_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_19267_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_19267_load = p_0_0_01_19267_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_10293_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_10293_load = p_0_0_01_1_10293_fu_194;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_11295_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_11295_load = p_0_0_01_1_11295_fu_198;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_12297_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_12297_load = p_0_0_01_1_12297_fu_202;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_13299_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_13299_load = p_0_0_01_1_13299_fu_206;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_14301_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_14301_load = p_0_0_01_1_14301_fu_210;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_15303_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_15303_load = p_0_0_01_1_15303_fu_214;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_16305_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_16305_load = p_0_0_01_1_16305_fu_218;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_17307_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_17307_load = p_0_0_01_1_17307_fu_222;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_18309_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_18309_load = p_0_0_01_1_18309_fu_226;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_19311_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_19311_load = p_0_0_01_1_19311_fu_230;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_20313_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_20313_load = p_0_0_01_1_20313_fu_234;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_21315_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_21315_load = p_0_0_01_1_21315_fu_238;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_2277_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_2277_load = p_0_0_01_1_2277_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_3279_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_3279_load = p_0_0_01_1_3279_fu_166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_4281_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_4281_load = p_0_0_01_1_4281_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_5283_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_5283_load = p_0_0_01_1_5283_fu_174;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_6285_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_6285_load = p_0_0_01_1_6285_fu_178;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_7287_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_7287_load = p_0_0_01_1_7287_fu_182;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_8289_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_8289_load = p_0_0_01_1_8289_fu_186;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_9291_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_9291_load = p_0_0_01_1_9291_fu_190;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_20269_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_20269_load = p_0_0_01_20269_fu_146;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_21271_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_21271_load = p_0_0_01_21271_fu_150;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_2233_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_2233_load = p_0_0_01_2233_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_3235_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_3235_load = p_0_0_01_3235_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_4237_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_4237_load = p_0_0_01_4237_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_5239_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_5239_load = p_0_0_01_5239_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_6241_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_6241_load = p_0_0_01_6241_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_7243_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_7243_load = p_0_0_01_7243_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_8245_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_8245_load = p_0_0_01_8245_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_9247_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_9247_load = p_0_0_01_9247_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_p_0_0_0_0_0_0273_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_0_0_0_0273_load = p_0_0_0_0_0_0273_fu_154;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_p_0_0_1_0_0_0275_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_1_0_0_0275_load = p_0_0_1_0_0_0275_fu_158;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_p_0_0_2_0_0_0317_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_2_0_0_0317_load = p_0_0_2_0_0_0317_fu_242;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_p_0_0_3_0_0_0319_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_3_0_0_0319_load = p_0_0_3_0_0_0319_fu_246;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_t_load = 4'd0;
    end else begin
        ap_sig_allocacmp_t_load = t_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (icmp_ln78_fu_853_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ge_sm_blk_n = ge_sm_empty_n;
    end else begin
        ge_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_fu_853_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ge_sm_read = 1'b1;
    end else begin
        ge_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_847_p2 = (ap_sig_allocacmp_indvar_flatten58_load + 16'd1);

assign add_ln79_fu_915_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln83_fu_1013_p2 = (ap_sig_allocacmp_t_load + 4'd1);

assign adpt_sm_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_reg_2703_pp0_iter1_reg}, {select_ln79_reg_2775}}, {select_ln79_25_fu_1325_p3}}, {select_ln79_26_fu_1331_p3}}, {select_ln79_27_fu_1338_p3}}, {select_ln79_28_fu_1345_p3}}, {select_ln79_29_fu_1352_p3}}, {select_ln79_30_fu_1359_p3}}, {select_ln79_31_fu_1366_p3}}, {select_ln79_32_fu_1373_p3}}, {select_ln79_33_fu_1380_p3}}, {select_ln79_34_fu_1387_p3}}, {select_ln79_35_fu_1394_p3}}, {select_ln79_36_fu_1401_p3}}, {select_ln79_37_fu_1408_p3}}, {select_ln79_38_fu_1415_p3}}, {select_ln79_39_fu_1422_p3}}, {select_ln79_40_fu_1429_p3}}, {select_ln79_41_fu_1436_p3}}, {select_ln79_42_fu_1443_p3}}, {select_ln79_43_fu_1450_p3}}, {select_ln79_44_fu_1457_p3}}, {select_ln79_45_fu_1464_p3}}, {trunc_ln100_reg_2708_pp0_iter1_reg}}, {select_ln79_46_fu_1471_p3}}, {select_ln79_47_fu_1477_p3}}, {select_ln79_48_fu_1483_p3}}, {select_ln79_49_fu_1490_p3}}, {select_ln79_50_fu_1497_p3}}, {select_ln79_51_fu_1504_p3}}, {select_ln79_52_fu_1511_p3}}, {select_ln79_53_fu_1518_p3}}, {select_ln79_54_fu_1525_p3}}, 
    {select_ln79_55_fu_1532_p3}}, {select_ln79_56_fu_1539_p3}}, {select_ln79_57_fu_1546_p3}}, {select_ln79_58_fu_1553_p3}}, {select_ln79_59_fu_1560_p3}}, {select_ln79_60_fu_1567_p3}}, {select_ln79_61_fu_1574_p3}}, {select_ln79_62_fu_1581_p3}}, {select_ln79_63_fu_1588_p3}}, {select_ln79_64_fu_1595_p3}}, {select_ln79_65_fu_1602_p3}}, {select_ln79_66_fu_1609_p3}}, {select_ln79_67_fu_1616_p3}};

assign and_ln78_fu_994_p2 = (xor_ln78_fu_983_p2 & icmp_ln83_fu_988_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((icmp_ln78_fu_853_p2 == 1'd0) & (ge_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln83_3_reg_2782 == 1'd1) & (1'b0 == adpt_sm_full_n));
end

always @ (*) begin
    ap_condition_272 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_461 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign icmp_ln78_fu_853_p2 = ((ap_sig_allocacmp_indvar_flatten58_load == 16'd37632) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_859_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln83_3_fu_1027_p2 = ((t_6_fu_1019_p3 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_988_p2 = ((ap_sig_allocacmp_t_load == 4'd12) ? 1'b1 : 1'b0);

assign or_ln79_fu_1000_p2 = (icmp_ln79_reg_2673 | and_ln78_fu_994_p2);

assign select_ln79_25_fu_1325_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : p_0_0_2_0_0_0317_load_reg_2723);

assign select_ln79_26_fu_1331_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_21315_load);

assign select_ln79_27_fu_1338_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_20313_load);

assign select_ln79_28_fu_1345_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_19311_load);

assign select_ln79_29_fu_1352_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_18309_load);

assign select_ln79_30_fu_1359_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_17307_load);

assign select_ln79_31_fu_1366_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_16305_load);

assign select_ln79_32_fu_1373_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_15303_load);

assign select_ln79_33_fu_1380_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_14301_load);

assign select_ln79_34_fu_1387_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_13299_load);

assign select_ln79_35_fu_1394_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_12297_load);

assign select_ln79_36_fu_1401_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_11295_load);

assign select_ln79_37_fu_1408_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_10293_load);

assign select_ln79_38_fu_1415_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_9291_load);

assign select_ln79_39_fu_1422_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_8289_load);

assign select_ln79_40_fu_1429_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_7287_load);

assign select_ln79_41_fu_1436_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_6285_load);

assign select_ln79_42_fu_1443_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_5283_load);

assign select_ln79_43_fu_1450_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_4281_load);

assign select_ln79_44_fu_1457_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_3279_load);

assign select_ln79_45_fu_1464_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_2277_load);

assign select_ln79_46_fu_1471_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : p_0_0_1_0_0_0275_load_reg_2718);

assign select_ln79_47_fu_1477_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : p_0_0_0_0_0_0273_load_reg_2713);

assign select_ln79_48_fu_1483_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_21271_load);

assign select_ln79_49_fu_1490_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_20269_load);

assign select_ln79_50_fu_1497_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_19267_load);

assign select_ln79_51_fu_1504_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_18265_load);

assign select_ln79_52_fu_1511_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_17263_load);

assign select_ln79_53_fu_1518_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_16261_load);

assign select_ln79_54_fu_1525_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_15259_load);

assign select_ln79_55_fu_1532_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_14257_load);

assign select_ln79_56_fu_1539_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_13255_load);

assign select_ln79_57_fu_1546_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_12253_load);

assign select_ln79_58_fu_1553_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_11251_load);

assign select_ln79_59_fu_1560_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_10249_load);

assign select_ln79_60_fu_1567_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_9247_load);

assign select_ln79_61_fu_1574_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_8245_load);

assign select_ln79_62_fu_1581_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_7243_load);

assign select_ln79_63_fu_1588_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_6241_load);

assign select_ln79_64_fu_1595_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_5239_load);

assign select_ln79_65_fu_1602_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_4237_load);

assign select_ln79_66_fu_1609_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_3235_load);

assign select_ln79_67_fu_1616_p3 = ((or_ln79_reg_2728[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_2233_load);

assign select_ln79_68_fu_921_p3 = ((icmp_ln79_fu_859_p2[0:0] == 1'b1) ? 10'd1 : add_ln79_fu_915_p2);

assign select_ln79_fu_1005_p3 = ((or_ln79_fu_1000_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_3_0_0_0319_load);

assign start_out = real_start;

assign t_6_fu_1019_p3 = ((or_ln79_fu_1000_p2[0:0] == 1'b1) ? 4'd1 : add_ln83_fu_1013_p2);

assign trunc_ln100_fu_911_p1 = ge_sm_dout[5:0];

assign trunc_ln86_fu_867_p1 = ge_sm_dout[2:0];

assign xor_ln78_fu_983_p2 = (icmp_ln79_reg_2673 ^ 1'd1);

endmodule //MLP8_do_adapt
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_adapt_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ln_sm_dout,
        ln_sm_num_data_valid,
        ln_sm_fifo_cap,
        ln_sm_empty_n,
        ln_sm_read,
        adpt_sm_din,
        adpt_sm_num_data_valid,
        adpt_sm_fifo_cap,
        adpt_sm_full_n,
        adpt_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [5:0] ln_sm_dout;
input  [2:0] ln_sm_num_data_valid;
input  [2:0] ln_sm_fifo_cap;
input   ln_sm_empty_n;
output   ln_sm_read;
output  [71:0] adpt_sm_din;
input  [5:0] adpt_sm_num_data_valid;
input  [5:0] adpt_sm_fifo_cap;
input   adpt_sm_full_n;
output   adpt_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg ln_sm_read;
reg adpt_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire   [0:0] icmp_ln78_fu_491_p2;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln83_2_reg_1518;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ln_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    adpt_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln79_fu_497_p2;
reg   [0:0] icmp_ln79_reg_1472;
wire   [2:0] trunc_ln86_fu_505_p1;
reg   [2:0] trunc_ln86_reg_1478;
reg   [2:0] trunc_ln86_reg_1478_pp0_iter1_reg;
reg   [2:0] trunc_ln86_4_reg_1485;
reg   [2:0] trunc_ln86_4_reg_1485_pp0_iter1_reg;
wire   [0:0] or_ln79_fu_580_p2;
reg   [0:0] or_ln79_reg_1492;
wire   [0:0] icmp_ln83_2_fu_599_p2;
reg   [3:0] t_fu_60;
wire   [3:0] t_5_fu_591_p3;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [3:0] ap_sig_allocacmp_t_load;
reg   [2:0] p_0_0_01_121129_fu_64;
wire   [2:0] select_ln79_22_fu_889_p3;
reg    ap_loop_init_pp0_iter2_reg;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_121129_load;
reg   [2:0] p_0_0_01_2131_fu_68;
wire   [2:0] select_ln79_21_fu_882_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_2131_load;
reg   [2:0] p_0_0_01_3133_fu_72;
wire   [2:0] select_ln79_20_fu_875_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_3133_load;
reg   [2:0] p_0_0_01_4135_fu_76;
wire   [2:0] select_ln79_19_fu_868_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_4135_load;
reg   [2:0] p_0_0_01_5137_fu_80;
wire   [2:0] select_ln79_18_fu_861_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_5137_load;
reg   [2:0] p_0_0_01_6139_fu_84;
wire   [2:0] select_ln79_17_fu_854_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_6139_load;
reg   [2:0] p_0_0_01_7141_fu_88;
wire   [2:0] select_ln79_16_fu_847_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_7141_load;
reg   [2:0] p_0_0_01_8143_fu_92;
wire   [2:0] select_ln79_15_fu_840_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_8143_load;
reg   [2:0] p_0_0_01_9145_fu_96;
wire   [2:0] select_ln79_14_fu_833_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_9145_load;
reg   [2:0] p_0_0_01_10147_fu_100;
wire   [2:0] select_ln79_13_fu_826_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_10147_load;
reg   [2:0] p_0_0_0_0_0_0149_fu_104;
reg   [2:0] ap_sig_allocacmp_p_0_0_0_0_0_0149_load;
reg   [2:0] p_0_0_01_1_1151_fu_108;
wire   [2:0] select_ln79_11_fu_812_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_1151_load;
reg   [2:0] p_0_0_01_1_2153_fu_112;
wire   [2:0] select_ln79_10_fu_805_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_2153_load;
reg   [2:0] p_0_0_01_1_3155_fu_116;
wire   [2:0] select_ln79_9_fu_798_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_3155_load;
reg   [2:0] p_0_0_01_1_4157_fu_120;
wire   [2:0] select_ln79_8_fu_791_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_4157_load;
reg   [2:0] p_0_0_01_1_5159_fu_124;
wire   [2:0] select_ln79_7_fu_784_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_5159_load;
reg   [2:0] p_0_0_01_1_6161_fu_128;
wire   [2:0] select_ln79_6_fu_777_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_6161_load;
reg   [2:0] p_0_0_01_1_7163_fu_132;
wire   [2:0] select_ln79_5_fu_770_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_7163_load;
reg   [2:0] p_0_0_01_1_8165_fu_136;
wire   [2:0] select_ln79_4_fu_763_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_8165_load;
reg   [2:0] p_0_0_01_1_9167_fu_140;
wire   [2:0] select_ln79_3_fu_756_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_9167_load;
reg   [2:0] p_0_0_01_1_10169_fu_144;
wire   [2:0] select_ln79_fu_749_p3;
reg   [2:0] ap_sig_allocacmp_p_0_0_01_1_10169_load;
reg   [2:0] p_0_0_1_0_0_0171_fu_148;
reg   [2:0] ap_sig_allocacmp_p_0_0_1_0_0_0171_load;
reg   [8:0] indvar_flatten_fu_152;
wire   [8:0] select_ln79_24_fu_525_p3;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [14:0] indvar_flatten34_fu_156;
wire   [14:0] add_ln78_fu_485_p2;
reg   [14:0] ap_sig_allocacmp_indvar_flatten34_load;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] add_ln79_fu_519_p2;
wire   [0:0] icmp_ln83_fu_568_p2;
wire   [0:0] xor_ln78_fu_563_p2;
wire   [0:0] and_ln78_fu_574_p2;
wire   [3:0] add_ln83_fu_585_p2;
wire   [2:0] select_ln79_12_fu_819_p3;
wire   [2:0] select_ln79_23_fu_896_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_309;
reg    ap_condition_202;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 t_fu_60 = 4'd0;
//#0 p_0_0_01_121129_fu_64 = 3'd0;
//#0 p_0_0_01_2131_fu_68 = 3'd0;
//#0 p_0_0_01_3133_fu_72 = 3'd0;
//#0 p_0_0_01_4135_fu_76 = 3'd0;
//#0 p_0_0_01_5137_fu_80 = 3'd0;
//#0 p_0_0_01_6139_fu_84 = 3'd0;
//#0 p_0_0_01_7141_fu_88 = 3'd0;
//#0 p_0_0_01_8143_fu_92 = 3'd0;
//#0 p_0_0_01_9145_fu_96 = 3'd0;
//#0 p_0_0_01_10147_fu_100 = 3'd0;
//#0 p_0_0_0_0_0_0149_fu_104 = 3'd0;
//#0 p_0_0_01_1_1151_fu_108 = 3'd0;
//#0 p_0_0_01_1_2153_fu_112 = 3'd0;
//#0 p_0_0_01_1_3155_fu_116 = 3'd0;
//#0 p_0_0_01_1_4157_fu_120 = 3'd0;
//#0 p_0_0_01_1_5159_fu_124 = 3'd0;
//#0 p_0_0_01_1_6161_fu_128 = 3'd0;
//#0 p_0_0_01_1_7163_fu_132 = 3'd0;
//#0 p_0_0_01_1_8165_fu_136 = 3'd0;
//#0 p_0_0_01_1_9167_fu_140 = 3'd0;
//#0 p_0_0_01_1_10169_fu_144 = 3'd0;
//#0 p_0_0_1_0_0_0171_fu_148 = 3'd0;
//#0 indvar_flatten_fu_152 = 9'd0;
//#0 indvar_flatten34_fu_156 = 15'd0;
end

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_309)) begin
        if ((icmp_ln78_fu_491_p2 == 1'd0)) begin
            indvar_flatten34_fu_156 <= add_ln78_fu_485_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten34_fu_156 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_309)) begin
        if ((icmp_ln78_fu_491_p2 == 1'd0)) begin
            indvar_flatten_fu_152 <= select_ln79_24_fu_525_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_152 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_01_10147_fu_100 <= select_ln79_13_fu_826_p3;
    end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_121129_fu_64 <= select_ln79_22_fu_889_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_10169_fu_144 <= select_ln79_fu_749_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_1151_fu_108 <= select_ln79_11_fu_812_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_2153_fu_112 <= select_ln79_10_fu_805_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_3155_fu_116 <= select_ln79_9_fu_798_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_4157_fu_120 <= select_ln79_8_fu_791_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_5159_fu_124 <= select_ln79_7_fu_784_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_6161_fu_128 <= select_ln79_6_fu_777_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_7163_fu_132 <= select_ln79_5_fu_770_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_8165_fu_136 <= select_ln79_4_fu_763_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_1_9167_fu_140 <= select_ln79_3_fu_756_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_2131_fu_68 <= select_ln79_21_fu_882_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_3133_fu_72 <= select_ln79_20_fu_875_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_4135_fu_76 <= select_ln79_19_fu_868_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_5137_fu_80 <= select_ln79_18_fu_861_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_6139_fu_84 <= select_ln79_17_fu_854_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_7141_fu_88 <= select_ln79_16_fu_847_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_8143_fu_92 <= select_ln79_15_fu_840_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_01_9145_fu_96 <= select_ln79_14_fu_833_p3;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_0_0_0_0149_fu_104 <= trunc_ln86_reg_1478_pp0_iter1_reg;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
    p_0_0_1_0_0_0171_fu_148 <= trunc_ln86_4_reg_1485_pp0_iter1_reg;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_202)) begin
    t_fu_60 <= t_5_fu_591_p3;
end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        ap_loop_init_pp0_iter2_reg <= ap_loop_init_pp0_iter1_reg;
        icmp_ln79_reg_1472 <= icmp_ln79_fu_497_p2;
        icmp_ln83_2_reg_1518 <= icmp_ln83_2_fu_599_p2;
        or_ln79_reg_1492 <= or_ln79_fu_580_p2;
        trunc_ln86_4_reg_1485 <= {{ln_sm_dout[5:3]}};
        trunc_ln86_4_reg_1485_pp0_iter1_reg <= trunc_ln86_4_reg_1485;
        trunc_ln86_reg_1478 <= trunc_ln86_fu_505_p1;
        trunc_ln86_reg_1478_pp0_iter1_reg <= trunc_ln86_reg_1478;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln83_2_reg_1518 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_blk_n = adpt_sm_full_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln83_2_reg_1518 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_write = 1'b1;
    end else begin
        adpt_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln78_fu_491_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten34_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten34_load = indvar_flatten34_fu_156;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_10147_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_10147_load = p_0_0_01_10147_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_121129_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_121129_load = p_0_0_01_121129_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_10169_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_10169_load = p_0_0_01_1_10169_fu_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_1151_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_1151_load = p_0_0_01_1_1151_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_2153_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_2153_load = p_0_0_01_1_2153_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_3155_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_3155_load = p_0_0_01_1_3155_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_4157_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_4157_load = p_0_0_01_1_4157_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_5159_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_5159_load = p_0_0_01_1_5159_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_6161_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_6161_load = p_0_0_01_1_6161_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_7163_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_7163_load = p_0_0_01_1_7163_fu_132;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_8165_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_8165_load = p_0_0_01_1_8165_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_1_9167_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_1_9167_load = p_0_0_01_1_9167_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_2131_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_2131_load = p_0_0_01_2131_fu_68;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_3133_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_3133_load = p_0_0_01_3133_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_4135_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_4135_load = p_0_0_01_4135_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_5137_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_5137_load = p_0_0_01_5137_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_6139_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_6139_load = p_0_0_01_6139_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_7141_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_7141_load = p_0_0_01_7141_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_8143_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_8143_load = p_0_0_01_8143_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_01_9145_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_01_9145_load = p_0_0_01_9145_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_0_0_0_0149_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_0_0_0_0149_load = p_0_0_0_0_0_0149_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_loop_init_pp0_iter2_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_1_0_0_0171_load = 3'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_1_0_0_0171_load = p_0_0_1_0_0_0171_fu_148;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_t_load = 4'd0;
    end else begin
        ap_sig_allocacmp_t_load = t_fu_60;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (icmp_ln78_fu_491_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ln_sm_blk_n = ln_sm_empty_n;
    end else begin
        ln_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_fu_491_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ln_sm_read = 1'b1;
    end else begin
        ln_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_485_p2 = (ap_sig_allocacmp_indvar_flatten34_load + 15'd1);

assign add_ln79_fu_519_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln83_fu_585_p2 = (ap_sig_allocacmp_t_load + 4'd1);

assign adpt_sm_din = {{{{{{{{{{{{{{{{{{{{{{{{trunc_ln86_4_reg_1485_pp0_iter1_reg}, {select_ln79_fu_749_p3}}, {select_ln79_3_fu_756_p3}}, {select_ln79_4_fu_763_p3}}, {select_ln79_5_fu_770_p3}}, {select_ln79_6_fu_777_p3}}, {select_ln79_7_fu_784_p3}}, {select_ln79_8_fu_791_p3}}, {select_ln79_9_fu_798_p3}}, {select_ln79_10_fu_805_p3}}, {select_ln79_11_fu_812_p3}}, {select_ln79_12_fu_819_p3}}, {trunc_ln86_reg_1478_pp0_iter1_reg}}, {select_ln79_13_fu_826_p3}}, {select_ln79_14_fu_833_p3}}, {select_ln79_15_fu_840_p3}}, {select_ln79_16_fu_847_p3}}, {select_ln79_17_fu_854_p3}}, {select_ln79_18_fu_861_p3}}, {select_ln79_19_fu_868_p3}}, {select_ln79_20_fu_875_p3}}, {select_ln79_21_fu_882_p3}}, {select_ln79_22_fu_889_p3}}, {select_ln79_23_fu_896_p3}};

assign and_ln78_fu_574_p2 = (xor_ln78_fu_563_p2 & icmp_ln83_fu_568_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((icmp_ln78_fu_491_p2 == 1'd0) & (ln_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln83_2_reg_1518 == 1'd1) & (1'b0 == adpt_sm_full_n));
end

always @ (*) begin
    ap_condition_202 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_309 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign icmp_ln78_fu_491_p2 = ((ap_sig_allocacmp_indvar_flatten34_load == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_497_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln83_2_fu_599_p2 = ((t_5_fu_591_p3 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_568_p2 = ((ap_sig_allocacmp_t_load == 4'd12) ? 1'b1 : 1'b0);

assign or_ln79_fu_580_p2 = (icmp_ln79_reg_1472 | and_ln78_fu_574_p2);

assign select_ln79_10_fu_805_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_3155_load);

assign select_ln79_11_fu_812_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_2153_load);

assign select_ln79_12_fu_819_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_1151_load);

assign select_ln79_13_fu_826_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_0_0_0_0149_load);

assign select_ln79_14_fu_833_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_10147_load);

assign select_ln79_15_fu_840_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_9145_load);

assign select_ln79_16_fu_847_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_8143_load);

assign select_ln79_17_fu_854_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_7141_load);

assign select_ln79_18_fu_861_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_6139_load);

assign select_ln79_19_fu_868_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_5137_load);

assign select_ln79_20_fu_875_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_4135_load);

assign select_ln79_21_fu_882_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_3133_load);

assign select_ln79_22_fu_889_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_2131_load);

assign select_ln79_23_fu_896_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_121129_load);

assign select_ln79_24_fu_525_p3 = ((icmp_ln79_fu_497_p2[0:0] == 1'b1) ? 9'd1 : add_ln79_fu_519_p2);

assign select_ln79_3_fu_756_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_10169_load);

assign select_ln79_4_fu_763_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_9167_load);

assign select_ln79_5_fu_770_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_8165_load);

assign select_ln79_6_fu_777_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_7163_load);

assign select_ln79_7_fu_784_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_6161_load);

assign select_ln79_8_fu_791_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_5159_load);

assign select_ln79_9_fu_798_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_01_1_4157_load);

assign select_ln79_fu_749_p3 = ((or_ln79_reg_1492[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_p_0_0_1_0_0_0171_load);

assign start_out = real_start;

assign t_5_fu_591_p3 = ((or_ln79_fu_580_p2[0:0] == 1'b1) ? 4'd1 : add_ln83_fu_585_p2);

assign trunc_ln86_fu_505_p1 = ln_sm_dout[2:0];

assign xor_ln78_fu_563_p2 = (icmp_ln79_reg_1472 ^ 1'd1);

endmodule //MLP8_do_adapt_1
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_adapt_2 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        resi_sm_dout,
        resi_sm_num_data_valid,
        resi_sm_fifo_cap,
        resi_sm_empty_n,
        resi_sm_read,
        resi_o_sm_din,
        resi_o_sm_num_data_valid,
        resi_o_sm_fifo_cap,
        resi_o_sm_full_n,
        resi_o_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [55:0] resi_sm_dout;
input  [9:0] resi_sm_num_data_valid;
input  [9:0] resi_sm_fifo_cap;
input   resi_sm_empty_n;
output   resi_sm_read;
output  [27:0] resi_o_sm_din;
input  [2:0] resi_o_sm_num_data_valid;
input  [2:0] resi_o_sm_fifo_cap;
input   resi_o_sm_full_n;
output   resi_o_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg resi_sm_read;
reg resi_o_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln45_reg_446;
reg   [0:0] icmp_ln45_reg_446_pp0_iter1_reg;
reg   [0:0] icmp_ln50_reg_456;
reg    ap_predicate_op53_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln45_reg_446_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln45_fu_203_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    resi_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    resi_o_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln46_fu_209_p2;
reg   [0:0] icmp_ln46_reg_450;
wire   [0:0] icmp_ln50_fu_289_p2;
reg   [0:0] icmp_ln50_reg_456_pp0_iter2_reg;
wire   [13:0] trunc_ln50_fu_315_p1;
reg   [13:0] trunc_ln50_reg_460;
reg   [13:0] trunc_ln50_1_reg_465;
reg   [13:0] trunc_ln50_2_reg_470;
reg   [13:0] trunc_ln50_3_reg_475;
reg   [13:0] ap_phi_mux_empty_phi_fu_114_p4;
wire   [13:0] ap_phi_reg_pp0_iter3_empty_reg_111;
reg   [13:0] ap_phi_mux_p_0_0_0_157_phi_fu_124_p4;
wire   [13:0] ap_phi_reg_pp0_iter3_p_0_0_0_157_reg_121;
reg   [13:0] ap_phi_mux_empty_1235_phi_fu_133_p4;
wire   [13:0] ap_phi_reg_pp0_iter3_empty_1235_reg_130;
reg   [13:0] ap_phi_mux_p_0_0_055_phi_fu_143_p4;
wire   [13:0] ap_phi_reg_pp0_iter3_p_0_0_055_reg_140;
reg   [1:0] t_fu_78;
wire   [1:0] t_4_fu_295_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [1:0] ap_sig_allocacmp_t_load;
reg   [8:0] indvar_flatten_fu_82;
wire   [8:0] select_ln46_3_fu_221_p3;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [14:0] indvar_flatten14_fu_86;
wire   [14:0] add_ln45_fu_197_p2;
reg   [14:0] ap_sig_allocacmp_indvar_flatten14_load;
reg   [13:0] p_0_0_054_fu_90;
reg   [13:0] p_0_0_0_156_fu_94;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] add_ln46_fu_215_p2;
wire   [0:0] icmp_ln47_fu_264_p2;
wire   [0:0] xor_ln45_fu_259_p2;
wire   [0:0] and_ln45_fu_270_p2;
wire   [0:0] or_ln46_fu_276_p2;
wire   [1:0] select_ln46_fu_281_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_200;
reg    ap_condition_184;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 t_fu_78 = 2'd0;
//#0 indvar_flatten_fu_82 = 9'd0;
//#0 indvar_flatten14_fu_86 = 15'd0;
//#0 p_0_0_054_fu_90 = 14'd0;
//#0 p_0_0_0_156_fu_94 = 14'd0;
end

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_200)) begin
        if ((icmp_ln45_fu_203_p2 == 1'd0)) begin
            indvar_flatten14_fu_86 <= add_ln45_fu_197_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten14_fu_86 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_200)) begin
        if ((icmp_ln45_fu_203_p2 == 1'd0)) begin
            indvar_flatten_fu_82 <= select_ln46_3_fu_221_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_82 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_184)) begin
        if ((icmp_ln45_reg_446 == 1'd0)) begin
            t_fu_78 <= t_4_fu_295_p2;
        end else if ((ap_loop_init_pp0_iter1_reg == 1'b1)) begin
            t_fu_78 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln45_reg_446 <= icmp_ln45_fu_203_p2;
        icmp_ln45_reg_446_pp0_iter1_reg <= icmp_ln45_reg_446;
        icmp_ln46_reg_450 <= icmp_ln46_fu_209_p2;
        icmp_ln50_reg_456 <= icmp_ln50_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln45_reg_446_pp0_iter2_reg <= icmp_ln45_reg_446_pp0_iter1_reg;
        icmp_ln50_reg_456_pp0_iter2_reg <= icmp_ln50_reg_456;
        trunc_ln50_1_reg_465 <= {{resi_sm_dout[27:14]}};
        trunc_ln50_2_reg_470 <= {{resi_sm_dout[41:28]}};
        trunc_ln50_3_reg_475 <= {{resi_sm_dout[55:42]}};
        trunc_ln50_reg_460 <= trunc_ln50_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_0_0_054_fu_90 <= ap_phi_mux_empty_1235_phi_fu_133_p4;
        p_0_0_0_156_fu_94 <= ap_phi_mux_empty_phi_fu_114_p4;
    end
end

always @ (*) begin
    if (((icmp_ln45_fu_203_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0)) begin
        if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd0)) begin
            ap_phi_mux_empty_1235_phi_fu_133_p4 = 14'd0;
        end else if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd1)) begin
            ap_phi_mux_empty_1235_phi_fu_133_p4 = trunc_ln50_1_reg_465;
        end else begin
            ap_phi_mux_empty_1235_phi_fu_133_p4 = ap_phi_reg_pp0_iter3_empty_1235_reg_130;
        end
    end else begin
        ap_phi_mux_empty_1235_phi_fu_133_p4 = ap_phi_reg_pp0_iter3_empty_1235_reg_130;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0)) begin
        if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_114_p4 = 14'd0;
        end else if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_114_p4 = trunc_ln50_3_reg_475;
        end else begin
            ap_phi_mux_empty_phi_fu_114_p4 = ap_phi_reg_pp0_iter3_empty_reg_111;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_114_p4 = ap_phi_reg_pp0_iter3_empty_reg_111;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0)) begin
        if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd0)) begin
            ap_phi_mux_p_0_0_055_phi_fu_143_p4 = p_0_0_054_fu_90;
        end else if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd1)) begin
            ap_phi_mux_p_0_0_055_phi_fu_143_p4 = trunc_ln50_reg_460;
        end else begin
            ap_phi_mux_p_0_0_055_phi_fu_143_p4 = ap_phi_reg_pp0_iter3_p_0_0_055_reg_140;
        end
    end else begin
        ap_phi_mux_p_0_0_055_phi_fu_143_p4 = ap_phi_reg_pp0_iter3_p_0_0_055_reg_140;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0)) begin
        if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd0)) begin
            ap_phi_mux_p_0_0_0_157_phi_fu_124_p4 = p_0_0_0_156_fu_94;
        end else if ((icmp_ln50_reg_456_pp0_iter2_reg == 1'd1)) begin
            ap_phi_mux_p_0_0_0_157_phi_fu_124_p4 = trunc_ln50_2_reg_470;
        end else begin
            ap_phi_mux_p_0_0_0_157_phi_fu_124_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_157_reg_121;
        end
    end else begin
        ap_phi_mux_p_0_0_0_157_phi_fu_124_p4 = ap_phi_reg_pp0_iter3_p_0_0_0_157_reg_121;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten14_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten14_load = indvar_flatten14_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_t_load = 2'd0;
    end else begin
        ap_sig_allocacmp_t_load = t_fu_78;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        resi_o_sm_blk_n = resi_o_sm_full_n;
    end else begin
        resi_o_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        resi_o_sm_write = 1'b1;
    end else begin
        resi_o_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op53_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        resi_sm_blk_n = resi_sm_empty_n;
    end else begin
        resi_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op53_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        resi_sm_read = 1'b1;
    end else begin
        resi_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_197_p2 = (ap_sig_allocacmp_indvar_flatten14_load + 15'd1);

assign add_ln46_fu_215_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign and_ln45_fu_270_p2 = (xor_ln45_fu_259_p2 & icmp_ln47_fu_264_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op53_read_state3 == 1'b1) & (resi_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln45_reg_446_pp0_iter2_reg == 1'd0) & (resi_o_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_184 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_200 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter3_empty_1235_reg_130 = 'bx;

assign ap_phi_reg_pp0_iter3_empty_reg_111 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_055_reg_140 = 'bx;

assign ap_phi_reg_pp0_iter3_p_0_0_0_157_reg_121 = 'bx;

always @ (*) begin
    ap_predicate_op53_read_state3 = ((icmp_ln50_reg_456 == 1'd1) & (icmp_ln45_reg_446_pp0_iter1_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln45_fu_203_p2 = ((ap_sig_allocacmp_indvar_flatten14_load == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_209_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_264_p2 = ((ap_sig_allocacmp_t_load == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_289_p2 = ((select_ln46_fu_281_p3 == 2'd0) ? 1'b1 : 1'b0);

assign or_ln46_fu_276_p2 = (icmp_ln46_reg_450 | and_ln45_fu_270_p2);

assign resi_o_sm_din = {{ap_phi_mux_p_0_0_0_157_phi_fu_124_p4}, {ap_phi_mux_p_0_0_055_phi_fu_143_p4}};

assign select_ln46_3_fu_221_p3 = ((icmp_ln46_fu_209_p2[0:0] == 1'b1) ? 9'd1 : add_ln46_fu_215_p2);

assign select_ln46_fu_281_p3 = ((or_ln46_fu_276_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_t_load);

assign start_out = real_start;

assign t_4_fu_295_p2 = (select_ln46_fu_281_p3 + 2'd1);

assign trunc_ln50_fu_315_p1 = resi_sm_dout[13:0];

assign xor_ln45_fu_259_p2 = (icmp_ln46_reg_450 ^ 1'd1);

endmodule //MLP8_do_adapt_2
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_adapt_3 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        resi_i_sm_dout,
        resi_i_sm_num_data_valid,
        resi_i_sm_fifo_cap,
        resi_i_sm_empty_n,
        resi_i_sm_read,
        resi_sm_din,
        resi_sm_num_data_valid,
        resi_sm_fifo_cap,
        resi_sm_full_n,
        resi_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [27:0] resi_i_sm_dout;
input  [2:0] resi_i_sm_num_data_valid;
input  [2:0] resi_i_sm_fifo_cap;
input   resi_i_sm_empty_n;
output   resi_i_sm_read;
output  [55:0] resi_sm_din;
input  [9:0] resi_sm_num_data_valid;
input  [9:0] resi_sm_fifo_cap;
input   resi_sm_full_n;
output   resi_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg resi_i_sm_read;
reg resi_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln83_1_reg_424;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln78_fu_171_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    resi_i_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    resi_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln79_fu_177_p2;
reg   [0:0] icmp_ln79_reg_418;
wire   [0:0] icmp_ln83_1_fu_307_p2;
wire   [55:0] or_ln100_2_fu_313_p5;
reg   [55:0] or_ln100_2_reg_428;
reg   [1:0] t_fu_60;
wire   [1:0] t_3_fu_299_p3;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [1:0] ap_sig_allocacmp_t_load;
reg   [13:0] p_0_0_0_0_0_049_fu_64;
wire   [13:0] trunc_ln86_fu_279_p1;
reg   [13:0] ap_sig_allocacmp_p_0_0_0_0_0_049_load;
reg   [13:0] p_0_0_1_0_0_051_fu_68;
wire   [13:0] trunc_ln86_5_fu_283_p4;
reg   [13:0] ap_sig_allocacmp_p_0_0_1_0_0_051_load;
reg   [8:0] indvar_flatten_fu_72;
wire   [8:0] select_ln79_2_fu_189_p3;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [14:0] indvar_flatten14_fu_76;
wire   [14:0] add_ln78_fu_165_p2;
reg   [14:0] ap_sig_allocacmp_indvar_flatten14_load;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] add_ln79_fu_183_p2;
wire   [0:0] icmp_ln83_fu_244_p2;
wire   [0:0] xor_ln78_fu_239_p2;
wire   [0:0] and_ln78_fu_250_p2;
wire   [0:0] or_ln79_fu_256_p2;
wire   [1:0] add_ln83_fu_293_p2;
wire   [13:0] select_ln79_fu_261_p3;
wire   [13:0] select_ln79_1_fu_269_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_146;
reg    ap_condition_125;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 t_fu_60 = 2'd0;
//#0 p_0_0_0_0_0_049_fu_64 = 14'd0;
//#0 p_0_0_1_0_0_051_fu_68 = 14'd0;
//#0 indvar_flatten_fu_72 = 9'd0;
//#0 indvar_flatten14_fu_76 = 15'd0;
end

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_146)) begin
        if ((icmp_ln78_fu_171_p2 == 1'd0)) begin
            indvar_flatten14_fu_76 <= add_ln78_fu_165_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten14_fu_76 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_146)) begin
        if ((icmp_ln78_fu_171_p2 == 1'd0)) begin
            indvar_flatten_fu_72 <= select_ln79_2_fu_189_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_72 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_125)) begin
        p_0_0_0_0_0_049_fu_64 <= trunc_ln86_fu_279_p1;
    end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_125)) begin
    p_0_0_1_0_0_051_fu_68 <= {{resi_i_sm_dout[27:14]}};
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_125)) begin
    t_fu_60 <= t_3_fu_299_p3;
end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln79_reg_418 <= icmp_ln79_fu_177_p2;
        icmp_ln83_1_reg_424 <= icmp_ln83_1_fu_307_p2;
        or_ln100_2_reg_428 <= or_ln100_2_fu_313_p5;
    end
end

always @ (*) begin
    if (((icmp_ln78_fu_171_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten14_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten14_load = indvar_flatten14_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_0_0_0_049_load = 14'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_0_0_0_049_load = p_0_0_0_0_0_049_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_p_0_0_1_0_0_051_load = 14'd0;
    end else begin
        ap_sig_allocacmp_p_0_0_1_0_0_051_load = p_0_0_1_0_0_051_fu_68;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_t_load = 2'd0;
    end else begin
        ap_sig_allocacmp_t_load = t_fu_60;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_blk_n = resi_i_sm_empty_n;
    end else begin
        resi_i_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_read = 1'b1;
    end else begin
        resi_i_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln83_1_reg_424 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        resi_sm_blk_n = resi_sm_full_n;
    end else begin
        resi_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln83_1_reg_424 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        resi_sm_write = 1'b1;
    end else begin
        resi_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_165_p2 = (ap_sig_allocacmp_indvar_flatten14_load + 15'd1);

assign add_ln79_fu_183_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln83_fu_293_p2 = (ap_sig_allocacmp_t_load + 2'd1);

assign and_ln78_fu_250_p2 = (xor_ln78_fu_239_p2 & icmp_ln83_fu_244_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (resi_i_sm_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln83_1_reg_424 == 1'd1) & (resi_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_125 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_146 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign icmp_ln78_fu_171_p2 = ((ap_sig_allocacmp_indvar_flatten14_load == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_177_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_307_p2 = ((t_3_fu_299_p3 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_244_p2 = ((ap_sig_allocacmp_t_load == 2'd2) ? 1'b1 : 1'b0);

assign or_ln100_2_fu_313_p5 = {{{{trunc_ln86_5_fu_283_p4}, {select_ln79_fu_261_p3}}, {trunc_ln86_fu_279_p1}}, {select_ln79_1_fu_269_p3}};

assign or_ln79_fu_256_p2 = (icmp_ln79_reg_418 | and_ln78_fu_250_p2);

assign resi_sm_din = or_ln100_2_reg_428;

assign select_ln79_1_fu_269_p3 = ((or_ln79_fu_256_p2[0:0] == 1'b1) ? 14'd0 : ap_sig_allocacmp_p_0_0_0_0_0_049_load);

assign select_ln79_2_fu_189_p3 = ((icmp_ln79_fu_177_p2[0:0] == 1'b1) ? 9'd1 : add_ln79_fu_183_p2);

assign select_ln79_fu_261_p3 = ((or_ln79_fu_256_p2[0:0] == 1'b1) ? 14'd0 : ap_sig_allocacmp_p_0_0_1_0_0_051_load);

assign start_out = real_start;

assign t_3_fu_299_p3 = ((or_ln79_fu_256_p2[0:0] == 1'b1) ? 2'd1 : add_ln83_fu_293_p2);

assign trunc_ln86_5_fu_283_p4 = {{resi_i_sm_dout[27:14]}};

assign trunc_ln86_fu_279_p1 = resi_i_sm_dout[13:0];

assign xor_ln78_fu_239_p2 = (icmp_ln79_reg_418 ^ 1'd1);

endmodule //MLP8_do_adapt_3
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_adapt_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        mac_sm_dout,
        mac_sm_num_data_valid,
        mac_sm_fifo_cap,
        mac_sm_empty_n,
        mac_sm_read,
        m1_sm_din,
        m1_sm_num_data_valid,
        m1_sm_fifo_cap,
        m1_sm_full_n,
        m1_sm_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [479:0] mac_sm_dout;
input  [2:0] mac_sm_num_data_valid;
input  [2:0] mac_sm_fifo_cap;
input   mac_sm_empty_n;
output   mac_sm_read;
output  [39:0] m1_sm_din;
input  [2:0] m1_sm_num_data_valid;
input  [2:0] m1_sm_fifo_cap;
input   m1_sm_full_n;
output   m1_sm_write;

reg ap_idle;
reg mac_sm_read;
reg m1_sm_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln45_reg_2804;
reg   [0:0] icmp_ln45_reg_2804_pp0_iter1_reg;
reg   [0:0] icmp_ln50_reg_2814;
reg    ap_predicate_op188_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln45_fu_943_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mac_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    m1_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln46_fu_949_p2;
reg   [0:0] icmp_ln46_reg_2808;
wire   [0:0] icmp_ln50_fu_1029_p2;
wire   [9:0] trunc_ln50_fu_1359_p1;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [9:0] ap_phi_mux_empty_phi_fu_456_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_empty_reg_453;
reg   [9:0] ap_phi_mux_empty_1232_phi_fu_466_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_empty_1232_reg_463;
reg   [9:0] ap_phi_mux_p_0_0_0_1_21325_phi_fu_476_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_21325_reg_473;
reg   [9:0] ap_phi_mux_p_0_0_0_1_20323_phi_fu_485_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_20323_reg_482;
reg   [9:0] ap_phi_mux_p_0_0_0_1_19321_phi_fu_494_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_19321_reg_491;
reg   [9:0] ap_phi_mux_p_0_0_0_1_18319_phi_fu_503_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_18319_reg_500;
reg   [9:0] ap_phi_mux_p_0_0_0_1_17317_phi_fu_512_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_17317_reg_509;
reg   [9:0] ap_phi_mux_p_0_0_0_1_16315_phi_fu_521_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_16315_reg_518;
reg   [9:0] ap_phi_mux_p_0_0_0_1_15313_phi_fu_530_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_15313_reg_527;
reg   [9:0] ap_phi_mux_p_0_0_0_1_14311_phi_fu_539_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_14311_reg_536;
reg   [9:0] ap_phi_mux_p_0_0_0_1_13309_phi_fu_548_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_13309_reg_545;
reg   [9:0] ap_phi_mux_p_0_0_0_1_12307_phi_fu_557_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_12307_reg_554;
reg   [9:0] ap_phi_mux_p_0_0_0_1_11305_phi_fu_566_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_11305_reg_563;
reg   [9:0] ap_phi_mux_p_0_0_0_1_10303_phi_fu_575_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_10303_reg_572;
reg   [9:0] ap_phi_mux_p_0_0_0_1_9301_phi_fu_584_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_9301_reg_581;
reg   [9:0] ap_phi_mux_p_0_0_0_1_8299_phi_fu_593_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_8299_reg_590;
reg   [9:0] ap_phi_mux_p_0_0_0_1_7297_phi_fu_602_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_7297_reg_599;
reg   [9:0] ap_phi_mux_p_0_0_0_1_6295_phi_fu_611_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_6295_reg_608;
reg   [9:0] ap_phi_mux_p_0_0_0_1_5293_phi_fu_620_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_5293_reg_617;
reg   [9:0] ap_phi_mux_p_0_0_0_1_4291_phi_fu_629_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_4291_reg_626;
reg   [9:0] ap_phi_mux_p_0_0_0_1_3289_phi_fu_638_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_3289_reg_635;
reg   [9:0] ap_phi_mux_p_0_0_0_1_2287_phi_fu_647_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_2287_reg_644;
reg   [9:0] ap_phi_mux_empty_1233_phi_fu_656_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_empty_1233_reg_653;
reg   [9:0] ap_phi_mux_empty_1234_phi_fu_666_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_empty_1234_reg_663;
reg   [9:0] ap_phi_mux_p_0_0_0_21281_phi_fu_676_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_21281_reg_673;
reg   [9:0] ap_phi_mux_p_0_0_0_20279_phi_fu_685_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_20279_reg_682;
reg   [9:0] ap_phi_mux_p_0_0_0_19277_phi_fu_694_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_19277_reg_691;
reg   [9:0] ap_phi_mux_p_0_0_0_18275_phi_fu_703_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_18275_reg_700;
reg   [9:0] ap_phi_mux_p_0_0_0_17273_phi_fu_712_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_17273_reg_709;
reg   [9:0] ap_phi_mux_p_0_0_0_16271_phi_fu_721_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_16271_reg_718;
reg   [9:0] ap_phi_mux_p_0_0_0_15269_phi_fu_730_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_15269_reg_727;
reg   [9:0] ap_phi_mux_p_0_0_0_14267_phi_fu_739_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_14267_reg_736;
reg   [9:0] ap_phi_mux_p_0_0_0_13265_phi_fu_748_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_13265_reg_745;
reg   [9:0] ap_phi_mux_p_0_0_0_12263_phi_fu_757_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_12263_reg_754;
reg   [9:0] ap_phi_mux_p_0_0_0_11261_phi_fu_766_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_11261_reg_763;
reg   [9:0] ap_phi_mux_p_0_0_0_10259_phi_fu_775_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_10259_reg_772;
reg   [9:0] ap_phi_mux_p_0_0_0_9257_phi_fu_784_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_9257_reg_781;
reg   [9:0] ap_phi_mux_p_0_0_0_8255_phi_fu_793_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_8255_reg_790;
reg   [9:0] ap_phi_mux_p_0_0_0_7253_phi_fu_802_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_7253_reg_799;
reg   [9:0] ap_phi_mux_p_0_0_0_6251_phi_fu_811_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_6251_reg_808;
reg   [9:0] ap_phi_mux_p_0_0_0_5249_phi_fu_820_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_5249_reg_817;
reg   [9:0] ap_phi_mux_p_0_0_0_4247_phi_fu_829_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_4247_reg_826;
reg   [9:0] ap_phi_mux_p_0_0_0_3245_phi_fu_838_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_3245_reg_835;
reg   [9:0] ap_phi_mux_p_0_0_0_2243_phi_fu_847_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_2243_reg_844;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_1_1285_reg_853;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0_1_1285_reg_853;
reg   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_1285_reg_853;
reg   [9:0] ap_phi_reg_pp0_iter3_p_0_0_0_1_1285_reg_853;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_1283_reg_862;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0_1283_reg_862;
reg   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1283_reg_862;
reg   [9:0] ap_phi_reg_pp0_iter3_p_0_0_0_1283_reg_862;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_126241_reg_871;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0_126241_reg_871;
reg   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_126241_reg_871;
reg   [9:0] ap_phi_reg_pp0_iter3_p_0_0_0_126241_reg_871;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0239_reg_880;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0239_reg_880;
reg   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0239_reg_880;
reg   [9:0] ap_phi_reg_pp0_iter3_p_0_0_0239_reg_880;
reg   [3:0] t_fu_252;
wire   [3:0] t_2_fu_1035_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [3:0] ap_sig_allocacmp_t_load;
reg   [9:0] indvar_flatten_fu_256;
wire   [9:0] select_ln46_2_fu_961_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] indvar_flatten98_fu_260;
wire   [15:0] add_ln45_fu_937_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten98_load;
reg   [9:0] p_0_0_0238_fu_264;
reg   [9:0] p_0_0_0_126240_fu_268;
reg   [9:0] p_0_0_0_2242_fu_272;
reg   [9:0] p_0_0_0_3244_fu_276;
reg   [9:0] p_0_0_0_4246_fu_280;
reg   [9:0] p_0_0_0_5248_fu_284;
reg   [9:0] p_0_0_0_6250_fu_288;
reg   [9:0] p_0_0_0_7252_fu_292;
reg   [9:0] p_0_0_0_8254_fu_296;
reg   [9:0] p_0_0_0_9256_fu_300;
reg   [9:0] p_0_0_0_10258_fu_304;
reg   [9:0] p_0_0_0_11260_fu_308;
reg   [9:0] p_0_0_0_12262_fu_312;
reg   [9:0] p_0_0_0_13264_fu_316;
reg   [9:0] p_0_0_0_14266_fu_320;
reg   [9:0] p_0_0_0_15268_fu_324;
reg   [9:0] p_0_0_0_16270_fu_328;
reg   [9:0] p_0_0_0_17272_fu_332;
reg   [9:0] p_0_0_0_18274_fu_336;
reg   [9:0] p_0_0_0_19276_fu_340;
reg   [9:0] p_0_0_0_20278_fu_344;
reg   [9:0] p_0_0_0_21280_fu_348;
reg   [9:0] p_0_0_0_1282_fu_352;
reg   [9:0] p_0_0_0_1_1284_fu_356;
reg   [9:0] p_0_0_0_1_2286_fu_360;
reg   [9:0] p_0_0_0_1_3288_fu_364;
reg   [9:0] p_0_0_0_1_4290_fu_368;
reg   [9:0] p_0_0_0_1_5292_fu_372;
reg   [9:0] p_0_0_0_1_6294_fu_376;
reg   [9:0] p_0_0_0_1_7296_fu_380;
reg   [9:0] p_0_0_0_1_8298_fu_384;
reg   [9:0] p_0_0_0_1_9300_fu_388;
reg   [9:0] p_0_0_0_1_10302_fu_392;
reg   [9:0] p_0_0_0_1_11304_fu_396;
reg   [9:0] p_0_0_0_1_12306_fu_400;
reg   [9:0] p_0_0_0_1_13308_fu_404;
reg   [9:0] p_0_0_0_1_14310_fu_408;
reg   [9:0] p_0_0_0_1_15312_fu_412;
reg   [9:0] p_0_0_0_1_16314_fu_416;
reg   [9:0] p_0_0_0_1_17316_fu_420;
reg   [9:0] p_0_0_0_1_18318_fu_424;
reg   [9:0] p_0_0_0_1_19320_fu_428;
reg   [9:0] p_0_0_0_1_20322_fu_432;
reg   [9:0] p_0_0_0_1_21324_fu_436;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] add_ln46_fu_955_p2;
wire   [0:0] icmp_ln47_fu_1004_p2;
wire   [0:0] xor_ln45_fu_999_p2;
wire   [0:0] and_ln45_fu_1010_p2;
wire   [0:0] or_ln46_fu_1016_p2;
wire   [3:0] select_ln46_fu_1021_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_544;
reg    ap_condition_548;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 t_fu_252 = 4'd0;
//#0 indvar_flatten_fu_256 = 10'd0;
//#0 indvar_flatten98_fu_260 = 16'd0;
//#0 p_0_0_0238_fu_264 = 10'd0;
//#0 p_0_0_0_126240_fu_268 = 10'd0;
//#0 p_0_0_0_2242_fu_272 = 10'd0;
//#0 p_0_0_0_3244_fu_276 = 10'd0;
//#0 p_0_0_0_4246_fu_280 = 10'd0;
//#0 p_0_0_0_5248_fu_284 = 10'd0;
//#0 p_0_0_0_6250_fu_288 = 10'd0;
//#0 p_0_0_0_7252_fu_292 = 10'd0;
//#0 p_0_0_0_8254_fu_296 = 10'd0;
//#0 p_0_0_0_9256_fu_300 = 10'd0;
//#0 p_0_0_0_10258_fu_304 = 10'd0;
//#0 p_0_0_0_11260_fu_308 = 10'd0;
//#0 p_0_0_0_12262_fu_312 = 10'd0;
//#0 p_0_0_0_13264_fu_316 = 10'd0;
//#0 p_0_0_0_14266_fu_320 = 10'd0;
//#0 p_0_0_0_15268_fu_324 = 10'd0;
//#0 p_0_0_0_16270_fu_328 = 10'd0;
//#0 p_0_0_0_17272_fu_332 = 10'd0;
//#0 p_0_0_0_18274_fu_336 = 10'd0;
//#0 p_0_0_0_19276_fu_340 = 10'd0;
//#0 p_0_0_0_20278_fu_344 = 10'd0;
//#0 p_0_0_0_21280_fu_348 = 10'd0;
//#0 p_0_0_0_1282_fu_352 = 10'd0;
//#0 p_0_0_0_1_1284_fu_356 = 10'd0;
//#0 p_0_0_0_1_2286_fu_360 = 10'd0;
//#0 p_0_0_0_1_3288_fu_364 = 10'd0;
//#0 p_0_0_0_1_4290_fu_368 = 10'd0;
//#0 p_0_0_0_1_5292_fu_372 = 10'd0;
//#0 p_0_0_0_1_6294_fu_376 = 10'd0;
//#0 p_0_0_0_1_7296_fu_380 = 10'd0;
//#0 p_0_0_0_1_8298_fu_384 = 10'd0;
//#0 p_0_0_0_1_9300_fu_388 = 10'd0;
//#0 p_0_0_0_1_10302_fu_392 = 10'd0;
//#0 p_0_0_0_1_11304_fu_396 = 10'd0;
//#0 p_0_0_0_1_12306_fu_400 = 10'd0;
//#0 p_0_0_0_1_13308_fu_404 = 10'd0;
//#0 p_0_0_0_1_14310_fu_408 = 10'd0;
//#0 p_0_0_0_1_15312_fu_412 = 10'd0;
//#0 p_0_0_0_1_16314_fu_416 = 10'd0;
//#0 p_0_0_0_1_17316_fu_420 = 10'd0;
//#0 p_0_0_0_1_18318_fu_424 = 10'd0;
//#0 p_0_0_0_1_19320_fu_428 = 10'd0;
//#0 p_0_0_0_1_20322_fu_432 = 10'd0;
//#0 p_0_0_0_1_21324_fu_436 = 10'd0;
end

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_2814 == 1'd0) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0239_reg_880 <= p_0_0_0238_fu_264;
        end else if (((icmp_ln50_reg_2814 == 1'd1) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0239_reg_880 <= trunc_ln50_fu_1359_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_0_0_0239_reg_880 <= ap_phi_reg_pp0_iter2_p_0_0_0239_reg_880;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_2814 == 1'd0) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_126241_reg_871 <= p_0_0_0_126240_fu_268;
        end else if (((icmp_ln50_reg_2814 == 1'd1) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_126241_reg_871 <= {{mac_sm_dout[19:10]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_126241_reg_871 <= ap_phi_reg_pp0_iter2_p_0_0_0_126241_reg_871;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_2814 == 1'd0) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1283_reg_862 <= p_0_0_0_1282_fu_352;
        end else if (((icmp_ln50_reg_2814 == 1'd1) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1283_reg_862 <= {{mac_sm_dout[249:240]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1283_reg_862 <= ap_phi_reg_pp0_iter2_p_0_0_0_1283_reg_862;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_2814 == 1'd0) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1_1285_reg_853 <= p_0_0_0_1_1284_fu_356;
        end else if (((icmp_ln50_reg_2814 == 1'd1) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1_1285_reg_853 <= {{mac_sm_dout[259:250]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1_1285_reg_853 <= ap_phi_reg_pp0_iter2_p_0_0_0_1_1285_reg_853;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_544)) begin
        if ((icmp_ln45_fu_943_p2 == 1'd0)) begin
            indvar_flatten98_fu_260 <= add_ln45_fu_937_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten98_fu_260 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_544)) begin
        if ((icmp_ln45_fu_943_p2 == 1'd0)) begin
            indvar_flatten_fu_256 <= select_ln46_2_fu_961_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_256 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_548)) begin
        if ((icmp_ln45_reg_2804 == 1'd0)) begin
            t_fu_252 <= t_2_fu_1035_p2;
        end else if ((ap_loop_init_pp0_iter1_reg == 1'b1)) begin
            t_fu_252 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln45_reg_2804 <= icmp_ln45_fu_943_p2;
        icmp_ln45_reg_2804_pp0_iter1_reg <= icmp_ln45_reg_2804;
        icmp_ln46_reg_2808 <= icmp_ln46_fu_949_p2;
        icmp_ln50_reg_2814 <= icmp_ln50_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_0_0239_reg_880 <= ap_phi_reg_pp0_iter0_p_0_0_0239_reg_880;
        ap_phi_reg_pp0_iter1_p_0_0_0_126241_reg_871 <= ap_phi_reg_pp0_iter0_p_0_0_0_126241_reg_871;
        ap_phi_reg_pp0_iter1_p_0_0_0_1283_reg_862 <= ap_phi_reg_pp0_iter0_p_0_0_0_1283_reg_862;
        ap_phi_reg_pp0_iter1_p_0_0_0_1_1285_reg_853 <= ap_phi_reg_pp0_iter0_p_0_0_0_1_1285_reg_853;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_p_0_0_0239_reg_880 <= ap_phi_reg_pp0_iter1_p_0_0_0239_reg_880;
        ap_phi_reg_pp0_iter2_p_0_0_0_126241_reg_871 <= ap_phi_reg_pp0_iter1_p_0_0_0_126241_reg_871;
        ap_phi_reg_pp0_iter2_p_0_0_0_1283_reg_862 <= ap_phi_reg_pp0_iter1_p_0_0_0_1283_reg_862;
        ap_phi_reg_pp0_iter2_p_0_0_0_1_1285_reg_853 <= ap_phi_reg_pp0_iter1_p_0_0_0_1_1285_reg_853;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0238_fu_264 <= ap_phi_mux_p_0_0_0_2243_phi_fu_847_p4;
        p_0_0_0_10258_fu_304 <= ap_phi_mux_p_0_0_0_12263_phi_fu_757_p4;
        p_0_0_0_11260_fu_308 <= ap_phi_mux_p_0_0_0_13265_phi_fu_748_p4;
        p_0_0_0_12262_fu_312 <= ap_phi_mux_p_0_0_0_14267_phi_fu_739_p4;
        p_0_0_0_126240_fu_268 <= ap_phi_mux_p_0_0_0_3245_phi_fu_838_p4;
        p_0_0_0_1282_fu_352 <= ap_phi_mux_p_0_0_0_1_2287_phi_fu_647_p4;
        p_0_0_0_13264_fu_316 <= ap_phi_mux_p_0_0_0_15269_phi_fu_730_p4;
        p_0_0_0_14266_fu_320 <= ap_phi_mux_p_0_0_0_16271_phi_fu_721_p4;
        p_0_0_0_15268_fu_324 <= ap_phi_mux_p_0_0_0_17273_phi_fu_712_p4;
        p_0_0_0_16270_fu_328 <= ap_phi_mux_p_0_0_0_18275_phi_fu_703_p4;
        p_0_0_0_17272_fu_332 <= ap_phi_mux_p_0_0_0_19277_phi_fu_694_p4;
        p_0_0_0_18274_fu_336 <= ap_phi_mux_p_0_0_0_20279_phi_fu_685_p4;
        p_0_0_0_19276_fu_340 <= ap_phi_mux_p_0_0_0_21281_phi_fu_676_p4;
        p_0_0_0_1_10302_fu_392 <= ap_phi_mux_p_0_0_0_1_12307_phi_fu_557_p4;
        p_0_0_0_1_11304_fu_396 <= ap_phi_mux_p_0_0_0_1_13309_phi_fu_548_p4;
        p_0_0_0_1_12306_fu_400 <= ap_phi_mux_p_0_0_0_1_14311_phi_fu_539_p4;
        p_0_0_0_1_1284_fu_356 <= ap_phi_mux_p_0_0_0_1_3289_phi_fu_638_p4;
        p_0_0_0_1_13308_fu_404 <= ap_phi_mux_p_0_0_0_1_15313_phi_fu_530_p4;
        p_0_0_0_1_14310_fu_408 <= ap_phi_mux_p_0_0_0_1_16315_phi_fu_521_p4;
        p_0_0_0_1_15312_fu_412 <= ap_phi_mux_p_0_0_0_1_17317_phi_fu_512_p4;
        p_0_0_0_1_16314_fu_416 <= ap_phi_mux_p_0_0_0_1_18319_phi_fu_503_p4;
        p_0_0_0_1_17316_fu_420 <= ap_phi_mux_p_0_0_0_1_19321_phi_fu_494_p4;
        p_0_0_0_1_18318_fu_424 <= ap_phi_mux_p_0_0_0_1_20323_phi_fu_485_p4;
        p_0_0_0_1_19320_fu_428 <= ap_phi_mux_p_0_0_0_1_21325_phi_fu_476_p4;
        p_0_0_0_1_20322_fu_432 <= ap_phi_mux_empty_1232_phi_fu_466_p4;
        p_0_0_0_1_21324_fu_436 <= ap_phi_mux_empty_phi_fu_456_p4;
        p_0_0_0_1_2286_fu_360 <= ap_phi_mux_p_0_0_0_1_4291_phi_fu_629_p4;
        p_0_0_0_1_3288_fu_364 <= ap_phi_mux_p_0_0_0_1_5293_phi_fu_620_p4;
        p_0_0_0_1_4290_fu_368 <= ap_phi_mux_p_0_0_0_1_6295_phi_fu_611_p4;
        p_0_0_0_1_5292_fu_372 <= ap_phi_mux_p_0_0_0_1_7297_phi_fu_602_p4;
        p_0_0_0_1_6294_fu_376 <= ap_phi_mux_p_0_0_0_1_8299_phi_fu_593_p4;
        p_0_0_0_1_7296_fu_380 <= ap_phi_mux_p_0_0_0_1_9301_phi_fu_584_p4;
        p_0_0_0_1_8298_fu_384 <= ap_phi_mux_p_0_0_0_1_10303_phi_fu_575_p4;
        p_0_0_0_1_9300_fu_388 <= ap_phi_mux_p_0_0_0_1_11305_phi_fu_566_p4;
        p_0_0_0_20278_fu_344 <= ap_phi_mux_empty_1234_phi_fu_666_p4;
        p_0_0_0_21280_fu_348 <= ap_phi_mux_empty_1233_phi_fu_656_p4;
        p_0_0_0_2242_fu_272 <= ap_phi_mux_p_0_0_0_4247_phi_fu_829_p4;
        p_0_0_0_3244_fu_276 <= ap_phi_mux_p_0_0_0_5249_phi_fu_820_p4;
        p_0_0_0_4246_fu_280 <= ap_phi_mux_p_0_0_0_6251_phi_fu_811_p4;
        p_0_0_0_5248_fu_284 <= ap_phi_mux_p_0_0_0_7253_phi_fu_802_p4;
        p_0_0_0_6250_fu_288 <= ap_phi_mux_p_0_0_0_8255_phi_fu_793_p4;
        p_0_0_0_7252_fu_292 <= ap_phi_mux_p_0_0_0_9257_phi_fu_784_p4;
        p_0_0_0_8254_fu_296 <= ap_phi_mux_p_0_0_0_10259_phi_fu_775_p4;
        p_0_0_0_9256_fu_300 <= ap_phi_mux_p_0_0_0_11261_phi_fu_766_p4;
    end
end

always @ (*) begin
    if (((icmp_ln45_fu_943_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_empty_1232_phi_fu_466_p4 = 10'd0;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_empty_1232_phi_fu_466_p4 = {{mac_sm_dout[469:460]}};
        end else begin
            ap_phi_mux_empty_1232_phi_fu_466_p4 = ap_phi_reg_pp0_iter2_empty_1232_reg_463;
        end
    end else begin
        ap_phi_mux_empty_1232_phi_fu_466_p4 = ap_phi_reg_pp0_iter2_empty_1232_reg_463;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_empty_1233_phi_fu_656_p4 = 10'd0;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_empty_1233_phi_fu_656_p4 = {{mac_sm_dout[239:230]}};
        end else begin
            ap_phi_mux_empty_1233_phi_fu_656_p4 = ap_phi_reg_pp0_iter2_empty_1233_reg_653;
        end
    end else begin
        ap_phi_mux_empty_1233_phi_fu_656_p4 = ap_phi_reg_pp0_iter2_empty_1233_reg_653;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_empty_1234_phi_fu_666_p4 = 10'd0;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_empty_1234_phi_fu_666_p4 = {{mac_sm_dout[229:220]}};
        end else begin
            ap_phi_mux_empty_1234_phi_fu_666_p4 = ap_phi_reg_pp0_iter2_empty_1234_reg_663;
        end
    end else begin
        ap_phi_mux_empty_1234_phi_fu_666_p4 = ap_phi_reg_pp0_iter2_empty_1234_reg_663;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_456_p4 = 10'd0;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_456_p4 = {{mac_sm_dout[479:470]}};
        end else begin
            ap_phi_mux_empty_phi_fu_456_p4 = ap_phi_reg_pp0_iter2_empty_reg_453;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_456_p4 = ap_phi_reg_pp0_iter2_empty_reg_453;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_10259_phi_fu_775_p4 = p_0_0_0_10258_fu_304;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_10259_phi_fu_775_p4 = {{mac_sm_dout[109:100]}};
        end else begin
            ap_phi_mux_p_0_0_0_10259_phi_fu_775_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_10259_reg_772;
        end
    end else begin
        ap_phi_mux_p_0_0_0_10259_phi_fu_775_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_10259_reg_772;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_11261_phi_fu_766_p4 = p_0_0_0_11260_fu_308;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_11261_phi_fu_766_p4 = {{mac_sm_dout[119:110]}};
        end else begin
            ap_phi_mux_p_0_0_0_11261_phi_fu_766_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_11261_reg_763;
        end
    end else begin
        ap_phi_mux_p_0_0_0_11261_phi_fu_766_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_11261_reg_763;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_12263_phi_fu_757_p4 = p_0_0_0_12262_fu_312;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_12263_phi_fu_757_p4 = {{mac_sm_dout[129:120]}};
        end else begin
            ap_phi_mux_p_0_0_0_12263_phi_fu_757_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_12263_reg_754;
        end
    end else begin
        ap_phi_mux_p_0_0_0_12263_phi_fu_757_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_12263_reg_754;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_13265_phi_fu_748_p4 = p_0_0_0_13264_fu_316;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_13265_phi_fu_748_p4 = {{mac_sm_dout[139:130]}};
        end else begin
            ap_phi_mux_p_0_0_0_13265_phi_fu_748_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_13265_reg_745;
        end
    end else begin
        ap_phi_mux_p_0_0_0_13265_phi_fu_748_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_13265_reg_745;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_14267_phi_fu_739_p4 = p_0_0_0_14266_fu_320;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_14267_phi_fu_739_p4 = {{mac_sm_dout[149:140]}};
        end else begin
            ap_phi_mux_p_0_0_0_14267_phi_fu_739_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_14267_reg_736;
        end
    end else begin
        ap_phi_mux_p_0_0_0_14267_phi_fu_739_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_14267_reg_736;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_15269_phi_fu_730_p4 = p_0_0_0_15268_fu_324;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_15269_phi_fu_730_p4 = {{mac_sm_dout[159:150]}};
        end else begin
            ap_phi_mux_p_0_0_0_15269_phi_fu_730_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_15269_reg_727;
        end
    end else begin
        ap_phi_mux_p_0_0_0_15269_phi_fu_730_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_15269_reg_727;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_16271_phi_fu_721_p4 = p_0_0_0_16270_fu_328;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_16271_phi_fu_721_p4 = {{mac_sm_dout[169:160]}};
        end else begin
            ap_phi_mux_p_0_0_0_16271_phi_fu_721_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_16271_reg_718;
        end
    end else begin
        ap_phi_mux_p_0_0_0_16271_phi_fu_721_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_16271_reg_718;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_17273_phi_fu_712_p4 = p_0_0_0_17272_fu_332;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_17273_phi_fu_712_p4 = {{mac_sm_dout[179:170]}};
        end else begin
            ap_phi_mux_p_0_0_0_17273_phi_fu_712_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_17273_reg_709;
        end
    end else begin
        ap_phi_mux_p_0_0_0_17273_phi_fu_712_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_17273_reg_709;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_18275_phi_fu_703_p4 = p_0_0_0_18274_fu_336;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_18275_phi_fu_703_p4 = {{mac_sm_dout[189:180]}};
        end else begin
            ap_phi_mux_p_0_0_0_18275_phi_fu_703_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_18275_reg_700;
        end
    end else begin
        ap_phi_mux_p_0_0_0_18275_phi_fu_703_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_18275_reg_700;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_19277_phi_fu_694_p4 = p_0_0_0_19276_fu_340;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_19277_phi_fu_694_p4 = {{mac_sm_dout[199:190]}};
        end else begin
            ap_phi_mux_p_0_0_0_19277_phi_fu_694_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_19277_reg_691;
        end
    end else begin
        ap_phi_mux_p_0_0_0_19277_phi_fu_694_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_19277_reg_691;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_10303_phi_fu_575_p4 = p_0_0_0_1_10302_fu_392;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_10303_phi_fu_575_p4 = {{mac_sm_dout[349:340]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_10303_phi_fu_575_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_10303_reg_572;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_10303_phi_fu_575_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_10303_reg_572;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_11305_phi_fu_566_p4 = p_0_0_0_1_11304_fu_396;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_11305_phi_fu_566_p4 = {{mac_sm_dout[359:350]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_11305_phi_fu_566_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_11305_reg_563;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_11305_phi_fu_566_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_11305_reg_563;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_12307_phi_fu_557_p4 = p_0_0_0_1_12306_fu_400;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_12307_phi_fu_557_p4 = {{mac_sm_dout[369:360]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_12307_phi_fu_557_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_12307_reg_554;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_12307_phi_fu_557_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_12307_reg_554;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_13309_phi_fu_548_p4 = p_0_0_0_1_13308_fu_404;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_13309_phi_fu_548_p4 = {{mac_sm_dout[379:370]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_13309_phi_fu_548_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_13309_reg_545;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_13309_phi_fu_548_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_13309_reg_545;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_14311_phi_fu_539_p4 = p_0_0_0_1_14310_fu_408;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_14311_phi_fu_539_p4 = {{mac_sm_dout[389:380]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_14311_phi_fu_539_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_14311_reg_536;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_14311_phi_fu_539_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_14311_reg_536;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_15313_phi_fu_530_p4 = p_0_0_0_1_15312_fu_412;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_15313_phi_fu_530_p4 = {{mac_sm_dout[399:390]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_15313_phi_fu_530_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_15313_reg_527;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_15313_phi_fu_530_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_15313_reg_527;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_16315_phi_fu_521_p4 = p_0_0_0_1_16314_fu_416;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_16315_phi_fu_521_p4 = {{mac_sm_dout[409:400]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_16315_phi_fu_521_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_16315_reg_518;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_16315_phi_fu_521_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_16315_reg_518;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_17317_phi_fu_512_p4 = p_0_0_0_1_17316_fu_420;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_17317_phi_fu_512_p4 = {{mac_sm_dout[419:410]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_17317_phi_fu_512_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_17317_reg_509;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_17317_phi_fu_512_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_17317_reg_509;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_18319_phi_fu_503_p4 = p_0_0_0_1_18318_fu_424;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_18319_phi_fu_503_p4 = {{mac_sm_dout[429:420]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_18319_phi_fu_503_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_18319_reg_500;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_18319_phi_fu_503_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_18319_reg_500;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_19321_phi_fu_494_p4 = p_0_0_0_1_19320_fu_428;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_19321_phi_fu_494_p4 = {{mac_sm_dout[439:430]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_19321_phi_fu_494_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_19321_reg_491;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_19321_phi_fu_494_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_19321_reg_491;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_20323_phi_fu_485_p4 = p_0_0_0_1_20322_fu_432;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_20323_phi_fu_485_p4 = {{mac_sm_dout[449:440]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_20323_phi_fu_485_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_20323_reg_482;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_20323_phi_fu_485_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_20323_reg_482;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_21325_phi_fu_476_p4 = p_0_0_0_1_21324_fu_436;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_21325_phi_fu_476_p4 = {{mac_sm_dout[459:450]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_21325_phi_fu_476_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_21325_reg_473;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_21325_phi_fu_476_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_21325_reg_473;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_2287_phi_fu_647_p4 = p_0_0_0_1_2286_fu_360;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_2287_phi_fu_647_p4 = {{mac_sm_dout[269:260]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_2287_phi_fu_647_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_2287_reg_644;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_2287_phi_fu_647_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_2287_reg_644;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_3289_phi_fu_638_p4 = p_0_0_0_1_3288_fu_364;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_3289_phi_fu_638_p4 = {{mac_sm_dout[279:270]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_3289_phi_fu_638_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_3289_reg_635;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_3289_phi_fu_638_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_3289_reg_635;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_4291_phi_fu_629_p4 = p_0_0_0_1_4290_fu_368;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_4291_phi_fu_629_p4 = {{mac_sm_dout[289:280]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_4291_phi_fu_629_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_4291_reg_626;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_4291_phi_fu_629_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_4291_reg_626;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_5293_phi_fu_620_p4 = p_0_0_0_1_5292_fu_372;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_5293_phi_fu_620_p4 = {{mac_sm_dout[299:290]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_5293_phi_fu_620_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_5293_reg_617;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_5293_phi_fu_620_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_5293_reg_617;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_6295_phi_fu_611_p4 = p_0_0_0_1_6294_fu_376;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_6295_phi_fu_611_p4 = {{mac_sm_dout[309:300]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_6295_phi_fu_611_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_6295_reg_608;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_6295_phi_fu_611_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_6295_reg_608;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_7297_phi_fu_602_p4 = p_0_0_0_1_7296_fu_380;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_7297_phi_fu_602_p4 = {{mac_sm_dout[319:310]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_7297_phi_fu_602_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_7297_reg_599;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_7297_phi_fu_602_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_7297_reg_599;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_8299_phi_fu_593_p4 = p_0_0_0_1_8298_fu_384;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_8299_phi_fu_593_p4 = {{mac_sm_dout[329:320]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_8299_phi_fu_593_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_8299_reg_590;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_8299_phi_fu_593_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_8299_reg_590;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_9301_phi_fu_584_p4 = p_0_0_0_1_9300_fu_388;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_9301_phi_fu_584_p4 = {{mac_sm_dout[339:330]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_9301_phi_fu_584_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_9301_reg_581;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_9301_phi_fu_584_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_9301_reg_581;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_20279_phi_fu_685_p4 = p_0_0_0_20278_fu_344;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_20279_phi_fu_685_p4 = {{mac_sm_dout[209:200]}};
        end else begin
            ap_phi_mux_p_0_0_0_20279_phi_fu_685_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_20279_reg_682;
        end
    end else begin
        ap_phi_mux_p_0_0_0_20279_phi_fu_685_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_20279_reg_682;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_21281_phi_fu_676_p4 = p_0_0_0_21280_fu_348;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_21281_phi_fu_676_p4 = {{mac_sm_dout[219:210]}};
        end else begin
            ap_phi_mux_p_0_0_0_21281_phi_fu_676_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_21281_reg_673;
        end
    end else begin
        ap_phi_mux_p_0_0_0_21281_phi_fu_676_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_21281_reg_673;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_2243_phi_fu_847_p4 = p_0_0_0_2242_fu_272;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_2243_phi_fu_847_p4 = {{mac_sm_dout[29:20]}};
        end else begin
            ap_phi_mux_p_0_0_0_2243_phi_fu_847_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_2243_reg_844;
        end
    end else begin
        ap_phi_mux_p_0_0_0_2243_phi_fu_847_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_2243_reg_844;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_3245_phi_fu_838_p4 = p_0_0_0_3244_fu_276;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_3245_phi_fu_838_p4 = {{mac_sm_dout[39:30]}};
        end else begin
            ap_phi_mux_p_0_0_0_3245_phi_fu_838_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_3245_reg_835;
        end
    end else begin
        ap_phi_mux_p_0_0_0_3245_phi_fu_838_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_3245_reg_835;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_4247_phi_fu_829_p4 = p_0_0_0_4246_fu_280;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_4247_phi_fu_829_p4 = {{mac_sm_dout[49:40]}};
        end else begin
            ap_phi_mux_p_0_0_0_4247_phi_fu_829_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_4247_reg_826;
        end
    end else begin
        ap_phi_mux_p_0_0_0_4247_phi_fu_829_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_4247_reg_826;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_5249_phi_fu_820_p4 = p_0_0_0_5248_fu_284;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_5249_phi_fu_820_p4 = {{mac_sm_dout[59:50]}};
        end else begin
            ap_phi_mux_p_0_0_0_5249_phi_fu_820_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_5249_reg_817;
        end
    end else begin
        ap_phi_mux_p_0_0_0_5249_phi_fu_820_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_5249_reg_817;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_6251_phi_fu_811_p4 = p_0_0_0_6250_fu_288;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_6251_phi_fu_811_p4 = {{mac_sm_dout[69:60]}};
        end else begin
            ap_phi_mux_p_0_0_0_6251_phi_fu_811_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_6251_reg_808;
        end
    end else begin
        ap_phi_mux_p_0_0_0_6251_phi_fu_811_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_6251_reg_808;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_7253_phi_fu_802_p4 = p_0_0_0_7252_fu_292;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_7253_phi_fu_802_p4 = {{mac_sm_dout[79:70]}};
        end else begin
            ap_phi_mux_p_0_0_0_7253_phi_fu_802_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_7253_reg_799;
        end
    end else begin
        ap_phi_mux_p_0_0_0_7253_phi_fu_802_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_7253_reg_799;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_8255_phi_fu_793_p4 = p_0_0_0_8254_fu_296;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_8255_phi_fu_793_p4 = {{mac_sm_dout[89:80]}};
        end else begin
            ap_phi_mux_p_0_0_0_8255_phi_fu_793_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_8255_reg_790;
        end
    end else begin
        ap_phi_mux_p_0_0_0_8255_phi_fu_793_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_8255_reg_790;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_2814 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_9257_phi_fu_784_p4 = p_0_0_0_9256_fu_300;
        end else if ((icmp_ln50_reg_2814 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_9257_phi_fu_784_p4 = {{mac_sm_dout[99:90]}};
        end else begin
            ap_phi_mux_p_0_0_0_9257_phi_fu_784_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_9257_reg_781;
        end
    end else begin
        ap_phi_mux_p_0_0_0_9257_phi_fu_784_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_9257_reg_781;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten98_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten98_load = indvar_flatten98_fu_260;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_256;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_t_load = 4'd0;
    end else begin
        ap_sig_allocacmp_t_load = t_fu_252;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        m1_sm_blk_n = m1_sm_full_n;
    end else begin
        m1_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        m1_sm_write = 1'b1;
    end else begin
        m1_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op188_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_blk_n = mac_sm_empty_n;
    end else begin
        mac_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op188_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_read = 1'b1;
    end else begin
        mac_sm_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_937_p2 = (ap_sig_allocacmp_indvar_flatten98_load + 16'd1);

assign add_ln46_fu_955_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign and_ln45_fu_1010_p2 = (xor_ln45_fu_999_p2 & icmp_ln47_fu_1004_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op188_read_state3 == 1'b1) & (mac_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (m1_sm_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_544 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_548 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_p_0_0_0239_reg_880 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_0_0_126241_reg_871 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_0_0_1283_reg_862 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_0_0_1_1285_reg_853 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_1232_reg_463 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_1233_reg_653 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_1234_reg_663 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_reg_453 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_10259_reg_772 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_11261_reg_763 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_12263_reg_754 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_13265_reg_745 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_14267_reg_736 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_15269_reg_727 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_16271_reg_718 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_17273_reg_709 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_18275_reg_700 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_19277_reg_691 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_10303_reg_572 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_11305_reg_563 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_12307_reg_554 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_13309_reg_545 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_14311_reg_536 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_15313_reg_527 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_16315_reg_518 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_17317_reg_509 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_18319_reg_500 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_19321_reg_491 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_20323_reg_482 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_21325_reg_473 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_2287_reg_644 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_3289_reg_635 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_4291_reg_626 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_5293_reg_617 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_6295_reg_608 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_7297_reg_599 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_8299_reg_590 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_9301_reg_581 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_20279_reg_682 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_21281_reg_673 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_2243_reg_844 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_3245_reg_835 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_4247_reg_826 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_5249_reg_817 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_6251_reg_808 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_7253_reg_799 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_8255_reg_790 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_9257_reg_781 = 'bx;

always @ (*) begin
    ap_predicate_op188_read_state3 = ((icmp_ln50_reg_2814 == 1'd1) & (icmp_ln45_reg_2804_pp0_iter1_reg == 1'd0));
end

assign icmp_ln45_fu_943_p2 = ((ap_sig_allocacmp_indvar_flatten98_load == 16'd37632) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_949_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_1004_p2 = ((ap_sig_allocacmp_t_load == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1029_p2 = ((select_ln46_fu_1021_p3 == 4'd0) ? 1'b1 : 1'b0);

assign m1_sm_din = {{{{ap_phi_reg_pp0_iter3_p_0_0_0_1_1285_reg_853}, {ap_phi_reg_pp0_iter3_p_0_0_0_1283_reg_862}}, {ap_phi_reg_pp0_iter3_p_0_0_0_126241_reg_871}}, {ap_phi_reg_pp0_iter3_p_0_0_0239_reg_880}};

assign or_ln46_fu_1016_p2 = (icmp_ln46_reg_2808 | and_ln45_fu_1010_p2);

assign select_ln46_2_fu_961_p3 = ((icmp_ln46_fu_949_p2[0:0] == 1'b1) ? 10'd1 : add_ln46_fu_955_p2);

assign select_ln46_fu_1021_p3 = ((or_ln46_fu_1016_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_t_load);

assign t_2_fu_1035_p2 = (select_ln46_fu_1021_p3 + 4'd1);

assign trunc_ln50_fu_1359_p1 = mac_sm_dout[9:0];

assign xor_ln45_fu_999_p2 = (icmp_ln46_reg_2808 ^ 1'd1);

endmodule //MLP8_do_adapt_4
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_adapt_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        mac_sm_dout,
        mac_sm_num_data_valid,
        mac_sm_fifo_cap,
        mac_sm_empty_n,
        mac_sm_read,
        m2_sm_din,
        m2_sm_num_data_valid,
        m2_sm_fifo_cap,
        m2_sm_full_n,
        m2_sm_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [239:0] mac_sm_dout;
input  [2:0] mac_sm_num_data_valid;
input  [2:0] mac_sm_fifo_cap;
input   mac_sm_empty_n;
output   mac_sm_read;
output  [19:0] m2_sm_din;
input  [2:0] m2_sm_num_data_valid;
input  [2:0] m2_sm_fifo_cap;
input   m2_sm_full_n;
output   m2_sm_write;

reg ap_idle;
reg mac_sm_read;
reg m2_sm_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln45_reg_1546;
reg   [0:0] icmp_ln45_reg_1546_pp0_iter1_reg;
reg   [0:0] icmp_ln50_reg_1556;
reg    ap_predicate_op122_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln45_fu_543_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mac_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    m2_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln46_fu_549_p2;
reg   [0:0] icmp_ln46_reg_1550;
wire   [0:0] icmp_ln50_fu_629_p2;
wire   [9:0] trunc_ln50_fu_807_p1;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [9:0] ap_phi_mux_empty_phi_fu_274_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_empty_reg_271;
reg   [9:0] ap_phi_mux_p_0_0_0_1_10177_phi_fu_284_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_10177_reg_281;
reg   [9:0] ap_phi_mux_p_0_0_0_1_9175_phi_fu_293_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_9175_reg_290;
reg   [9:0] ap_phi_mux_p_0_0_0_1_8173_phi_fu_302_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_8173_reg_299;
reg   [9:0] ap_phi_mux_p_0_0_0_1_7171_phi_fu_311_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_7171_reg_308;
reg   [9:0] ap_phi_mux_p_0_0_0_1_6169_phi_fu_320_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_6169_reg_317;
reg   [9:0] ap_phi_mux_p_0_0_0_1_5167_phi_fu_329_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_5167_reg_326;
reg   [9:0] ap_phi_mux_p_0_0_0_1_4165_phi_fu_338_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_4165_reg_335;
reg   [9:0] ap_phi_mux_p_0_0_0_1_3163_phi_fu_347_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_3163_reg_344;
reg   [9:0] ap_phi_mux_p_0_0_0_1_2161_phi_fu_356_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_2161_reg_353;
reg   [9:0] ap_phi_mux_p_0_0_0_1_1159_phi_fu_365_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1_1159_reg_362;
reg   [9:0] ap_phi_mux_empty_1231_phi_fu_374_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_empty_1231_reg_371;
reg   [9:0] ap_phi_mux_p_0_0_0_10155_phi_fu_384_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_10155_reg_381;
reg   [9:0] ap_phi_mux_p_0_0_0_9153_phi_fu_393_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_9153_reg_390;
reg   [9:0] ap_phi_mux_p_0_0_0_8151_phi_fu_402_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_8151_reg_399;
reg   [9:0] ap_phi_mux_p_0_0_0_7149_phi_fu_411_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_7149_reg_408;
reg   [9:0] ap_phi_mux_p_0_0_0_6147_phi_fu_420_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_6147_reg_417;
reg   [9:0] ap_phi_mux_p_0_0_0_5145_phi_fu_429_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_5145_reg_426;
reg   [9:0] ap_phi_mux_p_0_0_0_4143_phi_fu_438_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_4143_reg_435;
reg   [9:0] ap_phi_mux_p_0_0_0_3141_phi_fu_447_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_3141_reg_444;
reg   [9:0] ap_phi_mux_p_0_0_0_2139_phi_fu_456_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_2139_reg_453;
reg   [9:0] ap_phi_mux_p_0_0_0_126137_phi_fu_465_p4;
wire   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_126137_reg_462;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_1157_reg_471;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0_1157_reg_471;
reg   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0_1157_reg_471;
reg   [9:0] ap_phi_reg_pp0_iter3_p_0_0_0_1157_reg_471;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0135_reg_480;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0135_reg_480;
reg   [9:0] ap_phi_reg_pp0_iter2_p_0_0_0135_reg_480;
reg   [9:0] ap_phi_reg_pp0_iter3_p_0_0_0135_reg_480;
reg   [3:0] t_fu_158;
wire   [3:0] t_1_fu_635_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [3:0] ap_sig_allocacmp_t_load;
reg   [8:0] indvar_flatten_fu_162;
wire   [8:0] select_ln46_1_fu_561_p3;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [14:0] indvar_flatten54_fu_166;
wire   [14:0] add_ln45_fu_537_p2;
reg   [14:0] ap_sig_allocacmp_indvar_flatten54_load;
reg   [9:0] p_0_0_0134_fu_170;
reg   [9:0] p_0_0_0_126136_fu_174;
reg   [9:0] p_0_0_0_2138_fu_178;
reg   [9:0] p_0_0_0_3140_fu_182;
reg   [9:0] p_0_0_0_4142_fu_186;
reg   [9:0] p_0_0_0_5144_fu_190;
reg   [9:0] p_0_0_0_6146_fu_194;
reg   [9:0] p_0_0_0_7148_fu_198;
reg   [9:0] p_0_0_0_8150_fu_202;
reg   [9:0] p_0_0_0_9152_fu_206;
reg   [9:0] p_0_0_0_10154_fu_210;
reg   [9:0] p_0_0_0_1156_fu_214;
reg   [9:0] p_0_0_0_1_1158_fu_218;
reg   [9:0] p_0_0_0_1_2160_fu_222;
reg   [9:0] p_0_0_0_1_3162_fu_226;
reg   [9:0] p_0_0_0_1_4164_fu_230;
reg   [9:0] p_0_0_0_1_5166_fu_234;
reg   [9:0] p_0_0_0_1_6168_fu_238;
reg   [9:0] p_0_0_0_1_7170_fu_242;
reg   [9:0] p_0_0_0_1_8172_fu_246;
reg   [9:0] p_0_0_0_1_9174_fu_250;
reg   [9:0] p_0_0_0_1_10176_fu_254;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] add_ln46_fu_555_p2;
wire   [0:0] icmp_ln47_fu_604_p2;
wire   [0:0] xor_ln45_fu_599_p2;
wire   [0:0] and_ln45_fu_610_p2;
wire   [0:0] or_ln46_fu_616_p2;
wire   [3:0] select_ln46_fu_621_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_336;
reg    ap_condition_340;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 t_fu_158 = 4'd0;
//#0 indvar_flatten_fu_162 = 9'd0;
//#0 indvar_flatten54_fu_166 = 15'd0;
//#0 p_0_0_0134_fu_170 = 10'd0;
//#0 p_0_0_0_126136_fu_174 = 10'd0;
//#0 p_0_0_0_2138_fu_178 = 10'd0;
//#0 p_0_0_0_3140_fu_182 = 10'd0;
//#0 p_0_0_0_4142_fu_186 = 10'd0;
//#0 p_0_0_0_5144_fu_190 = 10'd0;
//#0 p_0_0_0_6146_fu_194 = 10'd0;
//#0 p_0_0_0_7148_fu_198 = 10'd0;
//#0 p_0_0_0_8150_fu_202 = 10'd0;
//#0 p_0_0_0_9152_fu_206 = 10'd0;
//#0 p_0_0_0_10154_fu_210 = 10'd0;
//#0 p_0_0_0_1156_fu_214 = 10'd0;
//#0 p_0_0_0_1_1158_fu_218 = 10'd0;
//#0 p_0_0_0_1_2160_fu_222 = 10'd0;
//#0 p_0_0_0_1_3162_fu_226 = 10'd0;
//#0 p_0_0_0_1_4164_fu_230 = 10'd0;
//#0 p_0_0_0_1_5166_fu_234 = 10'd0;
//#0 p_0_0_0_1_6168_fu_238 = 10'd0;
//#0 p_0_0_0_1_7170_fu_242 = 10'd0;
//#0 p_0_0_0_1_8172_fu_246 = 10'd0;
//#0 p_0_0_0_1_9174_fu_250 = 10'd0;
//#0 p_0_0_0_1_10176_fu_254 = 10'd0;
end

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_1556 == 1'd0) & (icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0135_reg_480 <= p_0_0_0134_fu_170;
        end else if (((icmp_ln50_reg_1556 == 1'd1) & (icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0135_reg_480 <= trunc_ln50_fu_807_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_0_0_0135_reg_480 <= ap_phi_reg_pp0_iter2_p_0_0_0135_reg_480;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_1556 == 1'd0) & (icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1157_reg_471 <= p_0_0_0_1156_fu_214;
        end else if (((icmp_ln50_reg_1556 == 1'd1) & (icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1157_reg_471 <= {{mac_sm_dout[129:120]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_0_0_0_1157_reg_471 <= ap_phi_reg_pp0_iter2_p_0_0_0_1157_reg_471;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((icmp_ln45_fu_543_p2 == 1'd0)) begin
            indvar_flatten54_fu_166 <= add_ln45_fu_537_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten54_fu_166 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((icmp_ln45_fu_543_p2 == 1'd0)) begin
            indvar_flatten_fu_162 <= select_ln46_1_fu_561_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_162 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_340)) begin
        if ((icmp_ln45_reg_1546 == 1'd0)) begin
            t_fu_158 <= t_1_fu_635_p2;
        end else if ((ap_loop_init_pp0_iter1_reg == 1'b1)) begin
            t_fu_158 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln45_reg_1546 <= icmp_ln45_fu_543_p2;
        icmp_ln45_reg_1546_pp0_iter1_reg <= icmp_ln45_reg_1546;
        icmp_ln46_reg_1550 <= icmp_ln46_fu_549_p2;
        icmp_ln50_reg_1556 <= icmp_ln50_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_0_0135_reg_480 <= ap_phi_reg_pp0_iter0_p_0_0_0135_reg_480;
        ap_phi_reg_pp0_iter1_p_0_0_0_1157_reg_471 <= ap_phi_reg_pp0_iter0_p_0_0_0_1157_reg_471;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_p_0_0_0135_reg_480 <= ap_phi_reg_pp0_iter1_p_0_0_0135_reg_480;
        ap_phi_reg_pp0_iter2_p_0_0_0_1157_reg_471 <= ap_phi_reg_pp0_iter1_p_0_0_0_1157_reg_471;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0134_fu_170 <= ap_phi_mux_p_0_0_0_126137_phi_fu_465_p4;
        p_0_0_0_10154_fu_210 <= ap_phi_mux_empty_1231_phi_fu_374_p4;
        p_0_0_0_1156_fu_214 <= ap_phi_mux_p_0_0_0_1_1159_phi_fu_365_p4;
        p_0_0_0_126136_fu_174 <= ap_phi_mux_p_0_0_0_2139_phi_fu_456_p4;
        p_0_0_0_1_10176_fu_254 <= ap_phi_mux_empty_phi_fu_274_p4;
        p_0_0_0_1_1158_fu_218 <= ap_phi_mux_p_0_0_0_1_2161_phi_fu_356_p4;
        p_0_0_0_1_2160_fu_222 <= ap_phi_mux_p_0_0_0_1_3163_phi_fu_347_p4;
        p_0_0_0_1_3162_fu_226 <= ap_phi_mux_p_0_0_0_1_4165_phi_fu_338_p4;
        p_0_0_0_1_4164_fu_230 <= ap_phi_mux_p_0_0_0_1_5167_phi_fu_329_p4;
        p_0_0_0_1_5166_fu_234 <= ap_phi_mux_p_0_0_0_1_6169_phi_fu_320_p4;
        p_0_0_0_1_6168_fu_238 <= ap_phi_mux_p_0_0_0_1_7171_phi_fu_311_p4;
        p_0_0_0_1_7170_fu_242 <= ap_phi_mux_p_0_0_0_1_8173_phi_fu_302_p4;
        p_0_0_0_1_8172_fu_246 <= ap_phi_mux_p_0_0_0_1_9175_phi_fu_293_p4;
        p_0_0_0_1_9174_fu_250 <= ap_phi_mux_p_0_0_0_1_10177_phi_fu_284_p4;
        p_0_0_0_2138_fu_178 <= ap_phi_mux_p_0_0_0_3141_phi_fu_447_p4;
        p_0_0_0_3140_fu_182 <= ap_phi_mux_p_0_0_0_4143_phi_fu_438_p4;
        p_0_0_0_4142_fu_186 <= ap_phi_mux_p_0_0_0_5145_phi_fu_429_p4;
        p_0_0_0_5144_fu_190 <= ap_phi_mux_p_0_0_0_6147_phi_fu_420_p4;
        p_0_0_0_6146_fu_194 <= ap_phi_mux_p_0_0_0_7149_phi_fu_411_p4;
        p_0_0_0_7148_fu_198 <= ap_phi_mux_p_0_0_0_8151_phi_fu_402_p4;
        p_0_0_0_8150_fu_202 <= ap_phi_mux_p_0_0_0_9153_phi_fu_393_p4;
        p_0_0_0_9152_fu_206 <= ap_phi_mux_p_0_0_0_10155_phi_fu_384_p4;
    end
end

always @ (*) begin
    if (((icmp_ln45_fu_543_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln45_reg_1546_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_empty_1231_phi_fu_374_p4 = 10'd0;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_empty_1231_phi_fu_374_p4 = {{mac_sm_dout[119:110]}};
        end else begin
            ap_phi_mux_empty_1231_phi_fu_374_p4 = ap_phi_reg_pp0_iter2_empty_1231_reg_371;
        end
    end else begin
        ap_phi_mux_empty_1231_phi_fu_374_p4 = ap_phi_reg_pp0_iter2_empty_1231_reg_371;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_274_p4 = 10'd0;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_274_p4 = {{mac_sm_dout[239:230]}};
        end else begin
            ap_phi_mux_empty_phi_fu_274_p4 = ap_phi_reg_pp0_iter2_empty_reg_271;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_274_p4 = ap_phi_reg_pp0_iter2_empty_reg_271;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_10155_phi_fu_384_p4 = p_0_0_0_10154_fu_210;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_10155_phi_fu_384_p4 = {{mac_sm_dout[109:100]}};
        end else begin
            ap_phi_mux_p_0_0_0_10155_phi_fu_384_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_10155_reg_381;
        end
    end else begin
        ap_phi_mux_p_0_0_0_10155_phi_fu_384_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_10155_reg_381;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_126137_phi_fu_465_p4 = p_0_0_0_126136_fu_174;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_126137_phi_fu_465_p4 = {{mac_sm_dout[19:10]}};
        end else begin
            ap_phi_mux_p_0_0_0_126137_phi_fu_465_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_126137_reg_462;
        end
    end else begin
        ap_phi_mux_p_0_0_0_126137_phi_fu_465_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_126137_reg_462;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_10177_phi_fu_284_p4 = p_0_0_0_1_10176_fu_254;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_10177_phi_fu_284_p4 = {{mac_sm_dout[229:220]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_10177_phi_fu_284_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_10177_reg_281;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_10177_phi_fu_284_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_10177_reg_281;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_1159_phi_fu_365_p4 = p_0_0_0_1_1158_fu_218;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_1159_phi_fu_365_p4 = {{mac_sm_dout[139:130]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_1159_phi_fu_365_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_1159_reg_362;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_1159_phi_fu_365_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_1159_reg_362;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_2161_phi_fu_356_p4 = p_0_0_0_1_2160_fu_222;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_2161_phi_fu_356_p4 = {{mac_sm_dout[149:140]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_2161_phi_fu_356_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_2161_reg_353;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_2161_phi_fu_356_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_2161_reg_353;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_3163_phi_fu_347_p4 = p_0_0_0_1_3162_fu_226;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_3163_phi_fu_347_p4 = {{mac_sm_dout[159:150]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_3163_phi_fu_347_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_3163_reg_344;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_3163_phi_fu_347_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_3163_reg_344;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_4165_phi_fu_338_p4 = p_0_0_0_1_4164_fu_230;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_4165_phi_fu_338_p4 = {{mac_sm_dout[169:160]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_4165_phi_fu_338_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_4165_reg_335;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_4165_phi_fu_338_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_4165_reg_335;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_5167_phi_fu_329_p4 = p_0_0_0_1_5166_fu_234;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_5167_phi_fu_329_p4 = {{mac_sm_dout[179:170]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_5167_phi_fu_329_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_5167_reg_326;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_5167_phi_fu_329_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_5167_reg_326;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_6169_phi_fu_320_p4 = p_0_0_0_1_6168_fu_238;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_6169_phi_fu_320_p4 = {{mac_sm_dout[189:180]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_6169_phi_fu_320_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_6169_reg_317;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_6169_phi_fu_320_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_6169_reg_317;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_7171_phi_fu_311_p4 = p_0_0_0_1_7170_fu_242;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_7171_phi_fu_311_p4 = {{mac_sm_dout[199:190]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_7171_phi_fu_311_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_7171_reg_308;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_7171_phi_fu_311_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_7171_reg_308;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_8173_phi_fu_302_p4 = p_0_0_0_1_8172_fu_246;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_8173_phi_fu_302_p4 = {{mac_sm_dout[209:200]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_8173_phi_fu_302_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_8173_reg_299;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_8173_phi_fu_302_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_8173_reg_299;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_1_9175_phi_fu_293_p4 = p_0_0_0_1_9174_fu_250;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_1_9175_phi_fu_293_p4 = {{mac_sm_dout[219:210]}};
        end else begin
            ap_phi_mux_p_0_0_0_1_9175_phi_fu_293_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_9175_reg_290;
        end
    end else begin
        ap_phi_mux_p_0_0_0_1_9175_phi_fu_293_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_1_9175_reg_290;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_2139_phi_fu_456_p4 = p_0_0_0_2138_fu_178;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_2139_phi_fu_456_p4 = {{mac_sm_dout[29:20]}};
        end else begin
            ap_phi_mux_p_0_0_0_2139_phi_fu_456_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_2139_reg_453;
        end
    end else begin
        ap_phi_mux_p_0_0_0_2139_phi_fu_456_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_2139_reg_453;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_3141_phi_fu_447_p4 = p_0_0_0_3140_fu_182;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_3141_phi_fu_447_p4 = {{mac_sm_dout[39:30]}};
        end else begin
            ap_phi_mux_p_0_0_0_3141_phi_fu_447_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_3141_reg_444;
        end
    end else begin
        ap_phi_mux_p_0_0_0_3141_phi_fu_447_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_3141_reg_444;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_4143_phi_fu_438_p4 = p_0_0_0_4142_fu_186;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_4143_phi_fu_438_p4 = {{mac_sm_dout[49:40]}};
        end else begin
            ap_phi_mux_p_0_0_0_4143_phi_fu_438_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_4143_reg_435;
        end
    end else begin
        ap_phi_mux_p_0_0_0_4143_phi_fu_438_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_4143_reg_435;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_5145_phi_fu_429_p4 = p_0_0_0_5144_fu_190;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_5145_phi_fu_429_p4 = {{mac_sm_dout[59:50]}};
        end else begin
            ap_phi_mux_p_0_0_0_5145_phi_fu_429_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_5145_reg_426;
        end
    end else begin
        ap_phi_mux_p_0_0_0_5145_phi_fu_429_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_5145_reg_426;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_6147_phi_fu_420_p4 = p_0_0_0_6146_fu_194;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_6147_phi_fu_420_p4 = {{mac_sm_dout[69:60]}};
        end else begin
            ap_phi_mux_p_0_0_0_6147_phi_fu_420_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_6147_reg_417;
        end
    end else begin
        ap_phi_mux_p_0_0_0_6147_phi_fu_420_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_6147_reg_417;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_7149_phi_fu_411_p4 = p_0_0_0_7148_fu_198;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_7149_phi_fu_411_p4 = {{mac_sm_dout[79:70]}};
        end else begin
            ap_phi_mux_p_0_0_0_7149_phi_fu_411_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_7149_reg_408;
        end
    end else begin
        ap_phi_mux_p_0_0_0_7149_phi_fu_411_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_7149_reg_408;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_8151_phi_fu_402_p4 = p_0_0_0_8150_fu_202;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_8151_phi_fu_402_p4 = {{mac_sm_dout[89:80]}};
        end else begin
            ap_phi_mux_p_0_0_0_8151_phi_fu_402_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_8151_reg_399;
        end
    end else begin
        ap_phi_mux_p_0_0_0_8151_phi_fu_402_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_8151_reg_399;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1556 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_9153_phi_fu_393_p4 = p_0_0_0_9152_fu_206;
        end else if ((icmp_ln50_reg_1556 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_9153_phi_fu_393_p4 = {{mac_sm_dout[99:90]}};
        end else begin
            ap_phi_mux_p_0_0_0_9153_phi_fu_393_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_9153_reg_390;
        end
    end else begin
        ap_phi_mux_p_0_0_0_9153_phi_fu_393_p4 = ap_phi_reg_pp0_iter2_p_0_0_0_9153_reg_390;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten54_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten54_load = indvar_flatten54_fu_166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_t_load = 4'd0;
    end else begin
        ap_sig_allocacmp_t_load = t_fu_158;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        m2_sm_blk_n = m2_sm_full_n;
    end else begin
        m2_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        m2_sm_write = 1'b1;
    end else begin
        m2_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op122_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_blk_n = mac_sm_empty_n;
    end else begin
        mac_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op122_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_read = 1'b1;
    end else begin
        mac_sm_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_537_p2 = (ap_sig_allocacmp_indvar_flatten54_load + 15'd1);

assign add_ln46_fu_555_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign and_ln45_fu_610_p2 = (xor_ln45_fu_599_p2 & icmp_ln47_fu_604_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op122_read_state3 == 1'b1) & (mac_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (m2_sm_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_336 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_340 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_p_0_0_0135_reg_480 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_0_0_1157_reg_471 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_1231_reg_371 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_reg_271 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_10155_reg_381 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_126137_reg_462 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_10177_reg_281 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_1159_reg_362 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_2161_reg_353 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_3163_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_4165_reg_335 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_5167_reg_326 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_6169_reg_317 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_7171_reg_308 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_8173_reg_299 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_1_9175_reg_290 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_2139_reg_453 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_3141_reg_444 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_4143_reg_435 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_5145_reg_426 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_6147_reg_417 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_7149_reg_408 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_8151_reg_399 = 'bx;

assign ap_phi_reg_pp0_iter2_p_0_0_0_9153_reg_390 = 'bx;

always @ (*) begin
    ap_predicate_op122_read_state3 = ((icmp_ln50_reg_1556 == 1'd1) & (icmp_ln45_reg_1546_pp0_iter1_reg == 1'd0));
end

assign icmp_ln45_fu_543_p2 = ((ap_sig_allocacmp_indvar_flatten54_load == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_549_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_604_p2 = ((ap_sig_allocacmp_t_load == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_629_p2 = ((select_ln46_fu_621_p3 == 4'd0) ? 1'b1 : 1'b0);

assign m2_sm_din = {{ap_phi_reg_pp0_iter3_p_0_0_0_1157_reg_471}, {ap_phi_reg_pp0_iter3_p_0_0_0135_reg_480}};

assign or_ln46_fu_616_p2 = (icmp_ln46_reg_1550 | and_ln45_fu_610_p2);

assign select_ln46_1_fu_561_p3 = ((icmp_ln46_fu_549_p2[0:0] == 1'b1) ? 9'd1 : add_ln46_fu_555_p2);

assign select_ln46_fu_621_p3 = ((or_ln46_fu_616_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_t_load);

assign t_1_fu_635_p2 = (select_ln46_fu_621_p3 + 4'd1);

assign trunc_ln50_fu_807_p1 = mac_sm_dout[9:0];

assign xor_ln45_fu_599_p2 = (icmp_ln46_reg_1550 ^ 1'd1);

endmodule //MLP8_do_adapt_5
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_gelu (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m1_sm_dout,
        m1_sm_num_data_valid,
        m1_sm_fifo_cap,
        m1_sm_empty_n,
        m1_sm_read,
        ge_sm_din,
        ge_sm_num_data_valid,
        ge_sm_fifo_cap,
        ge_sm_full_n,
        ge_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [39:0] m1_sm_dout;
input  [2:0] m1_sm_num_data_valid;
input  [2:0] m1_sm_fifo_cap;
input   m1_sm_empty_n;
output   m1_sm_read;
output  [11:0] ge_sm_din;
input  [2:0] ge_sm_num_data_valid;
input  [2:0] ge_sm_fifo_cap;
input   ge_sm_full_n;
output   ge_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg m1_sm_read;
reg ge_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln54_fu_168_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] mlp_inst_ge_table_address0;
reg    mlp_inst_ge_table_ce0;
wire   [2:0] mlp_inst_ge_table_q0;
wire   [5:0] mlp_inst_ge_table_address1;
reg    mlp_inst_ge_table_ce1;
wire   [2:0] mlp_inst_ge_table_q1;
wire   [5:0] mlp_inst_ge_table_address2;
reg    mlp_inst_ge_table_ce2;
wire   [2:0] mlp_inst_ge_table_q2;
wire   [5:0] mlp_inst_ge_table_address3;
reg    mlp_inst_ge_table_ce3;
wire   [2:0] mlp_inst_ge_table_q3;
reg    m1_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    ge_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] add_ln67_fu_226_p2;
reg   [10:0] add_ln67_reg_561;
reg   [0:0] tmp_reg_566;
reg   [2:0] tmp_6_reg_572;
wire   [10:0] add_ln67_1_fu_254_p2;
reg   [10:0] add_ln67_1_reg_577;
reg   [0:0] tmp_7_reg_582;
reg   [2:0] tmp_8_reg_588;
wire   [10:0] add_ln67_2_fu_282_p2;
reg   [10:0] add_ln67_2_reg_593;
reg   [0:0] tmp_9_reg_598;
reg   [2:0] tmp_10_reg_604;
wire   [10:0] add_ln67_3_fu_310_p2;
reg   [10:0] add_ln67_3_reg_609;
reg   [0:0] tmp_11_reg_614;
reg   [2:0] tmp_12_reg_620;
wire   [63:0] zext_ln69_fu_374_p1;
wire   [63:0] zext_ln69_1_fu_423_p1;
wire   [63:0] zext_ln69_2_fu_472_p1;
wire   [63:0] zext_ln69_3_fu_521_p1;
reg   [15:0] indvar_flatten_fu_78;
wire   [15:0] add_ln54_fu_162_p2;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] trunc_ln59_fu_188_p1;
wire  signed [10:0] sext_ln67_fu_222_p1;
wire   [9:0] trunc_ln59_1_fu_192_p4;
wire  signed [10:0] sext_ln67_1_fu_250_p1;
wire   [9:0] trunc_ln59_2_fu_202_p4;
wire  signed [10:0] sext_ln67_2_fu_278_p1;
wire   [9:0] trunc_ln59_3_fu_212_p4;
wire  signed [10:0] sext_ln67_3_fu_306_p1;
wire   [0:0] xor_ln7_fu_348_p2;
wire   [0:0] icmp_ln8_fu_343_p2;
wire   [0:0] or_ln7_fu_361_p2;
wire   [5:0] select_ln7_fu_353_p3;
wire   [5:0] trunc_ln67_1_fu_334_p4;
wire   [5:0] cursor_fu_366_p3;
wire   [0:0] xor_ln7_1_fu_397_p2;
wire   [0:0] icmp_ln8_2_fu_392_p2;
wire   [0:0] or_ln7_1_fu_410_p2;
wire   [5:0] select_ln7_2_fu_402_p3;
wire   [5:0] trunc_ln67_2_fu_383_p4;
wire   [5:0] cursor_1_fu_415_p3;
wire   [0:0] xor_ln7_2_fu_446_p2;
wire   [0:0] icmp_ln8_3_fu_441_p2;
wire   [0:0] or_ln7_2_fu_459_p2;
wire   [5:0] select_ln7_4_fu_451_p3;
wire   [5:0] trunc_ln67_3_fu_432_p4;
wire   [5:0] cursor_2_fu_464_p3;
wire   [0:0] xor_ln7_3_fu_495_p2;
wire   [0:0] icmp_ln8_4_fu_490_p2;
wire   [0:0] or_ln7_3_fu_508_p2;
wire   [5:0] select_ln7_6_fu_500_p3;
wire   [5:0] trunc_ln67_4_fu_481_p4;
wire   [5:0] cursor_3_fu_513_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_175;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 indvar_flatten_fu_78 = 16'd0;
end

MLP8_do_gelu_mlp_inst_ge_table_ROM_AUTO_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mlp_inst_ge_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_ge_table_address0),
    .ce0(mlp_inst_ge_table_ce0),
    .q0(mlp_inst_ge_table_q0),
    .address1(mlp_inst_ge_table_address1),
    .ce1(mlp_inst_ge_table_ce1),
    .q1(mlp_inst_ge_table_q1),
    .address2(mlp_inst_ge_table_address2),
    .ce2(mlp_inst_ge_table_ce2),
    .q2(mlp_inst_ge_table_q2),
    .address3(mlp_inst_ge_table_address3),
    .ce3(mlp_inst_ge_table_ce3),
    .q3(mlp_inst_ge_table_q3)
);

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_175)) begin
        if ((icmp_ln54_fu_168_p2 == 1'd0)) begin
            indvar_flatten_fu_78 <= add_ln54_fu_162_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_78 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln67_1_reg_577 <= add_ln67_1_fu_254_p2;
        add_ln67_2_reg_593 <= add_ln67_2_fu_282_p2;
        add_ln67_3_reg_609 <= add_ln67_3_fu_310_p2;
        add_ln67_reg_561 <= add_ln67_fu_226_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        tmp_10_reg_604 <= {{add_ln67_2_fu_282_p2[10:8]}};
        tmp_11_reg_614 <= add_ln67_3_fu_310_p2[32'd10];
        tmp_12_reg_620 <= {{add_ln67_3_fu_310_p2[10:8]}};
        tmp_6_reg_572 <= {{add_ln67_fu_226_p2[10:8]}};
        tmp_7_reg_582 <= add_ln67_1_fu_254_p2[32'd10];
        tmp_8_reg_588 <= {{add_ln67_1_fu_254_p2[10:8]}};
        tmp_9_reg_598 <= add_ln67_2_fu_282_p2[32'd10];
        tmp_reg_566 <= add_ln67_fu_226_p2[32'd10];
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_168_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ge_sm_blk_n = ge_sm_full_n;
    end else begin
        ge_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ge_sm_write = 1'b1;
    end else begin
        ge_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m1_sm_blk_n = m1_sm_empty_n;
    end else begin
        m1_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m1_sm_read = 1'b1;
    end else begin
        m1_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_ge_table_ce0 = 1'b1;
    end else begin
        mlp_inst_ge_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_ge_table_ce1 = 1'b1;
    end else begin
        mlp_inst_ge_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_ge_table_ce2 = 1'b1;
    end else begin
        mlp_inst_ge_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_ge_table_ce3 = 1'b1;
    end else begin
        mlp_inst_ge_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln54_fu_162_p2 = (ap_sig_allocacmp_indvar_flatten_load + 16'd1);

assign add_ln67_1_fu_254_p2 = ($signed(sext_ln67_1_fu_250_p1) + $signed(11'd109));

assign add_ln67_2_fu_282_p2 = ($signed(sext_ln67_2_fu_278_p1) + $signed(11'd109));

assign add_ln67_3_fu_310_p2 = ($signed(sext_ln67_3_fu_306_p1) + $signed(11'd109));

assign add_ln67_fu_226_p2 = ($signed(sext_ln67_fu_222_p1) + $signed(11'd109));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (m1_sm_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (ge_sm_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_175 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign cursor_1_fu_415_p3 = ((or_ln7_1_fu_410_p2[0:0] == 1'b1) ? select_ln7_2_fu_402_p3 : trunc_ln67_2_fu_383_p4);

assign cursor_2_fu_464_p3 = ((or_ln7_2_fu_459_p2[0:0] == 1'b1) ? select_ln7_4_fu_451_p3 : trunc_ln67_3_fu_432_p4);

assign cursor_3_fu_513_p3 = ((or_ln7_3_fu_508_p2[0:0] == 1'b1) ? select_ln7_6_fu_500_p3 : trunc_ln67_4_fu_481_p4);

assign cursor_fu_366_p3 = ((or_ln7_fu_361_p2[0:0] == 1'b1) ? select_ln7_fu_353_p3 : trunc_ln67_1_fu_334_p4);

assign ge_sm_din = {{{{mlp_inst_ge_table_q0}, {mlp_inst_ge_table_q1}}, {mlp_inst_ge_table_q2}}, {mlp_inst_ge_table_q3}};

assign icmp_ln54_fu_168_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 16'd37632) ? 1'b1 : 1'b0);

assign icmp_ln8_2_fu_392_p2 = (($signed(tmp_8_reg_588) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_3_fu_441_p2 = (($signed(tmp_10_reg_604) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_4_fu_490_p2 = (($signed(tmp_12_reg_620) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_343_p2 = (($signed(tmp_6_reg_572) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign mlp_inst_ge_table_address0 = zext_ln69_3_fu_521_p1;

assign mlp_inst_ge_table_address1 = zext_ln69_2_fu_472_p1;

assign mlp_inst_ge_table_address2 = zext_ln69_1_fu_423_p1;

assign mlp_inst_ge_table_address3 = zext_ln69_fu_374_p1;

assign or_ln7_1_fu_410_p2 = (tmp_7_reg_582 | icmp_ln8_2_fu_392_p2);

assign or_ln7_2_fu_459_p2 = (tmp_9_reg_598 | icmp_ln8_3_fu_441_p2);

assign or_ln7_3_fu_508_p2 = (tmp_11_reg_614 | icmp_ln8_4_fu_490_p2);

assign or_ln7_fu_361_p2 = (tmp_reg_566 | icmp_ln8_fu_343_p2);

assign select_ln7_2_fu_402_p3 = ((xor_ln7_1_fu_397_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign select_ln7_4_fu_451_p3 = ((xor_ln7_2_fu_446_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign select_ln7_6_fu_500_p3 = ((xor_ln7_3_fu_495_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign select_ln7_fu_353_p3 = ((xor_ln7_fu_348_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign sext_ln67_1_fu_250_p1 = $signed(trunc_ln59_1_fu_192_p4);

assign sext_ln67_2_fu_278_p1 = $signed(trunc_ln59_2_fu_202_p4);

assign sext_ln67_3_fu_306_p1 = $signed(trunc_ln59_3_fu_212_p4);

assign sext_ln67_fu_222_p1 = $signed(trunc_ln59_fu_188_p1);

assign start_out = real_start;

assign trunc_ln59_1_fu_192_p4 = {{m1_sm_dout[19:10]}};

assign trunc_ln59_2_fu_202_p4 = {{m1_sm_dout[29:20]}};

assign trunc_ln59_3_fu_212_p4 = {{m1_sm_dout[39:30]}};

assign trunc_ln59_fu_188_p1 = m1_sm_dout[9:0];

assign trunc_ln67_1_fu_334_p4 = {{add_ln67_reg_561[7:2]}};

assign trunc_ln67_2_fu_383_p4 = {{add_ln67_1_reg_577[7:2]}};

assign trunc_ln67_3_fu_432_p4 = {{add_ln67_2_reg_593[7:2]}};

assign trunc_ln67_4_fu_481_p4 = {{add_ln67_3_reg_609[7:2]}};

assign xor_ln7_1_fu_397_p2 = (tmp_7_reg_582 ^ 1'd1);

assign xor_ln7_2_fu_446_p2 = (tmp_9_reg_598 ^ 1'd1);

assign xor_ln7_3_fu_495_p2 = (tmp_11_reg_614 ^ 1'd1);

assign xor_ln7_fu_348_p2 = (tmp_reg_566 ^ 1'd1);

assign zext_ln69_1_fu_423_p1 = cursor_1_fu_415_p3;

assign zext_ln69_2_fu_472_p1 = cursor_2_fu_464_p3;

assign zext_ln69_3_fu_521_p1 = cursor_3_fu_513_p3;

assign zext_ln69_fu_374_p1 = cursor_fu_366_p3;

endmodule //MLP8_do_gelu
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_do_gelu_mlp_inst_ge_table_ROM_AUTO_1R (
    address0, ce0, q0, 
    address1, ce1, q1, 
    address2, ce2, q2, 
    address3, ce3, q3, 
    reset, clk);

parameter DataWidth = 3;
parameter AddressWidth = 6;
parameter AddressRange = 64;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;
 
input[AddressWidth-1:0] address1;
input ce1;
output reg[DataWidth-1:0] q1;
 
input[AddressWidth-1:0] address2;
input ce2;
output reg[DataWidth-1:0] q2;
 
input[AddressWidth-1:0] address3;
input ce3;
output reg[DataWidth-1:0] q3;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];
 
reg [DataWidth-1:0] rom1[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_do_gelu_mlp_inst_ge_table_ROM_AUTO_1R.dat", rom0); 
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_do_gelu_mlp_inst_ge_table_ROM_AUTO_1R.dat", rom1);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end
  
always @(posedge clk) 
begin 
    if (ce1) 
    begin
        q1 <= rom0[address1];
    end
end
  
always @(posedge clk) 
begin 
    if (ce2) 
    begin
        q2 <= rom1[address2];
    end
end
  
always @(posedge clk) 
begin 
    if (ce3) 
    begin
        q3 <= rom1[address3];
    end
end


endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_layernorm (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        main_sm_dout,
        main_sm_num_data_valid,
        main_sm_fifo_cap,
        main_sm_empty_n,
        main_sm_read,
        ln_sm_din,
        ln_sm_num_data_valid,
        ln_sm_fifo_cap,
        ln_sm_full_n,
        ln_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [27:0] main_sm_dout;
input  [2:0] main_sm_num_data_valid;
input  [2:0] main_sm_fifo_cap;
input   main_sm_empty_n;
output   main_sm_read;
output  [5:0] ln_sm_din;
input  [2:0] ln_sm_num_data_valid;
input  [2:0] ln_sm_fifo_cap;
input   ln_sm_full_n;
output   ln_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg main_sm_read;
reg ln_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] select_ln108_1_reg_1281;
reg    ap_predicate_op100_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter11_reg;
reg    ap_block_state13_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln107_fu_343_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [6:0] mlp_inst_lnq_rsqrt_table_address0;
reg    mlp_inst_lnq_rsqrt_table_ce0;
wire   [11:0] mlp_inst_lnq_rsqrt_table_q0;
wire   [6:0] mlp_inst_lnq_rsqrt_table_address1;
reg    mlp_inst_lnq_rsqrt_table_ce1;
wire   [11:0] mlp_inst_lnq_rsqrt_table_q1;
wire   [7:0] mlp_inst_lnq_lnw_address0;
reg    mlp_inst_lnq_lnw_ce0;
wire   [15:0] mlp_inst_lnq_lnw_q0;
wire   [7:0] mlp_inst_lnq_lnb_address0;
reg    mlp_inst_lnq_lnb_ce0;
wire   [36:0] mlp_inst_lnq_lnb_q0;
reg    main_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    ln_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln108_fu_349_p2;
reg   [0:0] icmp_ln108_reg_1267;
wire   [7:0] select_ln108_fu_440_p3;
reg   [7:0] select_ln108_reg_1274;
wire   [1:0] select_ln108_1_fu_448_p3;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter2_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter3_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter4_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter5_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter6_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter7_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter8_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter9_reg;
reg   [1:0] select_ln108_1_reg_1281_pp0_iter10_reg;
wire   [0:0] grp_fu_255_p2;
reg   [0:0] cmp89_reg_1290;
reg   [0:0] cmp89_reg_1290_pp0_iter3_reg;
reg   [0:0] cmp89_reg_1290_pp0_iter4_reg;
reg   [0:0] cmp89_reg_1290_pp0_iter5_reg;
wire   [0:0] grp_fu_260_p2;
reg   [0:0] icmp_ln163_reg_1296;
reg   [0:0] icmp_ln163_reg_1296_pp0_iter3_reg;
reg   [0:0] icmp_ln163_reg_1296_pp0_iter4_reg;
reg   [0:0] icmp_ln163_reg_1296_pp0_iter5_reg;
reg   [0:0] icmp_ln163_reg_1296_pp0_iter6_reg;
reg   [0:0] icmp_ln163_reg_1296_pp0_iter7_reg;
reg   [0:0] icmp_ln137_reg_1310;
reg   [0:0] icmp_ln137_reg_1310_pp0_iter3_reg;
reg   [0:0] icmp_ln137_reg_1310_pp0_iter4_reg;
wire   [27:0] buffer_q1;
reg   [27:0] buffer_load_reg_1324;
reg   [27:0] buffer_load_reg_1324_pp0_iter4_reg;
reg   [27:0] buffer_load_reg_1324_pp0_iter5_reg;
reg   [15:0] mlp_inst_lnq_lnw_load_reg_1332;
reg   [15:0] mlp_inst_lnq_lnw_load_reg_1332_pp0_iter4_reg;
reg   [15:0] mlp_inst_lnq_lnw_load_reg_1332_pp0_iter5_reg;
reg   [15:0] mlp_inst_lnq_lnw_load_reg_1332_pp0_iter6_reg;
reg   [15:0] mlp_inst_lnq_lnw_load_reg_1332_pp0_iter7_reg;
reg   [15:0] mlp_inst_lnq_lnw_load_reg_1332_pp0_iter8_reg;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337_pp0_iter4_reg;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337_pp0_iter5_reg;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337_pp0_iter6_reg;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337_pp0_iter7_reg;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337_pp0_iter8_reg;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337_pp0_iter9_reg;
reg   [36:0] mlp_inst_lnq_lnb_load_reg_1337_pp0_iter10_reg;
wire  signed [25:0] sext_ln156_fu_643_p1;
wire  signed [25:0] sext_ln156_1_fu_666_p1;
wire   [25:0] empty_1229_fu_758_p3;
reg   [25:0] empty_1229_reg_1354;
wire   [25:0] empty_1230_fu_765_p3;
reg   [25:0] empty_1230_reg_1359;
wire   [13:0] diff_1_fu_815_p2;
reg   [13:0] diff_1_reg_1364;
reg  signed [13:0] diff_1_reg_1364_pp0_iter7_reg;
wire   [13:0] diff_2_fu_834_p2;
reg   [13:0] diff_2_reg_1369;
reg  signed [13:0] diff_2_reg_1369_pp0_iter7_reg;
wire   [37:0] zext_ln185_fu_958_p1;
wire  signed [37:0] sext_ln185_4_fu_981_p1;
wire   [7:0] buffer_address1;
reg    buffer_ce1;
reg    buffer_we1;
wire   [63:0] zext_ln109_fu_486_p1;
wire   [63:0] zext_ln168_fu_855_p1;
wire   [63:0] zext_ln168_1_fu_879_p1;
reg   [7:0] ct_fu_122;
wire   [7:0] add_ln109_fu_456_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [7:0] ap_sig_allocacmp_ct_load;
reg   [1:0] state_fu_126;
reg   [1:0] ap_sig_allocacmp_state_load;
reg   [9:0] indvar_flatten_fu_130;
wire   [9:0] select_ln108_2_fu_361_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] indvar_flatten33_fu_134;
wire   [15:0] add_ln107_fu_337_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten33_load;
reg   [9:0] empty_fu_138;
reg   [11:0] empty_1222_fu_142;
reg   [9:0] empty_1223_fu_146;
reg   [11:0] empty_1224_fu_150;
reg   [25:0] empty_1225_fu_154;
reg   [25:0] empty_1226_fu_158;
reg   [16:0] empty_1227_fu_162;
wire  signed [16:0] add_ln132_fu_552_p2;
reg   [16:0] empty_1228_fu_166;
wire  signed [16:0] add_ln132_1_fu_570_p2;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] add_ln108_1_fu_355_p2;
wire   [0:0] icmp_ln109_fu_417_p2;
wire   [0:0] xor_ln107_fu_412_p2;
wire   [1:0] select_ln107_fu_405_p3;
wire   [0:0] and_ln107_fu_423_p2;
wire   [0:0] or_ln108_fu_435_p2;
wire   [1:0] state_2_fu_429_p2;
wire   [13:0] trunc_ln116_fu_518_p1;
wire   [16:0] select_ln119_1_fu_540_p3;
wire  signed [16:0] sext_ln132_fu_548_p1;
wire   [13:0] trunc_ln116_1_fu_522_p4;
wire   [16:0] select_ln119_fu_532_p3;
wire  signed [16:0] sext_ln132_1_fu_566_p1;
wire   [13:0] trunc_ln155_fu_630_p1;
wire  signed [13:0] sext_ln155_fu_633_p1;
wire   [13:0] diff_fu_637_p2;
wire   [13:0] tmp_s_fu_647_p4;
wire  signed [13:0] sext_ln155_1_fu_656_p1;
wire   [13:0] diff_3_fu_660_p2;
wire  signed [13:0] grp_fu_678_p0;
wire  signed [13:0] grp_fu_678_p1;
wire  signed [13:0] grp_fu_692_p0;
wire  signed [13:0] grp_fu_692_p1;
wire  signed [32:0] trunc_ln7_fu_698_p1;
wire   [32:0] grp_fu_1119_p3;
wire  signed [32:0] trunc_ln142_1_fu_707_p1;
wire   [32:0] grp_fu_1128_p3;
wire   [25:0] grp_fu_678_p2;
wire   [25:0] grp_fu_692_p2;
wire   [25:0] add_ln158_fu_746_p2;
wire   [25:0] add_ln158_1_fu_752_p2;
wire   [13:0] trunc_ln182_fu_808_p1;
wire  signed [13:0] sext_ln182_fu_811_p1;
wire   [13:0] tmp_68_fu_821_p4;
wire  signed [13:0] sext_ln182_1_fu_830_p1;
wire   [25:0] add_ln166_fu_840_p2;
wire   [6:0] cursor_fu_845_p4;
wire   [25:0] add_ln166_1_fu_864_p2;
wire   [6:0] cursor_1_fu_869_p4;
wire   [11:0] grp_fu_927_p1;
wire   [11:0] grp_fu_948_p1;
wire  signed [25:0] grp_fu_927_p2;
wire  signed [25:0] grp_fu_948_p2;
wire  signed [37:0] grp_fu_1137_p3;
wire   [4:0] rel_fu_984_p4;
wire   [2:0] tmp_1_fu_999_p4;
wire   [0:0] icmp_ln7_fu_993_p2;
wire   [0:0] icmp_ln8_fu_1008_p2;
wire   [0:0] or_ln187_fu_1031_p2;
wire   [2:0] select_ln187_fu_1023_p3;
wire   [2:0] trunc_ln5_fu_1014_p4;
wire  signed [37:0] grp_fu_1148_p3;
wire   [4:0] rel_1_fu_1045_p4;
wire   [2:0] tmp_2_fu_1060_p4;
wire   [0:0] icmp_ln7_1_fu_1054_p2;
wire   [0:0] icmp_ln8_1_fu_1069_p2;
wire   [0:0] or_ln187_1_fu_1084_p2;
wire   [2:0] select_ln187_2_fu_1090_p3;
wire   [2:0] trunc_ln187_1_fu_1075_p4;
wire   [2:0] select_ln187_3_fu_1098_p3;
wire   [2:0] select_ln187_1_fu_1037_p3;
wire   [15:0] grp_fu_1119_p1;
wire   [22:0] grp_fu_1119_p2;
wire   [15:0] grp_fu_1128_p1;
wire   [22:0] grp_fu_1128_p2;
wire   [15:0] grp_fu_1137_p1;
wire  signed [36:0] grp_fu_1137_p2;
wire   [15:0] grp_fu_1148_p1;
wire  signed [36:0] grp_fu_1148_p2;
reg    grp_fu_678_ce;
reg    grp_fu_692_ce;
reg    grp_fu_927_ce;
reg    grp_fu_948_ce;
reg    grp_fu_1119_ce;
reg    grp_fu_1128_ce;
reg    grp_fu_1137_ce;
reg    grp_fu_1148_ce;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [25:0] grp_fu_927_p10;
wire   [25:0] grp_fu_948_p10;
reg    ap_condition_376;
reg    ap_condition_395;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter4 = 1'b0;
//#0 ap_enable_reg_pp0_iter5 = 1'b0;
//#0 ap_enable_reg_pp0_iter6 = 1'b0;
//#0 ap_enable_reg_pp0_iter7 = 1'b0;
//#0 ap_enable_reg_pp0_iter8 = 1'b0;
//#0 ap_enable_reg_pp0_iter9 = 1'b0;
//#0 ap_enable_reg_pp0_iter10 = 1'b0;
//#0 ap_enable_reg_pp0_iter11 = 1'b0;
//#0 ap_enable_reg_pp0_iter12 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ct_fu_122 = 8'd0;
//#0 state_fu_126 = 2'd0;
//#0 indvar_flatten_fu_130 = 10'd0;
//#0 indvar_flatten33_fu_134 = 16'd0;
//#0 empty_fu_138 = 10'd0;
//#0 empty_1222_fu_142 = 12'd0;
//#0 empty_1223_fu_146 = 10'd0;
//#0 empty_1224_fu_150 = 12'd0;
//#0 empty_1225_fu_154 = 26'd0;
//#0 empty_1226_fu_158 = 26'd0;
//#0 empty_1227_fu_162 = 17'd0;
//#0 empty_1228_fu_166 = 17'd0;
end

MLP8_do_layernorm_mlp_inst_lnq_rsqrt_table_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
mlp_inst_lnq_rsqrt_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_lnq_rsqrt_table_address0),
    .ce0(mlp_inst_lnq_rsqrt_table_ce0),
    .q0(mlp_inst_lnq_rsqrt_table_q0),
    .address1(mlp_inst_lnq_rsqrt_table_address1),
    .ce1(mlp_inst_lnq_rsqrt_table_ce1),
    .q1(mlp_inst_lnq_rsqrt_table_q1)
);

MLP8_do_layernorm_mlp_inst_lnq_lnw_ROM_AUTO_1R #(
    .DataWidth( 16 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
mlp_inst_lnq_lnw_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_lnq_lnw_address0),
    .ce0(mlp_inst_lnq_lnw_ce0),
    .q0(mlp_inst_lnq_lnw_q0)
);

MLP8_do_layernorm_mlp_inst_lnq_lnb_ROM_AUTO_1R #(
    .DataWidth( 37 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
mlp_inst_lnq_lnb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_lnq_lnb_address0),
    .ce0(mlp_inst_lnq_lnb_ce0),
    .q0(mlp_inst_lnq_lnb_q0)
);

MLP8_do_layernorm_buffer_RAM_2P_LUTRAM_1R1W #(
    .DataWidth( 28 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address1(buffer_address1),
    .ce1(buffer_ce1),
    .we1(buffer_we1),
    .d1(main_sm_dout),
    .q1(buffer_q1)
);

MLP8_mul_14s_14s_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 26 ))
mul_14s_14s_26_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_678_p0),
    .din1(grp_fu_678_p1),
    .ce(grp_fu_678_ce),
    .dout(grp_fu_678_p2)
);

MLP8_mul_14s_14s_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 26 ))
mul_14s_14s_26_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_692_p0),
    .din1(grp_fu_692_p1),
    .ce(grp_fu_692_ce),
    .dout(grp_fu_692_p2)
);

MLP8_mul_14s_12ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_14s_12ns_26_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(diff_1_reg_1364_pp0_iter7_reg),
    .din1(grp_fu_927_p1),
    .ce(grp_fu_927_ce),
    .dout(grp_fu_927_p2)
);

MLP8_mul_14s_12ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_14s_12ns_26_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(diff_2_reg_1369_pp0_iter7_reg),
    .din1(grp_fu_948_p1),
    .ce(grp_fu_948_ce),
    .dout(grp_fu_948_p2)
);

MLP8_mac_muladd_17s_16ns_23ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 33 ))
mac_muladd_17s_16ns_23ns_33_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln132_fu_552_p2),
    .din1(grp_fu_1119_p1),
    .din2(grp_fu_1119_p2),
    .ce(grp_fu_1119_ce),
    .dout(grp_fu_1119_p3)
);

MLP8_mac_muladd_17s_16ns_23ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 33 ))
mac_muladd_17s_16ns_23ns_33_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln132_1_fu_570_p2),
    .din1(grp_fu_1128_p1),
    .din2(grp_fu_1128_p2),
    .ce(grp_fu_1128_ce),
    .dout(grp_fu_1128_p3)
);

MLP8_mac_muladd_26s_16ns_37s_38_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 37 ),
    .dout_WIDTH( 38 ))
mac_muladd_26s_16ns_37s_38_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_927_p2),
    .din1(grp_fu_1137_p1),
    .din2(grp_fu_1137_p2),
    .ce(grp_fu_1137_ce),
    .dout(grp_fu_1137_p3)
);

MLP8_mac_muladd_26s_16ns_37s_38_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 37 ),
    .dout_WIDTH( 38 ))
mac_muladd_26s_16ns_37s_38_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_948_p2),
    .din1(grp_fu_1148_p1),
    .din2(grp_fu_1148_p2),
    .ce(grp_fu_1148_ce),
    .dout(grp_fu_1148_p3)
);

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_376)) begin
        ct_fu_122 <= add_ln109_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_395)) begin
    if ((icmp_ln107_fu_343_p2 == 1'd0)) begin
        indvar_flatten33_fu_134 <= add_ln107_fu_337_p2;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten33_fu_134 <= 16'd0;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_395)) begin
    if ((icmp_ln107_fu_343_p2 == 1'd0)) begin
        indvar_flatten_fu_130 <= select_ln108_2_fu_361_p3;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten_fu_130 <= 10'd0;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_376)) begin
    state_fu_126 <= select_ln108_1_fu_448_p3;
end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        buffer_load_reg_1324_pp0_iter4_reg <= buffer_load_reg_1324;
        buffer_load_reg_1324_pp0_iter5_reg <= buffer_load_reg_1324_pp0_iter4_reg;
        cmp89_reg_1290_pp0_iter3_reg <= cmp89_reg_1290;
        cmp89_reg_1290_pp0_iter4_reg <= cmp89_reg_1290_pp0_iter3_reg;
        cmp89_reg_1290_pp0_iter5_reg <= cmp89_reg_1290_pp0_iter4_reg;
        diff_1_reg_1364 <= diff_1_fu_815_p2;
        diff_1_reg_1364_pp0_iter7_reg <= diff_1_reg_1364;
        diff_2_reg_1369 <= diff_2_fu_834_p2;
        diff_2_reg_1369_pp0_iter7_reg <= diff_2_reg_1369;
        empty_1229_reg_1354 <= empty_1229_fu_758_p3;
        empty_1230_reg_1359 <= empty_1230_fu_765_p3;
        icmp_ln137_reg_1310_pp0_iter3_reg <= icmp_ln137_reg_1310;
        icmp_ln137_reg_1310_pp0_iter4_reg <= icmp_ln137_reg_1310_pp0_iter3_reg;
        icmp_ln163_reg_1296_pp0_iter3_reg <= icmp_ln163_reg_1296;
        icmp_ln163_reg_1296_pp0_iter4_reg <= icmp_ln163_reg_1296_pp0_iter3_reg;
        icmp_ln163_reg_1296_pp0_iter5_reg <= icmp_ln163_reg_1296_pp0_iter4_reg;
        icmp_ln163_reg_1296_pp0_iter6_reg <= icmp_ln163_reg_1296_pp0_iter5_reg;
        icmp_ln163_reg_1296_pp0_iter7_reg <= icmp_ln163_reg_1296_pp0_iter6_reg;
        mlp_inst_lnq_lnb_load_reg_1337 <= mlp_inst_lnq_lnb_q0;
        mlp_inst_lnq_lnb_load_reg_1337_pp0_iter10_reg <= mlp_inst_lnq_lnb_load_reg_1337_pp0_iter9_reg;
        mlp_inst_lnq_lnb_load_reg_1337_pp0_iter4_reg <= mlp_inst_lnq_lnb_load_reg_1337;
        mlp_inst_lnq_lnb_load_reg_1337_pp0_iter5_reg <= mlp_inst_lnq_lnb_load_reg_1337_pp0_iter4_reg;
        mlp_inst_lnq_lnb_load_reg_1337_pp0_iter6_reg <= mlp_inst_lnq_lnb_load_reg_1337_pp0_iter5_reg;
        mlp_inst_lnq_lnb_load_reg_1337_pp0_iter7_reg <= mlp_inst_lnq_lnb_load_reg_1337_pp0_iter6_reg;
        mlp_inst_lnq_lnb_load_reg_1337_pp0_iter8_reg <= mlp_inst_lnq_lnb_load_reg_1337_pp0_iter7_reg;
        mlp_inst_lnq_lnb_load_reg_1337_pp0_iter9_reg <= mlp_inst_lnq_lnb_load_reg_1337_pp0_iter8_reg;
        mlp_inst_lnq_lnw_load_reg_1332 <= mlp_inst_lnq_lnw_q0;
        mlp_inst_lnq_lnw_load_reg_1332_pp0_iter4_reg <= mlp_inst_lnq_lnw_load_reg_1332;
        mlp_inst_lnq_lnw_load_reg_1332_pp0_iter5_reg <= mlp_inst_lnq_lnw_load_reg_1332_pp0_iter4_reg;
        mlp_inst_lnq_lnw_load_reg_1332_pp0_iter6_reg <= mlp_inst_lnq_lnw_load_reg_1332_pp0_iter5_reg;
        mlp_inst_lnq_lnw_load_reg_1332_pp0_iter7_reg <= mlp_inst_lnq_lnw_load_reg_1332_pp0_iter6_reg;
        mlp_inst_lnq_lnw_load_reg_1332_pp0_iter8_reg <= mlp_inst_lnq_lnw_load_reg_1332_pp0_iter7_reg;
        select_ln108_1_reg_1281_pp0_iter10_reg <= select_ln108_1_reg_1281_pp0_iter9_reg;
        select_ln108_1_reg_1281_pp0_iter11_reg <= select_ln108_1_reg_1281_pp0_iter10_reg;
        select_ln108_1_reg_1281_pp0_iter2_reg <= select_ln108_1_reg_1281;
        select_ln108_1_reg_1281_pp0_iter3_reg <= select_ln108_1_reg_1281_pp0_iter2_reg;
        select_ln108_1_reg_1281_pp0_iter4_reg <= select_ln108_1_reg_1281_pp0_iter3_reg;
        select_ln108_1_reg_1281_pp0_iter5_reg <= select_ln108_1_reg_1281_pp0_iter4_reg;
        select_ln108_1_reg_1281_pp0_iter6_reg <= select_ln108_1_reg_1281_pp0_iter5_reg;
        select_ln108_1_reg_1281_pp0_iter7_reg <= select_ln108_1_reg_1281_pp0_iter6_reg;
        select_ln108_1_reg_1281_pp0_iter8_reg <= select_ln108_1_reg_1281_pp0_iter7_reg;
        select_ln108_1_reg_1281_pp0_iter9_reg <= select_ln108_1_reg_1281_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln108_reg_1267 <= icmp_ln108_fu_349_p2;
        select_ln108_1_reg_1281 <= select_ln108_1_fu_448_p3;
        select_ln108_reg_1274 <= select_ln108_fu_440_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buffer_load_reg_1324 <= buffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmp89_reg_1290 <= grp_fu_255_p2;
        icmp_ln137_reg_1310 <= grp_fu_260_p2;
        icmp_ln163_reg_1296 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln163_reg_1296_pp0_iter7_reg == 1'd1) & (select_ln108_1_reg_1281_pp0_iter7_reg == 2'd1))) begin
        empty_1222_fu_142 <= mlp_inst_lnq_rsqrt_table_q1;
        empty_1224_fu_150 <= mlp_inst_lnq_rsqrt_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln108_1_reg_1281_pp0_iter4_reg == 2'd1) & ~(select_ln108_1_reg_1281_pp0_iter4_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln137_reg_1310_pp0_iter4_reg == 1'd1))) begin
        empty_1223_fu_146 <= {{trunc_ln142_1_fu_707_p1[32:23]}};
        empty_fu_138 <= {{trunc_ln7_fu_698_p1[32:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln108_1_reg_1281_pp0_iter5_reg == 2'd1))) begin
        empty_1225_fu_154 <= empty_1229_fu_758_p3;
        empty_1226_fu_158 <= empty_1230_fu_765_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln108_1_reg_1281 == 2'd1) & ~(select_ln108_1_reg_1281 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        empty_1227_fu_162 <= add_ln132_fu_552_p2;
        empty_1228_fu_166 <= add_ln132_1_fu_570_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_fu_343_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ct_load = 8'd0;
    end else begin
        ap_sig_allocacmp_ct_load = ct_fu_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten33_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten33_load = indvar_flatten33_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_state_load = 2'd0;
    end else begin
        ap_sig_allocacmp_state_load = state_fu_126;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buffer_ce1 = 1'b1;
    end else begin
        buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln108_1_reg_1281 == 2'd1) & ~(select_ln108_1_reg_1281 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buffer_we1 = 1'b1;
    end else begin
        buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1119_ce = 1'b1;
    end else begin
        grp_fu_1119_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1128_ce = 1'b1;
    end else begin
        grp_fu_1128_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1137_ce = 1'b1;
    end else begin
        grp_fu_1137_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1148_ce = 1'b1;
    end else begin
        grp_fu_1148_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_678_ce = 1'b1;
    end else begin
        grp_fu_678_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_692_ce = 1'b1;
    end else begin
        grp_fu_692_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_927_ce = 1'b1;
    end else begin
        grp_fu_927_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_948_ce = 1'b1;
    end else begin
        grp_fu_948_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln108_1_reg_1281_pp0_iter11_reg == 2'd2))) begin
        ln_sm_blk_n = ln_sm_full_n;
    end else begin
        ln_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln108_1_reg_1281_pp0_iter11_reg == 2'd2))) begin
        ln_sm_write = 1'b1;
    end else begin
        ln_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op100_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        main_sm_blk_n = main_sm_empty_n;
    end else begin
        main_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op100_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        main_sm_read = 1'b1;
    end else begin
        main_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_lnq_lnb_ce0 = 1'b1;
    end else begin
        mlp_inst_lnq_lnb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_lnq_lnw_ce0 = 1'b1;
    end else begin
        mlp_inst_lnq_lnw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        mlp_inst_lnq_rsqrt_table_ce0 = 1'b1;
    end else begin
        mlp_inst_lnq_rsqrt_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        mlp_inst_lnq_rsqrt_table_ce1 = 1'b1;
    end else begin
        mlp_inst_lnq_rsqrt_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln107_fu_337_p2 = (ap_sig_allocacmp_indvar_flatten33_load + 16'd1);

assign add_ln108_1_fu_355_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln109_fu_456_p2 = (select_ln108_fu_440_p3 + 8'd1);

assign add_ln132_1_fu_570_p2 = ($signed(select_ln119_fu_532_p3) + $signed(sext_ln132_1_fu_566_p1));

assign add_ln132_fu_552_p2 = ($signed(select_ln119_1_fu_540_p3) + $signed(sext_ln132_fu_548_p1));

assign add_ln158_1_fu_752_p2 = (grp_fu_692_p2 + empty_1226_fu_158);

assign add_ln158_fu_746_p2 = (grp_fu_678_p2 + empty_1225_fu_154);

assign add_ln166_1_fu_864_p2 = ($signed(empty_1230_reg_1359) + $signed(26'd63141238));

assign add_ln166_fu_840_p2 = ($signed(empty_1229_reg_1354) + $signed(26'd63141238));

assign and_ln107_fu_423_p2 = (xor_ln107_fu_412_p2 & icmp_ln109_fu_417_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage0_iter12)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage0_iter12)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage0_iter12)));
end

always @ (*) begin
    ap_block_state13_pp0_stage0_iter12 = ((select_ln108_1_reg_1281_pp0_iter11_reg == 2'd2) & (ln_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op100_read_state3 == 1'b1) & (main_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_376 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_395 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op100_read_state3 = (~(select_ln108_1_reg_1281 == 2'd1) & ~(select_ln108_1_reg_1281 == 2'd2));
end

assign ap_ready = internal_ap_ready;

assign buffer_address1 = zext_ln109_fu_486_p1;

assign cursor_1_fu_869_p4 = {{add_ln166_1_fu_864_p2[25:19]}};

assign cursor_fu_845_p4 = {{add_ln166_fu_840_p2[25:19]}};

assign diff_1_fu_815_p2 = ($signed(trunc_ln182_fu_808_p1) - $signed(sext_ln182_fu_811_p1));

assign diff_2_fu_834_p2 = ($signed(tmp_68_fu_821_p4) - $signed(sext_ln182_1_fu_830_p1));

assign diff_3_fu_660_p2 = ($signed(tmp_s_fu_647_p4) - $signed(sext_ln155_1_fu_656_p1));

assign diff_fu_637_p2 = ($signed(trunc_ln155_fu_630_p1) - $signed(sext_ln155_fu_633_p1));

assign empty_1229_fu_758_p3 = ((cmp89_reg_1290_pp0_iter5_reg[0:0] == 1'b1) ? grp_fu_678_p2 : add_ln158_fu_746_p2);

assign empty_1230_fu_765_p3 = ((cmp89_reg_1290_pp0_iter5_reg[0:0] == 1'b1) ? grp_fu_692_p2 : add_ln158_1_fu_752_p2);

assign grp_fu_1119_p1 = 33'd43691;

assign grp_fu_1119_p2 = 33'd4194304;

assign grp_fu_1128_p1 = 33'd43691;

assign grp_fu_1128_p2 = 33'd4194304;

assign grp_fu_1137_p1 = zext_ln185_fu_958_p1;

assign grp_fu_1137_p2 = sext_ln185_4_fu_981_p1;

assign grp_fu_1148_p1 = zext_ln185_fu_958_p1;

assign grp_fu_1148_p2 = sext_ln185_4_fu_981_p1;

assign grp_fu_255_p2 = ((select_ln108_reg_1274 == 8'd0) ? 1'b1 : 1'b0);

assign grp_fu_260_p2 = ((select_ln108_reg_1274 == 8'd191) ? 1'b1 : 1'b0);

assign grp_fu_678_p0 = sext_ln156_fu_643_p1;

assign grp_fu_678_p1 = sext_ln156_fu_643_p1;

assign grp_fu_692_p0 = sext_ln156_1_fu_666_p1;

assign grp_fu_692_p1 = sext_ln156_1_fu_666_p1;

assign grp_fu_927_p1 = grp_fu_927_p10;

assign grp_fu_927_p10 = empty_1222_fu_142;

assign grp_fu_948_p1 = grp_fu_948_p10;

assign grp_fu_948_p10 = empty_1224_fu_150;

assign icmp_ln107_fu_343_p2 = ((ap_sig_allocacmp_indvar_flatten33_load == 16'd56448) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_349_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd576) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_417_p2 = ((ap_sig_allocacmp_ct_load == 8'd192) ? 1'b1 : 1'b0);

assign icmp_ln7_1_fu_1054_p2 = (($signed(rel_1_fu_1045_p4) < $signed(5'd28)) ? 1'b1 : 1'b0);

assign icmp_ln7_fu_993_p2 = (($signed(rel_fu_984_p4) < $signed(5'd28)) ? 1'b1 : 1'b0);

assign icmp_ln8_1_fu_1069_p2 = (($signed(tmp_2_fu_1060_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_1008_p2 = (($signed(tmp_1_fu_999_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign ln_sm_din = {{select_ln187_3_fu_1098_p3}, {select_ln187_1_fu_1037_p3}};

assign mlp_inst_lnq_lnb_address0 = zext_ln109_fu_486_p1;

assign mlp_inst_lnq_lnw_address0 = zext_ln109_fu_486_p1;

assign mlp_inst_lnq_rsqrt_table_address0 = zext_ln168_1_fu_879_p1;

assign mlp_inst_lnq_rsqrt_table_address1 = zext_ln168_fu_855_p1;

assign or_ln108_fu_435_p2 = (icmp_ln108_reg_1267 | and_ln107_fu_423_p2);

assign or_ln187_1_fu_1084_p2 = (icmp_ln8_1_fu_1069_p2 | icmp_ln7_1_fu_1054_p2);

assign or_ln187_fu_1031_p2 = (icmp_ln8_fu_1008_p2 | icmp_ln7_fu_993_p2);

assign rel_1_fu_1045_p4 = {{grp_fu_1148_p3[37:33]}};

assign rel_fu_984_p4 = {{grp_fu_1137_p3[37:33]}};

assign select_ln107_fu_405_p3 = ((icmp_ln108_reg_1267[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_state_load);

assign select_ln108_1_fu_448_p3 = ((and_ln107_fu_423_p2[0:0] == 1'b1) ? state_2_fu_429_p2 : select_ln107_fu_405_p3);

assign select_ln108_2_fu_361_p3 = ((icmp_ln108_fu_349_p2[0:0] == 1'b1) ? 10'd1 : add_ln108_1_fu_355_p2);

assign select_ln108_fu_440_p3 = ((or_ln108_fu_435_p2[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_ct_load);

assign select_ln119_1_fu_540_p3 = ((grp_fu_255_p2[0:0] == 1'b1) ? 17'd0 : empty_1227_fu_162);

assign select_ln119_fu_532_p3 = ((grp_fu_255_p2[0:0] == 1'b1) ? 17'd0 : empty_1228_fu_166);

assign select_ln187_1_fu_1037_p3 = ((or_ln187_fu_1031_p2[0:0] == 1'b1) ? select_ln187_fu_1023_p3 : trunc_ln5_fu_1014_p4);

assign select_ln187_2_fu_1090_p3 = ((icmp_ln7_1_fu_1054_p2[0:0] == 1'b1) ? 3'd4 : 3'd3);

assign select_ln187_3_fu_1098_p3 = ((or_ln187_1_fu_1084_p2[0:0] == 1'b1) ? select_ln187_2_fu_1090_p3 : trunc_ln187_1_fu_1075_p4);

assign select_ln187_fu_1023_p3 = ((icmp_ln7_fu_993_p2[0:0] == 1'b1) ? 3'd4 : 3'd3);

assign sext_ln132_1_fu_566_p1 = $signed(trunc_ln116_1_fu_522_p4);

assign sext_ln132_fu_548_p1 = $signed(trunc_ln116_fu_518_p1);

assign sext_ln155_1_fu_656_p1 = $signed(empty_1223_fu_146);

assign sext_ln155_fu_633_p1 = $signed(empty_fu_138);

assign sext_ln156_1_fu_666_p1 = $signed(diff_3_fu_660_p2);

assign sext_ln156_fu_643_p1 = $signed(diff_fu_637_p2);

assign sext_ln182_1_fu_830_p1 = $signed(empty_1223_fu_146);

assign sext_ln182_fu_811_p1 = $signed(empty_fu_138);

assign sext_ln185_4_fu_981_p1 = $signed(mlp_inst_lnq_lnb_load_reg_1337_pp0_iter10_reg);

assign start_out = real_start;

assign state_2_fu_429_p2 = (select_ln107_fu_405_p3 + 2'd1);

assign tmp_1_fu_999_p4 = {{grp_fu_1137_p3[37:35]}};

assign tmp_2_fu_1060_p4 = {{grp_fu_1148_p3[37:35]}};

assign tmp_68_fu_821_p4 = {{buffer_load_reg_1324_pp0_iter5_reg[27:14]}};

assign tmp_s_fu_647_p4 = {{buffer_load_reg_1324_pp0_iter4_reg[27:14]}};

assign trunc_ln116_1_fu_522_p4 = {{main_sm_dout[27:14]}};

assign trunc_ln116_fu_518_p1 = main_sm_dout[13:0];

assign trunc_ln142_1_fu_707_p1 = grp_fu_1128_p3;

assign trunc_ln155_fu_630_p1 = buffer_load_reg_1324_pp0_iter4_reg[13:0];

assign trunc_ln182_fu_808_p1 = buffer_load_reg_1324_pp0_iter5_reg[13:0];

assign trunc_ln187_1_fu_1075_p4 = {{grp_fu_1148_p3[35:33]}};

assign trunc_ln5_fu_1014_p4 = {{grp_fu_1137_p3[35:33]}};

assign trunc_ln7_fu_698_p1 = grp_fu_1119_p3;

assign xor_ln107_fu_412_p2 = (icmp_ln108_reg_1267 ^ 1'd1);

assign zext_ln109_fu_486_p1 = select_ln108_reg_1274;

assign zext_ln168_1_fu_879_p1 = cursor_1_fu_869_p4;

assign zext_ln168_fu_855_p1 = cursor_fu_845_p4;

assign zext_ln185_fu_958_p1 = mlp_inst_lnq_lnw_load_reg_1332_pp0_iter8_reg;

endmodule //MLP8_do_layernorm
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_do_layernorm_buffer_RAM_2P_LUTRAM_1R1W (
       
    address1, ce1,
    d1, we1, 
    q1, 
     
    reset, clk);

parameter DataWidth = 28;
parameter AddressWidth = 8;
parameter AddressRange = 192;
  
input[AddressWidth-1:0] address1;
input ce1;
input[DataWidth-1:0] d1;
input we1; 
output reg[DataWidth-1:0] q1; 

input reset;
input clk;

(* ram_style = "distributed"  *)reg [DataWidth-1:0] ram[0:AddressRange-1];


   





//read first
always @(posedge clk)  
begin 
    if (ce1) begin
        if (we1) 
            ram[address1] <= d1; 
        q1 <= ram[address1];

    end
end 
 
 

endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_do_layernorm_mlp_inst_lnq_lnb_ROM_AUTO_1R (
    address0, ce0, q0, 
    reset, clk);

parameter DataWidth = 37;
parameter AddressWidth = 8;
parameter AddressRange = 192;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_do_layernorm_mlp_inst_lnq_lnb_ROM_AUTO_1R.dat", rom0);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end


endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_do_layernorm_mlp_inst_lnq_lnw_ROM_AUTO_1R (
    address0, ce0, q0, 
    reset, clk);

parameter DataWidth = 16;
parameter AddressWidth = 8;
parameter AddressRange = 192;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_do_layernorm_mlp_inst_lnq_lnw_ROM_AUTO_1R.dat", rom0);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end


endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_do_layernorm_mlp_inst_lnq_rsqrt_table_ROM_AUTO_1R (
    address0, ce0, q0, 
    address1, ce1, q1, 
    reset, clk);

parameter DataWidth = 12;
parameter AddressWidth = 7;
parameter AddressRange = 128;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;
 
input[AddressWidth-1:0] address1;
input ce1;
output reg[DataWidth-1:0] q1;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_do_layernorm_mlp_inst_lnq_rsqrt_table_ROM_AUTO_1R.dat", rom0);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end
  
always @(posedge clk) 
begin 
    if (ce1) 
    begin
        q1 <= rom0[address1];
    end
end


endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_matmul (
        ge_sm_dout,
        ge_sm_empty_n,
        ge_sm_read,
        m2_sm_din,
        m2_sm_full_n,
        m2_sm_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [11:0] ge_sm_dout;
input   ge_sm_empty_n;
output   ge_sm_read;
output  [19:0] m2_sm_din;
input   m2_sm_full_n;
output   m2_sm_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    do_adapt_U0_ap_start;
wire    do_adapt_U0_ap_done;
wire    do_adapt_U0_ap_continue;
wire    do_adapt_U0_ap_idle;
wire    do_adapt_U0_ap_ready;
wire    do_adapt_U0_ge_sm_read;
wire   [143:0] do_adapt_U0_adpt_sm_din;
wire    do_adapt_U0_adpt_sm_write;
wire    do_adapt_U0_start_out;
wire    do_adapt_U0_start_write;
wire    matmul_step1_cache_window_U0_ap_start;
wire    matmul_step1_cache_window_U0_ap_done;
wire    matmul_step1_cache_window_U0_ap_continue;
wire    matmul_step1_cache_window_U0_ap_idle;
wire    matmul_step1_cache_window_U0_ap_ready;
wire    matmul_step1_cache_window_U0_adpt_sm_read;
wire   [143:0] matmul_step1_cache_window_U0_cache_window_sm_din;
wire    matmul_step1_cache_window_U0_cache_window_sm_write;
wire    matmul_step1_cache_window_U0_start_out;
wire    matmul_step1_cache_window_U0_start_write;
wire    matmul_step2_mac_U0_ap_start;
wire    matmul_step2_mac_U0_ap_done;
wire    matmul_step2_mac_U0_ap_continue;
wire    matmul_step2_mac_U0_ap_idle;
wire    matmul_step2_mac_U0_ap_ready;
wire   [2:0] matmul_step2_mac_U0_cache_window_sm_fifo_cap;
wire    matmul_step2_mac_U0_cache_window_sm_read;
wire   [239:0] matmul_step2_mac_U0_mac_sm_din;
wire    matmul_step2_mac_U0_mac_sm_write;
wire    matmul_step2_mac_U0_start_out;
wire    matmul_step2_mac_U0_start_write;
wire    do_adapt_5_U0_ap_start;
wire    do_adapt_5_U0_ap_done;
wire    do_adapt_5_U0_ap_continue;
wire    do_adapt_5_U0_ap_idle;
wire    do_adapt_5_U0_ap_ready;
wire    do_adapt_5_U0_mac_sm_read;
wire   [19:0] do_adapt_5_U0_m2_sm_din;
wire    do_adapt_5_U0_m2_sm_write;
wire    adpt_sm_full_n;
wire   [143:0] adpt_sm_dout;
wire   [5:0] adpt_sm_num_data_valid;
wire   [5:0] adpt_sm_fifo_cap;
wire    adpt_sm_empty_n;
wire    cache_window_sm_full_n;
wire   [143:0] cache_window_sm_dout;
wire   [3:0] cache_window_sm_num_data_valid;
wire   [3:0] cache_window_sm_fifo_cap;
wire    cache_window_sm_empty_n;
wire    mac_sm_full_n;
wire   [239:0] mac_sm_dout;
wire   [2:0] mac_sm_num_data_valid;
wire   [2:0] mac_sm_fifo_cap;
wire    mac_sm_empty_n;
wire   [0:0] start_for_matmul_step1_cache_window_U0_din;
wire    start_for_matmul_step1_cache_window_U0_full_n;
wire   [0:0] start_for_matmul_step1_cache_window_U0_dout;
wire    start_for_matmul_step1_cache_window_U0_empty_n;
wire   [0:0] start_for_matmul_step2_mac_U0_din;
wire    start_for_matmul_step2_mac_U0_full_n;
wire   [0:0] start_for_matmul_step2_mac_U0_dout;
wire    start_for_matmul_step2_mac_U0_empty_n;
wire   [0:0] start_for_do_adapt_5_U0_din;
wire    start_for_do_adapt_5_U0_full_n;
wire   [0:0] start_for_do_adapt_5_U0_dout;
wire    start_for_do_adapt_5_U0_empty_n;

MLP8_do_adapt do_adapt_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_U0_ap_start),
    .start_full_n(start_for_matmul_step1_cache_window_U0_full_n),
    .ap_done(do_adapt_U0_ap_done),
    .ap_continue(do_adapt_U0_ap_continue),
    .ap_idle(do_adapt_U0_ap_idle),
    .ap_ready(do_adapt_U0_ap_ready),
    .ge_sm_dout(ge_sm_dout),
    .ge_sm_num_data_valid(3'd0),
    .ge_sm_fifo_cap(3'd0),
    .ge_sm_empty_n(ge_sm_empty_n),
    .ge_sm_read(do_adapt_U0_ge_sm_read),
    .adpt_sm_din(do_adapt_U0_adpt_sm_din),
    .adpt_sm_num_data_valid(adpt_sm_num_data_valid),
    .adpt_sm_fifo_cap(adpt_sm_fifo_cap),
    .adpt_sm_full_n(adpt_sm_full_n),
    .adpt_sm_write(do_adapt_U0_adpt_sm_write),
    .start_out(do_adapt_U0_start_out),
    .start_write(do_adapt_U0_start_write)
);

MLP8_matmul_step1_cache_window matmul_step1_cache_window_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step1_cache_window_U0_ap_start),
    .start_full_n(start_for_matmul_step2_mac_U0_full_n),
    .ap_done(matmul_step1_cache_window_U0_ap_done),
    .ap_continue(matmul_step1_cache_window_U0_ap_continue),
    .ap_idle(matmul_step1_cache_window_U0_ap_idle),
    .ap_ready(matmul_step1_cache_window_U0_ap_ready),
    .adpt_sm_dout(adpt_sm_dout),
    .adpt_sm_num_data_valid(adpt_sm_num_data_valid),
    .adpt_sm_fifo_cap(adpt_sm_fifo_cap),
    .adpt_sm_empty_n(adpt_sm_empty_n),
    .adpt_sm_read(matmul_step1_cache_window_U0_adpt_sm_read),
    .cache_window_sm_din(matmul_step1_cache_window_U0_cache_window_sm_din),
    .cache_window_sm_num_data_valid(3'd0),
    .cache_window_sm_fifo_cap(3'd0),
    .cache_window_sm_full_n(cache_window_sm_full_n),
    .cache_window_sm_write(matmul_step1_cache_window_U0_cache_window_sm_write),
    .start_out(matmul_step1_cache_window_U0_start_out),
    .start_write(matmul_step1_cache_window_U0_start_write)
);

MLP8_matmul_step2_mac matmul_step2_mac_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step2_mac_U0_ap_start),
    .start_full_n(start_for_do_adapt_5_U0_full_n),
    .ap_done(matmul_step2_mac_U0_ap_done),
    .ap_continue(matmul_step2_mac_U0_ap_continue),
    .ap_idle(matmul_step2_mac_U0_ap_idle),
    .ap_ready(matmul_step2_mac_U0_ap_ready),
    .cache_window_sm_dout(cache_window_sm_dout),
    .cache_window_sm_num_data_valid(cache_window_sm_num_data_valid),
    .cache_window_sm_fifo_cap(matmul_step2_mac_U0_cache_window_sm_fifo_cap),
    .cache_window_sm_empty_n(cache_window_sm_empty_n),
    .cache_window_sm_read(matmul_step2_mac_U0_cache_window_sm_read),
    .mac_sm_din(matmul_step2_mac_U0_mac_sm_din),
    .mac_sm_num_data_valid(mac_sm_num_data_valid),
    .mac_sm_fifo_cap(mac_sm_fifo_cap),
    .mac_sm_full_n(mac_sm_full_n),
    .mac_sm_write(matmul_step2_mac_U0_mac_sm_write),
    .start_out(matmul_step2_mac_U0_start_out),
    .start_write(matmul_step2_mac_U0_start_write)
);

MLP8_do_adapt_5 do_adapt_5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_5_U0_ap_start),
    .ap_done(do_adapt_5_U0_ap_done),
    .ap_continue(do_adapt_5_U0_ap_continue),
    .ap_idle(do_adapt_5_U0_ap_idle),
    .ap_ready(do_adapt_5_U0_ap_ready),
    .mac_sm_dout(mac_sm_dout),
    .mac_sm_num_data_valid(mac_sm_num_data_valid),
    .mac_sm_fifo_cap(mac_sm_fifo_cap),
    .mac_sm_empty_n(mac_sm_empty_n),
    .mac_sm_read(do_adapt_5_U0_mac_sm_read),
    .m2_sm_din(do_adapt_5_U0_m2_sm_din),
    .m2_sm_num_data_valid(3'd0),
    .m2_sm_fifo_cap(3'd0),
    .m2_sm_full_n(m2_sm_full_n),
    .m2_sm_write(do_adapt_5_U0_m2_sm_write)
);

MLP8_fifo_w144_d32_A adpt_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_U0_adpt_sm_din),
    .if_full_n(adpt_sm_full_n),
    .if_write(do_adapt_U0_adpt_sm_write),
    .if_dout(adpt_sm_dout),
    .if_num_data_valid(adpt_sm_num_data_valid),
    .if_fifo_cap(adpt_sm_fifo_cap),
    .if_empty_n(adpt_sm_empty_n),
    .if_read(matmul_step1_cache_window_U0_adpt_sm_read)
);

MLP8_fifo_w144_d5_S cache_window_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step1_cache_window_U0_cache_window_sm_din),
    .if_full_n(cache_window_sm_full_n),
    .if_write(matmul_step1_cache_window_U0_cache_window_sm_write),
    .if_dout(cache_window_sm_dout),
    .if_num_data_valid(cache_window_sm_num_data_valid),
    .if_fifo_cap(cache_window_sm_fifo_cap),
    .if_empty_n(cache_window_sm_empty_n),
    .if_read(matmul_step2_mac_U0_cache_window_sm_read)
);

MLP8_fifo_w240_d2_S mac_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step2_mac_U0_mac_sm_din),
    .if_full_n(mac_sm_full_n),
    .if_write(matmul_step2_mac_U0_mac_sm_write),
    .if_dout(mac_sm_dout),
    .if_num_data_valid(mac_sm_num_data_valid),
    .if_fifo_cap(mac_sm_fifo_cap),
    .if_empty_n(mac_sm_empty_n),
    .if_read(do_adapt_5_U0_mac_sm_read)
);

MLP8_start_for_matmul_step1_cache_window_U0 start_for_matmul_step1_cache_window_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step1_cache_window_U0_din),
    .if_full_n(start_for_matmul_step1_cache_window_U0_full_n),
    .if_write(do_adapt_U0_start_write),
    .if_dout(start_for_matmul_step1_cache_window_U0_dout),
    .if_empty_n(start_for_matmul_step1_cache_window_U0_empty_n),
    .if_read(matmul_step1_cache_window_U0_ap_ready)
);

MLP8_start_for_matmul_step2_mac_U0 start_for_matmul_step2_mac_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step2_mac_U0_din),
    .if_full_n(start_for_matmul_step2_mac_U0_full_n),
    .if_write(matmul_step1_cache_window_U0_start_write),
    .if_dout(start_for_matmul_step2_mac_U0_dout),
    .if_empty_n(start_for_matmul_step2_mac_U0_empty_n),
    .if_read(matmul_step2_mac_U0_ap_ready)
);

MLP8_start_for_do_adapt_5_U0 start_for_do_adapt_5_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_5_U0_din),
    .if_full_n(start_for_do_adapt_5_U0_full_n),
    .if_write(matmul_step2_mac_U0_start_write),
    .if_dout(start_for_do_adapt_5_U0_dout),
    .if_empty_n(start_for_do_adapt_5_U0_empty_n),
    .if_read(do_adapt_5_U0_ap_ready)
);

assign ap_done = do_adapt_5_U0_ap_done;

assign ap_idle = (matmul_step2_mac_U0_ap_idle & matmul_step1_cache_window_U0_ap_idle & do_adapt_U0_ap_idle & do_adapt_5_U0_ap_idle);

assign ap_ready = do_adapt_U0_ap_ready;

assign do_adapt_5_U0_ap_continue = ap_continue;

assign do_adapt_5_U0_ap_start = start_for_do_adapt_5_U0_empty_n;

assign do_adapt_U0_ap_continue = 1'b1;

assign do_adapt_U0_ap_start = ap_start;

assign ge_sm_read = do_adapt_U0_ge_sm_read;

assign m2_sm_din = do_adapt_5_U0_m2_sm_din;

assign m2_sm_write = do_adapt_5_U0_m2_sm_write;

assign matmul_step1_cache_window_U0_ap_continue = 1'b1;

assign matmul_step1_cache_window_U0_ap_start = start_for_matmul_step1_cache_window_U0_empty_n;

assign matmul_step2_mac_U0_ap_continue = 1'b1;

assign matmul_step2_mac_U0_ap_start = start_for_matmul_step2_mac_U0_empty_n;

assign matmul_step2_mac_U0_cache_window_sm_fifo_cap = cache_window_sm_fifo_cap;

assign start_for_do_adapt_5_U0_din = 1'b1;

assign start_for_matmul_step1_cache_window_U0_din = 1'b1;

assign start_for_matmul_step2_mac_U0_din = 1'b1;

endmodule //MLP8_do_matmul
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_matmul_1 (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        ln_sm_dout,
        ln_sm_empty_n,
        ln_sm_read,
        m1_sm_din,
        m1_sm_full_n,
        m1_sm_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [5:0] ln_sm_dout;
input   ln_sm_empty_n;
output   ln_sm_read;
output  [39:0] m1_sm_din;
input   m1_sm_full_n;
output   m1_sm_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    do_adapt_1_U0_ap_start;
wire    do_adapt_1_U0_ap_done;
wire    do_adapt_1_U0_ap_continue;
wire    do_adapt_1_U0_ap_idle;
wire    do_adapt_1_U0_ap_ready;
wire    do_adapt_1_U0_ln_sm_read;
wire   [71:0] do_adapt_1_U0_adpt_sm_din;
wire    do_adapt_1_U0_adpt_sm_write;
wire    do_adapt_1_U0_start_out;
wire    do_adapt_1_U0_start_write;
wire    matmul_step1_cache_window_1_U0_ap_start;
wire    matmul_step1_cache_window_1_U0_ap_done;
wire    matmul_step1_cache_window_1_U0_ap_continue;
wire    matmul_step1_cache_window_1_U0_ap_idle;
wire    matmul_step1_cache_window_1_U0_ap_ready;
wire    matmul_step1_cache_window_1_U0_adpt_sm_read;
wire   [71:0] matmul_step1_cache_window_1_U0_cache_window_sm_din;
wire    matmul_step1_cache_window_1_U0_cache_window_sm_write;
wire    matmul_step1_cache_window_1_U0_start_out;
wire    matmul_step1_cache_window_1_U0_start_write;
wire    matmul_step2_mac_1_U0_ap_start;
wire    matmul_step2_mac_1_U0_ap_done;
wire    matmul_step2_mac_1_U0_ap_continue;
wire    matmul_step2_mac_1_U0_ap_idle;
wire    matmul_step2_mac_1_U0_ap_ready;
wire    matmul_step2_mac_1_U0_cache_window_sm_read;
wire   [479:0] matmul_step2_mac_1_U0_mac_sm_din;
wire    matmul_step2_mac_1_U0_mac_sm_write;
wire    matmul_step2_mac_1_U0_start_out;
wire    matmul_step2_mac_1_U0_start_write;
wire    do_adapt_4_U0_ap_start;
wire    do_adapt_4_U0_ap_done;
wire    do_adapt_4_U0_ap_continue;
wire    do_adapt_4_U0_ap_idle;
wire    do_adapt_4_U0_ap_ready;
wire    do_adapt_4_U0_mac_sm_read;
wire   [39:0] do_adapt_4_U0_m1_sm_din;
wire    do_adapt_4_U0_m1_sm_write;
wire    adpt_sm_full_n;
wire   [71:0] adpt_sm_dout;
wire   [5:0] adpt_sm_num_data_valid;
wire   [5:0] adpt_sm_fifo_cap;
wire    adpt_sm_empty_n;
wire    cache_window_sm_full_n;
wire   [71:0] cache_window_sm_dout;
wire   [2:0] cache_window_sm_num_data_valid;
wire   [2:0] cache_window_sm_fifo_cap;
wire    cache_window_sm_empty_n;
wire    mac_sm_full_n;
wire   [479:0] mac_sm_dout;
wire   [2:0] mac_sm_num_data_valid;
wire   [2:0] mac_sm_fifo_cap;
wire    mac_sm_empty_n;
wire    ap_sync_ready;
wire   [0:0] start_for_matmul_step1_cache_window_1_U0_din;
wire    start_for_matmul_step1_cache_window_1_U0_full_n;
wire   [0:0] start_for_matmul_step1_cache_window_1_U0_dout;
wire    start_for_matmul_step1_cache_window_1_U0_empty_n;
wire   [0:0] start_for_matmul_step2_mac_1_U0_din;
wire    start_for_matmul_step2_mac_1_U0_full_n;
wire   [0:0] start_for_matmul_step2_mac_1_U0_dout;
wire    start_for_matmul_step2_mac_1_U0_empty_n;
wire   [0:0] start_for_do_adapt_4_U0_din;
wire    start_for_do_adapt_4_U0_full_n;
wire   [0:0] start_for_do_adapt_4_U0_dout;
wire    start_for_do_adapt_4_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
end

MLP8_do_adapt_1 do_adapt_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_1_U0_ap_start),
    .start_full_n(start_for_matmul_step1_cache_window_1_U0_full_n),
    .ap_done(do_adapt_1_U0_ap_done),
    .ap_continue(do_adapt_1_U0_ap_continue),
    .ap_idle(do_adapt_1_U0_ap_idle),
    .ap_ready(do_adapt_1_U0_ap_ready),
    .ln_sm_dout(ln_sm_dout),
    .ln_sm_num_data_valid(3'd0),
    .ln_sm_fifo_cap(3'd0),
    .ln_sm_empty_n(ln_sm_empty_n),
    .ln_sm_read(do_adapt_1_U0_ln_sm_read),
    .adpt_sm_din(do_adapt_1_U0_adpt_sm_din),
    .adpt_sm_num_data_valid(adpt_sm_num_data_valid),
    .adpt_sm_fifo_cap(adpt_sm_fifo_cap),
    .adpt_sm_full_n(adpt_sm_full_n),
    .adpt_sm_write(do_adapt_1_U0_adpt_sm_write),
    .start_out(do_adapt_1_U0_start_out),
    .start_write(do_adapt_1_U0_start_write)
);

MLP8_matmul_step1_cache_window_1 matmul_step1_cache_window_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step1_cache_window_1_U0_ap_start),
    .start_full_n(start_for_matmul_step2_mac_1_U0_full_n),
    .ap_done(matmul_step1_cache_window_1_U0_ap_done),
    .ap_continue(matmul_step1_cache_window_1_U0_ap_continue),
    .ap_idle(matmul_step1_cache_window_1_U0_ap_idle),
    .ap_ready(matmul_step1_cache_window_1_U0_ap_ready),
    .adpt_sm_dout(adpt_sm_dout),
    .adpt_sm_num_data_valid(adpt_sm_num_data_valid),
    .adpt_sm_fifo_cap(adpt_sm_fifo_cap),
    .adpt_sm_empty_n(adpt_sm_empty_n),
    .adpt_sm_read(matmul_step1_cache_window_1_U0_adpt_sm_read),
    .cache_window_sm_din(matmul_step1_cache_window_1_U0_cache_window_sm_din),
    .cache_window_sm_num_data_valid(cache_window_sm_num_data_valid),
    .cache_window_sm_fifo_cap(cache_window_sm_fifo_cap),
    .cache_window_sm_full_n(cache_window_sm_full_n),
    .cache_window_sm_write(matmul_step1_cache_window_1_U0_cache_window_sm_write),
    .start_out(matmul_step1_cache_window_1_U0_start_out),
    .start_write(matmul_step1_cache_window_1_U0_start_write)
);

MLP8_matmul_step2_mac_1 matmul_step2_mac_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step2_mac_1_U0_ap_start),
    .start_full_n(start_for_do_adapt_4_U0_full_n),
    .ap_done(matmul_step2_mac_1_U0_ap_done),
    .ap_continue(matmul_step2_mac_1_U0_ap_continue),
    .ap_idle(matmul_step2_mac_1_U0_ap_idle),
    .ap_ready(matmul_step2_mac_1_U0_ap_ready),
    .cache_window_sm_dout(cache_window_sm_dout),
    .cache_window_sm_num_data_valid(cache_window_sm_num_data_valid),
    .cache_window_sm_fifo_cap(cache_window_sm_fifo_cap),
    .cache_window_sm_empty_n(cache_window_sm_empty_n),
    .cache_window_sm_read(matmul_step2_mac_1_U0_cache_window_sm_read),
    .mac_sm_din(matmul_step2_mac_1_U0_mac_sm_din),
    .mac_sm_num_data_valid(mac_sm_num_data_valid),
    .mac_sm_fifo_cap(mac_sm_fifo_cap),
    .mac_sm_full_n(mac_sm_full_n),
    .mac_sm_write(matmul_step2_mac_1_U0_mac_sm_write),
    .start_out(matmul_step2_mac_1_U0_start_out),
    .start_write(matmul_step2_mac_1_U0_start_write)
);

MLP8_do_adapt_4 do_adapt_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_4_U0_ap_start),
    .ap_done(do_adapt_4_U0_ap_done),
    .ap_continue(do_adapt_4_U0_ap_continue),
    .ap_idle(do_adapt_4_U0_ap_idle),
    .ap_ready(do_adapt_4_U0_ap_ready),
    .mac_sm_dout(mac_sm_dout),
    .mac_sm_num_data_valid(mac_sm_num_data_valid),
    .mac_sm_fifo_cap(mac_sm_fifo_cap),
    .mac_sm_empty_n(mac_sm_empty_n),
    .mac_sm_read(do_adapt_4_U0_mac_sm_read),
    .m1_sm_din(do_adapt_4_U0_m1_sm_din),
    .m1_sm_num_data_valid(3'd0),
    .m1_sm_fifo_cap(3'd0),
    .m1_sm_full_n(m1_sm_full_n),
    .m1_sm_write(do_adapt_4_U0_m1_sm_write)
);

MLP8_fifo_w72_d32_A adpt_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_1_U0_adpt_sm_din),
    .if_full_n(adpt_sm_full_n),
    .if_write(do_adapt_1_U0_adpt_sm_write),
    .if_dout(adpt_sm_dout),
    .if_num_data_valid(adpt_sm_num_data_valid),
    .if_fifo_cap(adpt_sm_fifo_cap),
    .if_empty_n(adpt_sm_empty_n),
    .if_read(matmul_step1_cache_window_1_U0_adpt_sm_read)
);

MLP8_fifo_w72_d2_S cache_window_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step1_cache_window_1_U0_cache_window_sm_din),
    .if_full_n(cache_window_sm_full_n),
    .if_write(matmul_step1_cache_window_1_U0_cache_window_sm_write),
    .if_dout(cache_window_sm_dout),
    .if_num_data_valid(cache_window_sm_num_data_valid),
    .if_fifo_cap(cache_window_sm_fifo_cap),
    .if_empty_n(cache_window_sm_empty_n),
    .if_read(matmul_step2_mac_1_U0_cache_window_sm_read)
);

MLP8_fifo_w480_d2_S mac_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step2_mac_1_U0_mac_sm_din),
    .if_full_n(mac_sm_full_n),
    .if_write(matmul_step2_mac_1_U0_mac_sm_write),
    .if_dout(mac_sm_dout),
    .if_num_data_valid(mac_sm_num_data_valid),
    .if_fifo_cap(mac_sm_fifo_cap),
    .if_empty_n(mac_sm_empty_n),
    .if_read(do_adapt_4_U0_mac_sm_read)
);

MLP8_start_for_matmul_step1_cache_window_1_U0 start_for_matmul_step1_cache_window_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step1_cache_window_1_U0_din),
    .if_full_n(start_for_matmul_step1_cache_window_1_U0_full_n),
    .if_write(do_adapt_1_U0_start_write),
    .if_dout(start_for_matmul_step1_cache_window_1_U0_dout),
    .if_empty_n(start_for_matmul_step1_cache_window_1_U0_empty_n),
    .if_read(matmul_step1_cache_window_1_U0_ap_ready)
);

MLP8_start_for_matmul_step2_mac_1_U0 start_for_matmul_step2_mac_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step2_mac_1_U0_din),
    .if_full_n(start_for_matmul_step2_mac_1_U0_full_n),
    .if_write(matmul_step1_cache_window_1_U0_start_write),
    .if_dout(start_for_matmul_step2_mac_1_U0_dout),
    .if_empty_n(start_for_matmul_step2_mac_1_U0_empty_n),
    .if_read(matmul_step2_mac_1_U0_ap_ready)
);

MLP8_start_for_do_adapt_4_U0 start_for_do_adapt_4_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_4_U0_din),
    .if_full_n(start_for_do_adapt_4_U0_full_n),
    .if_write(matmul_step2_mac_1_U0_start_write),
    .if_dout(start_for_do_adapt_4_U0_dout),
    .if_empty_n(start_for_do_adapt_4_U0_empty_n),
    .if_read(do_adapt_4_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ap_done = do_adapt_4_U0_ap_done;

assign ap_idle = (matmul_step2_mac_1_U0_ap_idle & matmul_step1_cache_window_1_U0_ap_idle & do_adapt_4_U0_ap_idle & do_adapt_1_U0_ap_idle);

assign ap_ready = do_adapt_1_U0_ap_ready;

assign ap_sync_ready = do_adapt_1_U0_ap_ready;

assign do_adapt_1_U0_ap_continue = 1'b1;

assign do_adapt_1_U0_ap_start = real_start;

assign do_adapt_4_U0_ap_continue = ap_continue;

assign do_adapt_4_U0_ap_start = start_for_do_adapt_4_U0_empty_n;

assign internal_ap_ready = ap_sync_ready;

assign ln_sm_read = do_adapt_1_U0_ln_sm_read;

assign m1_sm_din = do_adapt_4_U0_m1_sm_din;

assign m1_sm_write = do_adapt_4_U0_m1_sm_write;

assign matmul_step1_cache_window_1_U0_ap_continue = 1'b1;

assign matmul_step1_cache_window_1_U0_ap_start = start_for_matmul_step1_cache_window_1_U0_empty_n;

assign matmul_step2_mac_1_U0_ap_continue = 1'b1;

assign matmul_step2_mac_1_U0_ap_start = start_for_matmul_step2_mac_1_U0_empty_n;

assign start_for_do_adapt_4_U0_din = 1'b1;

assign start_for_matmul_step1_cache_window_1_U0_din = 1'b1;

assign start_for_matmul_step2_mac_1_U0_din = 1'b1;

assign start_out = real_start;

endmodule //MLP8_do_matmul_1
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_do_mlp (
        i_stream_TDATA,
        o_stream_TDATA,
        ap_clk,
        ap_rst,
        i_stream_TVALID,
        i_stream_TREADY,
        ap_start,
        o_stream_TVALID,
        o_stream_TREADY,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] i_stream_TDATA;
output  [31:0] o_stream_TDATA;
input   ap_clk;
input   ap_rst;
input   i_stream_TVALID;
output   i_stream_TREADY;
input   ap_start;
output   o_stream_TVALID;
input   o_stream_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    stream_copy_U0_ap_start;
wire    stream_copy_U0_start_full_n;
wire    stream_copy_U0_ap_done;
wire    stream_copy_U0_ap_continue;
wire    stream_copy_U0_ap_idle;
wire    stream_copy_U0_ap_ready;
wire   [27:0] stream_copy_U0_main_sm_din;
wire    stream_copy_U0_main_sm_write;
wire   [27:0] stream_copy_U0_resi_i_sm_din;
wire    stream_copy_U0_resi_i_sm_write;
wire    stream_copy_U0_start_out;
wire    stream_copy_U0_start_write;
wire    stream_copy_U0_i_stream_TREADY;
wire    do_adapt_3_U0_ap_start;
wire    do_adapt_3_U0_ap_done;
wire    do_adapt_3_U0_ap_continue;
wire    do_adapt_3_U0_ap_idle;
wire    do_adapt_3_U0_ap_ready;
wire    do_adapt_3_U0_resi_i_sm_read;
wire   [55:0] do_adapt_3_U0_resi_sm_din;
wire    do_adapt_3_U0_resi_sm_write;
wire    do_adapt_3_U0_start_out;
wire    do_adapt_3_U0_start_write;
wire    do_adapt_2_U0_ap_start;
wire    do_adapt_2_U0_ap_done;
wire    do_adapt_2_U0_ap_continue;
wire    do_adapt_2_U0_ap_idle;
wire    do_adapt_2_U0_ap_ready;
wire    do_adapt_2_U0_resi_sm_read;
wire   [27:0] do_adapt_2_U0_resi_o_sm_din;
wire    do_adapt_2_U0_resi_o_sm_write;
wire    do_adapt_2_U0_start_out;
wire    do_adapt_2_U0_start_write;
wire    do_layernorm_U0_ap_start;
wire    do_layernorm_U0_ap_done;
wire    do_layernorm_U0_ap_continue;
wire    do_layernorm_U0_ap_idle;
wire    do_layernorm_U0_ap_ready;
wire    do_layernorm_U0_main_sm_read;
wire   [5:0] do_layernorm_U0_ln_sm_din;
wire    do_layernorm_U0_ln_sm_write;
wire    do_layernorm_U0_start_out;
wire    do_layernorm_U0_start_write;
wire    do_matmul_1_U0_ap_start;
wire    do_matmul_1_U0_start_out;
wire    do_matmul_1_U0_start_write;
wire    do_matmul_1_U0_ln_sm_read;
wire   [39:0] do_matmul_1_U0_m1_sm_din;
wire    do_matmul_1_U0_m1_sm_write;
wire    do_matmul_1_U0_ap_done;
wire    do_matmul_1_U0_ap_ready;
wire    do_matmul_1_U0_ap_idle;
wire    do_matmul_1_U0_ap_continue;
wire    do_gelu_U0_ap_start;
wire    do_gelu_U0_ap_done;
wire    do_gelu_U0_ap_continue;
wire    do_gelu_U0_ap_idle;
wire    do_gelu_U0_ap_ready;
wire    do_gelu_U0_m1_sm_read;
wire   [11:0] do_gelu_U0_ge_sm_din;
wire    do_gelu_U0_ge_sm_write;
wire    do_gelu_U0_start_out;
wire    do_gelu_U0_start_write;
wire    do_matmul_U0_ge_sm_read;
wire   [19:0] do_matmul_U0_m2_sm_din;
wire    do_matmul_U0_m2_sm_write;
wire    do_matmul_U0_ap_start;
wire    do_matmul_U0_ap_done;
wire    do_matmul_U0_ap_ready;
wire    do_matmul_U0_ap_idle;
wire    do_matmul_U0_ap_continue;
wire    stream_merge_U0_ap_start;
wire    stream_merge_U0_ap_done;
wire    stream_merge_U0_ap_continue;
wire    stream_merge_U0_ap_idle;
wire    stream_merge_U0_ap_ready;
wire    stream_merge_U0_resi_o_sm_read;
wire    stream_merge_U0_m2_sm_read;
wire   [31:0] stream_merge_U0_o_stream_TDATA;
wire    stream_merge_U0_o_stream_TVALID;
wire    main_sm_full_n;
wire   [27:0] main_sm_dout;
wire   [2:0] main_sm_num_data_valid;
wire   [2:0] main_sm_fifo_cap;
wire    main_sm_empty_n;
wire    resi_i_sm_full_n;
wire   [27:0] resi_i_sm_dout;
wire   [2:0] resi_i_sm_num_data_valid;
wire   [2:0] resi_i_sm_fifo_cap;
wire    resi_i_sm_empty_n;
wire    resi_sm_full_n;
wire   [55:0] resi_sm_dout;
wire   [9:0] resi_sm_num_data_valid;
wire   [9:0] resi_sm_fifo_cap;
wire    resi_sm_empty_n;
wire    resi_o_sm_full_n;
wire   [27:0] resi_o_sm_dout;
wire   [2:0] resi_o_sm_num_data_valid;
wire   [2:0] resi_o_sm_fifo_cap;
wire    resi_o_sm_empty_n;
wire    ln_sm_full_n;
wire   [5:0] ln_sm_dout;
wire   [2:0] ln_sm_num_data_valid;
wire   [2:0] ln_sm_fifo_cap;
wire    ln_sm_empty_n;
wire    m1_sm_full_n;
wire   [39:0] m1_sm_dout;
wire   [2:0] m1_sm_num_data_valid;
wire   [2:0] m1_sm_fifo_cap;
wire    m1_sm_empty_n;
wire    ge_sm_full_n;
wire   [11:0] ge_sm_dout;
wire   [2:0] ge_sm_num_data_valid;
wire   [2:0] ge_sm_fifo_cap;
wire    ge_sm_empty_n;
wire    m2_sm_full_n;
wire   [19:0] m2_sm_dout;
wire   [2:0] m2_sm_num_data_valid;
wire   [2:0] m2_sm_fifo_cap;
wire    m2_sm_empty_n;
wire   [0:0] start_for_do_adapt_3_U0_din;
wire    start_for_do_adapt_3_U0_full_n;
wire   [0:0] start_for_do_adapt_3_U0_dout;
wire    start_for_do_adapt_3_U0_empty_n;
wire   [0:0] start_for_do_layernorm_U0_din;
wire    start_for_do_layernorm_U0_full_n;
wire   [0:0] start_for_do_layernorm_U0_dout;
wire    start_for_do_layernorm_U0_empty_n;
wire   [0:0] start_for_do_adapt_2_U0_din;
wire    start_for_do_adapt_2_U0_full_n;
wire   [0:0] start_for_do_adapt_2_U0_dout;
wire    start_for_do_adapt_2_U0_empty_n;
wire   [0:0] start_for_stream_merge_U0_din;
wire    start_for_stream_merge_U0_full_n;
wire   [0:0] start_for_stream_merge_U0_dout;
wire    start_for_stream_merge_U0_empty_n;
wire   [0:0] start_for_do_matmul_1_U0_din;
wire    start_for_do_matmul_1_U0_full_n;
wire   [0:0] start_for_do_matmul_1_U0_dout;
wire    start_for_do_matmul_1_U0_empty_n;
wire   [0:0] start_for_do_gelu_U0_din;
wire    start_for_do_gelu_U0_full_n;
wire   [0:0] start_for_do_gelu_U0_dout;
wire    start_for_do_gelu_U0_empty_n;
wire   [0:0] start_for_do_matmul_U0_din;
wire    start_for_do_matmul_U0_full_n;
wire   [0:0] start_for_do_matmul_U0_dout;
wire    start_for_do_matmul_U0_empty_n;

MLP8_stream_copy stream_copy_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_copy_U0_ap_start),
    .start_full_n(stream_copy_U0_start_full_n),
    .ap_done(stream_copy_U0_ap_done),
    .ap_continue(stream_copy_U0_ap_continue),
    .ap_idle(stream_copy_U0_ap_idle),
    .ap_ready(stream_copy_U0_ap_ready),
    .i_stream_TVALID(i_stream_TVALID),
    .main_sm_din(stream_copy_U0_main_sm_din),
    .main_sm_num_data_valid(main_sm_num_data_valid),
    .main_sm_fifo_cap(main_sm_fifo_cap),
    .main_sm_full_n(main_sm_full_n),
    .main_sm_write(stream_copy_U0_main_sm_write),
    .resi_i_sm_din(stream_copy_U0_resi_i_sm_din),
    .resi_i_sm_num_data_valid(resi_i_sm_num_data_valid),
    .resi_i_sm_fifo_cap(resi_i_sm_fifo_cap),
    .resi_i_sm_full_n(resi_i_sm_full_n),
    .resi_i_sm_write(stream_copy_U0_resi_i_sm_write),
    .start_out(stream_copy_U0_start_out),
    .start_write(stream_copy_U0_start_write),
    .i_stream_TDATA(i_stream_TDATA),
    .i_stream_TREADY(stream_copy_U0_i_stream_TREADY)
);

MLP8_do_adapt_3 do_adapt_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_3_U0_ap_start),
    .start_full_n(start_for_do_adapt_2_U0_full_n),
    .ap_done(do_adapt_3_U0_ap_done),
    .ap_continue(do_adapt_3_U0_ap_continue),
    .ap_idle(do_adapt_3_U0_ap_idle),
    .ap_ready(do_adapt_3_U0_ap_ready),
    .resi_i_sm_dout(resi_i_sm_dout),
    .resi_i_sm_num_data_valid(resi_i_sm_num_data_valid),
    .resi_i_sm_fifo_cap(resi_i_sm_fifo_cap),
    .resi_i_sm_empty_n(resi_i_sm_empty_n),
    .resi_i_sm_read(do_adapt_3_U0_resi_i_sm_read),
    .resi_sm_din(do_adapt_3_U0_resi_sm_din),
    .resi_sm_num_data_valid(resi_sm_num_data_valid),
    .resi_sm_fifo_cap(resi_sm_fifo_cap),
    .resi_sm_full_n(resi_sm_full_n),
    .resi_sm_write(do_adapt_3_U0_resi_sm_write),
    .start_out(do_adapt_3_U0_start_out),
    .start_write(do_adapt_3_U0_start_write)
);

MLP8_do_adapt_2 do_adapt_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_2_U0_ap_start),
    .start_full_n(start_for_stream_merge_U0_full_n),
    .ap_done(do_adapt_2_U0_ap_done),
    .ap_continue(do_adapt_2_U0_ap_continue),
    .ap_idle(do_adapt_2_U0_ap_idle),
    .ap_ready(do_adapt_2_U0_ap_ready),
    .resi_sm_dout(resi_sm_dout),
    .resi_sm_num_data_valid(resi_sm_num_data_valid),
    .resi_sm_fifo_cap(resi_sm_fifo_cap),
    .resi_sm_empty_n(resi_sm_empty_n),
    .resi_sm_read(do_adapt_2_U0_resi_sm_read),
    .resi_o_sm_din(do_adapt_2_U0_resi_o_sm_din),
    .resi_o_sm_num_data_valid(resi_o_sm_num_data_valid),
    .resi_o_sm_fifo_cap(resi_o_sm_fifo_cap),
    .resi_o_sm_full_n(resi_o_sm_full_n),
    .resi_o_sm_write(do_adapt_2_U0_resi_o_sm_write),
    .start_out(do_adapt_2_U0_start_out),
    .start_write(do_adapt_2_U0_start_write)
);

MLP8_do_layernorm do_layernorm_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_layernorm_U0_ap_start),
    .start_full_n(start_for_do_matmul_1_U0_full_n),
    .ap_done(do_layernorm_U0_ap_done),
    .ap_continue(do_layernorm_U0_ap_continue),
    .ap_idle(do_layernorm_U0_ap_idle),
    .ap_ready(do_layernorm_U0_ap_ready),
    .main_sm_dout(main_sm_dout),
    .main_sm_num_data_valid(main_sm_num_data_valid),
    .main_sm_fifo_cap(main_sm_fifo_cap),
    .main_sm_empty_n(main_sm_empty_n),
    .main_sm_read(do_layernorm_U0_main_sm_read),
    .ln_sm_din(do_layernorm_U0_ln_sm_din),
    .ln_sm_num_data_valid(ln_sm_num_data_valid),
    .ln_sm_fifo_cap(ln_sm_fifo_cap),
    .ln_sm_full_n(ln_sm_full_n),
    .ln_sm_write(do_layernorm_U0_ln_sm_write),
    .start_out(do_layernorm_U0_start_out),
    .start_write(do_layernorm_U0_start_write)
);

MLP8_do_matmul_1 do_matmul_1_U0(
    .ap_start(do_matmul_1_U0_ap_start),
    .start_full_n(start_for_do_gelu_U0_full_n),
    .start_out(do_matmul_1_U0_start_out),
    .start_write(do_matmul_1_U0_start_write),
    .ln_sm_dout(ln_sm_dout),
    .ln_sm_empty_n(ln_sm_empty_n),
    .ln_sm_read(do_matmul_1_U0_ln_sm_read),
    .m1_sm_din(do_matmul_1_U0_m1_sm_din),
    .m1_sm_full_n(m1_sm_full_n),
    .m1_sm_write(do_matmul_1_U0_m1_sm_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_done(do_matmul_1_U0_ap_done),
    .ap_ready(do_matmul_1_U0_ap_ready),
    .ap_idle(do_matmul_1_U0_ap_idle),
    .ap_continue(do_matmul_1_U0_ap_continue)
);

MLP8_do_gelu do_gelu_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_gelu_U0_ap_start),
    .start_full_n(start_for_do_matmul_U0_full_n),
    .ap_done(do_gelu_U0_ap_done),
    .ap_continue(do_gelu_U0_ap_continue),
    .ap_idle(do_gelu_U0_ap_idle),
    .ap_ready(do_gelu_U0_ap_ready),
    .m1_sm_dout(m1_sm_dout),
    .m1_sm_num_data_valid(m1_sm_num_data_valid),
    .m1_sm_fifo_cap(m1_sm_fifo_cap),
    .m1_sm_empty_n(m1_sm_empty_n),
    .m1_sm_read(do_gelu_U0_m1_sm_read),
    .ge_sm_din(do_gelu_U0_ge_sm_din),
    .ge_sm_num_data_valid(ge_sm_num_data_valid),
    .ge_sm_fifo_cap(ge_sm_fifo_cap),
    .ge_sm_full_n(ge_sm_full_n),
    .ge_sm_write(do_gelu_U0_ge_sm_write),
    .start_out(do_gelu_U0_start_out),
    .start_write(do_gelu_U0_start_write)
);

MLP8_do_matmul do_matmul_U0(
    .ge_sm_dout(ge_sm_dout),
    .ge_sm_empty_n(ge_sm_empty_n),
    .ge_sm_read(do_matmul_U0_ge_sm_read),
    .m2_sm_din(do_matmul_U0_m2_sm_din),
    .m2_sm_full_n(m2_sm_full_n),
    .m2_sm_write(do_matmul_U0_m2_sm_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_matmul_U0_ap_start),
    .ap_done(do_matmul_U0_ap_done),
    .ap_ready(do_matmul_U0_ap_ready),
    .ap_idle(do_matmul_U0_ap_idle),
    .ap_continue(do_matmul_U0_ap_continue)
);

MLP8_stream_merge stream_merge_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_merge_U0_ap_start),
    .ap_done(stream_merge_U0_ap_done),
    .ap_continue(stream_merge_U0_ap_continue),
    .ap_idle(stream_merge_U0_ap_idle),
    .ap_ready(stream_merge_U0_ap_ready),
    .resi_o_sm_dout(resi_o_sm_dout),
    .resi_o_sm_num_data_valid(resi_o_sm_num_data_valid),
    .resi_o_sm_fifo_cap(resi_o_sm_fifo_cap),
    .resi_o_sm_empty_n(resi_o_sm_empty_n),
    .resi_o_sm_read(stream_merge_U0_resi_o_sm_read),
    .m2_sm_dout(m2_sm_dout),
    .m2_sm_num_data_valid(m2_sm_num_data_valid),
    .m2_sm_fifo_cap(m2_sm_fifo_cap),
    .m2_sm_empty_n(m2_sm_empty_n),
    .m2_sm_read(stream_merge_U0_m2_sm_read),
    .o_stream_TREADY(o_stream_TREADY),
    .o_stream_TDATA(stream_merge_U0_o_stream_TDATA),
    .o_stream_TVALID(stream_merge_U0_o_stream_TVALID)
);

MLP8_fifo_w28_d2_S main_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_copy_U0_main_sm_din),
    .if_full_n(main_sm_full_n),
    .if_write(stream_copy_U0_main_sm_write),
    .if_dout(main_sm_dout),
    .if_num_data_valid(main_sm_num_data_valid),
    .if_fifo_cap(main_sm_fifo_cap),
    .if_empty_n(main_sm_empty_n),
    .if_read(do_layernorm_U0_main_sm_read)
);

MLP8_fifo_w28_d2_S resi_i_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_copy_U0_resi_i_sm_din),
    .if_full_n(resi_i_sm_full_n),
    .if_write(stream_copy_U0_resi_i_sm_write),
    .if_dout(resi_i_sm_dout),
    .if_num_data_valid(resi_i_sm_num_data_valid),
    .if_fifo_cap(resi_i_sm_fifo_cap),
    .if_empty_n(resi_i_sm_empty_n),
    .if_read(do_adapt_3_U0_resi_i_sm_read)
);

MLP8_fifo_w56_d512_A resi_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_3_U0_resi_sm_din),
    .if_full_n(resi_sm_full_n),
    .if_write(do_adapt_3_U0_resi_sm_write),
    .if_dout(resi_sm_dout),
    .if_num_data_valid(resi_sm_num_data_valid),
    .if_fifo_cap(resi_sm_fifo_cap),
    .if_empty_n(resi_sm_empty_n),
    .if_read(do_adapt_2_U0_resi_sm_read)
);

MLP8_fifo_w28_d2_S resi_o_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_2_U0_resi_o_sm_din),
    .if_full_n(resi_o_sm_full_n),
    .if_write(do_adapt_2_U0_resi_o_sm_write),
    .if_dout(resi_o_sm_dout),
    .if_num_data_valid(resi_o_sm_num_data_valid),
    .if_fifo_cap(resi_o_sm_fifo_cap),
    .if_empty_n(resi_o_sm_empty_n),
    .if_read(stream_merge_U0_resi_o_sm_read)
);

MLP8_fifo_w6_d2_S ln_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_layernorm_U0_ln_sm_din),
    .if_full_n(ln_sm_full_n),
    .if_write(do_layernorm_U0_ln_sm_write),
    .if_dout(ln_sm_dout),
    .if_num_data_valid(ln_sm_num_data_valid),
    .if_fifo_cap(ln_sm_fifo_cap),
    .if_empty_n(ln_sm_empty_n),
    .if_read(do_matmul_1_U0_ln_sm_read)
);

MLP8_fifo_w40_d2_S m1_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_matmul_1_U0_m1_sm_din),
    .if_full_n(m1_sm_full_n),
    .if_write(do_matmul_1_U0_m1_sm_write),
    .if_dout(m1_sm_dout),
    .if_num_data_valid(m1_sm_num_data_valid),
    .if_fifo_cap(m1_sm_fifo_cap),
    .if_empty_n(m1_sm_empty_n),
    .if_read(do_gelu_U0_m1_sm_read)
);

MLP8_fifo_w12_d2_S ge_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_gelu_U0_ge_sm_din),
    .if_full_n(ge_sm_full_n),
    .if_write(do_gelu_U0_ge_sm_write),
    .if_dout(ge_sm_dout),
    .if_num_data_valid(ge_sm_num_data_valid),
    .if_fifo_cap(ge_sm_fifo_cap),
    .if_empty_n(ge_sm_empty_n),
    .if_read(do_matmul_U0_ge_sm_read)
);

MLP8_fifo_w20_d2_S m2_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_matmul_U0_m2_sm_din),
    .if_full_n(m2_sm_full_n),
    .if_write(do_matmul_U0_m2_sm_write),
    .if_dout(m2_sm_dout),
    .if_num_data_valid(m2_sm_num_data_valid),
    .if_fifo_cap(m2_sm_fifo_cap),
    .if_empty_n(m2_sm_empty_n),
    .if_read(stream_merge_U0_m2_sm_read)
);

MLP8_start_for_do_adapt_3_U0 start_for_do_adapt_3_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_3_U0_din),
    .if_full_n(start_for_do_adapt_3_U0_full_n),
    .if_write(stream_copy_U0_start_write),
    .if_dout(start_for_do_adapt_3_U0_dout),
    .if_empty_n(start_for_do_adapt_3_U0_empty_n),
    .if_read(do_adapt_3_U0_ap_ready)
);

MLP8_start_for_do_layernorm_U0 start_for_do_layernorm_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_layernorm_U0_din),
    .if_full_n(start_for_do_layernorm_U0_full_n),
    .if_write(stream_copy_U0_start_write),
    .if_dout(start_for_do_layernorm_U0_dout),
    .if_empty_n(start_for_do_layernorm_U0_empty_n),
    .if_read(do_layernorm_U0_ap_ready)
);

MLP8_start_for_do_adapt_2_U0 start_for_do_adapt_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_2_U0_din),
    .if_full_n(start_for_do_adapt_2_U0_full_n),
    .if_write(do_adapt_3_U0_start_write),
    .if_dout(start_for_do_adapt_2_U0_dout),
    .if_empty_n(start_for_do_adapt_2_U0_empty_n),
    .if_read(do_adapt_2_U0_ap_ready)
);

MLP8_start_for_stream_merge_U0 start_for_stream_merge_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_stream_merge_U0_din),
    .if_full_n(start_for_stream_merge_U0_full_n),
    .if_write(do_adapt_2_U0_start_write),
    .if_dout(start_for_stream_merge_U0_dout),
    .if_empty_n(start_for_stream_merge_U0_empty_n),
    .if_read(stream_merge_U0_ap_ready)
);

MLP8_start_for_do_matmul_1_U0 start_for_do_matmul_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_matmul_1_U0_din),
    .if_full_n(start_for_do_matmul_1_U0_full_n),
    .if_write(do_layernorm_U0_start_write),
    .if_dout(start_for_do_matmul_1_U0_dout),
    .if_empty_n(start_for_do_matmul_1_U0_empty_n),
    .if_read(do_matmul_1_U0_ap_ready)
);

MLP8_start_for_do_gelu_U0 start_for_do_gelu_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_gelu_U0_din),
    .if_full_n(start_for_do_gelu_U0_full_n),
    .if_write(do_matmul_1_U0_start_write),
    .if_dout(start_for_do_gelu_U0_dout),
    .if_empty_n(start_for_do_gelu_U0_empty_n),
    .if_read(do_gelu_U0_ap_ready)
);

MLP8_start_for_do_matmul_U0 start_for_do_matmul_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_matmul_U0_din),
    .if_full_n(start_for_do_matmul_U0_full_n),
    .if_write(do_gelu_U0_start_write),
    .if_dout(start_for_do_matmul_U0_dout),
    .if_empty_n(start_for_do_matmul_U0_empty_n),
    .if_read(do_matmul_U0_ap_ready)
);

assign ap_done = stream_merge_U0_ap_done;

assign ap_idle = (stream_merge_U0_ap_idle & stream_copy_U0_ap_idle & do_matmul_U0_ap_idle & do_matmul_1_U0_ap_idle & do_layernorm_U0_ap_idle & do_gelu_U0_ap_idle & do_adapt_3_U0_ap_idle & do_adapt_2_U0_ap_idle);

assign ap_ready = stream_copy_U0_ap_ready;

assign do_adapt_2_U0_ap_continue = 1'b1;

assign do_adapt_2_U0_ap_start = start_for_do_adapt_2_U0_empty_n;

assign do_adapt_3_U0_ap_continue = 1'b1;

assign do_adapt_3_U0_ap_start = start_for_do_adapt_3_U0_empty_n;

assign do_gelu_U0_ap_continue = 1'b1;

assign do_gelu_U0_ap_start = start_for_do_gelu_U0_empty_n;

assign do_layernorm_U0_ap_continue = 1'b1;

assign do_layernorm_U0_ap_start = start_for_do_layernorm_U0_empty_n;

assign do_matmul_1_U0_ap_continue = 1'b1;

assign do_matmul_1_U0_ap_start = start_for_do_matmul_1_U0_empty_n;

assign do_matmul_U0_ap_continue = 1'b1;

assign do_matmul_U0_ap_start = start_for_do_matmul_U0_empty_n;

assign i_stream_TREADY = stream_copy_U0_i_stream_TREADY;

assign o_stream_TDATA = stream_merge_U0_o_stream_TDATA;

assign o_stream_TVALID = stream_merge_U0_o_stream_TVALID;

assign start_for_do_adapt_2_U0_din = 1'b1;

assign start_for_do_adapt_3_U0_din = 1'b1;

assign start_for_do_gelu_U0_din = 1'b1;

assign start_for_do_layernorm_U0_din = 1'b1;

assign start_for_do_matmul_1_U0_din = 1'b1;

assign start_for_do_matmul_U0_din = 1'b1;

assign start_for_stream_merge_U0_din = 1'b1;

assign stream_copy_U0_ap_continue = 1'b1;

assign stream_copy_U0_ap_start = ap_start;

assign stream_copy_U0_start_full_n = (start_for_do_layernorm_U0_full_n & start_for_do_adapt_3_U0_full_n);

assign stream_merge_U0_ap_continue = ap_continue;

assign stream_merge_U0_ap_start = start_for_stream_merge_U0_empty_n;

endmodule //MLP8_do_mlp
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w12_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 12,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w12_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w12_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w12_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 12,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 2 

module MLP8_fifo_w144_d32_A
#(parameter
    MEM_STYLE    = "auto",
    DATA_WIDTH   = 144,
    ADDR_WIDTH   = 5,
    DEPTH        = 31)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    reg  [ADDR_WIDTH-1:0] waddr;
    reg  [ADDR_WIDTH-1:0] raddr;
    wire [ADDR_WIDTH-1:0] wnext;
    wire [ADDR_WIDTH-1:0] rnext;
    wire                  push;
    wire                  pop;
    reg  [ADDR_WIDTH:0]   mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1;
    // has num_data_valid? 
    wire                  num_extra_words;//yes
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 

    wire                  pop_dout;
    reg  [ADDR_WIDTH:0]   num_data_cnt;
    reg                   dout_vld = 1'b0;

//------------------------Instantiation------------------
    MLP8_fifo_w144_d32_A_ram 
    #(  .MEM_STYLE  (MEM_STYLE),
        .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH)
    ) U_MLP8_fifo_w144_d32_A_ram (
        .clk        (clk),
        .reset      (reset),
        .we         (push),
        .waddr      (waddr),
        .din        (if_din),
        .raddr      (raddr),
        .rden       (pop),
        .dout       (if_dout)
    );

//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap = DEPTH + 1;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n;
    assign if_empty_n = dout_vld;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & (pop_dout | ~dout_vld);
    assign pop_dout   = dout_vld & if_read_ce & if_read;
    
    assign wnext      = !push                ? waddr :
                        (waddr == DEPTH - 1) ? 1'b0  :
                        waddr + 1'b1;
    assign rnext      = !pop                 ? raddr :
                        (raddr == DEPTH - 1) ? 1'b0  :
                        raddr + 1'b1;

    // waddr
    always @(posedge clk) begin
        if (reset)
            waddr <= {ADDR_WIDTH{1'b0}};
        else
            waddr <= wnext;
    end

    // raddr
    always @(posedge clk) begin
        if (reset)
            raddr <= {ADDR_WIDTH{1'b0}};
        else
            raddr <= rnext;
    end

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b0}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n 
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop_dout) && (num_data_cnt == DEPTH))
            full_n <= 1'b0;
        else if (~push & pop_dout)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 1))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 

    // prog_empty_n 

    // num_data_cnt
    always @(posedge clk) begin
        if (reset)
            num_data_cnt <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop_dout)
            num_data_cnt <= num_data_cnt + 1'b1;
        else if (~push & pop_dout)
            num_data_cnt <= num_data_cnt - 1'b1;
    end

    // num_data_valid 
    assign num_extra_words = (dout_vld & ~pop_dout) ? 1 : 0;
                             
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if (empty_n | (dout_vld & ~pop_dout))
            num_data_valid <= push + mOutPtr + num_extra_words;
        else
            num_data_valid <= num_extra_words;
    end // 

    // dout_vld
    always @(posedge clk) begin
        if (reset)
            dout_vld <= 1'b0;
        else if (pop)
            dout_vld <= 1'b1;
        else if (pop_dout)
            dout_vld <= 1'b0;
    end

endmodule


module MLP8_fifo_w144_d32_A_ram
#(parameter
    MEM_STYLE   = "auto",
    DATA_WIDTH  = 144,
    ADDR_WIDTH  = 5,
    DEPTH       = 31)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] waddr,
    input  wire [DATA_WIDTH-1:0] din,
    input  wire [ADDR_WIDTH-1:0] raddr,
    input  wire                  rden,
    output wire [DATA_WIDTH-1:0] dout
);

    (* ram_style = MEM_STYLE *)
    reg  [DATA_WIDTH-1:0] mem[0:DEPTH-1];
    reg  [DATA_WIDTH-1:0] mem_reg;

    always @(posedge clk) begin
        if (we)
            mem[waddr] <= din;
    end

    always @(posedge clk) begin
        if (reset)
            mem_reg <= 0;
        else if (rden)
            mem_reg <= mem[raddr];
    end
    
    assign dout = mem_reg;

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w144_d5_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 144,
    ADDR_WIDTH   = 3,
    DEPTH        = 5)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w144_d5_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w144_d5_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w144_d5_S_ShiftReg
#(parameter
    DATA_WIDTH  = 144,
    ADDR_WIDTH  = 3,
    DEPTH       = 5)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w20_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 20,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w20_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w20_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w20_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 20,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w240_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 240,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w240_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w240_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w240_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 240,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w28_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 28,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w28_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w28_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w28_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 28,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w40_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 40,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w40_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w40_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w40_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 40,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w480_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 480,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w480_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w480_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w480_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 480,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 2 

module MLP8_fifo_w56_d512_A
#(parameter
    MEM_STYLE    = "auto",
    DATA_WIDTH   = 56,
    ADDR_WIDTH   = 9,
    DEPTH        = 511)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    reg  [ADDR_WIDTH-1:0] waddr;
    reg  [ADDR_WIDTH-1:0] raddr;
    wire [ADDR_WIDTH-1:0] wnext;
    wire [ADDR_WIDTH-1:0] rnext;
    wire                  push;
    wire                  pop;
    reg  [ADDR_WIDTH:0]   mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1;
    // has num_data_valid? 
    wire                  num_extra_words;//yes
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 

    wire                  pop_dout;
    reg  [ADDR_WIDTH:0]   num_data_cnt;
    reg                   dout_vld = 1'b0;

//------------------------Instantiation------------------
    MLP8_fifo_w56_d512_A_ram 
    #(  .MEM_STYLE  (MEM_STYLE),
        .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH)
    ) U_MLP8_fifo_w56_d512_A_ram (
        .clk        (clk),
        .reset      (reset),
        .we         (push),
        .waddr      (waddr),
        .din        (if_din),
        .raddr      (raddr),
        .rden       (pop),
        .dout       (if_dout)
    );

//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap = DEPTH + 1;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n;
    assign if_empty_n = dout_vld;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & (pop_dout | ~dout_vld);
    assign pop_dout   = dout_vld & if_read_ce & if_read;
    
    assign wnext      = !push                ? waddr :
                        (waddr == DEPTH - 1) ? 1'b0  :
                        waddr + 1'b1;
    assign rnext      = !pop                 ? raddr :
                        (raddr == DEPTH - 1) ? 1'b0  :
                        raddr + 1'b1;

    // waddr
    always @(posedge clk) begin
        if (reset)
            waddr <= {ADDR_WIDTH{1'b0}};
        else
            waddr <= wnext;
    end

    // raddr
    always @(posedge clk) begin
        if (reset)
            raddr <= {ADDR_WIDTH{1'b0}};
        else
            raddr <= rnext;
    end

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b0}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n 
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop_dout) && (num_data_cnt == DEPTH))
            full_n <= 1'b0;
        else if (~push & pop_dout)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 1))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 

    // prog_empty_n 

    // num_data_cnt
    always @(posedge clk) begin
        if (reset)
            num_data_cnt <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop_dout)
            num_data_cnt <= num_data_cnt + 1'b1;
        else if (~push & pop_dout)
            num_data_cnt <= num_data_cnt - 1'b1;
    end

    // num_data_valid 
    assign num_extra_words = (dout_vld & ~pop_dout) ? 1 : 0;
                             
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if (empty_n | (dout_vld & ~pop_dout))
            num_data_valid <= push + mOutPtr + num_extra_words;
        else
            num_data_valid <= num_extra_words;
    end // 

    // dout_vld
    always @(posedge clk) begin
        if (reset)
            dout_vld <= 1'b0;
        else if (pop)
            dout_vld <= 1'b1;
        else if (pop_dout)
            dout_vld <= 1'b0;
    end

endmodule


module MLP8_fifo_w56_d512_A_ram
#(parameter
    MEM_STYLE   = "auto",
    DATA_WIDTH  = 56,
    ADDR_WIDTH  = 9,
    DEPTH       = 511)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] waddr,
    input  wire [DATA_WIDTH-1:0] din,
    input  wire [ADDR_WIDTH-1:0] raddr,
    input  wire                  rden,
    output wire [DATA_WIDTH-1:0] dout
);

    (* ram_style = MEM_STYLE *)
    reg  [DATA_WIDTH-1:0] mem[0:DEPTH-1];
    reg  [DATA_WIDTH-1:0] mem_reg;

    always @(posedge clk) begin
        if (we)
            mem[waddr] <= din;
    end

    always @(posedge clk) begin
        if (reset)
            mem_reg <= 0;
        else if (rden)
            mem_reg <= mem[raddr];
    end
    
    assign dout = mem_reg;

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w6_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 6,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w6_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w6_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w6_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 6,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_fifo_w72_d2_S
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 72,
    ADDR_WIDTH   = 2,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid? 
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 
//------------------------Instantiation------------------
    MLP8_fifo_w72_d2_S_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_fifo_w72_d2_S_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap       = DEPTH;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop)
            num_data_valid <= num_data_valid + 1;
        else if (~push & pop)
            num_data_valid <= num_data_valid - 1;
    end // 

endmodule  


module MLP8_fifo_w72_d2_S_ShiftReg
#(parameter
    DATA_WIDTH  = 72,
    ADDR_WIDTH  = 2,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 2 

module MLP8_fifo_w72_d32_A
#(parameter
    MEM_STYLE    = "auto",
    DATA_WIDTH   = 72,
    ADDR_WIDTH   = 5,
    DEPTH        = 31)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 
    output wire [ADDR_WIDTH:0]   if_num_data_valid, // for FRP
    output wire [ADDR_WIDTH:0]   if_fifo_cap,       // for FRP

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    reg  [ADDR_WIDTH-1:0] waddr;
    reg  [ADDR_WIDTH-1:0] raddr;
    wire [ADDR_WIDTH-1:0] wnext;
    wire [ADDR_WIDTH-1:0] rnext;
    wire                  push;
    wire                  pop;
    reg  [ADDR_WIDTH:0]   mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1;
    // has num_data_valid? 
    wire                  num_extra_words;//yes
    reg  [ADDR_WIDTH:0]   num_data_valid; //yes 

    wire                  pop_dout;
    reg  [ADDR_WIDTH:0]   num_data_cnt;
    reg                   dout_vld = 1'b0;

//------------------------Instantiation------------------
    MLP8_fifo_w72_d32_A_ram 
    #(  .MEM_STYLE  (MEM_STYLE),
        .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH)
    ) U_MLP8_fifo_w72_d32_A_ram (
        .clk        (clk),
        .reset      (reset),
        .we         (push),
        .waddr      (waddr),
        .din        (if_din),
        .raddr      (raddr),
        .rden       (pop),
        .dout       (if_dout)
    );

//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 
    assign if_num_data_valid = num_data_valid;
    assign if_fifo_cap = DEPTH + 1;

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n;
    assign if_empty_n = dout_vld;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & (pop_dout | ~dout_vld);
    assign pop_dout   = dout_vld & if_read_ce & if_read;
    
    assign wnext      = !push                ? waddr :
                        (waddr == DEPTH - 1) ? 1'b0  :
                        waddr + 1'b1;
    assign rnext      = !pop                 ? raddr :
                        (raddr == DEPTH - 1) ? 1'b0  :
                        raddr + 1'b1;

    // waddr
    always @(posedge clk) begin
        if (reset)
            waddr <= {ADDR_WIDTH{1'b0}};
        else
            waddr <= wnext;
    end

    // raddr
    always @(posedge clk) begin
        if (reset)
            raddr <= {ADDR_WIDTH{1'b0}};
        else
            raddr <= rnext;
    end

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b0}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n 
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop_dout) && (num_data_cnt == DEPTH))
            full_n <= 1'b0;
        else if (~push & pop_dout)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 1))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 

    // prog_empty_n 

    // num_data_cnt
    always @(posedge clk) begin
        if (reset)
            num_data_cnt <= {ADDR_WIDTH+1{1'b0}};
        else if ( push & ~pop_dout)
            num_data_cnt <= num_data_cnt + 1'b1;
        else if (~push & pop_dout)
            num_data_cnt <= num_data_cnt - 1'b1;
    end

    // num_data_valid 
    assign num_extra_words = (dout_vld & ~pop_dout) ? 1 : 0;
                             
    always @(posedge clk) begin
        if (reset)
            num_data_valid <= {ADDR_WIDTH+1{1'b0}};
        else if (empty_n | (dout_vld & ~pop_dout))
            num_data_valid <= push + mOutPtr + num_extra_words;
        else
            num_data_valid <= num_extra_words;
    end // 

    // dout_vld
    always @(posedge clk) begin
        if (reset)
            dout_vld <= 1'b0;
        else if (pop)
            dout_vld <= 1'b1;
        else if (pop_dout)
            dout_vld <= 1'b0;
    end

endmodule


module MLP8_fifo_w72_d32_A_ram
#(parameter
    MEM_STYLE   = "auto",
    DATA_WIDTH  = 72,
    ADDR_WIDTH  = 5,
    DEPTH       = 31)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] waddr,
    input  wire [DATA_WIDTH-1:0] din,
    input  wire [ADDR_WIDTH-1:0] raddr,
    input  wire                  rden,
    output wire [DATA_WIDTH-1:0] dout
);

    (* ram_style = MEM_STYLE *)
    reg  [DATA_WIDTH-1:0] mem[0:DEPTH-1];
    reg  [DATA_WIDTH-1:0] mem_reg;

    always @(posedge clk) begin
        if (we)
            mem[waddr] <= din;
    end

    always @(posedge clk) begin
        if (reset)
            mem_reg <= 0;
        else if (rden)
            mem_reg <= mem[raddr];
    end
    
    assign dout = mem_reg;

endmodule// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
// Tool Version Limit: 2023.10
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps

module MLP8_flow_control_loop_pipe(
        ap_clk,
        ap_rst,
        ap_start,
        ap_ready,
        ap_done,
        ap_continue,
        ap_start_int,
        ap_ready_int,
        ap_done_int,
        ap_continue_int,
        ap_loop_init,
        ap_loop_exit_ready,
        ap_loop_exit_done
);

input   ap_clk;
input   ap_rst;

//Block level handshake with outside loop
input   ap_start;
output  ap_ready;
output  ap_done;
input   ap_continue;

//Block level handshake with loop body
output  ap_start_int;
input   ap_ready_int;
input   ap_done_int;
output  ap_continue_int;

//Init live in variables
output   ap_loop_init;
reg ap_loop_init;

//Exit signal from loop body
input   ap_loop_exit_ready;
input   ap_loop_exit_done;

// power-on initialization
initial begin
//#0 ap_loop_init = 1'b1;
end

assign ap_start_int = ap_start;

assign ap_continue_int = ap_continue;

assign ap_done = ap_loop_exit_done;

assign ap_ready = ap_loop_exit_ready;

//ap_loop_init is valid for the first II
//of the first loop run so as to enable
//the init block ops which are pushed into
//the first state of the pipeline region
always @ (posedge ap_clk)
begin
    if (ap_rst == 1'b1) begin
        ap_loop_init <= 1'b1;
    end else if(ap_loop_exit_ready == 1'b1) begin
        ap_loop_init <= 1'b1;
    end else if(ap_ready_int == 1'b1) begin
        ap_loop_init <= 1'b0;
    end
end

endmodule
        
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
// Tool Version Limit: 2023.10
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps

(* keep_hierarchy = "yes" *)
module MLP8_frp_fifoout
  (
   ap_clk,
   ap_rst,
   data_in,
   data_in_vld,
   data_in_last,

   data_out,
   data_out_vld,

   ap_start,
   data_out_read,

   valid,
   num_valid_datasets,
   pf_ready,
   pf_done,
   pf_all_done,
   pf_continue
);
   parameter BlockingType = 1;  // 'frp_fifoout' type parameter: '1' for blocking port(AXIS/FIFO/AP_HS)
                                //                               '0' for non-blocking port(Memory/AP_VLD...)
   parameter PipeLatency = 4;
   parameter PipelineII  = 1;
   parameter DataWidth   = 32;
   parameter NumWrites   = 1;
   parameter CeilLog2Stages  = 2;
   parameter CeilLog2FDepth  = 2;
   parameter PfAllDoneEnable = 2;
   
   localparam NUM_STAGES = (PipeLatency+PipelineII-1) / PipelineII; // Ceil(Latency/II)
   
   function isDefined;
      input val;
      begin
         isDefined = (val === 1'b0 || val === 1'b1);
      end
   endfunction

   input ap_clk;
   input ap_rst;
   input [DataWidth-1:0] data_in;
   input ap_start;
   input [PipeLatency-1:0] valid;
   input               data_in_vld, data_in_last;
   input [CeilLog2Stages:0] num_valid_datasets;
   input data_out_read;
   input pf_all_done;
   input pf_continue;

   output reg [DataWidth-1:0] data_out;
   output reg data_out_vld;
   output reg pf_ready;
   output reg pf_done;


   ///////// custom fifo implementation /////////
   localparam FDEPTH = NUM_STAGES * NumWrites + 1;
   reg [DataWidth-1+2:0] fifo [0:FDEPTH-1]; // the "+2" is for extrabits for {data_in_last,data_in_vld}
   reg write_enable, read_enable;
   reg fifo_empty, fifo_full, sel_pipe;
   reg signed [CeilLog2FDepth:0] fifo_rdPtr; // range is -1 to FDEPTH-1
   reg [CeilLog2FDepth:0] fifo_avail;
   reg signed [CeilLog2FDepth+1:0] ready_chk; // max -ve value is (0 - fifo_avail)
   reg                  fail;
   reg     data_out_vld_fifo;

   integer WarningSuppressThreshold;
   initial begin // for co-sim assertion
       fifo_rdPtr = -1;
       fifo_empty = 1'b1;
       fifo_full = 1'b0;
       fail = 0;
//       if(!$value$plusargs("warning_suppress_threshold=%0d", WarningSuppressThreshold)) 
$display("This is MLP 17.\n");
           WarningSuppressThreshold = 5;
   end

   integer i;
   always @ (posedge ap_clk) begin : fifo_gen
      if (write_enable) begin
         for (i = 0; i < FDEPTH-1; i = i+1)
           fifo[i+1] <= fifo[i];
         fifo[0] <= {data_in_last, data_in_vld, data_in};
      end
   end
   // read ptr should have a positive address (MSB can be ignored)
   wire [DataWidth-1+2:0] fifo_out; // the "+2" is for extrabits for {data_in_last,data_in_vld}
   assign fifo_out = fifo[ fifo_rdPtr[CeilLog2FDepth-1:0] ];

   integer j;
   integer cnt_write_ovfl = 0;
   integer cnt_read_ovfl = 0;
   always @ (posedge ap_clk) begin : fifo_ptr
      if (ap_rst) begin
        fifo_rdPtr <= -1;
        fifo_empty <= 1'b1;
        fifo_full <= 1'b0;
      end
      else begin
          //// // synthesis translate_off
          //// if ($time > 0) begin
          ////    if ( write_enable && fifo_full && cnt_write_ovfl < WarningSuppressThreshold ) begin
          ////        $display("WARNING : fifo write overflow at time %0t", $time); fail=1;
          ////        cnt_write_ovfl = cnt_write_ovfl + 1;
          ////    end
          //// end
          //// // synthesis translate_on
         if (write_enable && !read_enable && !fifo_full) begin
           fifo_rdPtr <= fifo_rdPtr + 1;
           fifo_empty <= 1'b0;
           fifo_full <= (fifo_rdPtr == FDEPTH-2);
         end
         else if (read_enable && !write_enable && !fifo_empty) begin
           fifo_rdPtr <= fifo_rdPtr - 1;
           fifo_empty <= (fifo_rdPtr == 'd0);
           fifo_full <= 1'b0;
         end
      end
   end
   
   ///////// control logic /////////

   reg stalled, must_stall, data_cannot_vld, data_done, data_out_last_reg;
   reg data_out_last, internal_done;
   
    generate
        if(PfAllDoneEnable==2)
            always @(*) begin
                stalled = must_stall;
            end
        else
            always @ (posedge ap_clk) begin : stall_reg
                if (ap_rst) stalled <= 1'b0;
                else stalled <= must_stall;
            end
    endgenerate
   
    generate
        if (BlockingType == 1)
            always @ (*) begin : readen_control_for_blocking
                casex ({data_out_read, data_out_vld_fifo, data_out_last, fifo_empty, stalled})
                  5'b 1_X_X_0_0 : // when consumer reads and fifo is not empty.
                    read_enable = 1'b1;
                  5'b X_0_1_0_0 : // when no data in last and fifo is not empty.
                    read_enable = 1'b1;
                  default:
                    read_enable = 1'b0;
                endcase
            end
        else
            always @ (*) begin : readen_control_for_non_blocking
                casex ({fifo_empty, must_stall})
                  2'b 0_0: 
                    read_enable = 1'b1;
                  default:
                    read_enable = 1'b0;
                endcase
            end
    endgenerate

    generate
        if (BlockingType == 1)
            always @ (*) begin : writen_control_for_blocking
                casex ({ data_out_read, data_in_vld, fifo_empty, data_in_last, stalled })
                    5'b X_X_X_1_1 :
                        write_enable = 1'b1;
                    5'b X_1_X_X_1 :
                        write_enable = 1'b1;

                    5'b X_X_0_1_0 : // last valid, fifo has data
                        write_enable = 1'b1;
                    5'b 0_1_1_1_0 : // last valid, but consumer stalls (data_out_read==0), data_in_valid available
                        write_enable = 1'b1;
                    
                    5'b 0_1_X_X_0 : // data valid, but consumer stalls (data_out_read==0)
                        write_enable = 1'b1;
                    5'b 1_1_1_X_0 : // data valid, consumer ready, fifo is fifo_empty
                        write_enable = 1'b0;
                    5'b 1_1_0_X_0 : // data valid, consumer ready, fifo has data
                        write_enable = 1'b1;
                    default     :
                      write_enable = 1'b0;
                endcase
            end
        else if(BlockingType==0 && PfAllDoneEnable == 2)
            always @ (*) begin : writen_control_for_non_blocking
                casex ({ data_in_vld, fifo_empty, data_in_last, must_stall })
                  4'b 1_0_X_X :
                      write_enable = 1'b1;
                  4'b X_0_1_X :
                      write_enable = 1'b1;
                  4'b X_1_1_1 :
                      write_enable = 1'b1;
                  4'b 1_1_X_1 :
                      write_enable = 1'b1;
                  default     :
                      write_enable = 1'b0;
                endcase
            end
        else
            always @ (*) begin : writen_control_for_non_blocking
                casex ({ data_in_vld, fifo_empty, data_in_last, must_stall })
                  4'b 1_0_X_X :
                      write_enable = 1'b1;
                  4'b X_0_1_X :
                      write_enable = 1'b1;
                  4'b X_1_1_1 :
                      write_enable = 1'b1;
                  default     :
                      write_enable = 1'b0;
                endcase
            end
    endgenerate

    generate
        if (PfAllDoneEnable == 2)
            always @(posedge ap_clk) begin
                if(ap_rst) begin
                    data_cannot_vld<=1'b0;
                    data_out_last_reg<=1'b0;
                end else if(pf_all_done&&pf_continue) begin 
                    if(data_out_vld_fifo&&data_out_read&&data_out_last) data_cannot_vld<=1'b1 & (BlockingType==1);
                    else if(!data_out_vld_fifo&&data_out_last) data_cannot_vld<=1'b1;
                    else data_cannot_vld<=1'b0;

                    if(data_out_vld_fifo&&data_out_read&&data_out_last) data_out_last_reg<=data_out_last&(BlockingType==1);
                    else if(!data_out_vld_fifo&&data_out_last) data_out_last_reg<=data_out_last;
                    else data_out_last_reg<=1'b0;
                end else if(pf_all_done&&!pf_continue) begin 
                    data_cannot_vld<=1'b1;
                    data_out_last_reg<=data_out_last_reg;
                end else if(!pf_all_done) begin
                    if(data_out_last_reg) begin
                        data_cannot_vld<=1'b1;
                        data_out_last_reg<=data_out_last_reg;
                    end else if(data_out_vld_fifo&&!data_out_read) begin
                        data_cannot_vld<=1'b0;
                        data_out_last_reg<=1'b0;
                    end else if(data_out_vld_fifo&&data_out_read||!data_out_vld_fifo)begin
                        if(!data_out_last) data_cannot_vld<=1'b0;
                        else data_cannot_vld<=1'b1;
                        if(data_out_last) data_out_last_reg<=data_out_last;
                        else data_out_last_reg<=1'b0;
                    end
                end

                if(ap_rst) data_done<=1'b0;
                else if(must_stall) data_done <= data_done;
                else if ( (data_out_vld&&data_out_read||!data_out_vld_fifo&&data_out_last)||
                          (!pf_all_done||pf_all_done&&pf_continue) ) data_done <= 1'b1 & (BlockingType==1);
                else data_done <= 1'b0;
            end
    endgenerate

    generate
        if (PfAllDoneEnable == 2)
            always @ (*) begin : control
                ///////// internal signals /////////
                // data_out_vld is AMBA compliant (independent of data_out_read)
                sel_pipe    = fifo_empty;
                {data_out_last, data_out_vld_fifo, data_out} = sel_pipe ? {data_in_last, data_in_vld, data_in} : fifo_out;
                //for blocking mode, next transaction first data is already in MLP8 fifo. They can do handshake when
                //last transaction ap_done/ap_continue does handshake
                //for non_blocking mode, next transaction first data is not in MLP8 fifo
                data_out_vld = data_out_vld_fifo & (!data_cannot_vld || pf_continue&&pf_all_done&&data_done);

                if(pf_continue&&pf_all_done) begin
                    if(data_out_vld_fifo&&!data_out_read) must_stall=1'b1;
                    else if(data_out_vld_fifo&&data_out_read) must_stall=1'b1 & (BlockingType==0);
                    else must_stall=1'b0;

                    if(data_out_vld_fifo&&data_out_read) pf_done=data_out_last & (BlockingType==1);
                    else if(!data_out_vld_fifo&&data_out_last) pf_done=data_out_last;
                    else pf_done=1'b0;
                end else if(pf_all_done && !pf_continue) begin 
                    must_stall=1;
                    pf_done=data_out_last_reg;
                end else if(!pf_all_done) begin
                    if(data_out_last_reg) begin
                         must_stall=1'b1;
                         pf_done=data_out_last_reg;
                    end else if(data_out_vld_fifo&&!data_out_read) begin
                        must_stall=1'b1;
                        pf_done=1'b0;
                    end else if(data_out_vld_fifo&&data_out_read||!data_out_vld_fifo)begin
                        must_stall = 1'b0;
                        if(data_out_last) pf_done=data_out_last;
                        else pf_done=1'b0;
                    end else begin
                        must_stall = 1'b0;
                        pf_done = 1'b0;
                    end
                end else begin
                    must_stall = 1'b0;
                    pf_done = 1'b0;
                end

                ///////// outputs /////////
                fifo_avail = (FDEPTH - fifo_rdPtr - 1);
                // available has to be atleast one (or NumWrites) more than
                // valid transactions being processed in the pipeline. Then this
                // fifo buffer can accept the "valid" data in the following cycle.
                // pf_ready = (fifo_avail - (num_valid_datasets * NumWrites) >=
                // NumWrites);
                // above expr simplified for hardware
                                ready_chk = (NumWrites - fifo_avail + (num_valid_datasets * NumWrites));
                  pf_ready = ready_chk < 0;
            end // block: control
        else if (PfAllDoneEnable == 1)
            always @ (*) begin : control
               ///////// internal signals /////////
               // data_out_vld is AMBA compliant (independent of data_out_read)
               sel_pipe    = fifo_empty;
               {data_out_last, data_out_vld_fifo, data_out} = sel_pipe ? {data_in_last, data_in_vld, data_in} : fifo_out;
               data_out_vld = data_out_vld_fifo & !stalled;

               casex ({data_out_vld_fifo, data_out_last, pf_continue&pf_all_done, stalled, data_out_read})
                 5'b 0_0_X_0_X : {internal_done, must_stall} = 2'b 0_0;
                 5'b X_X_0_1_X : {internal_done, must_stall} = 2'b 1_1;  // when 'stalled', should wait until 'pf_continue'.
                 5'b X_X_1_1_X : {internal_done, must_stall} = 2'b 1_0;  // when 'pf_continue' arrived, 'stalled' register is de-asserted first.
                                                                         // This is to avoid the combinational loop on 'pf_done'.
                                                                         // loop: pf_done->ap_done->done_sync->ap_continue->pf_continue->pf_done.
                 5'b 0_1_0_0_X : {internal_done, must_stall} = 2'b 1_1;  // When there is only 'data_out_last', no need to wait 'data_out_read'.
                 5'b 0_1_1_0_X : {internal_done, must_stall} = 2'b 1_0;

                 5'b 1_1_X_X_0 : {internal_done, must_stall} = 2'b 0_0;  // when there are 'data_out_vld' and 'data_out_last' in the same cycle, 'internal_done' has to handshake with 'data_out_read'.
                 5'b 1_1_1_0_1 : {internal_done, must_stall} = 2'b 1_0;
                 5'b 1_1_0_0_1 : {internal_done, must_stall} = 2'b 1_1;
                 default       : {internal_done, must_stall} = 2'b 0_0;
               endcase
               pf_done = internal_done&!(pf_continue&pf_all_done);

               ///////// outputs /////////
               fifo_avail = (FDEPTH - fifo_rdPtr - 1);
               // available has to be atleast one (or NumWrites) more than
               // valid transactions being processed in the pipeline. Then this
               // fifo buffer can accept the "valid" data in the following cycle.
               // pf_ready = (fifo_avail - (num_valid_datasets * NumWrites) >=
               // NumWrites);
               // above expr simplified for hardware

                               ready_chk = (NumWrites - fifo_avail + (num_valid_datasets * NumWrites));
                 pf_ready = ready_chk < 0;
            end // block: control
        else
            always @ (*) begin : control
     
                 ///////// internal signals /////////
     
                 // data_out_vld is AMBA compliant (independent of data_out_read)
                 sel_pipe    = fifo_empty;
                 {data_out_last, data_out_vld_fifo, data_out} = sel_pipe ? {data_in_last, data_in_vld, data_in} : fifo_out;
                 data_out_vld = data_out_vld_fifo & !stalled;
     
                 casex ({data_out_vld_fifo, data_out_last, pf_continue, stalled, data_out_read})
                   5'b 0_0_X_0_X : {internal_done, must_stall} = 2'b 0_0;
                   5'b X_X_0_1_X : {internal_done, must_stall} = 2'b 1_1;  // when 'stalled', should wait until 'pf_continue'.
                   5'b X_X_1_1_X : {internal_done, must_stall} = 2'b 1_0;  // when 'pf_continue' arrived, 'stalled' register is de-asserted first.
                                                                           // This is to avoid the combinational loop on 'pf_done'.
                                                                           // loop: pf_done->ap_done->done_sync->ap_continue->pf_continue->pf_done.
                   5'b 0_1_0_0_X : {internal_done, must_stall} = 2'b 1_1;  // When there is only 'data_out_last', no need to wait 'data_out_read'.
                   5'b 0_1_1_0_X : {internal_done, must_stall} = 2'b 1_0;

                   5'b 1_1_X_X_0 : {internal_done, must_stall} = 2'b 0_0;  // when there are 'data_out_vld' and 'data_out_last' in the same cycle, 'internal_done' has to handshake with 'data_out_read'.
                   5'b 1_1_1_0_1 : {internal_done, must_stall} = 2'b 1_0;
                   5'b 1_1_0_0_1 : {internal_done, must_stall} = 2'b 1_1;
                   default       : {internal_done, must_stall} = 2'b 0_0;
                 endcase
                 pf_done = internal_done;

                 ///////// outputs /////////
                 fifo_avail = (FDEPTH - fifo_rdPtr - 1);
                 // available has to be atleast one (or NumWrites) more than
                 // valid transactions being processed in the pipeline. Then this
                 // fifo buffer can accept the "valid" data in the following cycle.
                 // pf_ready = (fifo_avail - (num_valid_datasets * NumWrites) >=
                 // NumWrites);
                 // above expr simplified for hardware

                             ready_chk = (NumWrites - fifo_avail + (num_valid_datasets * NumWrites));
                     pf_ready = ready_chk < 0;
            end // block: control
       endgenerate
endmodule // pipeline_fifo
    
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
// Tool Version Limit: 2023.10
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps

(* keep_hierarchy = "yes" *)
module MLP8_frp_pipeline_valid
  (ap_clk,
   ap_rst,
   valid_in,
   exitcond,

   valid_out,
   num_valid_datasets);

   parameter PipelineLatency =  4;
   parameter PipelineII      =  1;
   parameter ExitLatency = -1;
   parameter CeilLog2Stages   = 2;
   
   localparam NUM_STAGES = (PipelineLatency+PipelineII-1) / PipelineII; // Ceil(Latency/II)
   
   function isDefined;
      input val;
      begin
         isDefined = (val === 1'b0 || val === 1'b1);
      end
   endfunction

   input ap_clk;
   input ap_rst;
   input valid_in;
   input exitcond;
   
   
   output [PipelineLatency-1:0] valid_out;
   output [CeilLog2Stages:0] num_valid_datasets;
   reg signed [CeilLog2Stages+1:0] nvd_reg;
   assign num_valid_datasets=nvd_reg;

   reg fail;
   reg [PipelineLatency-2:0] v2;

   integer WarningSuppressThreshold;
   initial begin // for co-sim assertion
       v2 = 0;
       fail = 0;
       nvd_reg = 0;
//       if(!$value$plusargs("warning_suppress_threshold=%0d", WarningSuppressThreshold)) 
$display("This is MLP 17.\n");
           WarningSuppressThreshold = 5;
   end

   reg [PipelineLatency-1:0] valid_out_tmp;

   assign valid_out=valid_out_tmp;
   ///////// pipeline data valid (flushable impl) /////////
   reg [PipelineLatency-2:0] v1;
   genvar i;
   generate for (i = 0; i < PipelineLatency-1; i = i+1)
     always @ (posedge ap_clk) begin
        if (ap_rst)
          v2[i] <= 0;
        else begin
           v1[i] = (i == 0) ? valid_in : v2[i-1];
           v2[i] <= (ExitLatency==i) ? (!exitcond & v1[i]) : v1[i];
        end
     end
   endgenerate

   integer j;
   ///// // synthesis translate_off
   ///// integer cnt_nvd_ovfl_warning[PipelineLatency-1:0];
   ///// // synthesis translate_on
   always @(*) begin

       valid_out_tmp = {v2, valid_in};

       //// // synthesis translate_off
       //// if ($time > 0) begin
       ////    for (j = 1; j < PipelineLatency; j = j+1) begin : loop_block
       ////       if ( !(!valid_out_tmp[j] || nvd_reg <= NUM_STAGES) && 
       ////            cnt_nvd_ovfl_warning[j] < WarningSuppressThreshold ) begin
       ////          $display("WARNING : nvd_reg overflow. valid_out_tmp[%0d]=%b nvd=%0d nstg=%0d (at time %0t)",
       ////                 j, valid_out_tmp[j], nvd_reg, NUM_STAGES, $time);
       ////          fail=1; 
       ////          cnt_nvd_ovfl_warning[j] = cnt_nvd_ovfl_warning[j] + 1;
       ////          disable loop_block;
       ////       end
       ////    end // for (j = 1; j < PipelineLatency; j = j+1)
       //// end // if ($time > 0)
       //// // synthesis translate_on
   end

   wire   valid_disable;
   assign valid_disable = (ExitLatency == -1) ? 1'b0 : (valid_out_tmp[ExitLatency] & exitcond);
   
   // Count the num valid_out_tmp datasets in the pipe stages other than the
   // first. We do NOT count valid_out_tmp[0], otherwise it will be a
   // combination loop: nvd -> pfifo.ap_ready -> valid_in -> valid_out_tmp[0] -> nvd
   reg signed [2:0] incr;
   integer cnt_nvd_out_range = 0;
   always @ (posedge ap_clk) begin
      if (ap_rst)
         nvd_reg <= 0;
      else begin
         casex ({valid_out_tmp[0], valid_out_tmp[PipelineLatency-1], valid_disable})
           3'b100:  incr =  1;
           3'b111:  incr = -1;
           3'b001:  incr = -1;
           3'b010:  incr = -1;
           3'b011:  incr = -2;
           default: incr =  0;
         endcase
         /// // synthesis translate_off
         /// if (!(0 <=($signed(nvd_reg)+incr)<=NUM_STAGES) && cnt_nvd_out_range<WarningSuppressThreshold) begin
         ///       $display("WARNING: nvd_reg out of range. incr=%d nvd=%0d nstg=%0d (at time %0t)",
         ///              incr, nvd_reg, NUM_STAGES, $time);
         ///    fail=1;
         ///    cnt_nvd_out_range = cnt_nvd_out_range+1;
         /// end
         /// // synthesis translate_on
         nvd_reg <= nvd_reg + incr;
      end
   end

   //// // synthesis translate_off
   //// integer cnt_valid_out_tmp[PipelineLatency-1:0];
   //// integer stg, stgc;
   //// always @ (posedge ap_clk) begin
   ////    stg = 0;
   ////    stgc = 0;
   ////    for (j = 0; j < PipelineLatency; j = j+1) begin : block_stgc
   ////       stgc = stgc + valid_out_tmp[j];
   ////       if (stg == PipelineII-1) begin
   ////          if ( !(stgc <= 1) && cnt_valid_out_tmp[j]<WarningSuppressThreshold) begin
   ////             $display("WARNING: valid_out_tmp=%b. %0d bits set in one pipe-stage ending at bit-%0d (at time %0t)",
   ////                    valid_out_tmp, stgc, j, $time);
   ////             fail=1; 
   ////             cnt_valid_out_tmp[j] = cnt_valid_out_tmp[j] + 1;
   ////             disable block_stgc;
   ////          end
   ////          stgc = 0;
   ////          stg  = 0;
   ////       end else begin
   ////          stg = stg + 1;
   ////       end
   ////    end // for (j = 0; j < PipelineLatency; j = j+1)
   //// end // always @ (posedge ap_clk)
   //// // synthesis translate_on

endmodule // pipeline_valid
    
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
// Tool Version Limit: 2023.10
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// 
// ==============================================================
`timescale 1 ns / 1 ps

module MLP8_mac_muladd_14s_20ns_20ns_33_4_1_DSP48_2(
    input clk,
    input rst,
    input ce,
    input  [14 - 1:0] in0,
    input  [20 - 1:0] in1,
    input  [20 - 1:0] in2,
    output [33 - 1:0]  dout);

wire signed [27 - 1:0]     a;
wire signed [24 - 1:0]     b;
wire signed [58 - 1:0]     c;
wire signed [51 - 1:0]     m;
wire signed [58 - 1:0]     p;
reg  signed [51 - 1:0]     m_reg;
reg  signed [27 - 1:0]     a_reg;
reg  signed [24 - 1:0]     b_reg;
reg  signed [58 - 1:0]     p_reg;

assign a  = $signed(in0);
assign b  = $unsigned(in1);
assign c  = $unsigned(in2);

assign m  = a_reg * b_reg;
assign p  = m_reg + c;

always @(posedge clk) begin
    if (ce) begin
        m_reg  <= m;
        a_reg  <= a;
        b_reg  <= b;
        p_reg  <= p;
    end
end

assign dout = p_reg;

endmodule
`timescale 1 ns / 1 ps
module MLP8_mac_muladd_14s_20ns_20ns_33_4_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    din2,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter din2_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
input[din2_WIDTH - 1:0] din2;
output[dout_WIDTH - 1:0] dout;



MLP8_mac_muladd_14s_20ns_20ns_33_4_1_DSP48_2 MLP8_mac_muladd_14s_20ns_20ns_33_4_1_DSP48_2_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .in0( din0 ),
    .in1( din1 ),
    .in2( din2 ),
    .dout( dout ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
// Tool Version Limit: 2023.10
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// 
// ==============================================================
`timescale 1 ns / 1 ps

module MLP8_mac_muladd_17s_16ns_23ns_33_4_1_DSP48_0(
    input clk,
    input rst,
    input ce,
    input  [17 - 1:0] in0,
    input  [16 - 1:0] in1,
    input  [23 - 1:0] in2,
    output [33 - 1:0]  dout);

wire signed [27 - 1:0]     a;
wire signed [24 - 1:0]     b;
wire signed [58 - 1:0]     c;
wire signed [51 - 1:0]     m;
wire signed [58 - 1:0]     p;
reg  signed [51 - 1:0]     m_reg;
reg  signed [27 - 1:0]     a_reg;
reg  signed [24 - 1:0]     b_reg;
reg  signed [58 - 1:0]     p_reg;

assign a  = $signed(in0);
assign b  = $unsigned(in1);
assign c  = $unsigned(in2);

assign m  = a_reg * b_reg;
assign p  = m_reg + c;

always @(posedge clk) begin
    if (ce) begin
        m_reg  <= m;
        a_reg  <= a;
        b_reg  <= b;
        p_reg  <= p;
    end
end

assign dout = p_reg;

endmodule
`timescale 1 ns / 1 ps
module MLP8_mac_muladd_17s_16ns_23ns_33_4_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    din2,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter din2_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
input[din2_WIDTH - 1:0] din2;
output[dout_WIDTH - 1:0] dout;



MLP8_mac_muladd_17s_16ns_23ns_33_4_1_DSP48_0 MLP8_mac_muladd_17s_16ns_23ns_33_4_1_DSP48_0_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .in0( din0 ),
    .in1( din1 ),
    .in2( din2 ),
    .dout( dout ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
// Tool Version Limit: 2023.10
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// 
// ==============================================================
`timescale 1 ns / 1 ps

module MLP8_mac_muladd_26s_16ns_37s_38_4_1_DSP48_1(
    input clk,
    input rst,
    input ce,
    input  [26 - 1:0] in0,
    input  [16 - 1:0] in1,
    input  [37 - 1:0] in2,
    output [38 - 1:0]  dout);

wire signed [27 - 1:0]     a;
wire signed [24 - 1:0]     b;
wire signed [58 - 1:0]     c;
wire signed [51 - 1:0]     m;
wire signed [58 - 1:0]     p;
reg  signed [51 - 1:0]     m_reg;
reg  signed [27 - 1:0]     a_reg;
reg  signed [24 - 1:0]     b_reg;
reg  signed [58 - 1:0]     p_reg;

assign a  = $signed(in0);
assign b  = $unsigned(in1);
assign c  = $signed(in2);

assign m  = a_reg * b_reg;
assign p  = m_reg + c;

always @(posedge clk) begin
    if (ce) begin
        m_reg  <= m;
        a_reg  <= a;
        b_reg  <= b;
        p_reg  <= p;
    end
end

assign dout = p_reg;

endmodule
`timescale 1 ns / 1 ps
module MLP8_mac_muladd_26s_16ns_37s_38_4_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    din2,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter din2_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
input[din2_WIDTH - 1:0] din2;
output[dout_WIDTH - 1:0] dout;



MLP8_mac_muladd_26s_16ns_37s_38_4_1_DSP48_1 MLP8_mac_muladd_26s_16ns_37s_38_4_1_DSP48_1_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .in0( din0 ),
    .in1( din1 ),
    .in2( din2 ),
    .dout( dout ));

endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_matmul_step1_cache_window (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        adpt_sm_dout,
        adpt_sm_num_data_valid,
        adpt_sm_fifo_cap,
        adpt_sm_empty_n,
        adpt_sm_read,
        cache_window_sm_din,
        cache_window_sm_num_data_valid,
        cache_window_sm_fifo_cap,
        cache_window_sm_full_n,
        cache_window_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [143:0] adpt_sm_dout;
input  [5:0] adpt_sm_num_data_valid;
input  [5:0] adpt_sm_fifo_cap;
input   adpt_sm_empty_n;
output   adpt_sm_read;
output  [143:0] cache_window_sm_din;
input  [2:0] cache_window_sm_num_data_valid;
input  [2:0] cache_window_sm_fifo_cap;
input   cache_window_sm_full_n;
output   cache_window_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg adpt_sm_read;
reg cache_window_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln64_reg_408;
reg   [0:0] icmp_ln64_reg_408_pp0_iter1_reg;
reg   [0:0] cmp10_reg_424;
reg    ap_predicate_op73_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_196_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    adpt_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    cache_window_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln64_reg_408_pp0_iter2_reg;
wire   [0:0] icmp_ln65_fu_202_p2;
reg   [0:0] icmp_ln65_reg_412;
wire   [5:0] select_ln65_fu_293_p3;
reg   [5:0] select_ln65_reg_419;
wire   [0:0] cmp10_fu_309_p2;
reg   [0:0] cmp10_reg_424_pp0_iter2_reg;
reg   [143:0] adpt_sm_read_reg_433;
reg   [4:0] wb_address0;
reg    wb_ce0;
reg    wb_we0;
wire   [143:0] wb_q0;
reg   [143:0] ap_phi_mux_vec_o_0_phi_fu_122_p4;
wire   [143:0] ap_phi_reg_pp0_iter3_vec_o_0_reg_119;
wire   [63:0] zext_ln66_fu_345_p1;
wire   [4:0] wb_addr_gep_fu_111_p3;
reg   [5:0] cit_fu_66;
wire   [5:0] add_ln66_fu_315_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [5:0] ap_sig_allocacmp_cit_load;
reg   [4:0] cot_fu_70;
wire   [4:0] select_ln65_3_fu_301_p3;
reg   [4:0] ap_sig_allocacmp_cot_load;
reg   [10:0] indvar_flatten_fu_74;
wire   [10:0] select_ln65_4_fu_214_p3;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] indvar_flatten11_fu_78;
wire   [15:0] add_ln64_fu_190_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten11_load;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] add_ln65_2_fu_208_p2;
wire   [0:0] icmp_ln66_fu_270_p2;
wire   [0:0] xor_ln64_fu_265_p2;
wire   [4:0] select_ln64_fu_258_p3;
wire   [0:0] and_ln64_fu_276_p2;
wire   [0:0] or_ln65_fu_288_p2;
wire   [4:0] cot_4_fu_282_p2;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_172;
reg    ap_condition_195;
reg    ap_condition_324;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 cit_fu_66 = 6'd0;
//#0 cot_fu_70 = 5'd0;
//#0 indvar_flatten_fu_74 = 11'd0;
//#0 indvar_flatten11_fu_78 = 16'd0;
end

MLP8_matmul_step1_cache_window_wb_RAM_1P_LUTRAM_1R1W #(
    .DataWidth( 144 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
wb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(wb_address0),
    .ce0(wb_ce0),
    .we0(wb_we0),
    .d0(adpt_sm_dout),
    .q0(wb_q0)
);

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_172)) begin
        cit_fu_66 <= add_ln66_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_172)) begin
    cot_fu_70 <= select_ln65_3_fu_301_p3;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_195)) begin
    if ((icmp_ln64_fu_196_p2 == 1'd0)) begin
        indvar_flatten11_fu_78 <= add_ln64_fu_190_p2;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten11_fu_78 <= 16'd0;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_195)) begin
    if ((icmp_ln64_fu_196_p2 == 1'd0)) begin
        indvar_flatten_fu_74 <= select_ln65_4_fu_214_p3;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten_fu_74 <= 11'd0;
    end
end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        adpt_sm_read_reg_433 <= adpt_sm_dout;
        cmp10_reg_424_pp0_iter2_reg <= cmp10_reg_424;
        icmp_ln64_reg_408_pp0_iter2_reg <= icmp_ln64_reg_408_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        cmp10_reg_424 <= cmp10_fu_309_p2;
        icmp_ln64_reg_408 <= icmp_ln64_fu_196_p2;
        icmp_ln64_reg_408_pp0_iter1_reg <= icmp_ln64_reg_408;
        icmp_ln65_reg_412 <= icmp_ln65_fu_202_p2;
        select_ln65_reg_419 <= select_ln65_fu_293_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op73_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_blk_n = adpt_sm_empty_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op73_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_read = 1'b1;
    end else begin
        adpt_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_196_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln64_reg_408_pp0_iter2_reg == 1'd0)) begin
        if ((cmp10_reg_424_pp0_iter2_reg == 1'd0)) begin
            ap_phi_mux_vec_o_0_phi_fu_122_p4 = wb_q0;
        end else if ((cmp10_reg_424_pp0_iter2_reg == 1'd1)) begin
            ap_phi_mux_vec_o_0_phi_fu_122_p4 = adpt_sm_read_reg_433;
        end else begin
            ap_phi_mux_vec_o_0_phi_fu_122_p4 = ap_phi_reg_pp0_iter3_vec_o_0_reg_119;
        end
    end else begin
        ap_phi_mux_vec_o_0_phi_fu_122_p4 = ap_phi_reg_pp0_iter3_vec_o_0_reg_119;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_cit_load = 6'd0;
    end else begin
        ap_sig_allocacmp_cit_load = cit_fu_66;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_cot_load = 5'd0;
    end else begin
        ap_sig_allocacmp_cot_load = cot_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten11_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten11_load = indvar_flatten11_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cache_window_sm_blk_n = cache_window_sm_full_n;
    end else begin
        cache_window_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cache_window_sm_write = 1'b1;
    end else begin
        cache_window_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_324)) begin
        if ((cmp10_reg_424 == 1'd1)) begin
            wb_address0 = wb_addr_gep_fu_111_p3;
        end else if ((cmp10_reg_424 == 1'd0)) begin
            wb_address0 = zext_ln66_fu_345_p1;
        end else begin
            wb_address0 = 'bx;
        end
    end else begin
        wb_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp10_reg_424 == 1'd1) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp10_reg_424 == 1'd0) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        wb_ce0 = 1'b1;
    end else begin
        wb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp10_reg_424 == 1'd1) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wb_we0 = 1'b1;
    end else begin
        wb_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln64_fu_190_p2 = (ap_sig_allocacmp_indvar_flatten11_load + 16'd1);

assign add_ln65_2_fu_208_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln66_fu_315_p2 = (select_ln65_fu_293_p3 + 6'd1);

assign and_ln64_fu_276_p2 = (xor_ln64_fu_265_p2 & icmp_ln66_fu_270_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op73_read_state3 == 1'b1) & (1'b0 == adpt_sm_empty_n));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (cache_window_sm_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_172 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_195 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_324 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter3_vec_o_0_reg_119 = 'bx;

always @ (*) begin
    ap_predicate_op73_read_state3 = ((cmp10_reg_424 == 1'd1) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cache_window_sm_din = ap_phi_mux_vec_o_0_phi_fu_122_p4;

assign cmp10_fu_309_p2 = ((select_ln65_3_fu_301_p3 == 5'd0) ? 1'b1 : 1'b0);

assign cot_4_fu_282_p2 = (select_ln64_fu_258_p3 + 5'd1);

assign icmp_ln64_fu_196_p2 = ((ap_sig_allocacmp_indvar_flatten11_load == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_202_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_270_p2 = ((ap_sig_allocacmp_cit_load == 6'd32) ? 1'b1 : 1'b0);

assign or_ln65_fu_288_p2 = (icmp_ln65_reg_412 | and_ln64_fu_276_p2);

assign select_ln64_fu_258_p3 = ((icmp_ln65_reg_412[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_cot_load);

assign select_ln65_3_fu_301_p3 = ((and_ln64_fu_276_p2[0:0] == 1'b1) ? cot_4_fu_282_p2 : select_ln64_fu_258_p3);

assign select_ln65_4_fu_214_p3 = ((icmp_ln65_fu_202_p2[0:0] == 1'b1) ? 11'd1 : add_ln65_2_fu_208_p2);

assign select_ln65_fu_293_p3 = ((or_ln65_fu_288_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_cit_load);

assign start_out = real_start;

assign wb_addr_gep_fu_111_p3 = zext_ln66_fu_345_p1;

assign xor_ln64_fu_265_p2 = (icmp_ln65_reg_412 ^ 1'd1);

assign zext_ln66_fu_345_p1 = select_ln65_reg_419;

endmodule //MLP8_matmul_step1_cache_window
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_matmul_step1_cache_window_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        adpt_sm_dout,
        adpt_sm_num_data_valid,
        adpt_sm_fifo_cap,
        adpt_sm_empty_n,
        adpt_sm_read,
        cache_window_sm_din,
        cache_window_sm_num_data_valid,
        cache_window_sm_fifo_cap,
        cache_window_sm_full_n,
        cache_window_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [71:0] adpt_sm_dout;
input  [5:0] adpt_sm_num_data_valid;
input  [5:0] adpt_sm_fifo_cap;
input   adpt_sm_empty_n;
output   adpt_sm_read;
output  [71:0] cache_window_sm_din;
input  [2:0] cache_window_sm_num_data_valid;
input  [2:0] cache_window_sm_fifo_cap;
input   cache_window_sm_full_n;
output   cache_window_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg adpt_sm_read;
reg cache_window_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln64_reg_408;
reg   [0:0] icmp_ln64_reg_408_pp0_iter1_reg;
reg   [0:0] cmp10_reg_424;
reg    ap_predicate_op73_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_196_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    adpt_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    cache_window_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln64_reg_408_pp0_iter2_reg;
wire   [0:0] icmp_ln65_fu_202_p2;
reg   [0:0] icmp_ln65_reg_412;
wire   [4:0] select_ln65_fu_293_p3;
reg   [4:0] select_ln65_reg_419;
wire   [0:0] cmp10_fu_309_p2;
reg   [0:0] cmp10_reg_424_pp0_iter2_reg;
reg   [3:0] wb_address0;
reg    wb_ce0;
reg    wb_we0;
wire   [71:0] wb_q0;
reg   [71:0] ap_phi_mux_vec_o_0_phi_fu_122_p4;
wire   [71:0] ap_phi_reg_pp0_iter0_vec_o_0_reg_119;
reg   [71:0] ap_phi_reg_pp0_iter1_vec_o_0_reg_119;
reg   [71:0] ap_phi_reg_pp0_iter2_vec_o_0_reg_119;
reg   [71:0] ap_phi_reg_pp0_iter3_vec_o_0_reg_119;
wire   [63:0] zext_ln66_fu_345_p1;
wire   [3:0] wb_addr_gep_fu_111_p3;
reg   [4:0] cit_fu_66;
wire   [4:0] add_ln66_fu_315_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [4:0] ap_sig_allocacmp_cit_load;
reg   [5:0] cot_fu_70;
wire   [5:0] select_ln65_1_fu_301_p3;
reg   [5:0] ap_sig_allocacmp_cot_load;
reg   [10:0] indvar_flatten_fu_74;
wire   [10:0] select_ln65_2_fu_214_p3;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] indvar_flatten11_fu_78;
wire   [15:0] add_ln64_fu_190_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten11_load;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] add_ln65_1_fu_208_p2;
wire   [0:0] icmp_ln66_fu_270_p2;
wire   [0:0] xor_ln64_fu_265_p2;
wire   [5:0] select_ln64_fu_258_p3;
wire   [0:0] and_ln64_fu_276_p2;
wire   [0:0] or_ln65_fu_288_p2;
wire   [5:0] cot_2_fu_282_p2;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_151;
reg    ap_condition_147;
reg    ap_condition_324;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 cit_fu_66 = 5'd0;
//#0 cot_fu_70 = 6'd0;
//#0 indvar_flatten_fu_74 = 11'd0;
//#0 indvar_flatten11_fu_78 = 16'd0;
end

MLP8_matmul_step1_cache_window_1_wb_RAM_1P_LUTRAM_1R1W #(
    .DataWidth( 72 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
wb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(wb_address0),
    .ce0(wb_ce0),
    .we0(wb_we0),
    .d0(adpt_sm_dout),
    .q0(wb_q0)
);

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((cmp10_reg_424 == 1'd1) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_vec_o_0_reg_119 <= adpt_sm_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_vec_o_0_reg_119 <= ap_phi_reg_pp0_iter2_vec_o_0_reg_119;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_151)) begin
        cit_fu_66 <= add_ln66_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_151)) begin
    cot_fu_70 <= select_ln65_1_fu_301_p3;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_147)) begin
    if ((icmp_ln64_fu_196_p2 == 1'd0)) begin
        indvar_flatten11_fu_78 <= add_ln64_fu_190_p2;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten11_fu_78 <= 16'd0;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_147)) begin
    if ((icmp_ln64_fu_196_p2 == 1'd0)) begin
        indvar_flatten_fu_74 <= select_ln65_2_fu_214_p3;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten_fu_74 <= 11'd0;
    end
end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        cmp10_reg_424 <= cmp10_fu_309_p2;
        icmp_ln64_reg_408 <= icmp_ln64_fu_196_p2;
        icmp_ln64_reg_408_pp0_iter1_reg <= icmp_ln64_reg_408;
        icmp_ln65_reg_412 <= icmp_ln65_fu_202_p2;
        select_ln65_reg_419 <= select_ln65_fu_293_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_vec_o_0_reg_119 <= ap_phi_reg_pp0_iter0_vec_o_0_reg_119;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_vec_o_0_reg_119 <= ap_phi_reg_pp0_iter1_vec_o_0_reg_119;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        cmp10_reg_424_pp0_iter2_reg <= cmp10_reg_424;
        icmp_ln64_reg_408_pp0_iter2_reg <= icmp_ln64_reg_408_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op73_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_blk_n = adpt_sm_empty_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op73_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        adpt_sm_read = 1'b1;
    end else begin
        adpt_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_196_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp10_reg_424_pp0_iter2_reg == 1'd0) & (icmp_ln64_reg_408_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_vec_o_0_phi_fu_122_p4 = wb_q0;
    end else begin
        ap_phi_mux_vec_o_0_phi_fu_122_p4 = ap_phi_reg_pp0_iter3_vec_o_0_reg_119;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_cit_load = 5'd0;
    end else begin
        ap_sig_allocacmp_cit_load = cit_fu_66;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_cot_load = 6'd0;
    end else begin
        ap_sig_allocacmp_cot_load = cot_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten11_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten11_load = indvar_flatten11_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cache_window_sm_blk_n = cache_window_sm_full_n;
    end else begin
        cache_window_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cache_window_sm_write = 1'b1;
    end else begin
        cache_window_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_324)) begin
        if ((cmp10_reg_424 == 1'd1)) begin
            wb_address0 = wb_addr_gep_fu_111_p3;
        end else if ((cmp10_reg_424 == 1'd0)) begin
            wb_address0 = zext_ln66_fu_345_p1;
        end else begin
            wb_address0 = 'bx;
        end
    end else begin
        wb_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp10_reg_424 == 1'd1) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp10_reg_424 == 1'd0) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        wb_ce0 = 1'b1;
    end else begin
        wb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp10_reg_424 == 1'd1) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wb_we0 = 1'b1;
    end else begin
        wb_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln64_fu_190_p2 = (ap_sig_allocacmp_indvar_flatten11_load + 16'd1);

assign add_ln65_1_fu_208_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln66_fu_315_p2 = (select_ln65_fu_293_p3 + 5'd1);

assign and_ln64_fu_276_p2 = (xor_ln64_fu_265_p2 & icmp_ln66_fu_270_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op73_read_state3 == 1'b1) & (1'b0 == adpt_sm_empty_n));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (cache_window_sm_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_147 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_151 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_324 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_vec_o_0_reg_119 = 'bx;

always @ (*) begin
    ap_predicate_op73_read_state3 = ((cmp10_reg_424 == 1'd1) & (icmp_ln64_reg_408_pp0_iter1_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cache_window_sm_din = ap_phi_mux_vec_o_0_phi_fu_122_p4;

assign cmp10_fu_309_p2 = ((select_ln65_1_fu_301_p3 == 6'd0) ? 1'b1 : 1'b0);

assign cot_2_fu_282_p2 = (select_ln64_fu_258_p3 + 6'd1);

assign icmp_ln64_fu_196_p2 = ((ap_sig_allocacmp_indvar_flatten11_load == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_202_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_270_p2 = ((ap_sig_allocacmp_cit_load == 5'd16) ? 1'b1 : 1'b0);

assign or_ln65_fu_288_p2 = (icmp_ln65_reg_412 | and_ln64_fu_276_p2);

assign select_ln64_fu_258_p3 = ((icmp_ln65_reg_412[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_cot_load);

assign select_ln65_1_fu_301_p3 = ((and_ln64_fu_276_p2[0:0] == 1'b1) ? cot_2_fu_282_p2 : select_ln64_fu_258_p3);

assign select_ln65_2_fu_214_p3 = ((icmp_ln65_fu_202_p2[0:0] == 1'b1) ? 11'd1 : add_ln65_1_fu_208_p2);

assign select_ln65_fu_293_p3 = ((or_ln65_fu_288_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_cit_load);

assign start_out = real_start;

assign wb_addr_gep_fu_111_p3 = zext_ln66_fu_345_p1;

assign xor_ln64_fu_265_p2 = (icmp_ln65_reg_412 ^ 1'd1);

assign zext_ln66_fu_345_p1 = select_ln65_reg_419;

endmodule //MLP8_matmul_step1_cache_window_1
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_matmul_step1_cache_window_1_wb_RAM_1P_LUTRAM_1R1W (
     
    address0, ce0,
    d0, we0, 
    q0, 
     
    reset, clk);

parameter DataWidth = 72;
parameter AddressWidth = 4;
parameter AddressRange = 16;
 
input[AddressWidth-1:0] address0;
input ce0;
input[DataWidth-1:0] d0;
input we0; 
output reg[DataWidth-1:0] q0; 

input reset;
input clk;

(* ram_style = "distributed"  *)reg [DataWidth-1:0] ram[0:AddressRange-1];


 





//read first
always @(posedge clk)  
begin 
    if (ce0) begin
        if (we0) 
            ram[address0] <= d0; 
        q0 <= ram[address0];

    end
end 
 
 

endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_matmul_step1_cache_window_wb_RAM_1P_LUTRAM_1R1W (
     
    address0, ce0,
    d0, we0, 
    q0, 
     
    reset, clk);

parameter DataWidth = 144;
parameter AddressWidth = 5;
parameter AddressRange = 32;
 
input[AddressWidth-1:0] address0;
input ce0;
input[DataWidth-1:0] d0;
input we0; 
output reg[DataWidth-1:0] q0; 

input reset;
input clk;

(* ram_style = "distributed"  *)reg [DataWidth-1:0] ram[0:AddressRange-1];


 





//read first
always @(posedge clk)  
begin 
    if (ce0) begin
        if (we0) 
            ram[address0] <= d0; 
        q0 <= ram[address0];

    end
end 
 
 

endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_matmul_step2_mac (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        cache_window_sm_dout,
        cache_window_sm_num_data_valid,
        cache_window_sm_fifo_cap,
        cache_window_sm_empty_n,
        cache_window_sm_read,
        mac_sm_din,
        mac_sm_num_data_valid,
        mac_sm_fifo_cap,
        mac_sm_full_n,
        mac_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [143:0] cache_window_sm_dout;
input  [3:0] cache_window_sm_num_data_valid;
input  [2:0] cache_window_sm_fifo_cap;
input   cache_window_sm_empty_n;
output   cache_window_sm_read;
output  [239:0] mac_sm_din;
input  [2:0] mac_sm_num_data_valid;
input  [2:0] mac_sm_fifo_cap;
input   mac_sm_full_n;
output   mac_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg cache_window_sm_read;
reg mac_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] icmp_ln161_reg_23454;
reg   [0:0] icmp_ln161_reg_23454_pp0_iter5_reg;
reg    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln120_fu_2625_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] mlp_inst_m2_bias_arr_113_address0;
reg    mlp_inst_m2_bias_arr_113_ce0;
wire   [150:0] mlp_inst_m2_bias_arr_113_q0;
wire   [8:0] mlp_inst_m2_weight_arr_112_address0;
reg    mlp_inst_m2_weight_arr_112_ce0;
wire   [863:0] mlp_inst_m2_weight_arr_112_q0;
wire    cache_window_sm_blk_n;
wire    ap_block_pp0_stage0;
wire    mac_sm_blk_n;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln121_fu_2631_p2;
reg   [0:0] icmp_ln121_reg_23397;
wire   [5:0] select_ln121_fu_2722_p3;
reg   [5:0] select_ln121_reg_23404;
wire   [4:0] select_ln121_3_fu_2730_p3;
reg   [4:0] select_ln121_3_reg_23411;
reg   [4:0] select_ln121_3_reg_23411_pp0_iter2_reg;
wire   [3:0] trunc_ln121_fu_2738_p1;
reg   [3:0] trunc_ln121_reg_23416;
wire   [0:0] icmp_ln126_fu_2793_p2;
reg   [0:0] icmp_ln126_reg_23426;
reg   [0:0] icmp_ln126_reg_23426_pp0_iter3_reg;
reg   [0:0] icmp_ln126_reg_23426_pp0_iter4_reg;
wire   [0:0] icmp_ln161_fu_2802_p2;
reg   [0:0] icmp_ln161_reg_23454_pp0_iter3_reg;
reg   [0:0] icmp_ln161_reg_23454_pp0_iter4_reg;
wire  signed [5:0] mul_res_fu_2855_p2;
reg  signed [5:0] mul_res_reg_23463;
wire  signed [5:0] mul_res_576_fu_2883_p2;
reg  signed [5:0] mul_res_576_reg_23468;
reg   [2:0] tmp_335_reg_23473;
reg   [2:0] tmp_289_reg_23478;
wire  signed [5:0] mul_res_578_fu_2945_p2;
reg  signed [5:0] mul_res_578_reg_23483;
wire  signed [5:0] mul_res_579_fu_2987_p2;
reg  signed [5:0] mul_res_579_reg_23488;
reg   [2:0] tmp_338_reg_23493;
reg   [2:0] tmp_292_reg_23498;
wire  signed [5:0] mul_res_581_fu_3049_p2;
reg  signed [5:0] mul_res_581_reg_23503;
wire  signed [5:0] mul_res_582_fu_3091_p2;
reg  signed [5:0] mul_res_582_reg_23508;
wire  signed [5:0] mul_res_583_fu_3133_p2;
reg  signed [5:0] mul_res_583_reg_23513;
wire  signed [5:0] mul_res_584_fu_3175_p2;
reg  signed [5:0] mul_res_584_reg_23518;
wire  signed [5:0] mul_res_585_fu_3217_p2;
reg  signed [5:0] mul_res_585_reg_23523;
wire  signed [5:0] mul_res_586_fu_3259_p2;
reg  signed [5:0] mul_res_586_reg_23528;
wire   [5:0] zext_ln151_12_fu_3285_p1;
reg   [5:0] zext_ln151_12_reg_23533;
wire  signed [5:0] sext_ln151_12_fu_3289_p1;
reg  signed [5:0] sext_ln151_12_reg_23541;
wire  signed [5:0] mul_res_587_fu_3301_p2;
reg  signed [5:0] mul_res_587_reg_23547;
wire  signed [5:0] mul_res_588_fu_3343_p2;
reg  signed [5:0] mul_res_588_reg_23552;
wire  signed [5:0] mul_res_589_fu_3385_p2;
reg  signed [5:0] mul_res_589_reg_23557;
reg   [2:0] tmp_348_reg_23562;
reg   [2:0] tmp_302_reg_23567;
wire  signed [5:0] mul_res_591_fu_3447_p2;
reg  signed [5:0] mul_res_591_reg_23572;
wire  signed [5:0] mul_res_592_fu_3489_p2;
reg  signed [5:0] mul_res_592_reg_23577;
wire   [5:0] zext_ln151_18_fu_3515_p1;
reg   [5:0] zext_ln151_18_reg_23582;
wire  signed [5:0] sext_ln151_18_fu_3519_p1;
reg  signed [5:0] sext_ln151_18_reg_23590;
wire  signed [5:0] mul_res_593_fu_3531_p2;
reg  signed [5:0] mul_res_593_reg_23596;
wire  signed [5:0] mul_res_594_fu_3573_p2;
reg  signed [5:0] mul_res_594_reg_23601;
reg   [2:0] tmp_353_reg_23606;
reg   [2:0] tmp_307_reg_23611;
reg   [2:0] tmp_354_reg_23616;
reg   [2:0] tmp_308_reg_23621;
reg   [2:0] tmp_355_reg_23626;
reg   [2:0] tmp_309_reg_23631;
wire  signed [5:0] mul_res_598_fu_3675_p2;
reg  signed [5:0] mul_res_598_reg_23636;
wire  signed [5:0] mul_res_599_fu_3703_p2;
reg  signed [5:0] mul_res_599_reg_23641;
wire  signed [5:0] mul_res_600_fu_3731_p2;
reg  signed [5:0] mul_res_600_reg_23646;
reg   [2:0] tmp_359_reg_23651;
wire  signed [5:0] mul_res_602_fu_3769_p2;
reg  signed [5:0] mul_res_602_reg_23656;
wire  signed [5:0] mul_res_603_fu_3797_p2;
reg  signed [5:0] mul_res_603_reg_23661;
reg   [2:0] tmp_362_reg_23666;
wire  signed [5:0] mul_res_605_fu_3835_p2;
reg  signed [5:0] mul_res_605_reg_23671;
wire  signed [5:0] mul_res_606_fu_3863_p2;
reg  signed [5:0] mul_res_606_reg_23676;
wire  signed [5:0] mul_res_607_fu_3891_p2;
reg  signed [5:0] mul_res_607_reg_23681;
wire  signed [5:0] mul_res_608_fu_3919_p2;
reg  signed [5:0] mul_res_608_reg_23686;
wire  signed [5:0] mul_res_609_fu_3947_p2;
reg  signed [5:0] mul_res_609_reg_23691;
wire  signed [5:0] mul_res_610_fu_3975_p2;
reg  signed [5:0] mul_res_610_reg_23696;
wire  signed [5:0] sext_ln151_36_fu_3991_p1;
reg  signed [5:0] sext_ln151_36_reg_23701;
wire  signed [5:0] mul_res_611_fu_4003_p2;
reg  signed [5:0] mul_res_611_reg_23707;
wire  signed [5:0] mul_res_612_fu_4031_p2;
reg  signed [5:0] mul_res_612_reg_23712;
wire  signed [5:0] mul_res_613_fu_4059_p2;
reg  signed [5:0] mul_res_613_reg_23717;
reg   [2:0] tmp_372_reg_23722;
wire  signed [5:0] mul_res_615_fu_4097_p2;
reg  signed [5:0] mul_res_615_reg_23727;
wire  signed [5:0] mul_res_616_fu_4125_p2;
reg  signed [5:0] mul_res_616_reg_23732;
wire  signed [5:0] sext_ln151_42_fu_4141_p1;
reg  signed [5:0] sext_ln151_42_reg_23737;
wire  signed [5:0] mul_res_617_fu_4153_p2;
reg  signed [5:0] mul_res_617_reg_23743;
wire  signed [5:0] mul_res_618_fu_4181_p2;
reg  signed [5:0] mul_res_618_reg_23748;
reg   [2:0] tmp_377_reg_23753;
reg   [2:0] tmp_378_reg_23758;
reg   [2:0] tmp_379_reg_23763;
wire  signed [5:0] mul_res_622_fu_4239_p2;
reg  signed [5:0] mul_res_622_reg_23768;
wire  signed [5:0] mul_res_623_fu_4267_p2;
reg  signed [5:0] mul_res_623_reg_23773;
wire  signed [5:0] mul_res_624_fu_4295_p2;
reg  signed [5:0] mul_res_624_reg_23778;
reg   [2:0] tmp_383_reg_23783;
wire  signed [5:0] mul_res_626_fu_4333_p2;
reg  signed [5:0] mul_res_626_reg_23788;
wire  signed [5:0] mul_res_627_fu_4361_p2;
reg  signed [5:0] mul_res_627_reg_23793;
reg   [2:0] tmp_386_reg_23798;
wire  signed [5:0] mul_res_629_fu_4399_p2;
reg  signed [5:0] mul_res_629_reg_23803;
wire  signed [5:0] mul_res_630_fu_4427_p2;
reg  signed [5:0] mul_res_630_reg_23808;
wire  signed [5:0] mul_res_631_fu_4455_p2;
reg  signed [5:0] mul_res_631_reg_23813;
wire  signed [5:0] mul_res_632_fu_4483_p2;
reg  signed [5:0] mul_res_632_reg_23818;
wire  signed [5:0] mul_res_633_fu_4511_p2;
reg  signed [5:0] mul_res_633_reg_23823;
wire  signed [5:0] mul_res_634_fu_4539_p2;
reg  signed [5:0] mul_res_634_reg_23828;
wire  signed [5:0] sext_ln151_60_fu_4555_p1;
reg  signed [5:0] sext_ln151_60_reg_23833;
wire  signed [5:0] mul_res_635_fu_4567_p2;
reg  signed [5:0] mul_res_635_reg_23839;
wire  signed [5:0] mul_res_636_fu_4595_p2;
reg  signed [5:0] mul_res_636_reg_23844;
wire  signed [5:0] mul_res_637_fu_4623_p2;
reg  signed [5:0] mul_res_637_reg_23849;
reg   [2:0] tmp_396_reg_23854;
wire  signed [5:0] mul_res_639_fu_4661_p2;
reg  signed [5:0] mul_res_639_reg_23859;
wire  signed [5:0] mul_res_640_fu_4689_p2;
reg  signed [5:0] mul_res_640_reg_23864;
wire  signed [5:0] sext_ln151_66_fu_4705_p1;
reg  signed [5:0] sext_ln151_66_reg_23869;
wire  signed [5:0] mul_res_641_fu_4717_p2;
reg  signed [5:0] mul_res_641_reg_23875;
wire  signed [5:0] mul_res_642_fu_4745_p2;
reg  signed [5:0] mul_res_642_reg_23880;
reg   [2:0] tmp_401_reg_23885;
reg   [2:0] tmp_402_reg_23890;
reg   [2:0] tmp_403_reg_23895;
wire  signed [5:0] mul_res_646_fu_4803_p2;
reg  signed [5:0] mul_res_646_reg_23900;
wire  signed [5:0] mul_res_647_fu_4831_p2;
reg  signed [5:0] mul_res_647_reg_23905;
wire  signed [5:0] mul_res_648_fu_4859_p2;
reg  signed [5:0] mul_res_648_reg_23910;
reg   [2:0] tmp_407_reg_23915;
wire  signed [5:0] mul_res_650_fu_4897_p2;
reg  signed [5:0] mul_res_650_reg_23920;
wire  signed [5:0] mul_res_651_fu_4925_p2;
reg  signed [5:0] mul_res_651_reg_23925;
reg   [2:0] tmp_410_reg_23930;
wire  signed [5:0] mul_res_653_fu_4963_p2;
reg  signed [5:0] mul_res_653_reg_23935;
wire  signed [5:0] mul_res_654_fu_4991_p2;
reg  signed [5:0] mul_res_654_reg_23940;
wire  signed [5:0] mul_res_655_fu_5019_p2;
reg  signed [5:0] mul_res_655_reg_23945;
wire  signed [5:0] mul_res_656_fu_5047_p2;
reg  signed [5:0] mul_res_656_reg_23950;
wire  signed [5:0] mul_res_657_fu_5075_p2;
reg  signed [5:0] mul_res_657_reg_23955;
wire  signed [5:0] mul_res_658_fu_5103_p2;
reg  signed [5:0] mul_res_658_reg_23960;
wire  signed [5:0] sext_ln151_84_fu_5119_p1;
reg  signed [5:0] sext_ln151_84_reg_23965;
wire  signed [5:0] mul_res_659_fu_5131_p2;
reg  signed [5:0] mul_res_659_reg_23971;
wire  signed [5:0] mul_res_660_fu_5159_p2;
reg  signed [5:0] mul_res_660_reg_23976;
wire  signed [5:0] mul_res_661_fu_5187_p2;
reg  signed [5:0] mul_res_661_reg_23981;
reg   [2:0] tmp_420_reg_23986;
wire  signed [5:0] mul_res_663_fu_5225_p2;
reg  signed [5:0] mul_res_663_reg_23991;
wire  signed [5:0] mul_res_664_fu_5253_p2;
reg  signed [5:0] mul_res_664_reg_23996;
wire  signed [5:0] sext_ln151_90_fu_5269_p1;
reg  signed [5:0] sext_ln151_90_reg_24001;
wire  signed [5:0] mul_res_665_fu_5281_p2;
reg  signed [5:0] mul_res_665_reg_24007;
wire  signed [5:0] mul_res_666_fu_5309_p2;
reg  signed [5:0] mul_res_666_reg_24012;
reg   [2:0] tmp_425_reg_24017;
reg   [2:0] tmp_426_reg_24022;
reg   [2:0] tmp_427_reg_24027;
wire  signed [5:0] mul_res_670_fu_5367_p2;
reg  signed [5:0] mul_res_670_reg_24032;
wire  signed [5:0] mul_res_671_fu_5395_p2;
reg  signed [5:0] mul_res_671_reg_24037;
wire  signed [5:0] mul_res_672_fu_5423_p2;
reg  signed [5:0] mul_res_672_reg_24042;
reg   [2:0] tmp_431_reg_24047;
wire  signed [5:0] mul_res_674_fu_5461_p2;
reg  signed [5:0] mul_res_674_reg_24052;
wire  signed [5:0] mul_res_675_fu_5489_p2;
reg  signed [5:0] mul_res_675_reg_24057;
reg   [2:0] tmp_434_reg_24062;
wire  signed [5:0] mul_res_677_fu_5527_p2;
reg  signed [5:0] mul_res_677_reg_24067;
wire  signed [5:0] mul_res_678_fu_5555_p2;
reg  signed [5:0] mul_res_678_reg_24072;
wire  signed [5:0] mul_res_679_fu_5583_p2;
reg  signed [5:0] mul_res_679_reg_24077;
wire  signed [5:0] mul_res_680_fu_5611_p2;
reg  signed [5:0] mul_res_680_reg_24082;
wire  signed [5:0] mul_res_681_fu_5639_p2;
reg  signed [5:0] mul_res_681_reg_24087;
wire  signed [5:0] mul_res_682_fu_5667_p2;
reg  signed [5:0] mul_res_682_reg_24092;
wire  signed [5:0] sext_ln151_108_fu_5683_p1;
reg  signed [5:0] sext_ln151_108_reg_24097;
wire  signed [5:0] mul_res_683_fu_5695_p2;
reg  signed [5:0] mul_res_683_reg_24103;
wire  signed [5:0] mul_res_684_fu_5723_p2;
reg  signed [5:0] mul_res_684_reg_24108;
wire  signed [5:0] mul_res_685_fu_5751_p2;
reg  signed [5:0] mul_res_685_reg_24113;
reg   [2:0] tmp_444_reg_24118;
wire  signed [5:0] mul_res_687_fu_5789_p2;
reg  signed [5:0] mul_res_687_reg_24123;
wire  signed [5:0] mul_res_688_fu_5817_p2;
reg  signed [5:0] mul_res_688_reg_24128;
wire  signed [5:0] sext_ln151_114_fu_5833_p1;
reg  signed [5:0] sext_ln151_114_reg_24133;
wire  signed [5:0] mul_res_689_fu_5845_p2;
reg  signed [5:0] mul_res_689_reg_24139;
wire  signed [5:0] mul_res_690_fu_5873_p2;
reg  signed [5:0] mul_res_690_reg_24144;
reg   [2:0] tmp_449_reg_24149;
reg   [2:0] tmp_450_reg_24154;
reg   [2:0] tmp_451_reg_24159;
wire  signed [5:0] mul_res_694_fu_5931_p2;
reg  signed [5:0] mul_res_694_reg_24164;
wire  signed [5:0] mul_res_695_fu_5959_p2;
reg  signed [5:0] mul_res_695_reg_24169;
wire  signed [5:0] mul_res_696_fu_5987_p2;
reg  signed [5:0] mul_res_696_reg_24174;
reg   [2:0] tmp_455_reg_24179;
wire  signed [5:0] mul_res_698_fu_6025_p2;
reg  signed [5:0] mul_res_698_reg_24184;
wire  signed [5:0] mul_res_699_fu_6053_p2;
reg  signed [5:0] mul_res_699_reg_24189;
reg   [2:0] tmp_458_reg_24194;
wire  signed [5:0] mul_res_701_fu_6091_p2;
reg  signed [5:0] mul_res_701_reg_24199;
wire  signed [5:0] mul_res_702_fu_6119_p2;
reg  signed [5:0] mul_res_702_reg_24204;
wire  signed [5:0] mul_res_703_fu_6147_p2;
reg  signed [5:0] mul_res_703_reg_24209;
wire  signed [5:0] mul_res_704_fu_6175_p2;
reg  signed [5:0] mul_res_704_reg_24214;
wire  signed [5:0] mul_res_705_fu_6203_p2;
reg  signed [5:0] mul_res_705_reg_24219;
wire  signed [5:0] mul_res_706_fu_6231_p2;
reg  signed [5:0] mul_res_706_reg_24224;
wire  signed [5:0] sext_ln151_132_fu_6247_p1;
reg  signed [5:0] sext_ln151_132_reg_24229;
wire  signed [5:0] mul_res_707_fu_6259_p2;
reg  signed [5:0] mul_res_707_reg_24235;
wire  signed [5:0] mul_res_708_fu_6287_p2;
reg  signed [5:0] mul_res_708_reg_24240;
wire  signed [5:0] mul_res_709_fu_6315_p2;
reg  signed [5:0] mul_res_709_reg_24245;
reg   [2:0] tmp_468_reg_24250;
wire  signed [5:0] mul_res_711_fu_6353_p2;
reg  signed [5:0] mul_res_711_reg_24255;
wire  signed [5:0] mul_res_712_fu_6381_p2;
reg  signed [5:0] mul_res_712_reg_24260;
wire  signed [5:0] sext_ln151_138_fu_6397_p1;
reg  signed [5:0] sext_ln151_138_reg_24265;
wire  signed [5:0] mul_res_713_fu_6409_p2;
reg  signed [5:0] mul_res_713_reg_24271;
wire  signed [5:0] mul_res_714_fu_6437_p2;
reg  signed [5:0] mul_res_714_reg_24276;
reg   [2:0] tmp_473_reg_24281;
reg   [2:0] tmp_474_reg_24286;
reg   [2:0] tmp_475_reg_24291;
wire  signed [5:0] mul_res_718_fu_6495_p2;
reg  signed [5:0] mul_res_718_reg_24296;
wire  signed [5:0] mul_res_719_fu_6523_p2;
reg  signed [5:0] mul_res_719_reg_24301;
wire  signed [5:0] mul_res_720_fu_6551_p2;
reg  signed [5:0] mul_res_720_reg_24306;
reg   [2:0] tmp_479_reg_24311;
wire  signed [5:0] mul_res_722_fu_6589_p2;
reg  signed [5:0] mul_res_722_reg_24316;
wire  signed [5:0] mul_res_723_fu_6617_p2;
reg  signed [5:0] mul_res_723_reg_24321;
reg   [2:0] tmp_482_reg_24326;
wire  signed [5:0] mul_res_725_fu_6655_p2;
reg  signed [5:0] mul_res_725_reg_24331;
wire  signed [5:0] mul_res_726_fu_6683_p2;
reg  signed [5:0] mul_res_726_reg_24336;
wire  signed [5:0] mul_res_727_fu_6711_p2;
reg  signed [5:0] mul_res_727_reg_24341;
wire  signed [5:0] mul_res_728_fu_6739_p2;
reg  signed [5:0] mul_res_728_reg_24346;
wire  signed [5:0] mul_res_729_fu_6767_p2;
reg  signed [5:0] mul_res_729_reg_24351;
wire  signed [5:0] mul_res_730_fu_6795_p2;
reg  signed [5:0] mul_res_730_reg_24356;
wire  signed [5:0] sext_ln151_156_fu_6811_p1;
reg  signed [5:0] sext_ln151_156_reg_24361;
wire  signed [5:0] mul_res_731_fu_6823_p2;
reg  signed [5:0] mul_res_731_reg_24367;
wire  signed [5:0] mul_res_732_fu_6851_p2;
reg  signed [5:0] mul_res_732_reg_24372;
wire  signed [5:0] mul_res_733_fu_6879_p2;
reg  signed [5:0] mul_res_733_reg_24377;
reg   [2:0] tmp_492_reg_24382;
wire  signed [5:0] mul_res_735_fu_6917_p2;
reg  signed [5:0] mul_res_735_reg_24387;
wire  signed [5:0] mul_res_736_fu_6945_p2;
reg  signed [5:0] mul_res_736_reg_24392;
wire  signed [5:0] sext_ln151_162_fu_6961_p1;
reg  signed [5:0] sext_ln151_162_reg_24397;
wire  signed [5:0] mul_res_737_fu_6973_p2;
reg  signed [5:0] mul_res_737_reg_24403;
wire  signed [5:0] mul_res_738_fu_7001_p2;
reg  signed [5:0] mul_res_738_reg_24408;
reg   [2:0] tmp_497_reg_24413;
reg   [2:0] tmp_498_reg_24418;
reg   [2:0] tmp_499_reg_24423;
wire  signed [5:0] mul_res_742_fu_7059_p2;
reg  signed [5:0] mul_res_742_reg_24428;
wire  signed [5:0] mul_res_743_fu_7087_p2;
reg  signed [5:0] mul_res_743_reg_24433;
wire  signed [5:0] mul_res_744_fu_7115_p2;
reg  signed [5:0] mul_res_744_reg_24438;
reg   [2:0] tmp_503_reg_24443;
wire  signed [5:0] mul_res_746_fu_7153_p2;
reg  signed [5:0] mul_res_746_reg_24448;
wire  signed [5:0] mul_res_747_fu_7181_p2;
reg  signed [5:0] mul_res_747_reg_24453;
reg   [2:0] tmp_506_reg_24458;
wire  signed [5:0] mul_res_749_fu_7219_p2;
reg  signed [5:0] mul_res_749_reg_24463;
wire  signed [5:0] mul_res_750_fu_7247_p2;
reg  signed [5:0] mul_res_750_reg_24468;
wire  signed [5:0] mul_res_751_fu_7275_p2;
reg  signed [5:0] mul_res_751_reg_24473;
wire  signed [5:0] mul_res_752_fu_7303_p2;
reg  signed [5:0] mul_res_752_reg_24478;
wire  signed [5:0] mul_res_753_fu_7331_p2;
reg  signed [5:0] mul_res_753_reg_24483;
wire  signed [5:0] mul_res_754_fu_7359_p2;
reg  signed [5:0] mul_res_754_reg_24488;
wire  signed [5:0] sext_ln151_180_fu_7375_p1;
reg  signed [5:0] sext_ln151_180_reg_24493;
wire  signed [5:0] mul_res_755_fu_7387_p2;
reg  signed [5:0] mul_res_755_reg_24499;
wire  signed [5:0] mul_res_756_fu_7415_p2;
reg  signed [5:0] mul_res_756_reg_24504;
wire  signed [5:0] mul_res_757_fu_7443_p2;
reg  signed [5:0] mul_res_757_reg_24509;
reg   [2:0] tmp_516_reg_24514;
wire  signed [5:0] mul_res_759_fu_7481_p2;
reg  signed [5:0] mul_res_759_reg_24519;
wire  signed [5:0] mul_res_760_fu_7509_p2;
reg  signed [5:0] mul_res_760_reg_24524;
wire  signed [5:0] sext_ln151_186_fu_7525_p1;
reg  signed [5:0] sext_ln151_186_reg_24529;
wire  signed [5:0] mul_res_761_fu_7537_p2;
reg  signed [5:0] mul_res_761_reg_24535;
wire  signed [5:0] mul_res_762_fu_7565_p2;
reg  signed [5:0] mul_res_762_reg_24540;
reg   [2:0] tmp_521_reg_24545;
reg   [2:0] tmp_522_reg_24550;
reg   [2:0] tmp_523_reg_24555;
wire  signed [5:0] mul_res_766_fu_7623_p2;
reg  signed [5:0] mul_res_766_reg_24560;
wire  signed [5:0] mul_res_767_fu_7651_p2;
reg  signed [5:0] mul_res_767_reg_24565;
wire  signed [5:0] mul_res_768_fu_7679_p2;
reg  signed [5:0] mul_res_768_reg_24570;
reg   [2:0] tmp_527_reg_24575;
wire  signed [5:0] mul_res_770_fu_7717_p2;
reg  signed [5:0] mul_res_770_reg_24580;
wire  signed [5:0] mul_res_771_fu_7745_p2;
reg  signed [5:0] mul_res_771_reg_24585;
reg   [2:0] tmp_530_reg_24590;
wire  signed [5:0] mul_res_773_fu_7783_p2;
reg  signed [5:0] mul_res_773_reg_24595;
wire  signed [5:0] mul_res_774_fu_7811_p2;
reg  signed [5:0] mul_res_774_reg_24600;
wire  signed [5:0] mul_res_775_fu_7839_p2;
reg  signed [5:0] mul_res_775_reg_24605;
wire  signed [5:0] mul_res_776_fu_7867_p2;
reg  signed [5:0] mul_res_776_reg_24610;
wire  signed [5:0] mul_res_777_fu_7895_p2;
reg  signed [5:0] mul_res_777_reg_24615;
wire  signed [5:0] mul_res_778_fu_7923_p2;
reg  signed [5:0] mul_res_778_reg_24620;
wire  signed [5:0] sext_ln151_204_fu_7939_p1;
reg  signed [5:0] sext_ln151_204_reg_24625;
wire  signed [5:0] mul_res_779_fu_7951_p2;
reg  signed [5:0] mul_res_779_reg_24631;
wire  signed [5:0] mul_res_780_fu_7979_p2;
reg  signed [5:0] mul_res_780_reg_24636;
wire  signed [5:0] mul_res_781_fu_8007_p2;
reg  signed [5:0] mul_res_781_reg_24641;
reg   [2:0] tmp_540_reg_24646;
wire  signed [5:0] mul_res_783_fu_8045_p2;
reg  signed [5:0] mul_res_783_reg_24651;
wire  signed [5:0] mul_res_784_fu_8073_p2;
reg  signed [5:0] mul_res_784_reg_24656;
wire  signed [5:0] sext_ln151_210_fu_8089_p1;
reg  signed [5:0] sext_ln151_210_reg_24661;
wire  signed [5:0] mul_res_785_fu_8101_p2;
reg  signed [5:0] mul_res_785_reg_24667;
wire  signed [5:0] mul_res_786_fu_8129_p2;
reg  signed [5:0] mul_res_786_reg_24672;
reg   [2:0] tmp_545_reg_24677;
reg   [2:0] tmp_546_reg_24682;
reg   [2:0] tmp_547_reg_24687;
wire  signed [5:0] mul_res_790_fu_8187_p2;
reg  signed [5:0] mul_res_790_reg_24692;
wire  signed [5:0] mul_res_791_fu_8215_p2;
reg  signed [5:0] mul_res_791_reg_24697;
wire  signed [5:0] mul_res_792_fu_8243_p2;
reg  signed [5:0] mul_res_792_reg_24702;
reg   [2:0] tmp_551_reg_24707;
wire  signed [5:0] mul_res_794_fu_8281_p2;
reg  signed [5:0] mul_res_794_reg_24712;
wire  signed [5:0] mul_res_795_fu_8309_p2;
reg  signed [5:0] mul_res_795_reg_24717;
reg   [2:0] tmp_554_reg_24722;
wire  signed [5:0] mul_res_797_fu_8347_p2;
reg  signed [5:0] mul_res_797_reg_24727;
wire  signed [5:0] mul_res_798_fu_8375_p2;
reg  signed [5:0] mul_res_798_reg_24732;
wire  signed [5:0] mul_res_799_fu_8403_p2;
reg  signed [5:0] mul_res_799_reg_24737;
wire  signed [5:0] mul_res_800_fu_8431_p2;
reg  signed [5:0] mul_res_800_reg_24742;
wire  signed [5:0] mul_res_801_fu_8459_p2;
reg  signed [5:0] mul_res_801_reg_24747;
wire  signed [5:0] mul_res_802_fu_8487_p2;
reg  signed [5:0] mul_res_802_reg_24752;
wire  signed [5:0] sext_ln151_228_fu_8503_p1;
reg  signed [5:0] sext_ln151_228_reg_24757;
wire  signed [5:0] mul_res_803_fu_8515_p2;
reg  signed [5:0] mul_res_803_reg_24763;
wire  signed [5:0] mul_res_804_fu_8543_p2;
reg  signed [5:0] mul_res_804_reg_24768;
wire  signed [5:0] mul_res_805_fu_8571_p2;
reg  signed [5:0] mul_res_805_reg_24773;
reg   [2:0] tmp_564_reg_24778;
wire  signed [5:0] mul_res_807_fu_8609_p2;
reg  signed [5:0] mul_res_807_reg_24783;
wire  signed [5:0] mul_res_808_fu_8637_p2;
reg  signed [5:0] mul_res_808_reg_24788;
wire  signed [5:0] sext_ln151_234_fu_8653_p1;
reg  signed [5:0] sext_ln151_234_reg_24793;
wire  signed [5:0] mul_res_809_fu_8665_p2;
reg  signed [5:0] mul_res_809_reg_24799;
wire  signed [5:0] mul_res_810_fu_8693_p2;
reg  signed [5:0] mul_res_810_reg_24804;
reg   [2:0] tmp_569_reg_24809;
reg   [2:0] tmp_570_reg_24814;
reg   [2:0] tmp_571_reg_24819;
wire  signed [5:0] mul_res_814_fu_8751_p2;
reg  signed [5:0] mul_res_814_reg_24824;
wire  signed [5:0] mul_res_815_fu_8779_p2;
reg  signed [5:0] mul_res_815_reg_24829;
wire  signed [5:0] mul_res_816_fu_8807_p2;
reg  signed [5:0] mul_res_816_reg_24834;
reg   [2:0] tmp_575_reg_24839;
wire  signed [5:0] mul_res_818_fu_8845_p2;
reg  signed [5:0] mul_res_818_reg_24844;
wire  signed [5:0] mul_res_819_fu_8873_p2;
reg  signed [5:0] mul_res_819_reg_24849;
reg   [2:0] tmp_578_reg_24854;
wire  signed [5:0] mul_res_821_fu_8911_p2;
reg  signed [5:0] mul_res_821_reg_24859;
wire  signed [5:0] mul_res_822_fu_8939_p2;
reg  signed [5:0] mul_res_822_reg_24864;
wire  signed [5:0] mul_res_823_fu_8967_p2;
reg  signed [5:0] mul_res_823_reg_24869;
wire  signed [5:0] mul_res_824_fu_8995_p2;
reg  signed [5:0] mul_res_824_reg_24874;
wire  signed [5:0] mul_res_825_fu_9023_p2;
reg  signed [5:0] mul_res_825_reg_24879;
wire  signed [5:0] mul_res_826_fu_9051_p2;
reg  signed [5:0] mul_res_826_reg_24884;
reg   [2:0] tmp_585_reg_24889;
wire  signed [5:0] mul_res_828_fu_9089_p2;
reg  signed [5:0] mul_res_828_reg_24894;
wire  signed [5:0] mul_res_829_fu_9117_p2;
reg  signed [5:0] mul_res_829_reg_24899;
reg   [2:0] tmp_588_reg_24904;
wire  signed [5:0] mul_res_831_fu_9155_p2;
reg  signed [5:0] mul_res_831_reg_24909;
wire  signed [5:0] mul_res_832_fu_9183_p2;
reg  signed [5:0] mul_res_832_reg_24914;
reg   [2:0] tmp_591_reg_24919;
wire  signed [5:0] mul_res_834_fu_9221_p2;
reg  signed [5:0] mul_res_834_reg_24924;
reg   [2:0] tmp_593_reg_24929;
reg   [2:0] tmp_594_reg_24934;
reg   [2:0] tmp_595_reg_24939;
wire  signed [5:0] mul_res_838_fu_9279_p2;
reg  signed [5:0] mul_res_838_reg_24944;
wire  signed [5:0] mul_res_839_fu_9307_p2;
reg  signed [5:0] mul_res_839_reg_24949;
wire  signed [5:0] mul_res_840_fu_9335_p2;
reg  signed [5:0] mul_res_840_reg_24954;
reg   [2:0] tmp_599_reg_24959;
wire  signed [5:0] mul_res_842_fu_9373_p2;
reg  signed [5:0] mul_res_842_reg_24964;
wire  signed [5:0] mul_res_843_fu_9401_p2;
reg  signed [5:0] mul_res_843_reg_24969;
reg   [2:0] tmp_602_reg_24974;
wire  signed [5:0] mul_res_845_fu_9439_p2;
reg  signed [5:0] mul_res_845_reg_24979;
wire  signed [5:0] mul_res_846_fu_9467_p2;
reg  signed [5:0] mul_res_846_reg_24984;
wire  signed [5:0] mul_res_847_fu_9495_p2;
reg  signed [5:0] mul_res_847_reg_24989;
wire  signed [5:0] mul_res_848_fu_9523_p2;
reg  signed [5:0] mul_res_848_reg_24994;
wire  signed [5:0] mul_res_849_fu_9551_p2;
reg  signed [5:0] mul_res_849_reg_24999;
wire  signed [5:0] mul_res_850_fu_9579_p2;
reg  signed [5:0] mul_res_850_reg_25004;
reg   [2:0] tmp_609_reg_25009;
wire  signed [5:0] mul_res_852_fu_9617_p2;
reg  signed [5:0] mul_res_852_reg_25014;
wire  signed [5:0] mul_res_853_fu_9645_p2;
reg  signed [5:0] mul_res_853_reg_25019;
reg   [2:0] tmp_612_reg_25024;
wire  signed [5:0] mul_res_855_fu_9683_p2;
reg  signed [5:0] mul_res_855_reg_25029;
wire  signed [5:0] mul_res_856_fu_9711_p2;
reg  signed [5:0] mul_res_856_reg_25034;
reg   [2:0] tmp_615_reg_25039;
wire  signed [5:0] mul_res_858_fu_9749_p2;
reg  signed [5:0] mul_res_858_reg_25044;
reg   [2:0] tmp_617_reg_25049;
reg   [2:0] tmp_618_reg_25054;
reg   [2:0] tmp_619_reg_25059;
wire  signed [5:0] mul_res_862_fu_9807_p2;
reg  signed [5:0] mul_res_862_reg_25064;
wire  signed [5:0] mul_res_863_fu_9835_p2;
reg  signed [5:0] mul_res_863_reg_25069;
wire  signed [5:0] mul_res_864_fu_9863_p2;
reg  signed [5:0] mul_res_864_reg_25074;
reg   [2:0] tmp_313_reg_25079;
wire  signed [5:0] mul_res_866_fu_9901_p2;
reg  signed [5:0] mul_res_866_reg_25084;
wire  signed [5:0] mul_res_867_fu_9929_p2;
reg  signed [5:0] mul_res_867_reg_25089;
reg   [2:0] tmp_316_reg_25094;
wire  signed [5:0] mul_res_869_fu_9967_p2;
reg  signed [5:0] mul_res_869_reg_25099;
wire  signed [5:0] mul_res_870_fu_9995_p2;
reg  signed [5:0] mul_res_870_reg_25104;
wire  signed [5:0] mul_res_871_fu_10023_p2;
reg  signed [5:0] mul_res_871_reg_25109;
wire  signed [5:0] mul_res_872_fu_10051_p2;
reg  signed [5:0] mul_res_872_reg_25114;
wire  signed [5:0] mul_res_873_fu_10079_p2;
reg  signed [5:0] mul_res_873_reg_25119;
wire  signed [5:0] mul_res_874_fu_10107_p2;
reg  signed [5:0] mul_res_874_reg_25124;
reg   [2:0] tmp_323_reg_25129;
wire  signed [5:0] mul_res_876_fu_10145_p2;
reg  signed [5:0] mul_res_876_reg_25134;
wire  signed [5:0] mul_res_877_fu_10173_p2;
reg  signed [5:0] mul_res_877_reg_25139;
reg   [2:0] tmp_326_reg_25144;
wire  signed [5:0] mul_res_879_fu_10211_p2;
reg  signed [5:0] mul_res_879_reg_25149;
wire  signed [5:0] mul_res_880_fu_10239_p2;
reg  signed [5:0] mul_res_880_reg_25154;
reg   [2:0] tmp_329_reg_25159;
wire  signed [5:0] mul_res_882_fu_10277_p2;
reg  signed [5:0] mul_res_882_reg_25164;
reg   [2:0] tmp_331_reg_25169;
reg   [2:0] tmp_332_reg_25174;
reg   [2:0] tmp_333_reg_25179;
wire  signed [5:0] mul_res_886_fu_10335_p2;
reg  signed [5:0] mul_res_886_reg_25184;
wire  signed [5:0] mul_res_887_fu_10349_p2;
reg  signed [5:0] mul_res_887_reg_25189;
wire  signed [5:0] mul_res_888_fu_10363_p2;
reg  signed [5:0] mul_res_888_reg_25194;
wire  signed [5:0] mul_res_890_fu_10377_p2;
reg  signed [5:0] mul_res_890_reg_25199;
wire  signed [5:0] mul_res_891_fu_10391_p2;
reg  signed [5:0] mul_res_891_reg_25204;
wire  signed [5:0] mul_res_893_fu_10405_p2;
reg  signed [5:0] mul_res_893_reg_25209;
wire  signed [5:0] mul_res_894_fu_10419_p2;
reg  signed [5:0] mul_res_894_reg_25214;
wire  signed [5:0] mul_res_895_fu_10433_p2;
reg  signed [5:0] mul_res_895_reg_25219;
wire  signed [5:0] mul_res_896_fu_10447_p2;
reg  signed [5:0] mul_res_896_reg_25224;
wire  signed [5:0] mul_res_897_fu_10461_p2;
reg  signed [5:0] mul_res_897_reg_25229;
wire  signed [5:0] mul_res_898_fu_10475_p2;
reg  signed [5:0] mul_res_898_reg_25234;
wire  signed [5:0] mul_res_900_fu_10489_p2;
reg  signed [5:0] mul_res_900_reg_25239;
wire  signed [5:0] mul_res_901_fu_10503_p2;
reg  signed [5:0] mul_res_901_reg_25244;
wire  signed [5:0] mul_res_903_fu_10517_p2;
reg  signed [5:0] mul_res_903_reg_25249;
wire  signed [5:0] mul_res_904_fu_10531_p2;
reg  signed [5:0] mul_res_904_reg_25254;
wire  signed [5:0] mul_res_906_fu_10545_p2;
reg  signed [5:0] mul_res_906_reg_25259;
wire  signed [5:0] mul_res_910_fu_10559_p2;
reg  signed [5:0] mul_res_910_reg_25264;
wire  signed [5:0] mul_res_911_fu_10573_p2;
reg  signed [5:0] mul_res_911_reg_25269;
wire  signed [5:0] mul_res_912_fu_10587_p2;
reg  signed [5:0] mul_res_912_reg_25274;
wire  signed [5:0] mul_res_914_fu_10601_p2;
reg  signed [5:0] mul_res_914_reg_25279;
wire  signed [5:0] mul_res_915_fu_10615_p2;
reg  signed [5:0] mul_res_915_reg_25284;
wire  signed [5:0] mul_res_917_fu_10629_p2;
reg  signed [5:0] mul_res_917_reg_25289;
wire  signed [5:0] mul_res_918_fu_10643_p2;
reg  signed [5:0] mul_res_918_reg_25294;
wire  signed [5:0] mul_res_919_fu_10657_p2;
reg  signed [5:0] mul_res_919_reg_25299;
wire  signed [5:0] mul_res_920_fu_10671_p2;
reg  signed [5:0] mul_res_920_reg_25304;
wire  signed [5:0] mul_res_921_fu_10685_p2;
reg  signed [5:0] mul_res_921_reg_25309;
wire  signed [5:0] mul_res_922_fu_10699_p2;
reg  signed [5:0] mul_res_922_reg_25314;
wire  signed [5:0] mul_res_924_fu_10713_p2;
reg  signed [5:0] mul_res_924_reg_25319;
wire  signed [5:0] mul_res_925_fu_10727_p2;
reg  signed [5:0] mul_res_925_reg_25324;
wire  signed [5:0] mul_res_927_fu_10741_p2;
reg  signed [5:0] mul_res_927_reg_25329;
wire  signed [5:0] mul_res_928_fu_10755_p2;
reg  signed [5:0] mul_res_928_reg_25334;
wire  signed [5:0] mul_res_930_fu_10769_p2;
reg  signed [5:0] mul_res_930_reg_25339;
wire  signed [5:0] mul_res_934_fu_10783_p2;
reg  signed [5:0] mul_res_934_reg_25344;
wire  signed [5:0] mul_res_935_fu_10797_p2;
reg  signed [5:0] mul_res_935_reg_25349;
wire  signed [5:0] mul_res_936_fu_10811_p2;
reg  signed [5:0] mul_res_936_reg_25354;
wire  signed [5:0] mul_res_938_fu_10825_p2;
reg  signed [5:0] mul_res_938_reg_25359;
wire  signed [5:0] mul_res_939_fu_10839_p2;
reg  signed [5:0] mul_res_939_reg_25364;
wire  signed [5:0] mul_res_941_fu_10853_p2;
reg  signed [5:0] mul_res_941_reg_25369;
wire  signed [5:0] mul_res_942_fu_10867_p2;
reg  signed [5:0] mul_res_942_reg_25374;
wire  signed [5:0] mul_res_943_fu_10881_p2;
reg  signed [5:0] mul_res_943_reg_25379;
wire  signed [5:0] mul_res_944_fu_10895_p2;
reg  signed [5:0] mul_res_944_reg_25384;
wire  signed [5:0] mul_res_945_fu_10909_p2;
reg  signed [5:0] mul_res_945_reg_25389;
wire  signed [5:0] mul_res_946_fu_10923_p2;
reg  signed [5:0] mul_res_946_reg_25394;
wire  signed [5:0] mul_res_948_fu_10937_p2;
reg  signed [5:0] mul_res_948_reg_25399;
wire  signed [5:0] mul_res_949_fu_10951_p2;
reg  signed [5:0] mul_res_949_reg_25404;
wire  signed [5:0] mul_res_951_fu_10965_p2;
reg  signed [5:0] mul_res_951_reg_25409;
wire  signed [5:0] mul_res_952_fu_10979_p2;
reg  signed [5:0] mul_res_952_reg_25414;
wire  signed [5:0] mul_res_954_fu_10993_p2;
reg  signed [5:0] mul_res_954_reg_25419;
wire  signed [5:0] mul_res_958_fu_11007_p2;
reg  signed [5:0] mul_res_958_reg_25424;
wire  signed [5:0] mul_res_959_fu_11021_p2;
reg  signed [5:0] mul_res_959_reg_25429;
wire  signed [5:0] mul_res_960_fu_11035_p2;
reg  signed [5:0] mul_res_960_reg_25434;
wire  signed [5:0] mul_res_962_fu_11049_p2;
reg  signed [5:0] mul_res_962_reg_25439;
wire  signed [5:0] mul_res_963_fu_11063_p2;
reg  signed [5:0] mul_res_963_reg_25444;
wire  signed [5:0] mul_res_965_fu_11077_p2;
reg  signed [5:0] mul_res_965_reg_25449;
wire  signed [5:0] mul_res_966_fu_11091_p2;
reg  signed [5:0] mul_res_966_reg_25454;
wire  signed [5:0] mul_res_967_fu_11105_p2;
reg  signed [5:0] mul_res_967_reg_25459;
wire  signed [5:0] mul_res_968_fu_11119_p2;
reg  signed [5:0] mul_res_968_reg_25464;
wire  signed [5:0] mul_res_969_fu_11133_p2;
reg  signed [5:0] mul_res_969_reg_25469;
wire  signed [5:0] mul_res_970_fu_11147_p2;
reg  signed [5:0] mul_res_970_reg_25474;
wire  signed [5:0] mul_res_972_fu_11161_p2;
reg  signed [5:0] mul_res_972_reg_25479;
wire  signed [5:0] mul_res_973_fu_11175_p2;
reg  signed [5:0] mul_res_973_reg_25484;
wire  signed [5:0] mul_res_975_fu_11189_p2;
reg  signed [5:0] mul_res_975_reg_25489;
wire  signed [5:0] mul_res_976_fu_11203_p2;
reg  signed [5:0] mul_res_976_reg_25494;
wire  signed [5:0] mul_res_978_fu_11217_p2;
reg  signed [5:0] mul_res_978_reg_25499;
wire  signed [5:0] mul_res_982_fu_11231_p2;
reg  signed [5:0] mul_res_982_reg_25504;
wire  signed [5:0] mul_res_983_fu_11245_p2;
reg  signed [5:0] mul_res_983_reg_25509;
wire  signed [5:0] mul_res_984_fu_11259_p2;
reg  signed [5:0] mul_res_984_reg_25514;
wire  signed [5:0] mul_res_986_fu_11273_p2;
reg  signed [5:0] mul_res_986_reg_25519;
wire  signed [5:0] mul_res_987_fu_11287_p2;
reg  signed [5:0] mul_res_987_reg_25524;
wire  signed [5:0] mul_res_989_fu_11301_p2;
reg  signed [5:0] mul_res_989_reg_25529;
wire  signed [5:0] mul_res_990_fu_11315_p2;
reg  signed [5:0] mul_res_990_reg_25534;
wire  signed [5:0] mul_res_991_fu_11329_p2;
reg  signed [5:0] mul_res_991_reg_25539;
wire  signed [5:0] mul_res_992_fu_11343_p2;
reg  signed [5:0] mul_res_992_reg_25544;
wire  signed [5:0] mul_res_993_fu_11357_p2;
reg  signed [5:0] mul_res_993_reg_25549;
wire  signed [5:0] mul_res_994_fu_11371_p2;
reg  signed [5:0] mul_res_994_reg_25554;
wire  signed [5:0] mul_res_996_fu_11385_p2;
reg  signed [5:0] mul_res_996_reg_25559;
wire  signed [5:0] mul_res_997_fu_11399_p2;
reg  signed [5:0] mul_res_997_reg_25564;
wire  signed [5:0] mul_res_999_fu_11413_p2;
reg  signed [5:0] mul_res_999_reg_25569;
wire  signed [5:0] mul_res_1000_fu_11427_p2;
reg  signed [5:0] mul_res_1000_reg_25574;
wire  signed [5:0] mul_res_1002_fu_11441_p2;
reg  signed [5:0] mul_res_1002_reg_25579;
wire  signed [5:0] mul_res_1006_fu_11455_p2;
reg  signed [5:0] mul_res_1006_reg_25584;
wire  signed [5:0] mul_res_1007_fu_11469_p2;
reg  signed [5:0] mul_res_1007_reg_25589;
wire  signed [5:0] mul_res_1008_fu_11483_p2;
reg  signed [5:0] mul_res_1008_reg_25594;
wire  signed [5:0] mul_res_1010_fu_11497_p2;
reg  signed [5:0] mul_res_1010_reg_25599;
wire  signed [5:0] mul_res_1011_fu_11511_p2;
reg  signed [5:0] mul_res_1011_reg_25604;
wire  signed [5:0] mul_res_1013_fu_11525_p2;
reg  signed [5:0] mul_res_1013_reg_25609;
wire  signed [5:0] mul_res_1014_fu_11539_p2;
reg  signed [5:0] mul_res_1014_reg_25614;
wire  signed [5:0] mul_res_1015_fu_11553_p2;
reg  signed [5:0] mul_res_1015_reg_25619;
wire  signed [5:0] mul_res_1016_fu_11567_p2;
reg  signed [5:0] mul_res_1016_reg_25624;
wire  signed [5:0] mul_res_1017_fu_11581_p2;
reg  signed [5:0] mul_res_1017_reg_25629;
wire  signed [5:0] mul_res_1018_fu_11595_p2;
reg  signed [5:0] mul_res_1018_reg_25634;
wire  signed [5:0] mul_res_1020_fu_11609_p2;
reg  signed [5:0] mul_res_1020_reg_25639;
wire  signed [5:0] mul_res_1021_fu_11623_p2;
reg  signed [5:0] mul_res_1021_reg_25644;
wire  signed [5:0] mul_res_1023_fu_11637_p2;
reg  signed [5:0] mul_res_1023_reg_25649;
wire  signed [5:0] mul_res_1024_fu_11651_p2;
reg  signed [5:0] mul_res_1024_reg_25654;
wire  signed [5:0] mul_res_1026_fu_11665_p2;
reg  signed [5:0] mul_res_1026_reg_25659;
wire  signed [5:0] mul_res_1030_fu_11679_p2;
reg  signed [5:0] mul_res_1030_reg_25664;
wire  signed [5:0] mul_res_1031_fu_11693_p2;
reg  signed [5:0] mul_res_1031_reg_25669;
wire  signed [5:0] mul_res_1032_fu_11707_p2;
reg  signed [5:0] mul_res_1032_reg_25674;
wire  signed [5:0] mul_res_1034_fu_11721_p2;
reg  signed [5:0] mul_res_1034_reg_25679;
wire  signed [5:0] mul_res_1035_fu_11735_p2;
reg  signed [5:0] mul_res_1035_reg_25684;
wire  signed [5:0] mul_res_1037_fu_11749_p2;
reg  signed [5:0] mul_res_1037_reg_25689;
wire  signed [5:0] mul_res_1038_fu_11763_p2;
reg  signed [5:0] mul_res_1038_reg_25694;
wire  signed [5:0] mul_res_1039_fu_11777_p2;
reg  signed [5:0] mul_res_1039_reg_25699;
wire  signed [5:0] mul_res_1040_fu_11791_p2;
reg  signed [5:0] mul_res_1040_reg_25704;
wire  signed [5:0] mul_res_1041_fu_11805_p2;
reg  signed [5:0] mul_res_1041_reg_25709;
wire  signed [5:0] mul_res_1042_fu_11819_p2;
reg  signed [5:0] mul_res_1042_reg_25714;
wire  signed [5:0] mul_res_1044_fu_11833_p2;
reg  signed [5:0] mul_res_1044_reg_25719;
wire  signed [5:0] mul_res_1045_fu_11847_p2;
reg  signed [5:0] mul_res_1045_reg_25724;
wire  signed [5:0] mul_res_1047_fu_11861_p2;
reg  signed [5:0] mul_res_1047_reg_25729;
wire  signed [5:0] mul_res_1048_fu_11875_p2;
reg  signed [5:0] mul_res_1048_reg_25734;
wire  signed [5:0] mul_res_1050_fu_11889_p2;
reg  signed [5:0] mul_res_1050_reg_25739;
wire  signed [5:0] mul_res_1054_fu_11903_p2;
reg  signed [5:0] mul_res_1054_reg_25744;
wire  signed [5:0] mul_res_1055_fu_11917_p2;
reg  signed [5:0] mul_res_1055_reg_25749;
wire  signed [5:0] mul_res_1056_fu_11931_p2;
reg  signed [5:0] mul_res_1056_reg_25754;
wire  signed [5:0] mul_res_1058_fu_11945_p2;
reg  signed [5:0] mul_res_1058_reg_25759;
wire  signed [5:0] mul_res_1059_fu_11959_p2;
reg  signed [5:0] mul_res_1059_reg_25764;
wire  signed [5:0] mul_res_1061_fu_11973_p2;
reg  signed [5:0] mul_res_1061_reg_25769;
wire  signed [5:0] mul_res_1062_fu_11987_p2;
reg  signed [5:0] mul_res_1062_reg_25774;
wire  signed [5:0] mul_res_1063_fu_12001_p2;
reg  signed [5:0] mul_res_1063_reg_25779;
wire  signed [5:0] mul_res_1064_fu_12015_p2;
reg  signed [5:0] mul_res_1064_reg_25784;
wire  signed [5:0] mul_res_1065_fu_12029_p2;
reg  signed [5:0] mul_res_1065_reg_25789;
wire  signed [5:0] mul_res_1066_fu_12043_p2;
reg  signed [5:0] mul_res_1066_reg_25794;
wire  signed [5:0] mul_res_1068_fu_12057_p2;
reg  signed [5:0] mul_res_1068_reg_25799;
wire  signed [5:0] mul_res_1069_fu_12071_p2;
reg  signed [5:0] mul_res_1069_reg_25804;
wire  signed [5:0] mul_res_1071_fu_12085_p2;
reg  signed [5:0] mul_res_1071_reg_25809;
wire  signed [5:0] mul_res_1072_fu_12099_p2;
reg  signed [5:0] mul_res_1072_reg_25814;
wire  signed [5:0] mul_res_1074_fu_12113_p2;
reg  signed [5:0] mul_res_1074_reg_25819;
wire  signed [5:0] mul_res_1078_fu_12127_p2;
reg  signed [5:0] mul_res_1078_reg_25824;
wire  signed [5:0] mul_res_1079_fu_12141_p2;
reg  signed [5:0] mul_res_1079_reg_25829;
wire  signed [5:0] mul_res_1080_fu_12155_p2;
reg  signed [5:0] mul_res_1080_reg_25834;
wire  signed [5:0] mul_res_1082_fu_12169_p2;
reg  signed [5:0] mul_res_1082_reg_25839;
wire  signed [5:0] mul_res_1083_fu_12183_p2;
reg  signed [5:0] mul_res_1083_reg_25844;
wire  signed [5:0] mul_res_1085_fu_12197_p2;
reg  signed [5:0] mul_res_1085_reg_25849;
wire  signed [5:0] mul_res_1086_fu_12211_p2;
reg  signed [5:0] mul_res_1086_reg_25854;
wire  signed [5:0] mul_res_1087_fu_12225_p2;
reg  signed [5:0] mul_res_1087_reg_25859;
wire  signed [5:0] mul_res_1088_fu_12239_p2;
reg  signed [5:0] mul_res_1088_reg_25864;
wire  signed [5:0] mul_res_1089_fu_12253_p2;
reg  signed [5:0] mul_res_1089_reg_25869;
wire  signed [5:0] mul_res_1090_fu_12267_p2;
reg  signed [5:0] mul_res_1090_reg_25874;
wire  signed [5:0] mul_res_1092_fu_12281_p2;
reg  signed [5:0] mul_res_1092_reg_25879;
wire  signed [5:0] mul_res_1093_fu_12295_p2;
reg  signed [5:0] mul_res_1093_reg_25884;
wire  signed [5:0] mul_res_1095_fu_12309_p2;
reg  signed [5:0] mul_res_1095_reg_25889;
wire  signed [5:0] mul_res_1096_fu_12323_p2;
reg  signed [5:0] mul_res_1096_reg_25894;
wire  signed [5:0] mul_res_1098_fu_12337_p2;
reg  signed [5:0] mul_res_1098_reg_25899;
wire  signed [5:0] mul_res_1102_fu_12351_p2;
reg  signed [5:0] mul_res_1102_reg_25904;
wire  signed [5:0] mul_res_1103_fu_12365_p2;
reg  signed [5:0] mul_res_1103_reg_25909;
wire  signed [5:0] mul_res_1104_fu_12379_p2;
reg  signed [5:0] mul_res_1104_reg_25914;
wire  signed [5:0] mul_res_1106_fu_12393_p2;
reg  signed [5:0] mul_res_1106_reg_25919;
wire  signed [5:0] mul_res_1107_fu_12407_p2;
reg  signed [5:0] mul_res_1107_reg_25924;
wire  signed [5:0] mul_res_1109_fu_12421_p2;
reg  signed [5:0] mul_res_1109_reg_25929;
wire  signed [5:0] mul_res_1110_fu_12435_p2;
reg  signed [5:0] mul_res_1110_reg_25934;
wire  signed [5:0] mul_res_1111_fu_12449_p2;
reg  signed [5:0] mul_res_1111_reg_25939;
wire  signed [5:0] mul_res_1112_fu_12463_p2;
reg  signed [5:0] mul_res_1112_reg_25944;
wire  signed [5:0] mul_res_1113_fu_12477_p2;
reg  signed [5:0] mul_res_1113_reg_25949;
wire  signed [5:0] mul_res_1114_fu_12491_p2;
reg  signed [5:0] mul_res_1114_reg_25954;
wire  signed [5:0] mul_res_1116_fu_12505_p2;
reg  signed [5:0] mul_res_1116_reg_25959;
wire  signed [5:0] mul_res_1117_fu_12519_p2;
reg  signed [5:0] mul_res_1117_reg_25964;
wire  signed [5:0] mul_res_1119_fu_12533_p2;
reg  signed [5:0] mul_res_1119_reg_25969;
wire  signed [5:0] mul_res_1120_fu_12547_p2;
reg  signed [5:0] mul_res_1120_reg_25974;
wire  signed [5:0] mul_res_1122_fu_12561_p2;
reg  signed [5:0] mul_res_1122_reg_25979;
wire  signed [5:0] mul_res_1126_fu_12575_p2;
reg  signed [5:0] mul_res_1126_reg_25984;
wire  signed [5:0] mul_res_1127_fu_12589_p2;
reg  signed [5:0] mul_res_1127_reg_25989;
wire  signed [5:0] mul_res_1128_fu_12603_p2;
reg  signed [5:0] mul_res_1128_reg_25994;
wire  signed [5:0] mul_res_1130_fu_12617_p2;
reg  signed [5:0] mul_res_1130_reg_25999;
wire  signed [5:0] mul_res_1131_fu_12631_p2;
reg  signed [5:0] mul_res_1131_reg_26004;
wire  signed [5:0] mul_res_1133_fu_12645_p2;
reg  signed [5:0] mul_res_1133_reg_26009;
wire  signed [5:0] mul_res_1134_fu_12659_p2;
reg  signed [5:0] mul_res_1134_reg_26014;
wire  signed [5:0] mul_res_1135_fu_12673_p2;
reg  signed [5:0] mul_res_1135_reg_26019;
wire  signed [5:0] mul_res_1136_fu_12687_p2;
reg  signed [5:0] mul_res_1136_reg_26024;
wire  signed [5:0] mul_res_1137_fu_12701_p2;
reg  signed [5:0] mul_res_1137_reg_26029;
wire  signed [5:0] mul_res_1138_fu_12715_p2;
reg  signed [5:0] mul_res_1138_reg_26034;
wire  signed [5:0] mul_res_1140_fu_12729_p2;
reg  signed [5:0] mul_res_1140_reg_26039;
wire  signed [5:0] mul_res_1141_fu_12743_p2;
reg  signed [5:0] mul_res_1141_reg_26044;
wire  signed [5:0] mul_res_1143_fu_12757_p2;
reg  signed [5:0] mul_res_1143_reg_26049;
wire  signed [5:0] mul_res_1144_fu_12771_p2;
reg  signed [5:0] mul_res_1144_reg_26054;
wire  signed [5:0] mul_res_1146_fu_12785_p2;
reg  signed [5:0] mul_res_1146_reg_26059;
wire  signed [5:0] mul_res_1150_fu_12799_p2;
reg  signed [5:0] mul_res_1150_reg_26064;
wire   [9:0] trunc_ln131_fu_12805_p1;
reg   [9:0] trunc_ln131_reg_26069;
reg   [9:0] trunc_ln131_1_reg_26075;
reg   [9:0] trunc_ln131_2_reg_26081;
reg   [9:0] trunc_ln131_3_reg_26087;
reg   [9:0] trunc_ln131_4_reg_26093;
reg   [9:0] trunc_ln131_5_reg_26099;
reg   [9:0] trunc_ln131_6_reg_26105;
reg   [9:0] trunc_ln131_7_reg_26111;
reg   [9:0] trunc_ln131_8_reg_26117;
reg   [9:0] trunc_ln131_9_reg_26123;
reg   [9:0] trunc_ln131_s_reg_26129;
reg   [7:0] tmp_reg_26135;
wire   [6:0] add_ln153_fu_13117_p2;
reg   [6:0] add_ln153_reg_26140;
wire   [7:0] add_ln153_3_fu_13133_p2;
reg   [7:0] add_ln153_3_reg_26145;
wire   [8:0] add_ln153_9_fu_13179_p2;
reg   [8:0] add_ln153_9_reg_26150;
wire   [7:0] add_ln153_12_fu_13195_p2;
reg   [7:0] add_ln153_12_reg_26155;
wire   [7:0] add_ln153_14_fu_13211_p2;
reg   [7:0] add_ln153_14_reg_26160;
wire   [7:0] add_ln153_17_fu_13227_p2;
reg   [7:0] add_ln153_17_reg_26165;
wire   [7:0] add_ln153_20_fu_13253_p2;
reg   [7:0] add_ln153_20_reg_26170;
wire   [6:0] add_ln153_24_fu_13439_p2;
reg   [6:0] add_ln153_24_reg_26175;
wire   [7:0] add_ln153_27_fu_13455_p2;
reg   [7:0] add_ln153_27_reg_26180;
wire   [8:0] add_ln153_33_fu_13501_p2;
reg   [8:0] add_ln153_33_reg_26185;
wire   [7:0] add_ln153_36_fu_13517_p2;
reg   [7:0] add_ln153_36_reg_26190;
wire   [7:0] add_ln153_38_fu_13533_p2;
reg   [7:0] add_ln153_38_reg_26195;
wire   [7:0] add_ln153_41_fu_13549_p2;
reg   [7:0] add_ln153_41_reg_26200;
wire   [7:0] add_ln153_44_fu_13575_p2;
reg   [7:0] add_ln153_44_reg_26205;
wire   [6:0] add_ln153_48_fu_13761_p2;
reg   [6:0] add_ln153_48_reg_26210;
wire   [7:0] add_ln153_51_fu_13777_p2;
reg   [7:0] add_ln153_51_reg_26215;
wire   [8:0] add_ln153_57_fu_13823_p2;
reg   [8:0] add_ln153_57_reg_26220;
wire   [7:0] add_ln153_60_fu_13839_p2;
reg   [7:0] add_ln153_60_reg_26225;
wire   [7:0] add_ln153_62_fu_13855_p2;
reg   [7:0] add_ln153_62_reg_26230;
wire   [7:0] add_ln153_65_fu_13871_p2;
reg   [7:0] add_ln153_65_reg_26235;
wire   [7:0] add_ln153_68_fu_13897_p2;
reg   [7:0] add_ln153_68_reg_26240;
wire   [6:0] add_ln153_72_fu_14083_p2;
reg   [6:0] add_ln153_72_reg_26245;
wire   [7:0] add_ln153_75_fu_14099_p2;
reg   [7:0] add_ln153_75_reg_26250;
wire   [8:0] add_ln153_81_fu_14145_p2;
reg   [8:0] add_ln153_81_reg_26255;
wire   [7:0] add_ln153_84_fu_14161_p2;
reg   [7:0] add_ln153_84_reg_26260;
wire   [7:0] add_ln153_86_fu_14177_p2;
reg   [7:0] add_ln153_86_reg_26265;
wire   [7:0] add_ln153_89_fu_14193_p2;
reg   [7:0] add_ln153_89_reg_26270;
wire   [7:0] add_ln153_92_fu_14219_p2;
reg   [7:0] add_ln153_92_reg_26275;
wire   [6:0] add_ln153_96_fu_14405_p2;
reg   [6:0] add_ln153_96_reg_26280;
wire   [7:0] add_ln153_99_fu_14421_p2;
reg   [7:0] add_ln153_99_reg_26285;
wire   [8:0] add_ln153_105_fu_14467_p2;
reg   [8:0] add_ln153_105_reg_26290;
wire   [7:0] add_ln153_108_fu_14483_p2;
reg   [7:0] add_ln153_108_reg_26295;
wire   [7:0] add_ln153_110_fu_14499_p2;
reg   [7:0] add_ln153_110_reg_26300;
wire   [7:0] add_ln153_113_fu_14515_p2;
reg   [7:0] add_ln153_113_reg_26305;
wire   [7:0] add_ln153_116_fu_14541_p2;
reg   [7:0] add_ln153_116_reg_26310;
wire   [6:0] add_ln153_120_fu_14727_p2;
reg   [6:0] add_ln153_120_reg_26315;
wire   [7:0] add_ln153_123_fu_14743_p2;
reg   [7:0] add_ln153_123_reg_26320;
wire   [8:0] add_ln153_129_fu_14789_p2;
reg   [8:0] add_ln153_129_reg_26325;
wire   [7:0] add_ln153_132_fu_14805_p2;
reg   [7:0] add_ln153_132_reg_26330;
wire   [7:0] add_ln153_134_fu_14821_p2;
reg   [7:0] add_ln153_134_reg_26335;
wire   [7:0] add_ln153_137_fu_14837_p2;
reg   [7:0] add_ln153_137_reg_26340;
wire   [7:0] add_ln153_140_fu_14863_p2;
reg   [7:0] add_ln153_140_reg_26345;
wire   [6:0] add_ln153_144_fu_15049_p2;
reg   [6:0] add_ln153_144_reg_26350;
wire   [7:0] add_ln153_147_fu_15065_p2;
reg   [7:0] add_ln153_147_reg_26355;
wire   [8:0] add_ln153_153_fu_15111_p2;
reg   [8:0] add_ln153_153_reg_26360;
wire   [7:0] add_ln153_156_fu_15127_p2;
reg   [7:0] add_ln153_156_reg_26365;
wire   [7:0] add_ln153_158_fu_15143_p2;
reg   [7:0] add_ln153_158_reg_26370;
wire   [7:0] add_ln153_161_fu_15159_p2;
reg   [7:0] add_ln153_161_reg_26375;
wire   [7:0] add_ln153_164_fu_15185_p2;
reg   [7:0] add_ln153_164_reg_26380;
wire   [6:0] add_ln153_168_fu_15371_p2;
reg   [6:0] add_ln153_168_reg_26385;
wire   [7:0] add_ln153_171_fu_15387_p2;
reg   [7:0] add_ln153_171_reg_26390;
wire   [8:0] add_ln153_177_fu_15433_p2;
reg   [8:0] add_ln153_177_reg_26395;
wire   [7:0] add_ln153_180_fu_15449_p2;
reg   [7:0] add_ln153_180_reg_26400;
wire   [7:0] add_ln153_182_fu_15465_p2;
reg   [7:0] add_ln153_182_reg_26405;
wire   [7:0] add_ln153_185_fu_15481_p2;
reg   [7:0] add_ln153_185_reg_26410;
wire   [7:0] add_ln153_188_fu_15507_p2;
reg   [7:0] add_ln153_188_reg_26415;
wire   [6:0] add_ln153_192_fu_15693_p2;
reg   [6:0] add_ln153_192_reg_26420;
wire   [7:0] add_ln153_195_fu_15709_p2;
reg   [7:0] add_ln153_195_reg_26425;
wire   [8:0] add_ln153_201_fu_15755_p2;
reg   [8:0] add_ln153_201_reg_26430;
wire   [7:0] add_ln153_204_fu_15771_p2;
reg   [7:0] add_ln153_204_reg_26435;
wire   [7:0] add_ln153_206_fu_15787_p2;
reg   [7:0] add_ln153_206_reg_26440;
wire   [7:0] add_ln153_209_fu_15803_p2;
reg   [7:0] add_ln153_209_reg_26445;
wire   [7:0] add_ln153_212_fu_15829_p2;
reg   [7:0] add_ln153_212_reg_26450;
wire   [6:0] add_ln153_216_fu_16015_p2;
reg   [6:0] add_ln153_216_reg_26455;
wire   [7:0] add_ln153_219_fu_16031_p2;
reg   [7:0] add_ln153_219_reg_26460;
wire   [8:0] add_ln153_225_fu_16077_p2;
reg   [8:0] add_ln153_225_reg_26465;
wire   [7:0] add_ln153_228_fu_16093_p2;
reg   [7:0] add_ln153_228_reg_26470;
wire   [7:0] add_ln153_230_fu_16109_p2;
reg   [7:0] add_ln153_230_reg_26475;
wire   [7:0] add_ln153_233_fu_16125_p2;
reg   [7:0] add_ln153_233_reg_26480;
wire   [7:0] add_ln153_236_fu_16151_p2;
reg   [7:0] add_ln153_236_reg_26485;
wire   [6:0] add_ln153_240_fu_16369_p2;
reg   [6:0] add_ln153_240_reg_26490;
wire   [7:0] add_ln153_243_fu_16385_p2;
reg   [7:0] add_ln153_243_reg_26495;
wire   [7:0] add_ln153_246_fu_16401_p2;
reg   [7:0] add_ln153_246_reg_26500;
wire   [7:0] add_ln153_248_fu_16417_p2;
reg   [7:0] add_ln153_248_reg_26505;
wire   [7:0] add_ln153_252_fu_16433_p2;
reg   [7:0] add_ln153_252_reg_26510;
wire   [7:0] add_ln153_254_fu_16449_p2;
reg   [7:0] add_ln153_254_reg_26515;
wire   [7:0] add_ln153_257_fu_16465_p2;
reg   [7:0] add_ln153_257_reg_26520;
wire   [7:0] add_ln153_260_fu_16491_p2;
reg   [7:0] add_ln153_260_reg_26525;
wire   [6:0] add_ln153_264_fu_16709_p2;
reg   [6:0] add_ln153_264_reg_26530;
wire   [7:0] add_ln153_267_fu_16725_p2;
reg   [7:0] add_ln153_267_reg_26535;
wire   [7:0] add_ln153_270_fu_16741_p2;
reg   [7:0] add_ln153_270_reg_26540;
wire   [7:0] add_ln153_272_fu_16757_p2;
reg   [7:0] add_ln153_272_reg_26545;
wire   [7:0] add_ln153_276_fu_16773_p2;
reg   [7:0] add_ln153_276_reg_26550;
wire   [7:0] add_ln153_278_fu_16789_p2;
reg   [7:0] add_ln153_278_reg_26555;
wire   [7:0] add_ln153_281_fu_16805_p2;
reg   [7:0] add_ln153_281_reg_26560;
wire   [7:0] add_ln153_284_fu_16831_p2;
reg   [7:0] add_ln153_284_reg_26565;
wire   [6:0] add_ln153_288_fu_17049_p2;
reg   [6:0] add_ln153_288_reg_26570;
wire   [7:0] add_ln153_291_fu_17065_p2;
reg   [7:0] add_ln153_291_reg_26575;
wire   [7:0] add_ln153_294_fu_17081_p2;
reg   [7:0] add_ln153_294_reg_26580;
wire   [7:0] add_ln153_296_fu_17097_p2;
reg   [7:0] add_ln153_296_reg_26585;
wire   [7:0] add_ln153_300_fu_17113_p2;
reg   [7:0] add_ln153_300_reg_26590;
wire   [7:0] add_ln153_302_fu_17129_p2;
reg   [7:0] add_ln153_302_reg_26595;
wire   [7:0] add_ln153_305_fu_17145_p2;
reg   [7:0] add_ln153_305_reg_26600;
wire   [7:0] add_ln153_308_fu_17171_p2;
reg   [7:0] add_ln153_308_reg_26605;
wire   [6:0] add_ln153_312_fu_17365_p2;
reg   [6:0] add_ln153_312_reg_26610;
wire   [7:0] add_ln153_315_fu_17381_p2;
reg   [7:0] add_ln153_315_reg_26615;
wire   [7:0] add_ln153_318_fu_17397_p2;
reg   [7:0] add_ln153_318_reg_26620;
wire   [7:0] add_ln153_320_fu_17413_p2;
reg   [7:0] add_ln153_320_reg_26625;
wire   [7:0] add_ln153_324_fu_17429_p2;
reg   [7:0] add_ln153_324_reg_26630;
wire   [7:0] add_ln153_326_fu_17445_p2;
reg   [7:0] add_ln153_326_reg_26635;
wire   [7:0] add_ln153_329_fu_17461_p2;
reg   [7:0] add_ln153_329_reg_26640;
wire   [7:0] add_ln153_332_fu_17487_p2;
reg   [7:0] add_ln153_332_reg_26645;
wire   [6:0] add_ln153_336_fu_17681_p2;
reg   [6:0] add_ln153_336_reg_26650;
wire   [7:0] add_ln153_339_fu_17697_p2;
reg   [7:0] add_ln153_339_reg_26655;
wire   [7:0] add_ln153_342_fu_17713_p2;
reg   [7:0] add_ln153_342_reg_26660;
wire   [7:0] add_ln153_344_fu_17729_p2;
reg   [7:0] add_ln153_344_reg_26665;
wire   [7:0] add_ln153_348_fu_17745_p2;
reg   [7:0] add_ln153_348_reg_26670;
wire   [7:0] add_ln153_350_fu_17761_p2;
reg   [7:0] add_ln153_350_reg_26675;
wire   [7:0] add_ln153_353_fu_17777_p2;
reg   [7:0] add_ln153_353_reg_26680;
wire   [7:0] add_ln153_356_fu_17803_p2;
reg   [7:0] add_ln153_356_reg_26685;
wire   [6:0] add_ln153_360_fu_17997_p2;
reg   [6:0] add_ln153_360_reg_26690;
wire   [7:0] add_ln153_363_fu_18013_p2;
reg   [7:0] add_ln153_363_reg_26695;
wire   [7:0] add_ln153_366_fu_18029_p2;
reg   [7:0] add_ln153_366_reg_26700;
wire   [7:0] add_ln153_368_fu_18045_p2;
reg   [7:0] add_ln153_368_reg_26705;
wire   [7:0] add_ln153_372_fu_18061_p2;
reg   [7:0] add_ln153_372_reg_26710;
wire   [7:0] add_ln153_374_fu_18077_p2;
reg   [7:0] add_ln153_374_reg_26715;
wire   [7:0] add_ln153_377_fu_18093_p2;
reg   [7:0] add_ln153_377_reg_26720;
wire   [7:0] add_ln153_380_fu_18119_p2;
reg   [7:0] add_ln153_380_reg_26725;
wire   [6:0] add_ln153_384_fu_18313_p2;
reg   [6:0] add_ln153_384_reg_26730;
wire   [7:0] add_ln153_387_fu_18329_p2;
reg   [7:0] add_ln153_387_reg_26735;
wire   [7:0] add_ln153_390_fu_18345_p2;
reg   [7:0] add_ln153_390_reg_26740;
wire   [7:0] add_ln153_392_fu_18361_p2;
reg   [7:0] add_ln153_392_reg_26745;
wire   [7:0] add_ln153_396_fu_18377_p2;
reg   [7:0] add_ln153_396_reg_26750;
wire   [7:0] add_ln153_398_fu_18393_p2;
reg   [7:0] add_ln153_398_reg_26755;
wire   [7:0] add_ln153_401_fu_18409_p2;
reg   [7:0] add_ln153_401_reg_26760;
wire   [7:0] add_ln153_404_fu_18435_p2;
reg   [7:0] add_ln153_404_reg_26765;
wire   [6:0] add_ln153_408_fu_18629_p2;
reg   [6:0] add_ln153_408_reg_26770;
wire   [7:0] add_ln153_411_fu_18645_p2;
reg   [7:0] add_ln153_411_reg_26775;
wire   [7:0] add_ln153_414_fu_18661_p2;
reg   [7:0] add_ln153_414_reg_26780;
wire   [7:0] add_ln153_416_fu_18677_p2;
reg   [7:0] add_ln153_416_reg_26785;
wire   [7:0] add_ln153_420_fu_18693_p2;
reg   [7:0] add_ln153_420_reg_26790;
wire   [7:0] add_ln153_422_fu_18709_p2;
reg   [7:0] add_ln153_422_reg_26795;
wire   [7:0] add_ln153_425_fu_18725_p2;
reg   [7:0] add_ln153_425_reg_26800;
wire   [7:0] add_ln153_428_fu_18751_p2;
reg   [7:0] add_ln153_428_reg_26805;
wire   [6:0] add_ln153_432_fu_18945_p2;
reg   [6:0] add_ln153_432_reg_26810;
wire   [7:0] add_ln153_435_fu_18961_p2;
reg   [7:0] add_ln153_435_reg_26815;
wire   [7:0] add_ln153_438_fu_18977_p2;
reg   [7:0] add_ln153_438_reg_26820;
wire   [7:0] add_ln153_440_fu_18993_p2;
reg   [7:0] add_ln153_440_reg_26825;
wire   [7:0] add_ln153_444_fu_19009_p2;
reg   [7:0] add_ln153_444_reg_26830;
wire   [7:0] add_ln153_446_fu_19025_p2;
reg   [7:0] add_ln153_446_reg_26835;
wire   [7:0] add_ln153_449_fu_19041_p2;
reg   [7:0] add_ln153_449_reg_26840;
wire   [7:0] add_ln153_452_fu_19067_p2;
reg   [7:0] add_ln153_452_reg_26845;
wire   [6:0] add_ln153_456_fu_19261_p2;
reg   [6:0] add_ln153_456_reg_26850;
wire   [7:0] add_ln153_459_fu_19277_p2;
reg   [7:0] add_ln153_459_reg_26855;
wire   [7:0] add_ln153_462_fu_19293_p2;
reg   [7:0] add_ln153_462_reg_26860;
wire   [7:0] add_ln153_464_fu_19309_p2;
reg   [7:0] add_ln153_464_reg_26865;
wire   [7:0] add_ln153_468_fu_19325_p2;
reg   [7:0] add_ln153_468_reg_26870;
wire   [7:0] add_ln153_470_fu_19341_p2;
reg   [7:0] add_ln153_470_reg_26875;
wire   [7:0] add_ln153_473_fu_19357_p2;
reg   [7:0] add_ln153_473_reg_26880;
wire   [7:0] add_ln153_476_fu_19383_p2;
reg   [7:0] add_ln153_476_reg_26885;
wire   [6:0] add_ln153_480_fu_19577_p2;
reg   [6:0] add_ln153_480_reg_26890;
wire   [7:0] add_ln153_483_fu_19593_p2;
reg   [7:0] add_ln153_483_reg_26895;
wire   [7:0] add_ln153_486_fu_19609_p2;
reg   [7:0] add_ln153_486_reg_26900;
wire   [7:0] add_ln153_488_fu_19625_p2;
reg   [7:0] add_ln153_488_reg_26905;
wire   [7:0] add_ln153_492_fu_19641_p2;
reg   [7:0] add_ln153_492_reg_26910;
wire   [7:0] add_ln153_494_fu_19657_p2;
reg   [7:0] add_ln153_494_reg_26915;
wire   [7:0] add_ln153_497_fu_19673_p2;
reg   [7:0] add_ln153_497_reg_26920;
wire   [7:0] add_ln153_500_fu_19699_p2;
reg   [7:0] add_ln153_500_reg_26925;
wire   [6:0] add_ln153_504_fu_19893_p2;
reg   [6:0] add_ln153_504_reg_26930;
wire   [7:0] add_ln153_507_fu_19909_p2;
reg   [7:0] add_ln153_507_reg_26935;
wire   [7:0] add_ln153_510_fu_19925_p2;
reg   [7:0] add_ln153_510_reg_26940;
wire   [7:0] add_ln153_512_fu_19941_p2;
reg   [7:0] add_ln153_512_reg_26945;
wire   [7:0] add_ln153_516_fu_19957_p2;
reg   [7:0] add_ln153_516_reg_26950;
wire   [7:0] add_ln153_518_fu_19973_p2;
reg   [7:0] add_ln153_518_reg_26955;
wire   [7:0] add_ln153_521_fu_19989_p2;
reg   [7:0] add_ln153_521_reg_26960;
wire   [7:0] add_ln153_524_fu_20015_p2;
reg   [7:0] add_ln153_524_reg_26965;
wire   [6:0] add_ln153_528_fu_20213_p2;
reg   [6:0] add_ln153_528_reg_26970;
wire   [7:0] add_ln153_531_fu_20229_p2;
reg   [7:0] add_ln153_531_reg_26975;
wire   [7:0] add_ln153_534_fu_20245_p2;
reg   [7:0] add_ln153_534_reg_26980;
wire   [7:0] add_ln153_536_fu_20261_p2;
reg   [7:0] add_ln153_536_reg_26985;
wire   [7:0] add_ln153_540_fu_20277_p2;
reg   [7:0] add_ln153_540_reg_26990;
wire   [7:0] add_ln153_542_fu_20293_p2;
reg   [7:0] add_ln153_542_reg_26995;
wire   [7:0] add_ln153_545_fu_20309_p2;
reg   [7:0] add_ln153_545_reg_27000;
wire   [7:0] add_ln153_548_fu_20335_p2;
reg   [7:0] add_ln153_548_reg_27005;
wire   [6:0] add_ln153_552_fu_20533_p2;
reg   [6:0] add_ln153_552_reg_27010;
wire   [7:0] add_ln153_555_fu_20549_p2;
reg   [7:0] add_ln153_555_reg_27015;
wire   [7:0] add_ln153_558_fu_20565_p2;
reg   [7:0] add_ln153_558_reg_27020;
wire   [7:0] add_ln153_560_fu_20581_p2;
reg   [7:0] add_ln153_560_reg_27025;
wire   [7:0] add_ln153_564_fu_20597_p2;
reg   [7:0] add_ln153_564_reg_27030;
wire   [7:0] add_ln153_566_fu_20613_p2;
reg   [7:0] add_ln153_566_reg_27035;
wire   [7:0] add_ln153_569_fu_20629_p2;
reg   [7:0] add_ln153_569_reg_27040;
wire   [7:0] add_ln153_572_fu_20655_p2;
reg   [7:0] add_ln153_572_reg_27045;
wire   [9:0] add_ln153_23_fu_21019_p2;
reg   [9:0] add_ln153_23_reg_27050;
wire   [9:0] add_ln153_47_fu_21090_p2;
reg   [9:0] add_ln153_47_reg_27055;
wire   [9:0] add_ln153_71_fu_21161_p2;
reg   [9:0] add_ln153_71_reg_27060;
wire   [9:0] add_ln153_95_fu_21232_p2;
reg   [9:0] add_ln153_95_reg_27065;
wire   [9:0] add_ln153_119_fu_21303_p2;
reg   [9:0] add_ln153_119_reg_27070;
wire   [9:0] add_ln153_143_fu_21374_p2;
reg   [9:0] add_ln153_143_reg_27075;
wire   [9:0] add_ln153_167_fu_21445_p2;
reg   [9:0] add_ln153_167_reg_27080;
wire   [9:0] add_ln153_191_fu_21516_p2;
reg   [9:0] add_ln153_191_reg_27085;
wire   [9:0] add_ln153_215_fu_21587_p2;
reg   [9:0] add_ln153_215_reg_27090;
wire   [9:0] add_ln153_239_fu_21658_p2;
reg   [9:0] add_ln153_239_reg_27095;
wire   [9:0] add_ln153_263_fu_21742_p2;
reg   [9:0] add_ln153_263_reg_27100;
wire   [9:0] add_ln153_287_fu_21826_p2;
reg   [9:0] add_ln153_287_reg_27105;
wire   [9:0] add_ln153_311_fu_21910_p2;
reg   [9:0] add_ln153_311_reg_27110;
wire   [9:0] add_ln153_335_fu_21994_p2;
reg   [9:0] add_ln153_335_reg_27115;
wire   [9:0] add_ln153_359_fu_22078_p2;
reg   [9:0] add_ln153_359_reg_27120;
wire   [9:0] add_ln153_383_fu_22162_p2;
reg   [9:0] add_ln153_383_reg_27125;
wire   [9:0] add_ln153_407_fu_22246_p2;
reg   [9:0] add_ln153_407_reg_27130;
wire   [9:0] add_ln153_431_fu_22330_p2;
reg   [9:0] add_ln153_431_reg_27135;
wire   [9:0] add_ln153_455_fu_22414_p2;
reg   [9:0] add_ln153_455_reg_27140;
wire   [9:0] add_ln153_479_fu_22498_p2;
reg   [9:0] add_ln153_479_reg_27145;
wire   [9:0] add_ln153_503_fu_22582_p2;
reg   [9:0] add_ln153_503_reg_27150;
wire   [9:0] add_ln153_527_fu_22666_p2;
reg   [9:0] add_ln153_527_reg_27155;
wire   [9:0] add_ln153_551_fu_22750_p2;
reg   [9:0] add_ln153_551_reg_27160;
wire   [9:0] add_ln153_575_fu_22834_p2;
reg   [9:0] add_ln153_575_reg_27165;
wire   [63:0] zext_ln151_49_fu_2788_p1;
wire   [63:0] zext_ln121_fu_2807_p1;
reg   [5:0] cit_fu_2408;
wire   [5:0] add_ln122_fu_2742_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [5:0] ap_sig_allocacmp_cit_load;
reg   [9:0] conv_i724_fu_2412;
reg   [9:0] conv_i_111726_fu_2416;
reg   [9:0] conv_i_2728_fu_2420;
reg   [9:0] conv_i_3730_fu_2424;
reg   [9:0] conv_i_4732_fu_2428;
reg   [9:0] conv_i_5734_fu_2432;
reg   [9:0] conv_i_6736_fu_2436;
reg   [9:0] conv_i_7738_fu_2440;
reg   [9:0] conv_i_8740_fu_2444;
reg   [9:0] conv_i_9742_fu_2448;
reg   [9:0] conv_i_10744_fu_2452;
reg   [9:0] conv_i_11746_fu_2456;
reg   [9:0] conv_i748_fu_2460;
reg   [9:0] conv_i_111750_fu_2464;
reg   [9:0] conv_i_2752_fu_2468;
reg   [9:0] conv_i_3754_fu_2472;
reg   [9:0] conv_i_4756_fu_2476;
reg   [9:0] conv_i_5758_fu_2480;
reg   [9:0] conv_i_6760_fu_2484;
reg   [9:0] conv_i_7762_fu_2488;
reg   [9:0] conv_i_8764_fu_2492;
reg   [9:0] conv_i_9766_fu_2496;
reg   [9:0] conv_i_10768_fu_2500;
reg   [9:0] conv_i_11770_fu_2504;
reg   [4:0] cot_fu_2508;
reg   [4:0] ap_sig_allocacmp_cot_load;
reg   [10:0] indvar_flatten_fu_2512;
wire   [10:0] select_ln121_4_fu_2643_p3;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] indvar_flatten59_fu_2516;
wire   [15:0] add_ln120_fu_2619_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten59_load;
wire    ap_block_pp0_stage0_01001;
wire   [10:0] add_ln121_2_fu_2637_p2;
wire   [0:0] icmp_ln122_fu_2699_p2;
wire   [0:0] xor_ln120_fu_2694_p2;
wire   [4:0] select_ln120_fu_2687_p3;
wire   [0:0] and_ln120_fu_2705_p2;
wire   [0:0] or_ln121_fu_2717_p2;
wire   [4:0] add_ln121_fu_2711_p2;
wire   [8:0] tmp_288_fu_2772_p3;
wire   [8:0] zext_ln151_48_fu_2779_p1;
wire   [8:0] add_ln151_fu_2782_p2;
wire   [2:0] lshr_ln_fu_2821_p4;
wire   [2:0] trunc_ln137_fu_2817_p1;
wire   [2:0] trunc_ln151_fu_2835_p1;
wire  signed [2:0] mul_res_fu_2855_p0;
wire  signed [5:0] sext_ln151_fu_2843_p1;
wire   [2:0] mul_res_fu_2855_p1;
wire   [5:0] zext_ln151_fu_2839_p1;
wire   [2:0] tmp_s_fu_2861_p4;
wire   [2:0] mul_res_576_fu_2883_p0;
wire   [5:0] zext_ln137_fu_2831_p1;
wire  signed [2:0] mul_res_576_fu_2883_p1;
wire  signed [5:0] sext_ln151_1_fu_2871_p1;
wire   [2:0] tmp_290_fu_2919_p4;
wire   [2:0] tmp_336_fu_2909_p4;
wire   [2:0] mul_res_578_fu_2945_p0;
wire   [5:0] zext_ln151_3_fu_2929_p1;
wire  signed [2:0] mul_res_578_fu_2945_p1;
wire  signed [5:0] sext_ln151_3_fu_2933_p1;
wire   [2:0] tmp_291_fu_2961_p4;
wire   [2:0] tmp_337_fu_2951_p4;
wire   [2:0] mul_res_579_fu_2987_p0;
wire   [5:0] zext_ln151_4_fu_2971_p1;
wire  signed [2:0] mul_res_579_fu_2987_p1;
wire  signed [5:0] sext_ln151_4_fu_2975_p1;
wire   [2:0] tmp_293_fu_3023_p4;
wire   [2:0] tmp_339_fu_3013_p4;
wire   [2:0] mul_res_581_fu_3049_p0;
wire   [5:0] zext_ln151_6_fu_3033_p1;
wire  signed [2:0] mul_res_581_fu_3049_p1;
wire  signed [5:0] sext_ln151_6_fu_3037_p1;
wire   [2:0] tmp_294_fu_3065_p4;
wire   [2:0] tmp_340_fu_3055_p4;
wire   [2:0] mul_res_582_fu_3091_p0;
wire   [5:0] zext_ln151_7_fu_3075_p1;
wire  signed [2:0] mul_res_582_fu_3091_p1;
wire  signed [5:0] sext_ln151_7_fu_3079_p1;
wire   [2:0] tmp_295_fu_3107_p4;
wire   [2:0] tmp_341_fu_3097_p4;
wire   [2:0] mul_res_583_fu_3133_p0;
wire   [5:0] zext_ln151_8_fu_3117_p1;
wire  signed [2:0] mul_res_583_fu_3133_p1;
wire  signed [5:0] sext_ln151_8_fu_3121_p1;
wire   [2:0] tmp_296_fu_3149_p4;
wire   [2:0] tmp_342_fu_3139_p4;
wire   [2:0] mul_res_584_fu_3175_p0;
wire   [5:0] zext_ln151_9_fu_3159_p1;
wire  signed [2:0] mul_res_584_fu_3175_p1;
wire  signed [5:0] sext_ln151_9_fu_3163_p1;
wire   [2:0] tmp_297_fu_3191_p4;
wire   [2:0] tmp_343_fu_3181_p4;
wire   [2:0] mul_res_585_fu_3217_p0;
wire   [5:0] zext_ln151_10_fu_3201_p1;
wire  signed [2:0] mul_res_585_fu_3217_p1;
wire  signed [5:0] sext_ln151_10_fu_3205_p1;
wire   [2:0] tmp_298_fu_3233_p4;
wire   [2:0] tmp_344_fu_3223_p4;
wire   [2:0] mul_res_586_fu_3259_p0;
wire   [5:0] zext_ln151_11_fu_3243_p1;
wire  signed [2:0] mul_res_586_fu_3259_p1;
wire  signed [5:0] sext_ln151_11_fu_3247_p1;
wire   [2:0] tmp_299_fu_3275_p4;
wire  signed [2:0] tmp_345_fu_3265_p4;
wire   [2:0] mul_res_587_fu_3301_p0;
wire   [2:0] tmp_300_fu_3317_p4;
wire   [2:0] tmp_346_fu_3307_p4;
wire   [2:0] mul_res_588_fu_3343_p0;
wire   [5:0] zext_ln151_13_fu_3327_p1;
wire  signed [2:0] mul_res_588_fu_3343_p1;
wire  signed [5:0] sext_ln151_13_fu_3331_p1;
wire   [2:0] tmp_301_fu_3359_p4;
wire   [2:0] tmp_347_fu_3349_p4;
wire   [2:0] mul_res_589_fu_3385_p0;
wire   [5:0] zext_ln151_14_fu_3369_p1;
wire  signed [2:0] mul_res_589_fu_3385_p1;
wire  signed [5:0] sext_ln151_14_fu_3373_p1;
wire   [2:0] tmp_303_fu_3421_p4;
wire   [2:0] tmp_349_fu_3411_p4;
wire   [2:0] mul_res_591_fu_3447_p0;
wire   [5:0] zext_ln151_16_fu_3431_p1;
wire  signed [2:0] mul_res_591_fu_3447_p1;
wire  signed [5:0] sext_ln151_16_fu_3435_p1;
wire   [2:0] tmp_304_fu_3463_p4;
wire   [2:0] tmp_350_fu_3453_p4;
wire   [2:0] mul_res_592_fu_3489_p0;
wire   [5:0] zext_ln151_17_fu_3473_p1;
wire  signed [2:0] mul_res_592_fu_3489_p1;
wire  signed [5:0] sext_ln151_17_fu_3477_p1;
wire   [2:0] tmp_305_fu_3505_p4;
wire  signed [2:0] tmp_351_fu_3495_p4;
wire   [2:0] mul_res_593_fu_3531_p0;
wire   [2:0] tmp_306_fu_3547_p4;
wire   [2:0] tmp_352_fu_3537_p4;
wire   [2:0] mul_res_594_fu_3573_p0;
wire   [5:0] zext_ln151_19_fu_3557_p1;
wire  signed [2:0] mul_res_594_fu_3573_p1;
wire  signed [5:0] sext_ln151_19_fu_3561_p1;
wire   [2:0] tmp_310_fu_3649_p4;
wire   [2:0] tmp_356_fu_3639_p4;
wire   [2:0] mul_res_598_fu_3675_p0;
wire   [5:0] zext_ln151_23_fu_3659_p1;
wire  signed [2:0] mul_res_598_fu_3675_p1;
wire  signed [5:0] sext_ln151_23_fu_3663_p1;
wire   [2:0] tmp_357_fu_3681_p4;
wire  signed [2:0] mul_res_599_fu_3703_p0;
wire  signed [5:0] sext_ln151_24_fu_3691_p1;
wire   [2:0] mul_res_599_fu_3703_p1;
wire   [2:0] tmp_358_fu_3709_p4;
wire   [2:0] mul_res_600_fu_3731_p0;
wire  signed [2:0] mul_res_600_fu_3731_p1;
wire  signed [5:0] sext_ln151_25_fu_3719_p1;
wire   [2:0] tmp_360_fu_3747_p4;
wire   [2:0] mul_res_602_fu_3769_p0;
wire  signed [2:0] mul_res_602_fu_3769_p1;
wire  signed [5:0] sext_ln151_27_fu_3757_p1;
wire   [2:0] tmp_361_fu_3775_p4;
wire   [2:0] mul_res_603_fu_3797_p0;
wire  signed [2:0] mul_res_603_fu_3797_p1;
wire  signed [5:0] sext_ln151_28_fu_3785_p1;
wire   [2:0] tmp_363_fu_3813_p4;
wire   [2:0] mul_res_605_fu_3835_p0;
wire  signed [2:0] mul_res_605_fu_3835_p1;
wire  signed [5:0] sext_ln151_30_fu_3823_p1;
wire   [2:0] tmp_364_fu_3841_p4;
wire   [2:0] mul_res_606_fu_3863_p0;
wire  signed [2:0] mul_res_606_fu_3863_p1;
wire  signed [5:0] sext_ln151_31_fu_3851_p1;
wire   [2:0] tmp_365_fu_3869_p4;
wire   [2:0] mul_res_607_fu_3891_p0;
wire  signed [2:0] mul_res_607_fu_3891_p1;
wire  signed [5:0] sext_ln151_32_fu_3879_p1;
wire   [2:0] tmp_366_fu_3897_p4;
wire   [2:0] mul_res_608_fu_3919_p0;
wire  signed [2:0] mul_res_608_fu_3919_p1;
wire  signed [5:0] sext_ln151_33_fu_3907_p1;
wire   [2:0] tmp_367_fu_3925_p4;
wire   [2:0] mul_res_609_fu_3947_p0;
wire  signed [2:0] mul_res_609_fu_3947_p1;
wire  signed [5:0] sext_ln151_34_fu_3935_p1;
wire   [2:0] tmp_368_fu_3953_p4;
wire   [2:0] mul_res_610_fu_3975_p0;
wire  signed [2:0] mul_res_610_fu_3975_p1;
wire  signed [5:0] sext_ln151_35_fu_3963_p1;
wire  signed [2:0] tmp_369_fu_3981_p4;
wire   [2:0] mul_res_611_fu_4003_p0;
wire   [2:0] tmp_370_fu_4009_p4;
wire   [2:0] mul_res_612_fu_4031_p0;
wire  signed [2:0] mul_res_612_fu_4031_p1;
wire  signed [5:0] sext_ln151_37_fu_4019_p1;
wire   [2:0] tmp_371_fu_4037_p4;
wire   [2:0] mul_res_613_fu_4059_p0;
wire  signed [2:0] mul_res_613_fu_4059_p1;
wire  signed [5:0] sext_ln151_38_fu_4047_p1;
wire   [2:0] tmp_373_fu_4075_p4;
wire   [2:0] mul_res_615_fu_4097_p0;
wire  signed [2:0] mul_res_615_fu_4097_p1;
wire  signed [5:0] sext_ln151_40_fu_4085_p1;
wire   [2:0] tmp_374_fu_4103_p4;
wire   [2:0] mul_res_616_fu_4125_p0;
wire  signed [2:0] mul_res_616_fu_4125_p1;
wire  signed [5:0] sext_ln151_41_fu_4113_p1;
wire  signed [2:0] tmp_375_fu_4131_p4;
wire   [2:0] mul_res_617_fu_4153_p0;
wire   [2:0] tmp_376_fu_4159_p4;
wire   [2:0] mul_res_618_fu_4181_p0;
wire  signed [2:0] mul_res_618_fu_4181_p1;
wire  signed [5:0] sext_ln151_43_fu_4169_p1;
wire   [2:0] tmp_380_fu_4217_p4;
wire   [2:0] mul_res_622_fu_4239_p0;
wire  signed [2:0] mul_res_622_fu_4239_p1;
wire  signed [5:0] sext_ln151_47_fu_4227_p1;
wire   [2:0] tmp_381_fu_4245_p4;
wire  signed [2:0] mul_res_623_fu_4267_p0;
wire  signed [5:0] sext_ln151_48_fu_4255_p1;
wire   [2:0] mul_res_623_fu_4267_p1;
wire   [2:0] tmp_382_fu_4273_p4;
wire   [2:0] mul_res_624_fu_4295_p0;
wire  signed [2:0] mul_res_624_fu_4295_p1;
wire  signed [5:0] sext_ln151_49_fu_4283_p1;
wire   [2:0] tmp_384_fu_4311_p4;
wire   [2:0] mul_res_626_fu_4333_p0;
wire  signed [2:0] mul_res_626_fu_4333_p1;
wire  signed [5:0] sext_ln151_51_fu_4321_p1;
wire   [2:0] tmp_385_fu_4339_p4;
wire   [2:0] mul_res_627_fu_4361_p0;
wire  signed [2:0] mul_res_627_fu_4361_p1;
wire  signed [5:0] sext_ln151_52_fu_4349_p1;
wire   [2:0] tmp_387_fu_4377_p4;
wire   [2:0] mul_res_629_fu_4399_p0;
wire  signed [2:0] mul_res_629_fu_4399_p1;
wire  signed [5:0] sext_ln151_54_fu_4387_p1;
wire   [2:0] tmp_388_fu_4405_p4;
wire   [2:0] mul_res_630_fu_4427_p0;
wire  signed [2:0] mul_res_630_fu_4427_p1;
wire  signed [5:0] sext_ln151_55_fu_4415_p1;
wire   [2:0] tmp_389_fu_4433_p4;
wire   [2:0] mul_res_631_fu_4455_p0;
wire  signed [2:0] mul_res_631_fu_4455_p1;
wire  signed [5:0] sext_ln151_56_fu_4443_p1;
wire   [2:0] tmp_390_fu_4461_p4;
wire   [2:0] mul_res_632_fu_4483_p0;
wire  signed [2:0] mul_res_632_fu_4483_p1;
wire  signed [5:0] sext_ln151_57_fu_4471_p1;
wire   [2:0] tmp_391_fu_4489_p4;
wire   [2:0] mul_res_633_fu_4511_p0;
wire  signed [2:0] mul_res_633_fu_4511_p1;
wire  signed [5:0] sext_ln151_58_fu_4499_p1;
wire   [2:0] tmp_392_fu_4517_p4;
wire   [2:0] mul_res_634_fu_4539_p0;
wire  signed [2:0] mul_res_634_fu_4539_p1;
wire  signed [5:0] sext_ln151_59_fu_4527_p1;
wire  signed [2:0] tmp_393_fu_4545_p4;
wire   [2:0] mul_res_635_fu_4567_p0;
wire   [2:0] tmp_394_fu_4573_p4;
wire   [2:0] mul_res_636_fu_4595_p0;
wire  signed [2:0] mul_res_636_fu_4595_p1;
wire  signed [5:0] sext_ln151_61_fu_4583_p1;
wire   [2:0] tmp_395_fu_4601_p4;
wire   [2:0] mul_res_637_fu_4623_p0;
wire  signed [2:0] mul_res_637_fu_4623_p1;
wire  signed [5:0] sext_ln151_62_fu_4611_p1;
wire   [2:0] tmp_397_fu_4639_p4;
wire   [2:0] mul_res_639_fu_4661_p0;
wire  signed [2:0] mul_res_639_fu_4661_p1;
wire  signed [5:0] sext_ln151_64_fu_4649_p1;
wire   [2:0] tmp_398_fu_4667_p4;
wire   [2:0] mul_res_640_fu_4689_p0;
wire  signed [2:0] mul_res_640_fu_4689_p1;
wire  signed [5:0] sext_ln151_65_fu_4677_p1;
wire  signed [2:0] tmp_399_fu_4695_p4;
wire   [2:0] mul_res_641_fu_4717_p0;
wire   [2:0] tmp_400_fu_4723_p4;
wire   [2:0] mul_res_642_fu_4745_p0;
wire  signed [2:0] mul_res_642_fu_4745_p1;
wire  signed [5:0] sext_ln151_67_fu_4733_p1;
wire   [2:0] tmp_404_fu_4781_p4;
wire   [2:0] mul_res_646_fu_4803_p0;
wire  signed [2:0] mul_res_646_fu_4803_p1;
wire  signed [5:0] sext_ln151_71_fu_4791_p1;
wire   [2:0] tmp_405_fu_4809_p4;
wire  signed [2:0] mul_res_647_fu_4831_p0;
wire  signed [5:0] sext_ln151_72_fu_4819_p1;
wire   [2:0] mul_res_647_fu_4831_p1;
wire   [2:0] tmp_406_fu_4837_p4;
wire   [2:0] mul_res_648_fu_4859_p0;
wire  signed [2:0] mul_res_648_fu_4859_p1;
wire  signed [5:0] sext_ln151_73_fu_4847_p1;
wire   [2:0] tmp_408_fu_4875_p4;
wire   [2:0] mul_res_650_fu_4897_p0;
wire  signed [2:0] mul_res_650_fu_4897_p1;
wire  signed [5:0] sext_ln151_75_fu_4885_p1;
wire   [2:0] tmp_409_fu_4903_p4;
wire   [2:0] mul_res_651_fu_4925_p0;
wire  signed [2:0] mul_res_651_fu_4925_p1;
wire  signed [5:0] sext_ln151_76_fu_4913_p1;
wire   [2:0] tmp_411_fu_4941_p4;
wire   [2:0] mul_res_653_fu_4963_p0;
wire  signed [2:0] mul_res_653_fu_4963_p1;
wire  signed [5:0] sext_ln151_78_fu_4951_p1;
wire   [2:0] tmp_412_fu_4969_p4;
wire   [2:0] mul_res_654_fu_4991_p0;
wire  signed [2:0] mul_res_654_fu_4991_p1;
wire  signed [5:0] sext_ln151_79_fu_4979_p1;
wire   [2:0] tmp_413_fu_4997_p4;
wire   [2:0] mul_res_655_fu_5019_p0;
wire  signed [2:0] mul_res_655_fu_5019_p1;
wire  signed [5:0] sext_ln151_80_fu_5007_p1;
wire   [2:0] tmp_414_fu_5025_p4;
wire   [2:0] mul_res_656_fu_5047_p0;
wire  signed [2:0] mul_res_656_fu_5047_p1;
wire  signed [5:0] sext_ln151_81_fu_5035_p1;
wire   [2:0] tmp_415_fu_5053_p4;
wire   [2:0] mul_res_657_fu_5075_p0;
wire  signed [2:0] mul_res_657_fu_5075_p1;
wire  signed [5:0] sext_ln151_82_fu_5063_p1;
wire   [2:0] tmp_416_fu_5081_p4;
wire   [2:0] mul_res_658_fu_5103_p0;
wire  signed [2:0] mul_res_658_fu_5103_p1;
wire  signed [5:0] sext_ln151_83_fu_5091_p1;
wire  signed [2:0] tmp_417_fu_5109_p4;
wire   [2:0] mul_res_659_fu_5131_p0;
wire   [2:0] tmp_418_fu_5137_p4;
wire   [2:0] mul_res_660_fu_5159_p0;
wire  signed [2:0] mul_res_660_fu_5159_p1;
wire  signed [5:0] sext_ln151_85_fu_5147_p1;
wire   [2:0] tmp_419_fu_5165_p4;
wire   [2:0] mul_res_661_fu_5187_p0;
wire  signed [2:0] mul_res_661_fu_5187_p1;
wire  signed [5:0] sext_ln151_86_fu_5175_p1;
wire   [2:0] tmp_421_fu_5203_p4;
wire   [2:0] mul_res_663_fu_5225_p0;
wire  signed [2:0] mul_res_663_fu_5225_p1;
wire  signed [5:0] sext_ln151_88_fu_5213_p1;
wire   [2:0] tmp_422_fu_5231_p4;
wire   [2:0] mul_res_664_fu_5253_p0;
wire  signed [2:0] mul_res_664_fu_5253_p1;
wire  signed [5:0] sext_ln151_89_fu_5241_p1;
wire  signed [2:0] tmp_423_fu_5259_p4;
wire   [2:0] mul_res_665_fu_5281_p0;
wire   [2:0] tmp_424_fu_5287_p4;
wire   [2:0] mul_res_666_fu_5309_p0;
wire  signed [2:0] mul_res_666_fu_5309_p1;
wire  signed [5:0] sext_ln151_91_fu_5297_p1;
wire   [2:0] tmp_428_fu_5345_p4;
wire   [2:0] mul_res_670_fu_5367_p0;
wire  signed [2:0] mul_res_670_fu_5367_p1;
wire  signed [5:0] sext_ln151_95_fu_5355_p1;
wire   [2:0] tmp_429_fu_5373_p4;
wire  signed [2:0] mul_res_671_fu_5395_p0;
wire  signed [5:0] sext_ln151_96_fu_5383_p1;
wire   [2:0] mul_res_671_fu_5395_p1;
wire   [2:0] tmp_430_fu_5401_p4;
wire   [2:0] mul_res_672_fu_5423_p0;
wire  signed [2:0] mul_res_672_fu_5423_p1;
wire  signed [5:0] sext_ln151_97_fu_5411_p1;
wire   [2:0] tmp_432_fu_5439_p4;
wire   [2:0] mul_res_674_fu_5461_p0;
wire  signed [2:0] mul_res_674_fu_5461_p1;
wire  signed [5:0] sext_ln151_99_fu_5449_p1;
wire   [2:0] tmp_433_fu_5467_p4;
wire   [2:0] mul_res_675_fu_5489_p0;
wire  signed [2:0] mul_res_675_fu_5489_p1;
wire  signed [5:0] sext_ln151_100_fu_5477_p1;
wire   [2:0] tmp_435_fu_5505_p4;
wire   [2:0] mul_res_677_fu_5527_p0;
wire  signed [2:0] mul_res_677_fu_5527_p1;
wire  signed [5:0] sext_ln151_102_fu_5515_p1;
wire   [2:0] tmp_436_fu_5533_p4;
wire   [2:0] mul_res_678_fu_5555_p0;
wire  signed [2:0] mul_res_678_fu_5555_p1;
wire  signed [5:0] sext_ln151_103_fu_5543_p1;
wire   [2:0] tmp_437_fu_5561_p4;
wire   [2:0] mul_res_679_fu_5583_p0;
wire  signed [2:0] mul_res_679_fu_5583_p1;
wire  signed [5:0] sext_ln151_104_fu_5571_p1;
wire   [2:0] tmp_438_fu_5589_p4;
wire   [2:0] mul_res_680_fu_5611_p0;
wire  signed [2:0] mul_res_680_fu_5611_p1;
wire  signed [5:0] sext_ln151_105_fu_5599_p1;
wire   [2:0] tmp_439_fu_5617_p4;
wire   [2:0] mul_res_681_fu_5639_p0;
wire  signed [2:0] mul_res_681_fu_5639_p1;
wire  signed [5:0] sext_ln151_106_fu_5627_p1;
wire   [2:0] tmp_440_fu_5645_p4;
wire   [2:0] mul_res_682_fu_5667_p0;
wire  signed [2:0] mul_res_682_fu_5667_p1;
wire  signed [5:0] sext_ln151_107_fu_5655_p1;
wire  signed [2:0] tmp_441_fu_5673_p4;
wire   [2:0] mul_res_683_fu_5695_p0;
wire   [2:0] tmp_442_fu_5701_p4;
wire   [2:0] mul_res_684_fu_5723_p0;
wire  signed [2:0] mul_res_684_fu_5723_p1;
wire  signed [5:0] sext_ln151_109_fu_5711_p1;
wire   [2:0] tmp_443_fu_5729_p4;
wire   [2:0] mul_res_685_fu_5751_p0;
wire  signed [2:0] mul_res_685_fu_5751_p1;
wire  signed [5:0] sext_ln151_110_fu_5739_p1;
wire   [2:0] tmp_445_fu_5767_p4;
wire   [2:0] mul_res_687_fu_5789_p0;
wire  signed [2:0] mul_res_687_fu_5789_p1;
wire  signed [5:0] sext_ln151_112_fu_5777_p1;
wire   [2:0] tmp_446_fu_5795_p4;
wire   [2:0] mul_res_688_fu_5817_p0;
wire  signed [2:0] mul_res_688_fu_5817_p1;
wire  signed [5:0] sext_ln151_113_fu_5805_p1;
wire  signed [2:0] tmp_447_fu_5823_p4;
wire   [2:0] mul_res_689_fu_5845_p0;
wire   [2:0] tmp_448_fu_5851_p4;
wire   [2:0] mul_res_690_fu_5873_p0;
wire  signed [2:0] mul_res_690_fu_5873_p1;
wire  signed [5:0] sext_ln151_115_fu_5861_p1;
wire   [2:0] tmp_452_fu_5909_p4;
wire   [2:0] mul_res_694_fu_5931_p0;
wire  signed [2:0] mul_res_694_fu_5931_p1;
wire  signed [5:0] sext_ln151_119_fu_5919_p1;
wire   [2:0] tmp_453_fu_5937_p4;
wire  signed [2:0] mul_res_695_fu_5959_p0;
wire  signed [5:0] sext_ln151_120_fu_5947_p1;
wire   [2:0] mul_res_695_fu_5959_p1;
wire   [2:0] tmp_454_fu_5965_p4;
wire   [2:0] mul_res_696_fu_5987_p0;
wire  signed [2:0] mul_res_696_fu_5987_p1;
wire  signed [5:0] sext_ln151_121_fu_5975_p1;
wire   [2:0] tmp_456_fu_6003_p4;
wire   [2:0] mul_res_698_fu_6025_p0;
wire  signed [2:0] mul_res_698_fu_6025_p1;
wire  signed [5:0] sext_ln151_123_fu_6013_p1;
wire   [2:0] tmp_457_fu_6031_p4;
wire   [2:0] mul_res_699_fu_6053_p0;
wire  signed [2:0] mul_res_699_fu_6053_p1;
wire  signed [5:0] sext_ln151_124_fu_6041_p1;
wire   [2:0] tmp_459_fu_6069_p4;
wire   [2:0] mul_res_701_fu_6091_p0;
wire  signed [2:0] mul_res_701_fu_6091_p1;
wire  signed [5:0] sext_ln151_126_fu_6079_p1;
wire   [2:0] tmp_460_fu_6097_p4;
wire   [2:0] mul_res_702_fu_6119_p0;
wire  signed [2:0] mul_res_702_fu_6119_p1;
wire  signed [5:0] sext_ln151_127_fu_6107_p1;
wire   [2:0] tmp_461_fu_6125_p4;
wire   [2:0] mul_res_703_fu_6147_p0;
wire  signed [2:0] mul_res_703_fu_6147_p1;
wire  signed [5:0] sext_ln151_128_fu_6135_p1;
wire   [2:0] tmp_462_fu_6153_p4;
wire   [2:0] mul_res_704_fu_6175_p0;
wire  signed [2:0] mul_res_704_fu_6175_p1;
wire  signed [5:0] sext_ln151_129_fu_6163_p1;
wire   [2:0] tmp_463_fu_6181_p4;
wire   [2:0] mul_res_705_fu_6203_p0;
wire  signed [2:0] mul_res_705_fu_6203_p1;
wire  signed [5:0] sext_ln151_130_fu_6191_p1;
wire   [2:0] tmp_464_fu_6209_p4;
wire   [2:0] mul_res_706_fu_6231_p0;
wire  signed [2:0] mul_res_706_fu_6231_p1;
wire  signed [5:0] sext_ln151_131_fu_6219_p1;
wire  signed [2:0] tmp_465_fu_6237_p4;
wire   [2:0] mul_res_707_fu_6259_p0;
wire   [2:0] tmp_466_fu_6265_p4;
wire   [2:0] mul_res_708_fu_6287_p0;
wire  signed [2:0] mul_res_708_fu_6287_p1;
wire  signed [5:0] sext_ln151_133_fu_6275_p1;
wire   [2:0] tmp_467_fu_6293_p4;
wire   [2:0] mul_res_709_fu_6315_p0;
wire  signed [2:0] mul_res_709_fu_6315_p1;
wire  signed [5:0] sext_ln151_134_fu_6303_p1;
wire   [2:0] tmp_469_fu_6331_p4;
wire   [2:0] mul_res_711_fu_6353_p0;
wire  signed [2:0] mul_res_711_fu_6353_p1;
wire  signed [5:0] sext_ln151_136_fu_6341_p1;
wire   [2:0] tmp_470_fu_6359_p4;
wire   [2:0] mul_res_712_fu_6381_p0;
wire  signed [2:0] mul_res_712_fu_6381_p1;
wire  signed [5:0] sext_ln151_137_fu_6369_p1;
wire  signed [2:0] tmp_471_fu_6387_p4;
wire   [2:0] mul_res_713_fu_6409_p0;
wire   [2:0] tmp_472_fu_6415_p4;
wire   [2:0] mul_res_714_fu_6437_p0;
wire  signed [2:0] mul_res_714_fu_6437_p1;
wire  signed [5:0] sext_ln151_139_fu_6425_p1;
wire   [2:0] tmp_476_fu_6473_p4;
wire   [2:0] mul_res_718_fu_6495_p0;
wire  signed [2:0] mul_res_718_fu_6495_p1;
wire  signed [5:0] sext_ln151_143_fu_6483_p1;
wire   [2:0] tmp_477_fu_6501_p4;
wire  signed [2:0] mul_res_719_fu_6523_p0;
wire  signed [5:0] sext_ln151_144_fu_6511_p1;
wire   [2:0] mul_res_719_fu_6523_p1;
wire   [2:0] tmp_478_fu_6529_p4;
wire   [2:0] mul_res_720_fu_6551_p0;
wire  signed [2:0] mul_res_720_fu_6551_p1;
wire  signed [5:0] sext_ln151_145_fu_6539_p1;
wire   [2:0] tmp_480_fu_6567_p4;
wire   [2:0] mul_res_722_fu_6589_p0;
wire  signed [2:0] mul_res_722_fu_6589_p1;
wire  signed [5:0] sext_ln151_147_fu_6577_p1;
wire   [2:0] tmp_481_fu_6595_p4;
wire   [2:0] mul_res_723_fu_6617_p0;
wire  signed [2:0] mul_res_723_fu_6617_p1;
wire  signed [5:0] sext_ln151_148_fu_6605_p1;
wire   [2:0] tmp_483_fu_6633_p4;
wire   [2:0] mul_res_725_fu_6655_p0;
wire  signed [2:0] mul_res_725_fu_6655_p1;
wire  signed [5:0] sext_ln151_150_fu_6643_p1;
wire   [2:0] tmp_484_fu_6661_p4;
wire   [2:0] mul_res_726_fu_6683_p0;
wire  signed [2:0] mul_res_726_fu_6683_p1;
wire  signed [5:0] sext_ln151_151_fu_6671_p1;
wire   [2:0] tmp_485_fu_6689_p4;
wire   [2:0] mul_res_727_fu_6711_p0;
wire  signed [2:0] mul_res_727_fu_6711_p1;
wire  signed [5:0] sext_ln151_152_fu_6699_p1;
wire   [2:0] tmp_486_fu_6717_p4;
wire   [2:0] mul_res_728_fu_6739_p0;
wire  signed [2:0] mul_res_728_fu_6739_p1;
wire  signed [5:0] sext_ln151_153_fu_6727_p1;
wire   [2:0] tmp_487_fu_6745_p4;
wire   [2:0] mul_res_729_fu_6767_p0;
wire  signed [2:0] mul_res_729_fu_6767_p1;
wire  signed [5:0] sext_ln151_154_fu_6755_p1;
wire   [2:0] tmp_488_fu_6773_p4;
wire   [2:0] mul_res_730_fu_6795_p0;
wire  signed [2:0] mul_res_730_fu_6795_p1;
wire  signed [5:0] sext_ln151_155_fu_6783_p1;
wire  signed [2:0] tmp_489_fu_6801_p4;
wire   [2:0] mul_res_731_fu_6823_p0;
wire   [2:0] tmp_490_fu_6829_p4;
wire   [2:0] mul_res_732_fu_6851_p0;
wire  signed [2:0] mul_res_732_fu_6851_p1;
wire  signed [5:0] sext_ln151_157_fu_6839_p1;
wire   [2:0] tmp_491_fu_6857_p4;
wire   [2:0] mul_res_733_fu_6879_p0;
wire  signed [2:0] mul_res_733_fu_6879_p1;
wire  signed [5:0] sext_ln151_158_fu_6867_p1;
wire   [2:0] tmp_493_fu_6895_p4;
wire   [2:0] mul_res_735_fu_6917_p0;
wire  signed [2:0] mul_res_735_fu_6917_p1;
wire  signed [5:0] sext_ln151_160_fu_6905_p1;
wire   [2:0] tmp_494_fu_6923_p4;
wire   [2:0] mul_res_736_fu_6945_p0;
wire  signed [2:0] mul_res_736_fu_6945_p1;
wire  signed [5:0] sext_ln151_161_fu_6933_p1;
wire  signed [2:0] tmp_495_fu_6951_p4;
wire   [2:0] mul_res_737_fu_6973_p0;
wire   [2:0] tmp_496_fu_6979_p4;
wire   [2:0] mul_res_738_fu_7001_p0;
wire  signed [2:0] mul_res_738_fu_7001_p1;
wire  signed [5:0] sext_ln151_163_fu_6989_p1;
wire   [2:0] tmp_500_fu_7037_p4;
wire   [2:0] mul_res_742_fu_7059_p0;
wire  signed [2:0] mul_res_742_fu_7059_p1;
wire  signed [5:0] sext_ln151_167_fu_7047_p1;
wire   [2:0] tmp_501_fu_7065_p4;
wire  signed [2:0] mul_res_743_fu_7087_p0;
wire  signed [5:0] sext_ln151_168_fu_7075_p1;
wire   [2:0] mul_res_743_fu_7087_p1;
wire   [2:0] tmp_502_fu_7093_p4;
wire   [2:0] mul_res_744_fu_7115_p0;
wire  signed [2:0] mul_res_744_fu_7115_p1;
wire  signed [5:0] sext_ln151_169_fu_7103_p1;
wire   [2:0] tmp_504_fu_7131_p4;
wire   [2:0] mul_res_746_fu_7153_p0;
wire  signed [2:0] mul_res_746_fu_7153_p1;
wire  signed [5:0] sext_ln151_171_fu_7141_p1;
wire   [2:0] tmp_505_fu_7159_p4;
wire   [2:0] mul_res_747_fu_7181_p0;
wire  signed [2:0] mul_res_747_fu_7181_p1;
wire  signed [5:0] sext_ln151_172_fu_7169_p1;
wire   [2:0] tmp_507_fu_7197_p4;
wire   [2:0] mul_res_749_fu_7219_p0;
wire  signed [2:0] mul_res_749_fu_7219_p1;
wire  signed [5:0] sext_ln151_174_fu_7207_p1;
wire   [2:0] tmp_508_fu_7225_p4;
wire   [2:0] mul_res_750_fu_7247_p0;
wire  signed [2:0] mul_res_750_fu_7247_p1;
wire  signed [5:0] sext_ln151_175_fu_7235_p1;
wire   [2:0] tmp_509_fu_7253_p4;
wire   [2:0] mul_res_751_fu_7275_p0;
wire  signed [2:0] mul_res_751_fu_7275_p1;
wire  signed [5:0] sext_ln151_176_fu_7263_p1;
wire   [2:0] tmp_510_fu_7281_p4;
wire   [2:0] mul_res_752_fu_7303_p0;
wire  signed [2:0] mul_res_752_fu_7303_p1;
wire  signed [5:0] sext_ln151_177_fu_7291_p1;
wire   [2:0] tmp_511_fu_7309_p4;
wire   [2:0] mul_res_753_fu_7331_p0;
wire  signed [2:0] mul_res_753_fu_7331_p1;
wire  signed [5:0] sext_ln151_178_fu_7319_p1;
wire   [2:0] tmp_512_fu_7337_p4;
wire   [2:0] mul_res_754_fu_7359_p0;
wire  signed [2:0] mul_res_754_fu_7359_p1;
wire  signed [5:0] sext_ln151_179_fu_7347_p1;
wire  signed [2:0] tmp_513_fu_7365_p4;
wire   [2:0] mul_res_755_fu_7387_p0;
wire   [2:0] tmp_514_fu_7393_p4;
wire   [2:0] mul_res_756_fu_7415_p0;
wire  signed [2:0] mul_res_756_fu_7415_p1;
wire  signed [5:0] sext_ln151_181_fu_7403_p1;
wire   [2:0] tmp_515_fu_7421_p4;
wire   [2:0] mul_res_757_fu_7443_p0;
wire  signed [2:0] mul_res_757_fu_7443_p1;
wire  signed [5:0] sext_ln151_182_fu_7431_p1;
wire   [2:0] tmp_517_fu_7459_p4;
wire   [2:0] mul_res_759_fu_7481_p0;
wire  signed [2:0] mul_res_759_fu_7481_p1;
wire  signed [5:0] sext_ln151_184_fu_7469_p1;
wire   [2:0] tmp_518_fu_7487_p4;
wire   [2:0] mul_res_760_fu_7509_p0;
wire  signed [2:0] mul_res_760_fu_7509_p1;
wire  signed [5:0] sext_ln151_185_fu_7497_p1;
wire  signed [2:0] tmp_519_fu_7515_p4;
wire   [2:0] mul_res_761_fu_7537_p0;
wire   [2:0] tmp_520_fu_7543_p4;
wire   [2:0] mul_res_762_fu_7565_p0;
wire  signed [2:0] mul_res_762_fu_7565_p1;
wire  signed [5:0] sext_ln151_187_fu_7553_p1;
wire   [2:0] tmp_524_fu_7601_p4;
wire   [2:0] mul_res_766_fu_7623_p0;
wire  signed [2:0] mul_res_766_fu_7623_p1;
wire  signed [5:0] sext_ln151_191_fu_7611_p1;
wire   [2:0] tmp_525_fu_7629_p4;
wire  signed [2:0] mul_res_767_fu_7651_p0;
wire  signed [5:0] sext_ln151_192_fu_7639_p1;
wire   [2:0] mul_res_767_fu_7651_p1;
wire   [2:0] tmp_526_fu_7657_p4;
wire   [2:0] mul_res_768_fu_7679_p0;
wire  signed [2:0] mul_res_768_fu_7679_p1;
wire  signed [5:0] sext_ln151_193_fu_7667_p1;
wire   [2:0] tmp_528_fu_7695_p4;
wire   [2:0] mul_res_770_fu_7717_p0;
wire  signed [2:0] mul_res_770_fu_7717_p1;
wire  signed [5:0] sext_ln151_195_fu_7705_p1;
wire   [2:0] tmp_529_fu_7723_p4;
wire   [2:0] mul_res_771_fu_7745_p0;
wire  signed [2:0] mul_res_771_fu_7745_p1;
wire  signed [5:0] sext_ln151_196_fu_7733_p1;
wire   [2:0] tmp_531_fu_7761_p4;
wire   [2:0] mul_res_773_fu_7783_p0;
wire  signed [2:0] mul_res_773_fu_7783_p1;
wire  signed [5:0] sext_ln151_198_fu_7771_p1;
wire   [2:0] tmp_532_fu_7789_p4;
wire   [2:0] mul_res_774_fu_7811_p0;
wire  signed [2:0] mul_res_774_fu_7811_p1;
wire  signed [5:0] sext_ln151_199_fu_7799_p1;
wire   [2:0] tmp_533_fu_7817_p4;
wire   [2:0] mul_res_775_fu_7839_p0;
wire  signed [2:0] mul_res_775_fu_7839_p1;
wire  signed [5:0] sext_ln151_200_fu_7827_p1;
wire   [2:0] tmp_534_fu_7845_p4;
wire   [2:0] mul_res_776_fu_7867_p0;
wire  signed [2:0] mul_res_776_fu_7867_p1;
wire  signed [5:0] sext_ln151_201_fu_7855_p1;
wire   [2:0] tmp_535_fu_7873_p4;
wire   [2:0] mul_res_777_fu_7895_p0;
wire  signed [2:0] mul_res_777_fu_7895_p1;
wire  signed [5:0] sext_ln151_202_fu_7883_p1;
wire   [2:0] tmp_536_fu_7901_p4;
wire   [2:0] mul_res_778_fu_7923_p0;
wire  signed [2:0] mul_res_778_fu_7923_p1;
wire  signed [5:0] sext_ln151_203_fu_7911_p1;
wire  signed [2:0] tmp_537_fu_7929_p4;
wire   [2:0] mul_res_779_fu_7951_p0;
wire   [2:0] tmp_538_fu_7957_p4;
wire   [2:0] mul_res_780_fu_7979_p0;
wire  signed [2:0] mul_res_780_fu_7979_p1;
wire  signed [5:0] sext_ln151_205_fu_7967_p1;
wire   [2:0] tmp_539_fu_7985_p4;
wire   [2:0] mul_res_781_fu_8007_p0;
wire  signed [2:0] mul_res_781_fu_8007_p1;
wire  signed [5:0] sext_ln151_206_fu_7995_p1;
wire   [2:0] tmp_541_fu_8023_p4;
wire   [2:0] mul_res_783_fu_8045_p0;
wire  signed [2:0] mul_res_783_fu_8045_p1;
wire  signed [5:0] sext_ln151_208_fu_8033_p1;
wire   [2:0] tmp_542_fu_8051_p4;
wire   [2:0] mul_res_784_fu_8073_p0;
wire  signed [2:0] mul_res_784_fu_8073_p1;
wire  signed [5:0] sext_ln151_209_fu_8061_p1;
wire  signed [2:0] tmp_543_fu_8079_p4;
wire   [2:0] mul_res_785_fu_8101_p0;
wire   [2:0] tmp_544_fu_8107_p4;
wire   [2:0] mul_res_786_fu_8129_p0;
wire  signed [2:0] mul_res_786_fu_8129_p1;
wire  signed [5:0] sext_ln151_211_fu_8117_p1;
wire   [2:0] tmp_548_fu_8165_p4;
wire   [2:0] mul_res_790_fu_8187_p0;
wire  signed [2:0] mul_res_790_fu_8187_p1;
wire  signed [5:0] sext_ln151_215_fu_8175_p1;
wire   [2:0] tmp_549_fu_8193_p4;
wire  signed [2:0] mul_res_791_fu_8215_p0;
wire  signed [5:0] sext_ln151_216_fu_8203_p1;
wire   [2:0] mul_res_791_fu_8215_p1;
wire   [2:0] tmp_550_fu_8221_p4;
wire   [2:0] mul_res_792_fu_8243_p0;
wire  signed [2:0] mul_res_792_fu_8243_p1;
wire  signed [5:0] sext_ln151_217_fu_8231_p1;
wire   [2:0] tmp_552_fu_8259_p4;
wire   [2:0] mul_res_794_fu_8281_p0;
wire  signed [2:0] mul_res_794_fu_8281_p1;
wire  signed [5:0] sext_ln151_219_fu_8269_p1;
wire   [2:0] tmp_553_fu_8287_p4;
wire   [2:0] mul_res_795_fu_8309_p0;
wire  signed [2:0] mul_res_795_fu_8309_p1;
wire  signed [5:0] sext_ln151_220_fu_8297_p1;
wire   [2:0] tmp_555_fu_8325_p4;
wire   [2:0] mul_res_797_fu_8347_p0;
wire  signed [2:0] mul_res_797_fu_8347_p1;
wire  signed [5:0] sext_ln151_222_fu_8335_p1;
wire   [2:0] tmp_556_fu_8353_p4;
wire   [2:0] mul_res_798_fu_8375_p0;
wire  signed [2:0] mul_res_798_fu_8375_p1;
wire  signed [5:0] sext_ln151_223_fu_8363_p1;
wire   [2:0] tmp_557_fu_8381_p4;
wire   [2:0] mul_res_799_fu_8403_p0;
wire  signed [2:0] mul_res_799_fu_8403_p1;
wire  signed [5:0] sext_ln151_224_fu_8391_p1;
wire   [2:0] tmp_558_fu_8409_p4;
wire   [2:0] mul_res_800_fu_8431_p0;
wire  signed [2:0] mul_res_800_fu_8431_p1;
wire  signed [5:0] sext_ln151_225_fu_8419_p1;
wire   [2:0] tmp_559_fu_8437_p4;
wire   [2:0] mul_res_801_fu_8459_p0;
wire  signed [2:0] mul_res_801_fu_8459_p1;
wire  signed [5:0] sext_ln151_226_fu_8447_p1;
wire   [2:0] tmp_560_fu_8465_p4;
wire   [2:0] mul_res_802_fu_8487_p0;
wire  signed [2:0] mul_res_802_fu_8487_p1;
wire  signed [5:0] sext_ln151_227_fu_8475_p1;
wire  signed [2:0] tmp_561_fu_8493_p4;
wire   [2:0] mul_res_803_fu_8515_p0;
wire   [2:0] tmp_562_fu_8521_p4;
wire   [2:0] mul_res_804_fu_8543_p0;
wire  signed [2:0] mul_res_804_fu_8543_p1;
wire  signed [5:0] sext_ln151_229_fu_8531_p1;
wire   [2:0] tmp_563_fu_8549_p4;
wire   [2:0] mul_res_805_fu_8571_p0;
wire  signed [2:0] mul_res_805_fu_8571_p1;
wire  signed [5:0] sext_ln151_230_fu_8559_p1;
wire   [2:0] tmp_565_fu_8587_p4;
wire   [2:0] mul_res_807_fu_8609_p0;
wire  signed [2:0] mul_res_807_fu_8609_p1;
wire  signed [5:0] sext_ln151_232_fu_8597_p1;
wire   [2:0] tmp_566_fu_8615_p4;
wire   [2:0] mul_res_808_fu_8637_p0;
wire  signed [2:0] mul_res_808_fu_8637_p1;
wire  signed [5:0] sext_ln151_233_fu_8625_p1;
wire  signed [2:0] tmp_567_fu_8643_p4;
wire   [2:0] mul_res_809_fu_8665_p0;
wire   [2:0] tmp_568_fu_8671_p4;
wire   [2:0] mul_res_810_fu_8693_p0;
wire  signed [2:0] mul_res_810_fu_8693_p1;
wire  signed [5:0] sext_ln151_235_fu_8681_p1;
wire   [2:0] tmp_572_fu_8729_p4;
wire   [2:0] mul_res_814_fu_8751_p0;
wire  signed [2:0] mul_res_814_fu_8751_p1;
wire  signed [5:0] sext_ln151_239_fu_8739_p1;
wire   [2:0] tmp_573_fu_8757_p4;
wire  signed [2:0] mul_res_815_fu_8779_p0;
wire  signed [5:0] sext_ln151_240_fu_8767_p1;
wire   [2:0] mul_res_815_fu_8779_p1;
wire   [2:0] tmp_574_fu_8785_p4;
wire   [2:0] mul_res_816_fu_8807_p0;
wire  signed [2:0] mul_res_816_fu_8807_p1;
wire  signed [5:0] sext_ln151_241_fu_8795_p1;
wire   [2:0] tmp_576_fu_8823_p4;
wire   [2:0] mul_res_818_fu_8845_p0;
wire  signed [2:0] mul_res_818_fu_8845_p1;
wire  signed [5:0] sext_ln151_243_fu_8833_p1;
wire   [2:0] tmp_577_fu_8851_p4;
wire   [2:0] mul_res_819_fu_8873_p0;
wire  signed [2:0] mul_res_819_fu_8873_p1;
wire  signed [5:0] sext_ln151_244_fu_8861_p1;
wire   [2:0] tmp_579_fu_8889_p4;
wire   [2:0] mul_res_821_fu_8911_p0;
wire  signed [2:0] mul_res_821_fu_8911_p1;
wire  signed [5:0] sext_ln151_246_fu_8899_p1;
wire   [2:0] tmp_580_fu_8917_p4;
wire   [2:0] mul_res_822_fu_8939_p0;
wire  signed [2:0] mul_res_822_fu_8939_p1;
wire  signed [5:0] sext_ln151_247_fu_8927_p1;
wire   [2:0] tmp_581_fu_8945_p4;
wire   [2:0] mul_res_823_fu_8967_p0;
wire  signed [2:0] mul_res_823_fu_8967_p1;
wire  signed [5:0] sext_ln151_248_fu_8955_p1;
wire   [2:0] tmp_582_fu_8973_p4;
wire   [2:0] mul_res_824_fu_8995_p0;
wire  signed [2:0] mul_res_824_fu_8995_p1;
wire  signed [5:0] sext_ln151_249_fu_8983_p1;
wire   [2:0] tmp_583_fu_9001_p4;
wire   [2:0] mul_res_825_fu_9023_p0;
wire  signed [2:0] mul_res_825_fu_9023_p1;
wire  signed [5:0] sext_ln151_250_fu_9011_p1;
wire   [2:0] tmp_584_fu_9029_p4;
wire   [2:0] mul_res_826_fu_9051_p0;
wire  signed [2:0] mul_res_826_fu_9051_p1;
wire  signed [5:0] sext_ln151_251_fu_9039_p1;
wire   [2:0] tmp_586_fu_9067_p4;
wire   [2:0] mul_res_828_fu_9089_p0;
wire  signed [2:0] mul_res_828_fu_9089_p1;
wire  signed [5:0] sext_ln151_253_fu_9077_p1;
wire   [2:0] tmp_587_fu_9095_p4;
wire   [2:0] mul_res_829_fu_9117_p0;
wire  signed [2:0] mul_res_829_fu_9117_p1;
wire  signed [5:0] sext_ln151_254_fu_9105_p1;
wire   [2:0] tmp_589_fu_9133_p4;
wire   [2:0] mul_res_831_fu_9155_p0;
wire  signed [2:0] mul_res_831_fu_9155_p1;
wire  signed [5:0] sext_ln151_256_fu_9143_p1;
wire   [2:0] tmp_590_fu_9161_p4;
wire   [2:0] mul_res_832_fu_9183_p0;
wire  signed [2:0] mul_res_832_fu_9183_p1;
wire  signed [5:0] sext_ln151_257_fu_9171_p1;
wire   [2:0] tmp_592_fu_9199_p4;
wire   [2:0] mul_res_834_fu_9221_p0;
wire  signed [2:0] mul_res_834_fu_9221_p1;
wire  signed [5:0] sext_ln151_259_fu_9209_p1;
wire   [2:0] tmp_596_fu_9257_p4;
wire   [2:0] mul_res_838_fu_9279_p0;
wire  signed [2:0] mul_res_838_fu_9279_p1;
wire  signed [5:0] sext_ln151_263_fu_9267_p1;
wire   [2:0] tmp_597_fu_9285_p4;
wire  signed [2:0] mul_res_839_fu_9307_p0;
wire  signed [5:0] sext_ln151_264_fu_9295_p1;
wire   [2:0] mul_res_839_fu_9307_p1;
wire   [2:0] tmp_598_fu_9313_p4;
wire   [2:0] mul_res_840_fu_9335_p0;
wire  signed [2:0] mul_res_840_fu_9335_p1;
wire  signed [5:0] sext_ln151_265_fu_9323_p1;
wire   [2:0] tmp_600_fu_9351_p4;
wire   [2:0] mul_res_842_fu_9373_p0;
wire  signed [2:0] mul_res_842_fu_9373_p1;
wire  signed [5:0] sext_ln151_267_fu_9361_p1;
wire   [2:0] tmp_601_fu_9379_p4;
wire   [2:0] mul_res_843_fu_9401_p0;
wire  signed [2:0] mul_res_843_fu_9401_p1;
wire  signed [5:0] sext_ln151_268_fu_9389_p1;
wire   [2:0] tmp_603_fu_9417_p4;
wire   [2:0] mul_res_845_fu_9439_p0;
wire  signed [2:0] mul_res_845_fu_9439_p1;
wire  signed [5:0] sext_ln151_270_fu_9427_p1;
wire   [2:0] tmp_604_fu_9445_p4;
wire   [2:0] mul_res_846_fu_9467_p0;
wire  signed [2:0] mul_res_846_fu_9467_p1;
wire  signed [5:0] sext_ln151_271_fu_9455_p1;
wire   [2:0] tmp_605_fu_9473_p4;
wire   [2:0] mul_res_847_fu_9495_p0;
wire  signed [2:0] mul_res_847_fu_9495_p1;
wire  signed [5:0] sext_ln151_272_fu_9483_p1;
wire   [2:0] tmp_606_fu_9501_p4;
wire   [2:0] mul_res_848_fu_9523_p0;
wire  signed [2:0] mul_res_848_fu_9523_p1;
wire  signed [5:0] sext_ln151_273_fu_9511_p1;
wire   [2:0] tmp_607_fu_9529_p4;
wire   [2:0] mul_res_849_fu_9551_p0;
wire  signed [2:0] mul_res_849_fu_9551_p1;
wire  signed [5:0] sext_ln151_274_fu_9539_p1;
wire   [2:0] tmp_608_fu_9557_p4;
wire   [2:0] mul_res_850_fu_9579_p0;
wire  signed [2:0] mul_res_850_fu_9579_p1;
wire  signed [5:0] sext_ln151_275_fu_9567_p1;
wire   [2:0] tmp_610_fu_9595_p4;
wire   [2:0] mul_res_852_fu_9617_p0;
wire  signed [2:0] mul_res_852_fu_9617_p1;
wire  signed [5:0] sext_ln151_277_fu_9605_p1;
wire   [2:0] tmp_611_fu_9623_p4;
wire   [2:0] mul_res_853_fu_9645_p0;
wire  signed [2:0] mul_res_853_fu_9645_p1;
wire  signed [5:0] sext_ln151_278_fu_9633_p1;
wire   [2:0] tmp_613_fu_9661_p4;
wire   [2:0] mul_res_855_fu_9683_p0;
wire  signed [2:0] mul_res_855_fu_9683_p1;
wire  signed [5:0] sext_ln151_280_fu_9671_p1;
wire   [2:0] tmp_614_fu_9689_p4;
wire   [2:0] mul_res_856_fu_9711_p0;
wire  signed [2:0] mul_res_856_fu_9711_p1;
wire  signed [5:0] sext_ln151_281_fu_9699_p1;
wire   [2:0] tmp_616_fu_9727_p4;
wire   [2:0] mul_res_858_fu_9749_p0;
wire  signed [2:0] mul_res_858_fu_9749_p1;
wire  signed [5:0] sext_ln151_283_fu_9737_p1;
wire   [2:0] tmp_620_fu_9785_p4;
wire   [2:0] mul_res_862_fu_9807_p0;
wire  signed [2:0] mul_res_862_fu_9807_p1;
wire  signed [5:0] sext_ln151_287_fu_9795_p1;
wire   [2:0] tmp_311_fu_9813_p4;
wire   [2:0] mul_res_863_fu_9835_p0;
wire   [5:0] zext_ln151_24_fu_9823_p1;
wire  signed [2:0] mul_res_863_fu_9835_p1;
wire   [2:0] tmp_312_fu_9841_p4;
wire   [2:0] mul_res_864_fu_9863_p0;
wire   [5:0] zext_ln151_25_fu_9851_p1;
wire  signed [2:0] mul_res_864_fu_9863_p1;
wire   [2:0] tmp_314_fu_9879_p4;
wire   [2:0] mul_res_866_fu_9901_p0;
wire   [5:0] zext_ln151_27_fu_9889_p1;
wire  signed [2:0] mul_res_866_fu_9901_p1;
wire   [2:0] tmp_315_fu_9907_p4;
wire   [2:0] mul_res_867_fu_9929_p0;
wire   [5:0] zext_ln151_28_fu_9917_p1;
wire  signed [2:0] mul_res_867_fu_9929_p1;
wire   [2:0] tmp_317_fu_9945_p4;
wire   [2:0] mul_res_869_fu_9967_p0;
wire   [5:0] zext_ln151_30_fu_9955_p1;
wire  signed [2:0] mul_res_869_fu_9967_p1;
wire   [2:0] tmp_318_fu_9973_p4;
wire   [2:0] mul_res_870_fu_9995_p0;
wire   [5:0] zext_ln151_31_fu_9983_p1;
wire  signed [2:0] mul_res_870_fu_9995_p1;
wire   [2:0] tmp_319_fu_10001_p4;
wire   [2:0] mul_res_871_fu_10023_p0;
wire   [5:0] zext_ln151_32_fu_10011_p1;
wire  signed [2:0] mul_res_871_fu_10023_p1;
wire   [2:0] tmp_320_fu_10029_p4;
wire   [2:0] mul_res_872_fu_10051_p0;
wire   [5:0] zext_ln151_33_fu_10039_p1;
wire  signed [2:0] mul_res_872_fu_10051_p1;
wire   [2:0] tmp_321_fu_10057_p4;
wire   [2:0] mul_res_873_fu_10079_p0;
wire   [5:0] zext_ln151_34_fu_10067_p1;
wire  signed [2:0] mul_res_873_fu_10079_p1;
wire   [2:0] tmp_322_fu_10085_p4;
wire   [2:0] mul_res_874_fu_10107_p0;
wire   [5:0] zext_ln151_35_fu_10095_p1;
wire  signed [2:0] mul_res_874_fu_10107_p1;
wire   [2:0] tmp_324_fu_10123_p4;
wire   [2:0] mul_res_876_fu_10145_p0;
wire   [5:0] zext_ln151_37_fu_10133_p1;
wire  signed [2:0] mul_res_876_fu_10145_p1;
wire   [2:0] tmp_325_fu_10151_p4;
wire   [2:0] mul_res_877_fu_10173_p0;
wire   [5:0] zext_ln151_38_fu_10161_p1;
wire  signed [2:0] mul_res_877_fu_10173_p1;
wire   [2:0] tmp_327_fu_10189_p4;
wire   [2:0] mul_res_879_fu_10211_p0;
wire   [5:0] zext_ln151_40_fu_10199_p1;
wire  signed [2:0] mul_res_879_fu_10211_p1;
wire   [2:0] tmp_328_fu_10217_p4;
wire   [2:0] mul_res_880_fu_10239_p0;
wire   [5:0] zext_ln151_41_fu_10227_p1;
wire  signed [2:0] mul_res_880_fu_10239_p1;
wire   [2:0] tmp_330_fu_10255_p4;
wire   [2:0] mul_res_882_fu_10277_p0;
wire   [5:0] zext_ln151_43_fu_10265_p1;
wire  signed [2:0] mul_res_882_fu_10277_p1;
wire   [2:0] tmp_334_fu_10313_p4;
wire   [2:0] mul_res_886_fu_10335_p0;
wire   [5:0] zext_ln151_47_fu_10323_p1;
wire  signed [2:0] mul_res_886_fu_10335_p1;
wire   [2:0] mul_res_887_fu_10349_p0;
wire  signed [2:0] mul_res_887_fu_10349_p1;
wire   [2:0] mul_res_888_fu_10363_p0;
wire  signed [2:0] mul_res_888_fu_10363_p1;
wire   [2:0] mul_res_890_fu_10377_p0;
wire  signed [2:0] mul_res_890_fu_10377_p1;
wire   [2:0] mul_res_891_fu_10391_p0;
wire  signed [2:0] mul_res_891_fu_10391_p1;
wire   [2:0] mul_res_893_fu_10405_p0;
wire  signed [2:0] mul_res_893_fu_10405_p1;
wire   [2:0] mul_res_894_fu_10419_p0;
wire  signed [2:0] mul_res_894_fu_10419_p1;
wire   [2:0] mul_res_895_fu_10433_p0;
wire  signed [2:0] mul_res_895_fu_10433_p1;
wire   [2:0] mul_res_896_fu_10447_p0;
wire  signed [2:0] mul_res_896_fu_10447_p1;
wire   [2:0] mul_res_897_fu_10461_p0;
wire  signed [2:0] mul_res_897_fu_10461_p1;
wire   [2:0] mul_res_898_fu_10475_p0;
wire  signed [2:0] mul_res_898_fu_10475_p1;
wire   [2:0] mul_res_900_fu_10489_p0;
wire  signed [2:0] mul_res_900_fu_10489_p1;
wire   [2:0] mul_res_901_fu_10503_p0;
wire  signed [2:0] mul_res_901_fu_10503_p1;
wire   [2:0] mul_res_903_fu_10517_p0;
wire  signed [2:0] mul_res_903_fu_10517_p1;
wire   [2:0] mul_res_904_fu_10531_p0;
wire  signed [2:0] mul_res_904_fu_10531_p1;
wire   [2:0] mul_res_906_fu_10545_p0;
wire  signed [2:0] mul_res_906_fu_10545_p1;
wire   [2:0] mul_res_910_fu_10559_p0;
wire  signed [2:0] mul_res_910_fu_10559_p1;
wire   [2:0] mul_res_911_fu_10573_p0;
wire  signed [2:0] mul_res_911_fu_10573_p1;
wire   [2:0] mul_res_912_fu_10587_p0;
wire  signed [2:0] mul_res_912_fu_10587_p1;
wire   [2:0] mul_res_914_fu_10601_p0;
wire  signed [2:0] mul_res_914_fu_10601_p1;
wire   [2:0] mul_res_915_fu_10615_p0;
wire  signed [2:0] mul_res_915_fu_10615_p1;
wire   [2:0] mul_res_917_fu_10629_p0;
wire  signed [2:0] mul_res_917_fu_10629_p1;
wire   [2:0] mul_res_918_fu_10643_p0;
wire  signed [2:0] mul_res_918_fu_10643_p1;
wire   [2:0] mul_res_919_fu_10657_p0;
wire  signed [2:0] mul_res_919_fu_10657_p1;
wire   [2:0] mul_res_920_fu_10671_p0;
wire  signed [2:0] mul_res_920_fu_10671_p1;
wire   [2:0] mul_res_921_fu_10685_p0;
wire  signed [2:0] mul_res_921_fu_10685_p1;
wire   [2:0] mul_res_922_fu_10699_p0;
wire  signed [2:0] mul_res_922_fu_10699_p1;
wire   [2:0] mul_res_924_fu_10713_p0;
wire  signed [2:0] mul_res_924_fu_10713_p1;
wire   [2:0] mul_res_925_fu_10727_p0;
wire  signed [2:0] mul_res_925_fu_10727_p1;
wire   [2:0] mul_res_927_fu_10741_p0;
wire  signed [2:0] mul_res_927_fu_10741_p1;
wire   [2:0] mul_res_928_fu_10755_p0;
wire  signed [2:0] mul_res_928_fu_10755_p1;
wire   [2:0] mul_res_930_fu_10769_p0;
wire  signed [2:0] mul_res_930_fu_10769_p1;
wire   [2:0] mul_res_934_fu_10783_p0;
wire  signed [2:0] mul_res_934_fu_10783_p1;
wire   [2:0] mul_res_935_fu_10797_p0;
wire  signed [2:0] mul_res_935_fu_10797_p1;
wire   [2:0] mul_res_936_fu_10811_p0;
wire  signed [2:0] mul_res_936_fu_10811_p1;
wire   [2:0] mul_res_938_fu_10825_p0;
wire  signed [2:0] mul_res_938_fu_10825_p1;
wire   [2:0] mul_res_939_fu_10839_p0;
wire  signed [2:0] mul_res_939_fu_10839_p1;
wire   [2:0] mul_res_941_fu_10853_p0;
wire  signed [2:0] mul_res_941_fu_10853_p1;
wire   [2:0] mul_res_942_fu_10867_p0;
wire  signed [2:0] mul_res_942_fu_10867_p1;
wire   [2:0] mul_res_943_fu_10881_p0;
wire  signed [2:0] mul_res_943_fu_10881_p1;
wire   [2:0] mul_res_944_fu_10895_p0;
wire  signed [2:0] mul_res_944_fu_10895_p1;
wire   [2:0] mul_res_945_fu_10909_p0;
wire  signed [2:0] mul_res_945_fu_10909_p1;
wire   [2:0] mul_res_946_fu_10923_p0;
wire  signed [2:0] mul_res_946_fu_10923_p1;
wire   [2:0] mul_res_948_fu_10937_p0;
wire  signed [2:0] mul_res_948_fu_10937_p1;
wire   [2:0] mul_res_949_fu_10951_p0;
wire  signed [2:0] mul_res_949_fu_10951_p1;
wire   [2:0] mul_res_951_fu_10965_p0;
wire  signed [2:0] mul_res_951_fu_10965_p1;
wire   [2:0] mul_res_952_fu_10979_p0;
wire  signed [2:0] mul_res_952_fu_10979_p1;
wire   [2:0] mul_res_954_fu_10993_p0;
wire  signed [2:0] mul_res_954_fu_10993_p1;
wire   [2:0] mul_res_958_fu_11007_p0;
wire  signed [2:0] mul_res_958_fu_11007_p1;
wire   [2:0] mul_res_959_fu_11021_p0;
wire  signed [2:0] mul_res_959_fu_11021_p1;
wire   [2:0] mul_res_960_fu_11035_p0;
wire  signed [2:0] mul_res_960_fu_11035_p1;
wire   [2:0] mul_res_962_fu_11049_p0;
wire  signed [2:0] mul_res_962_fu_11049_p1;
wire   [2:0] mul_res_963_fu_11063_p0;
wire  signed [2:0] mul_res_963_fu_11063_p1;
wire   [2:0] mul_res_965_fu_11077_p0;
wire  signed [2:0] mul_res_965_fu_11077_p1;
wire   [2:0] mul_res_966_fu_11091_p0;
wire  signed [2:0] mul_res_966_fu_11091_p1;
wire   [2:0] mul_res_967_fu_11105_p0;
wire  signed [2:0] mul_res_967_fu_11105_p1;
wire   [2:0] mul_res_968_fu_11119_p0;
wire  signed [2:0] mul_res_968_fu_11119_p1;
wire   [2:0] mul_res_969_fu_11133_p0;
wire  signed [2:0] mul_res_969_fu_11133_p1;
wire   [2:0] mul_res_970_fu_11147_p0;
wire  signed [2:0] mul_res_970_fu_11147_p1;
wire   [2:0] mul_res_972_fu_11161_p0;
wire  signed [2:0] mul_res_972_fu_11161_p1;
wire   [2:0] mul_res_973_fu_11175_p0;
wire  signed [2:0] mul_res_973_fu_11175_p1;
wire   [2:0] mul_res_975_fu_11189_p0;
wire  signed [2:0] mul_res_975_fu_11189_p1;
wire   [2:0] mul_res_976_fu_11203_p0;
wire  signed [2:0] mul_res_976_fu_11203_p1;
wire   [2:0] mul_res_978_fu_11217_p0;
wire  signed [2:0] mul_res_978_fu_11217_p1;
wire   [2:0] mul_res_982_fu_11231_p0;
wire  signed [2:0] mul_res_982_fu_11231_p1;
wire   [2:0] mul_res_983_fu_11245_p0;
wire  signed [2:0] mul_res_983_fu_11245_p1;
wire   [2:0] mul_res_984_fu_11259_p0;
wire  signed [2:0] mul_res_984_fu_11259_p1;
wire   [2:0] mul_res_986_fu_11273_p0;
wire  signed [2:0] mul_res_986_fu_11273_p1;
wire   [2:0] mul_res_987_fu_11287_p0;
wire  signed [2:0] mul_res_987_fu_11287_p1;
wire   [2:0] mul_res_989_fu_11301_p0;
wire  signed [2:0] mul_res_989_fu_11301_p1;
wire   [2:0] mul_res_990_fu_11315_p0;
wire  signed [2:0] mul_res_990_fu_11315_p1;
wire   [2:0] mul_res_991_fu_11329_p0;
wire  signed [2:0] mul_res_991_fu_11329_p1;
wire   [2:0] mul_res_992_fu_11343_p0;
wire  signed [2:0] mul_res_992_fu_11343_p1;
wire   [2:0] mul_res_993_fu_11357_p0;
wire  signed [2:0] mul_res_993_fu_11357_p1;
wire   [2:0] mul_res_994_fu_11371_p0;
wire  signed [2:0] mul_res_994_fu_11371_p1;
wire   [2:0] mul_res_996_fu_11385_p0;
wire  signed [2:0] mul_res_996_fu_11385_p1;
wire   [2:0] mul_res_997_fu_11399_p0;
wire  signed [2:0] mul_res_997_fu_11399_p1;
wire   [2:0] mul_res_999_fu_11413_p0;
wire  signed [2:0] mul_res_999_fu_11413_p1;
wire   [2:0] mul_res_1000_fu_11427_p0;
wire  signed [2:0] mul_res_1000_fu_11427_p1;
wire   [2:0] mul_res_1002_fu_11441_p0;
wire  signed [2:0] mul_res_1002_fu_11441_p1;
wire   [2:0] mul_res_1006_fu_11455_p0;
wire  signed [2:0] mul_res_1006_fu_11455_p1;
wire   [2:0] mul_res_1007_fu_11469_p0;
wire  signed [2:0] mul_res_1007_fu_11469_p1;
wire   [2:0] mul_res_1008_fu_11483_p0;
wire  signed [2:0] mul_res_1008_fu_11483_p1;
wire   [2:0] mul_res_1010_fu_11497_p0;
wire  signed [2:0] mul_res_1010_fu_11497_p1;
wire   [2:0] mul_res_1011_fu_11511_p0;
wire  signed [2:0] mul_res_1011_fu_11511_p1;
wire   [2:0] mul_res_1013_fu_11525_p0;
wire  signed [2:0] mul_res_1013_fu_11525_p1;
wire   [2:0] mul_res_1014_fu_11539_p0;
wire  signed [2:0] mul_res_1014_fu_11539_p1;
wire   [2:0] mul_res_1015_fu_11553_p0;
wire  signed [2:0] mul_res_1015_fu_11553_p1;
wire   [2:0] mul_res_1016_fu_11567_p0;
wire  signed [2:0] mul_res_1016_fu_11567_p1;
wire   [2:0] mul_res_1017_fu_11581_p0;
wire  signed [2:0] mul_res_1017_fu_11581_p1;
wire   [2:0] mul_res_1018_fu_11595_p0;
wire  signed [2:0] mul_res_1018_fu_11595_p1;
wire   [2:0] mul_res_1020_fu_11609_p0;
wire  signed [2:0] mul_res_1020_fu_11609_p1;
wire   [2:0] mul_res_1021_fu_11623_p0;
wire  signed [2:0] mul_res_1021_fu_11623_p1;
wire   [2:0] mul_res_1023_fu_11637_p0;
wire  signed [2:0] mul_res_1023_fu_11637_p1;
wire   [2:0] mul_res_1024_fu_11651_p0;
wire  signed [2:0] mul_res_1024_fu_11651_p1;
wire   [2:0] mul_res_1026_fu_11665_p0;
wire  signed [2:0] mul_res_1026_fu_11665_p1;
wire   [2:0] mul_res_1030_fu_11679_p0;
wire  signed [2:0] mul_res_1030_fu_11679_p1;
wire   [2:0] mul_res_1031_fu_11693_p0;
wire  signed [2:0] mul_res_1031_fu_11693_p1;
wire   [2:0] mul_res_1032_fu_11707_p0;
wire  signed [2:0] mul_res_1032_fu_11707_p1;
wire   [2:0] mul_res_1034_fu_11721_p0;
wire  signed [2:0] mul_res_1034_fu_11721_p1;
wire   [2:0] mul_res_1035_fu_11735_p0;
wire  signed [2:0] mul_res_1035_fu_11735_p1;
wire   [2:0] mul_res_1037_fu_11749_p0;
wire  signed [2:0] mul_res_1037_fu_11749_p1;
wire   [2:0] mul_res_1038_fu_11763_p0;
wire  signed [2:0] mul_res_1038_fu_11763_p1;
wire   [2:0] mul_res_1039_fu_11777_p0;
wire  signed [2:0] mul_res_1039_fu_11777_p1;
wire   [2:0] mul_res_1040_fu_11791_p0;
wire  signed [2:0] mul_res_1040_fu_11791_p1;
wire   [2:0] mul_res_1041_fu_11805_p0;
wire  signed [2:0] mul_res_1041_fu_11805_p1;
wire   [2:0] mul_res_1042_fu_11819_p0;
wire  signed [2:0] mul_res_1042_fu_11819_p1;
wire   [2:0] mul_res_1044_fu_11833_p0;
wire  signed [2:0] mul_res_1044_fu_11833_p1;
wire   [2:0] mul_res_1045_fu_11847_p0;
wire  signed [2:0] mul_res_1045_fu_11847_p1;
wire   [2:0] mul_res_1047_fu_11861_p0;
wire  signed [2:0] mul_res_1047_fu_11861_p1;
wire   [2:0] mul_res_1048_fu_11875_p0;
wire  signed [2:0] mul_res_1048_fu_11875_p1;
wire   [2:0] mul_res_1050_fu_11889_p0;
wire  signed [2:0] mul_res_1050_fu_11889_p1;
wire   [2:0] mul_res_1054_fu_11903_p0;
wire  signed [2:0] mul_res_1054_fu_11903_p1;
wire   [2:0] mul_res_1055_fu_11917_p0;
wire  signed [2:0] mul_res_1055_fu_11917_p1;
wire   [2:0] mul_res_1056_fu_11931_p0;
wire  signed [2:0] mul_res_1056_fu_11931_p1;
wire   [2:0] mul_res_1058_fu_11945_p0;
wire  signed [2:0] mul_res_1058_fu_11945_p1;
wire   [2:0] mul_res_1059_fu_11959_p0;
wire  signed [2:0] mul_res_1059_fu_11959_p1;
wire   [2:0] mul_res_1061_fu_11973_p0;
wire  signed [2:0] mul_res_1061_fu_11973_p1;
wire   [2:0] mul_res_1062_fu_11987_p0;
wire  signed [2:0] mul_res_1062_fu_11987_p1;
wire   [2:0] mul_res_1063_fu_12001_p0;
wire  signed [2:0] mul_res_1063_fu_12001_p1;
wire   [2:0] mul_res_1064_fu_12015_p0;
wire  signed [2:0] mul_res_1064_fu_12015_p1;
wire   [2:0] mul_res_1065_fu_12029_p0;
wire  signed [2:0] mul_res_1065_fu_12029_p1;
wire   [2:0] mul_res_1066_fu_12043_p0;
wire  signed [2:0] mul_res_1066_fu_12043_p1;
wire   [2:0] mul_res_1068_fu_12057_p0;
wire  signed [2:0] mul_res_1068_fu_12057_p1;
wire   [2:0] mul_res_1069_fu_12071_p0;
wire  signed [2:0] mul_res_1069_fu_12071_p1;
wire   [2:0] mul_res_1071_fu_12085_p0;
wire  signed [2:0] mul_res_1071_fu_12085_p1;
wire   [2:0] mul_res_1072_fu_12099_p0;
wire  signed [2:0] mul_res_1072_fu_12099_p1;
wire   [2:0] mul_res_1074_fu_12113_p0;
wire  signed [2:0] mul_res_1074_fu_12113_p1;
wire   [2:0] mul_res_1078_fu_12127_p0;
wire  signed [2:0] mul_res_1078_fu_12127_p1;
wire   [2:0] mul_res_1079_fu_12141_p0;
wire  signed [2:0] mul_res_1079_fu_12141_p1;
wire   [2:0] mul_res_1080_fu_12155_p0;
wire  signed [2:0] mul_res_1080_fu_12155_p1;
wire   [2:0] mul_res_1082_fu_12169_p0;
wire  signed [2:0] mul_res_1082_fu_12169_p1;
wire   [2:0] mul_res_1083_fu_12183_p0;
wire  signed [2:0] mul_res_1083_fu_12183_p1;
wire   [2:0] mul_res_1085_fu_12197_p0;
wire  signed [2:0] mul_res_1085_fu_12197_p1;
wire   [2:0] mul_res_1086_fu_12211_p0;
wire  signed [2:0] mul_res_1086_fu_12211_p1;
wire   [2:0] mul_res_1087_fu_12225_p0;
wire  signed [2:0] mul_res_1087_fu_12225_p1;
wire   [2:0] mul_res_1088_fu_12239_p0;
wire  signed [2:0] mul_res_1088_fu_12239_p1;
wire   [2:0] mul_res_1089_fu_12253_p0;
wire  signed [2:0] mul_res_1089_fu_12253_p1;
wire   [2:0] mul_res_1090_fu_12267_p0;
wire  signed [2:0] mul_res_1090_fu_12267_p1;
wire   [2:0] mul_res_1092_fu_12281_p0;
wire  signed [2:0] mul_res_1092_fu_12281_p1;
wire   [2:0] mul_res_1093_fu_12295_p0;
wire  signed [2:0] mul_res_1093_fu_12295_p1;
wire   [2:0] mul_res_1095_fu_12309_p0;
wire  signed [2:0] mul_res_1095_fu_12309_p1;
wire   [2:0] mul_res_1096_fu_12323_p0;
wire  signed [2:0] mul_res_1096_fu_12323_p1;
wire   [2:0] mul_res_1098_fu_12337_p0;
wire  signed [2:0] mul_res_1098_fu_12337_p1;
wire   [2:0] mul_res_1102_fu_12351_p0;
wire  signed [2:0] mul_res_1102_fu_12351_p1;
wire   [2:0] mul_res_1103_fu_12365_p0;
wire  signed [2:0] mul_res_1103_fu_12365_p1;
wire   [2:0] mul_res_1104_fu_12379_p0;
wire  signed [2:0] mul_res_1104_fu_12379_p1;
wire   [2:0] mul_res_1106_fu_12393_p0;
wire  signed [2:0] mul_res_1106_fu_12393_p1;
wire   [2:0] mul_res_1107_fu_12407_p0;
wire  signed [2:0] mul_res_1107_fu_12407_p1;
wire   [2:0] mul_res_1109_fu_12421_p0;
wire  signed [2:0] mul_res_1109_fu_12421_p1;
wire   [2:0] mul_res_1110_fu_12435_p0;
wire  signed [2:0] mul_res_1110_fu_12435_p1;
wire   [2:0] mul_res_1111_fu_12449_p0;
wire  signed [2:0] mul_res_1111_fu_12449_p1;
wire   [2:0] mul_res_1112_fu_12463_p0;
wire  signed [2:0] mul_res_1112_fu_12463_p1;
wire   [2:0] mul_res_1113_fu_12477_p0;
wire  signed [2:0] mul_res_1113_fu_12477_p1;
wire   [2:0] mul_res_1114_fu_12491_p0;
wire  signed [2:0] mul_res_1114_fu_12491_p1;
wire   [2:0] mul_res_1116_fu_12505_p0;
wire  signed [2:0] mul_res_1116_fu_12505_p1;
wire   [2:0] mul_res_1117_fu_12519_p0;
wire  signed [2:0] mul_res_1117_fu_12519_p1;
wire   [2:0] mul_res_1119_fu_12533_p0;
wire  signed [2:0] mul_res_1119_fu_12533_p1;
wire   [2:0] mul_res_1120_fu_12547_p0;
wire  signed [2:0] mul_res_1120_fu_12547_p1;
wire   [2:0] mul_res_1122_fu_12561_p0;
wire  signed [2:0] mul_res_1122_fu_12561_p1;
wire   [2:0] mul_res_1126_fu_12575_p0;
wire  signed [2:0] mul_res_1126_fu_12575_p1;
wire   [2:0] mul_res_1127_fu_12589_p0;
wire  signed [2:0] mul_res_1127_fu_12589_p1;
wire   [2:0] mul_res_1128_fu_12603_p0;
wire  signed [2:0] mul_res_1128_fu_12603_p1;
wire   [2:0] mul_res_1130_fu_12617_p0;
wire  signed [2:0] mul_res_1130_fu_12617_p1;
wire   [2:0] mul_res_1131_fu_12631_p0;
wire  signed [2:0] mul_res_1131_fu_12631_p1;
wire   [2:0] mul_res_1133_fu_12645_p0;
wire  signed [2:0] mul_res_1133_fu_12645_p1;
wire   [2:0] mul_res_1134_fu_12659_p0;
wire  signed [2:0] mul_res_1134_fu_12659_p1;
wire   [2:0] mul_res_1135_fu_12673_p0;
wire  signed [2:0] mul_res_1135_fu_12673_p1;
wire   [2:0] mul_res_1136_fu_12687_p0;
wire  signed [2:0] mul_res_1136_fu_12687_p1;
wire   [2:0] mul_res_1137_fu_12701_p0;
wire  signed [2:0] mul_res_1137_fu_12701_p1;
wire   [2:0] mul_res_1138_fu_12715_p0;
wire  signed [2:0] mul_res_1138_fu_12715_p1;
wire   [2:0] mul_res_1140_fu_12729_p0;
wire  signed [2:0] mul_res_1140_fu_12729_p1;
wire   [2:0] mul_res_1141_fu_12743_p0;
wire  signed [2:0] mul_res_1141_fu_12743_p1;
wire   [2:0] mul_res_1143_fu_12757_p0;
wire  signed [2:0] mul_res_1143_fu_12757_p1;
wire   [2:0] mul_res_1144_fu_12771_p0;
wire  signed [2:0] mul_res_1144_fu_12771_p1;
wire   [2:0] mul_res_1146_fu_12785_p0;
wire  signed [2:0] mul_res_1146_fu_12785_p1;
wire   [2:0] mul_res_1150_fu_12799_p0;
wire  signed [2:0] mul_res_1150_fu_12799_p1;
wire   [2:0] mul_res_577_fu_12939_p0;
wire   [5:0] zext_ln151_2_fu_12925_p1;
wire  signed [2:0] mul_res_577_fu_12939_p1;
wire  signed [5:0] sext_ln151_2_fu_12928_p1;
wire  signed [5:0] mul_res_577_fu_12939_p2;
wire   [2:0] mul_res_580_fu_12969_p0;
wire   [5:0] zext_ln151_5_fu_12955_p1;
wire  signed [2:0] mul_res_580_fu_12969_p1;
wire  signed [5:0] sext_ln151_5_fu_12958_p1;
wire  signed [5:0] mul_res_580_fu_12969_p2;
wire   [2:0] mul_res_590_fu_13020_p0;
wire   [5:0] zext_ln151_15_fu_13006_p1;
wire  signed [2:0] mul_res_590_fu_13020_p1;
wire  signed [5:0] sext_ln151_15_fu_13009_p1;
wire  signed [5:0] mul_res_590_fu_13020_p2;
wire   [2:0] mul_res_595_fu_13056_p0;
wire   [5:0] zext_ln151_20_fu_13042_p1;
wire  signed [2:0] mul_res_595_fu_13056_p1;
wire  signed [5:0] sext_ln151_20_fu_13045_p1;
wire  signed [5:0] mul_res_595_fu_13056_p2;
wire   [2:0] mul_res_596_fu_13080_p0;
wire   [5:0] zext_ln151_21_fu_13066_p1;
wire  signed [2:0] mul_res_596_fu_13080_p1;
wire  signed [5:0] sext_ln151_21_fu_13069_p1;
wire  signed [5:0] mul_res_596_fu_13080_p2;
wire   [2:0] mul_res_597_fu_13104_p0;
wire   [5:0] zext_ln151_22_fu_13090_p1;
wire  signed [2:0] mul_res_597_fu_13104_p1;
wire  signed [5:0] sext_ln151_22_fu_13093_p1;
wire  signed [5:0] mul_res_597_fu_13104_p2;
wire  signed [6:0] sext_ln151_309_fu_13086_p1;
wire  signed [6:0] sext_ln151_310_fu_13110_p1;
wire  signed [6:0] sext_ln151_305_fu_13033_p1;
wire  signed [6:0] sext_ln151_307_fu_13039_p1;
wire   [6:0] add_ln153_2_fu_13123_p2;
wire  signed [7:0] sext_ln153_2_fu_13129_p1;
wire  signed [7:0] sext_ln151_308_fu_13062_p1;
wire  signed [6:0] sext_ln151_299_fu_12994_p1;
wire  signed [6:0] sext_ln151_301_fu_13000_p1;
wire   [6:0] add_ln153_5_fu_13139_p2;
wire  signed [7:0] sext_ln153_4_fu_13145_p1;
wire  signed [7:0] sext_ln151_306_fu_13036_p1;
wire   [7:0] add_ln153_6_fu_13149_p2;
wire  signed [6:0] sext_ln151_302_fu_13003_p1;
wire  signed [6:0] sext_ln151_304_fu_13030_p1;
wire   [6:0] add_ln153_7_fu_13159_p2;
wire  signed [7:0] sext_ln153_6_fu_13165_p1;
wire  signed [7:0] sext_ln151_300_fu_12997_p1;
wire   [7:0] add_ln153_8_fu_13169_p2;
wire  signed [8:0] sext_ln153_7_fu_13175_p1;
wire  signed [8:0] sext_ln153_5_fu_13155_p1;
wire  signed [6:0] sext_ln151_289_fu_12922_p1;
wire  signed [6:0] sext_ln151_288_fu_12919_p1;
wire   [6:0] add_ln153_11_fu_13185_p2;
wire  signed [7:0] sext_ln153_9_fu_13191_p1;
wire  signed [7:0] sext_ln151_303_fu_13026_p1;
wire  signed [6:0] sext_ln151_292_fu_12952_p1;
wire  signed [6:0] sext_ln151_291_fu_12949_p1;
wire   [6:0] add_ln153_13_fu_13201_p2;
wire  signed [7:0] sext_ln153_11_fu_13207_p1;
wire  signed [7:0] sext_ln151_290_fu_12945_p1;
wire  signed [6:0] sext_ln151_295_fu_12982_p1;
wire  signed [6:0] sext_ln151_294_fu_12979_p1;
wire   [6:0] add_ln153_16_fu_13217_p2;
wire  signed [7:0] sext_ln153_14_fu_13223_p1;
wire  signed [7:0] sext_ln151_293_fu_12975_p1;
wire  signed [6:0] sext_ln151_296_fu_12985_p1;
wire  signed [6:0] sext_ln151_298_fu_12991_p1;
wire   [6:0] add_ln153_18_fu_13233_p2;
wire  signed [6:0] sext_ln151_297_fu_12988_p1;
wire  signed [6:0] sext_ln153_fu_13114_p1;
wire   [6:0] add_ln153_19_fu_13243_p2;
wire  signed [7:0] sext_ln153_17_fu_13249_p1;
wire  signed [7:0] sext_ln153_16_fu_13239_p1;
wire   [2:0] mul_res_601_fu_13276_p0;
wire  signed [2:0] mul_res_601_fu_13276_p1;
wire  signed [5:0] sext_ln151_26_fu_13265_p1;
wire  signed [5:0] mul_res_601_fu_13276_p2;
wire   [2:0] mul_res_604_fu_13303_p0;
wire  signed [2:0] mul_res_604_fu_13303_p1;
wire  signed [5:0] sext_ln151_29_fu_13292_p1;
wire  signed [5:0] mul_res_604_fu_13303_p2;
wire   [2:0] mul_res_614_fu_13351_p0;
wire  signed [2:0] mul_res_614_fu_13351_p1;
wire  signed [5:0] sext_ln151_39_fu_13340_p1;
wire  signed [5:0] mul_res_614_fu_13351_p2;
wire   [2:0] mul_res_619_fu_13384_p0;
wire  signed [2:0] mul_res_619_fu_13384_p1;
wire  signed [5:0] sext_ln151_44_fu_13373_p1;
wire  signed [5:0] mul_res_619_fu_13384_p2;
wire   [2:0] mul_res_620_fu_13405_p0;
wire  signed [2:0] mul_res_620_fu_13405_p1;
wire  signed [5:0] sext_ln151_45_fu_13394_p1;
wire  signed [5:0] mul_res_620_fu_13405_p2;
wire   [2:0] mul_res_621_fu_13426_p0;
wire  signed [2:0] mul_res_621_fu_13426_p1;
wire  signed [5:0] sext_ln151_46_fu_13415_p1;
wire  signed [5:0] mul_res_621_fu_13426_p2;
wire  signed [6:0] sext_ln151_332_fu_13411_p1;
wire  signed [6:0] sext_ln151_333_fu_13432_p1;
wire  signed [6:0] sext_ln151_328_fu_13364_p1;
wire  signed [6:0] sext_ln151_330_fu_13370_p1;
wire   [6:0] add_ln153_26_fu_13445_p2;
wire  signed [7:0] sext_ln153_22_fu_13451_p1;
wire  signed [7:0] sext_ln151_331_fu_13390_p1;
wire  signed [6:0] sext_ln151_322_fu_13328_p1;
wire  signed [6:0] sext_ln151_324_fu_13334_p1;
wire   [6:0] add_ln153_29_fu_13461_p2;
wire  signed [7:0] sext_ln153_24_fu_13467_p1;
wire  signed [7:0] sext_ln151_329_fu_13367_p1;
wire   [7:0] add_ln153_30_fu_13471_p2;
wire  signed [6:0] sext_ln151_325_fu_13337_p1;
wire  signed [6:0] sext_ln151_327_fu_13361_p1;
wire   [6:0] add_ln153_31_fu_13481_p2;
wire  signed [7:0] sext_ln153_26_fu_13487_p1;
wire  signed [7:0] sext_ln151_323_fu_13331_p1;
wire   [7:0] add_ln153_32_fu_13491_p2;
wire  signed [8:0] sext_ln153_27_fu_13497_p1;
wire  signed [8:0] sext_ln153_25_fu_13477_p1;
wire  signed [6:0] sext_ln151_312_fu_13262_p1;
wire  signed [6:0] sext_ln151_311_fu_13259_p1;
wire   [6:0] add_ln153_35_fu_13507_p2;
wire  signed [7:0] sext_ln153_29_fu_13513_p1;
wire  signed [7:0] sext_ln151_326_fu_13357_p1;
wire  signed [6:0] sext_ln151_315_fu_13289_p1;
wire  signed [6:0] sext_ln151_314_fu_13286_p1;
wire   [6:0] add_ln153_37_fu_13523_p2;
wire  signed [7:0] sext_ln153_31_fu_13529_p1;
wire  signed [7:0] sext_ln151_313_fu_13282_p1;
wire  signed [6:0] sext_ln151_318_fu_13316_p1;
wire  signed [6:0] sext_ln151_317_fu_13313_p1;
wire   [6:0] add_ln153_40_fu_13539_p2;
wire  signed [7:0] sext_ln153_34_fu_13545_p1;
wire  signed [7:0] sext_ln151_316_fu_13309_p1;
wire  signed [6:0] sext_ln151_319_fu_13319_p1;
wire  signed [6:0] sext_ln151_321_fu_13325_p1;
wire   [6:0] add_ln153_42_fu_13555_p2;
wire  signed [6:0] sext_ln151_320_fu_13322_p1;
wire  signed [6:0] sext_ln153_20_fu_13436_p1;
wire   [6:0] add_ln153_43_fu_13565_p2;
wire  signed [7:0] sext_ln153_37_fu_13571_p1;
wire  signed [7:0] sext_ln153_36_fu_13561_p1;
wire   [2:0] mul_res_625_fu_13598_p0;
wire  signed [2:0] mul_res_625_fu_13598_p1;
wire  signed [5:0] sext_ln151_50_fu_13587_p1;
wire  signed [5:0] mul_res_625_fu_13598_p2;
wire   [2:0] mul_res_628_fu_13625_p0;
wire  signed [2:0] mul_res_628_fu_13625_p1;
wire  signed [5:0] sext_ln151_53_fu_13614_p1;
wire  signed [5:0] mul_res_628_fu_13625_p2;
wire   [2:0] mul_res_638_fu_13673_p0;
wire  signed [2:0] mul_res_638_fu_13673_p1;
wire  signed [5:0] sext_ln151_63_fu_13662_p1;
wire  signed [5:0] mul_res_638_fu_13673_p2;
wire   [2:0] mul_res_643_fu_13706_p0;
wire  signed [2:0] mul_res_643_fu_13706_p1;
wire  signed [5:0] sext_ln151_68_fu_13695_p1;
wire  signed [5:0] mul_res_643_fu_13706_p2;
wire   [2:0] mul_res_644_fu_13727_p0;
wire  signed [2:0] mul_res_644_fu_13727_p1;
wire  signed [5:0] sext_ln151_69_fu_13716_p1;
wire  signed [5:0] mul_res_644_fu_13727_p2;
wire   [2:0] mul_res_645_fu_13748_p0;
wire  signed [2:0] mul_res_645_fu_13748_p1;
wire  signed [5:0] sext_ln151_70_fu_13737_p1;
wire  signed [5:0] mul_res_645_fu_13748_p2;
wire  signed [6:0] sext_ln151_355_fu_13733_p1;
wire  signed [6:0] sext_ln151_356_fu_13754_p1;
wire  signed [6:0] sext_ln151_351_fu_13686_p1;
wire  signed [6:0] sext_ln151_353_fu_13692_p1;
wire   [6:0] add_ln153_50_fu_13767_p2;
wire  signed [7:0] sext_ln153_42_fu_13773_p1;
wire  signed [7:0] sext_ln151_354_fu_13712_p1;
wire  signed [6:0] sext_ln151_345_fu_13650_p1;
wire  signed [6:0] sext_ln151_347_fu_13656_p1;
wire   [6:0] add_ln153_53_fu_13783_p2;
wire  signed [7:0] sext_ln153_44_fu_13789_p1;
wire  signed [7:0] sext_ln151_352_fu_13689_p1;
wire   [7:0] add_ln153_54_fu_13793_p2;
wire  signed [6:0] sext_ln151_348_fu_13659_p1;
wire  signed [6:0] sext_ln151_350_fu_13683_p1;
wire   [6:0] add_ln153_55_fu_13803_p2;
wire  signed [7:0] sext_ln153_46_fu_13809_p1;
wire  signed [7:0] sext_ln151_346_fu_13653_p1;
wire   [7:0] add_ln153_56_fu_13813_p2;
wire  signed [8:0] sext_ln153_47_fu_13819_p1;
wire  signed [8:0] sext_ln153_45_fu_13799_p1;
wire  signed [6:0] sext_ln151_335_fu_13584_p1;
wire  signed [6:0] sext_ln151_334_fu_13581_p1;
wire   [6:0] add_ln153_59_fu_13829_p2;
wire  signed [7:0] sext_ln153_49_fu_13835_p1;
wire  signed [7:0] sext_ln151_349_fu_13679_p1;
wire  signed [6:0] sext_ln151_338_fu_13611_p1;
wire  signed [6:0] sext_ln151_337_fu_13608_p1;
wire   [6:0] add_ln153_61_fu_13845_p2;
wire  signed [7:0] sext_ln153_51_fu_13851_p1;
wire  signed [7:0] sext_ln151_336_fu_13604_p1;
wire  signed [6:0] sext_ln151_341_fu_13638_p1;
wire  signed [6:0] sext_ln151_340_fu_13635_p1;
wire   [6:0] add_ln153_64_fu_13861_p2;
wire  signed [7:0] sext_ln153_54_fu_13867_p1;
wire  signed [7:0] sext_ln151_339_fu_13631_p1;
wire  signed [6:0] sext_ln151_342_fu_13641_p1;
wire  signed [6:0] sext_ln151_344_fu_13647_p1;
wire   [6:0] add_ln153_66_fu_13877_p2;
wire  signed [6:0] sext_ln151_343_fu_13644_p1;
wire  signed [6:0] sext_ln153_40_fu_13758_p1;
wire   [6:0] add_ln153_67_fu_13887_p2;
wire  signed [7:0] sext_ln153_57_fu_13893_p1;
wire  signed [7:0] sext_ln153_56_fu_13883_p1;
wire   [2:0] mul_res_649_fu_13920_p0;
wire  signed [2:0] mul_res_649_fu_13920_p1;
wire  signed [5:0] sext_ln151_74_fu_13909_p1;
wire  signed [5:0] mul_res_649_fu_13920_p2;
wire   [2:0] mul_res_652_fu_13947_p0;
wire  signed [2:0] mul_res_652_fu_13947_p1;
wire  signed [5:0] sext_ln151_77_fu_13936_p1;
wire  signed [5:0] mul_res_652_fu_13947_p2;
wire   [2:0] mul_res_662_fu_13995_p0;
wire  signed [2:0] mul_res_662_fu_13995_p1;
wire  signed [5:0] sext_ln151_87_fu_13984_p1;
wire  signed [5:0] mul_res_662_fu_13995_p2;
wire   [2:0] mul_res_667_fu_14028_p0;
wire  signed [2:0] mul_res_667_fu_14028_p1;
wire  signed [5:0] sext_ln151_92_fu_14017_p1;
wire  signed [5:0] mul_res_667_fu_14028_p2;
wire   [2:0] mul_res_668_fu_14049_p0;
wire  signed [2:0] mul_res_668_fu_14049_p1;
wire  signed [5:0] sext_ln151_93_fu_14038_p1;
wire  signed [5:0] mul_res_668_fu_14049_p2;
wire   [2:0] mul_res_669_fu_14070_p0;
wire  signed [2:0] mul_res_669_fu_14070_p1;
wire  signed [5:0] sext_ln151_94_fu_14059_p1;
wire  signed [5:0] mul_res_669_fu_14070_p2;
wire  signed [6:0] sext_ln151_378_fu_14055_p1;
wire  signed [6:0] sext_ln151_379_fu_14076_p1;
wire  signed [6:0] sext_ln151_374_fu_14008_p1;
wire  signed [6:0] sext_ln151_376_fu_14014_p1;
wire   [6:0] add_ln153_74_fu_14089_p2;
wire  signed [7:0] sext_ln153_62_fu_14095_p1;
wire  signed [7:0] sext_ln151_377_fu_14034_p1;
wire  signed [6:0] sext_ln151_368_fu_13972_p1;
wire  signed [6:0] sext_ln151_370_fu_13978_p1;
wire   [6:0] add_ln153_77_fu_14105_p2;
wire  signed [7:0] sext_ln153_64_fu_14111_p1;
wire  signed [7:0] sext_ln151_375_fu_14011_p1;
wire   [7:0] add_ln153_78_fu_14115_p2;
wire  signed [6:0] sext_ln151_371_fu_13981_p1;
wire  signed [6:0] sext_ln151_373_fu_14005_p1;
wire   [6:0] add_ln153_79_fu_14125_p2;
wire  signed [7:0] sext_ln153_66_fu_14131_p1;
wire  signed [7:0] sext_ln151_369_fu_13975_p1;
wire   [7:0] add_ln153_80_fu_14135_p2;
wire  signed [8:0] sext_ln153_67_fu_14141_p1;
wire  signed [8:0] sext_ln153_65_fu_14121_p1;
wire  signed [6:0] sext_ln151_358_fu_13906_p1;
wire  signed [6:0] sext_ln151_357_fu_13903_p1;
wire   [6:0] add_ln153_83_fu_14151_p2;
wire  signed [7:0] sext_ln153_69_fu_14157_p1;
wire  signed [7:0] sext_ln151_372_fu_14001_p1;
wire  signed [6:0] sext_ln151_361_fu_13933_p1;
wire  signed [6:0] sext_ln151_360_fu_13930_p1;
wire   [6:0] add_ln153_85_fu_14167_p2;
wire  signed [7:0] sext_ln153_71_fu_14173_p1;
wire  signed [7:0] sext_ln151_359_fu_13926_p1;
wire  signed [6:0] sext_ln151_364_fu_13960_p1;
wire  signed [6:0] sext_ln151_363_fu_13957_p1;
wire   [6:0] add_ln153_88_fu_14183_p2;
wire  signed [7:0] sext_ln153_74_fu_14189_p1;
wire  signed [7:0] sext_ln151_362_fu_13953_p1;
wire  signed [6:0] sext_ln151_365_fu_13963_p1;
wire  signed [6:0] sext_ln151_367_fu_13969_p1;
wire   [6:0] add_ln153_90_fu_14199_p2;
wire  signed [6:0] sext_ln151_366_fu_13966_p1;
wire  signed [6:0] sext_ln153_60_fu_14080_p1;
wire   [6:0] add_ln153_91_fu_14209_p2;
wire  signed [7:0] sext_ln153_77_fu_14215_p1;
wire  signed [7:0] sext_ln153_76_fu_14205_p1;
wire   [2:0] mul_res_673_fu_14242_p0;
wire  signed [2:0] mul_res_673_fu_14242_p1;
wire  signed [5:0] sext_ln151_98_fu_14231_p1;
wire  signed [5:0] mul_res_673_fu_14242_p2;
wire   [2:0] mul_res_676_fu_14269_p0;
wire  signed [2:0] mul_res_676_fu_14269_p1;
wire  signed [5:0] sext_ln151_101_fu_14258_p1;
wire  signed [5:0] mul_res_676_fu_14269_p2;
wire   [2:0] mul_res_686_fu_14317_p0;
wire  signed [2:0] mul_res_686_fu_14317_p1;
wire  signed [5:0] sext_ln151_111_fu_14306_p1;
wire  signed [5:0] mul_res_686_fu_14317_p2;
wire   [2:0] mul_res_691_fu_14350_p0;
wire  signed [2:0] mul_res_691_fu_14350_p1;
wire  signed [5:0] sext_ln151_116_fu_14339_p1;
wire  signed [5:0] mul_res_691_fu_14350_p2;
wire   [2:0] mul_res_692_fu_14371_p0;
wire  signed [2:0] mul_res_692_fu_14371_p1;
wire  signed [5:0] sext_ln151_117_fu_14360_p1;
wire  signed [5:0] mul_res_692_fu_14371_p2;
wire   [2:0] mul_res_693_fu_14392_p0;
wire  signed [2:0] mul_res_693_fu_14392_p1;
wire  signed [5:0] sext_ln151_118_fu_14381_p1;
wire  signed [5:0] mul_res_693_fu_14392_p2;
wire  signed [6:0] sext_ln151_401_fu_14377_p1;
wire  signed [6:0] sext_ln151_402_fu_14398_p1;
wire  signed [6:0] sext_ln151_397_fu_14330_p1;
wire  signed [6:0] sext_ln151_399_fu_14336_p1;
wire   [6:0] add_ln153_98_fu_14411_p2;
wire  signed [7:0] sext_ln153_82_fu_14417_p1;
wire  signed [7:0] sext_ln151_400_fu_14356_p1;
wire  signed [6:0] sext_ln151_391_fu_14294_p1;
wire  signed [6:0] sext_ln151_393_fu_14300_p1;
wire   [6:0] add_ln153_101_fu_14427_p2;
wire  signed [7:0] sext_ln153_84_fu_14433_p1;
wire  signed [7:0] sext_ln151_398_fu_14333_p1;
wire   [7:0] add_ln153_102_fu_14437_p2;
wire  signed [6:0] sext_ln151_394_fu_14303_p1;
wire  signed [6:0] sext_ln151_396_fu_14327_p1;
wire   [6:0] add_ln153_103_fu_14447_p2;
wire  signed [7:0] sext_ln153_86_fu_14453_p1;
wire  signed [7:0] sext_ln151_392_fu_14297_p1;
wire   [7:0] add_ln153_104_fu_14457_p2;
wire  signed [8:0] sext_ln153_87_fu_14463_p1;
wire  signed [8:0] sext_ln153_85_fu_14443_p1;
wire  signed [6:0] sext_ln151_381_fu_14228_p1;
wire  signed [6:0] sext_ln151_380_fu_14225_p1;
wire   [6:0] add_ln153_107_fu_14473_p2;
wire  signed [7:0] sext_ln153_89_fu_14479_p1;
wire  signed [7:0] sext_ln151_395_fu_14323_p1;
wire  signed [6:0] sext_ln151_384_fu_14255_p1;
wire  signed [6:0] sext_ln151_383_fu_14252_p1;
wire   [6:0] add_ln153_109_fu_14489_p2;
wire  signed [7:0] sext_ln153_91_fu_14495_p1;
wire  signed [7:0] sext_ln151_382_fu_14248_p1;
wire  signed [6:0] sext_ln151_387_fu_14282_p1;
wire  signed [6:0] sext_ln151_386_fu_14279_p1;
wire   [6:0] add_ln153_112_fu_14505_p2;
wire  signed [7:0] sext_ln153_94_fu_14511_p1;
wire  signed [7:0] sext_ln151_385_fu_14275_p1;
wire  signed [6:0] sext_ln151_388_fu_14285_p1;
wire  signed [6:0] sext_ln151_390_fu_14291_p1;
wire   [6:0] add_ln153_114_fu_14521_p2;
wire  signed [6:0] sext_ln151_389_fu_14288_p1;
wire  signed [6:0] sext_ln153_80_fu_14402_p1;
wire   [6:0] add_ln153_115_fu_14531_p2;
wire  signed [7:0] sext_ln153_97_fu_14537_p1;
wire  signed [7:0] sext_ln153_96_fu_14527_p1;
wire   [2:0] mul_res_697_fu_14564_p0;
wire  signed [2:0] mul_res_697_fu_14564_p1;
wire  signed [5:0] sext_ln151_122_fu_14553_p1;
wire  signed [5:0] mul_res_697_fu_14564_p2;
wire   [2:0] mul_res_700_fu_14591_p0;
wire  signed [2:0] mul_res_700_fu_14591_p1;
wire  signed [5:0] sext_ln151_125_fu_14580_p1;
wire  signed [5:0] mul_res_700_fu_14591_p2;
wire   [2:0] mul_res_710_fu_14639_p0;
wire  signed [2:0] mul_res_710_fu_14639_p1;
wire  signed [5:0] sext_ln151_135_fu_14628_p1;
wire  signed [5:0] mul_res_710_fu_14639_p2;
wire   [2:0] mul_res_715_fu_14672_p0;
wire  signed [2:0] mul_res_715_fu_14672_p1;
wire  signed [5:0] sext_ln151_140_fu_14661_p1;
wire  signed [5:0] mul_res_715_fu_14672_p2;
wire   [2:0] mul_res_716_fu_14693_p0;
wire  signed [2:0] mul_res_716_fu_14693_p1;
wire  signed [5:0] sext_ln151_141_fu_14682_p1;
wire  signed [5:0] mul_res_716_fu_14693_p2;
wire   [2:0] mul_res_717_fu_14714_p0;
wire  signed [2:0] mul_res_717_fu_14714_p1;
wire  signed [5:0] sext_ln151_142_fu_14703_p1;
wire  signed [5:0] mul_res_717_fu_14714_p2;
wire  signed [6:0] sext_ln151_424_fu_14699_p1;
wire  signed [6:0] sext_ln151_425_fu_14720_p1;
wire  signed [6:0] sext_ln151_420_fu_14652_p1;
wire  signed [6:0] sext_ln151_422_fu_14658_p1;
wire   [6:0] add_ln153_122_fu_14733_p2;
wire  signed [7:0] sext_ln153_102_fu_14739_p1;
wire  signed [7:0] sext_ln151_423_fu_14678_p1;
wire  signed [6:0] sext_ln151_414_fu_14616_p1;
wire  signed [6:0] sext_ln151_416_fu_14622_p1;
wire   [6:0] add_ln153_125_fu_14749_p2;
wire  signed [7:0] sext_ln153_104_fu_14755_p1;
wire  signed [7:0] sext_ln151_421_fu_14655_p1;
wire   [7:0] add_ln153_126_fu_14759_p2;
wire  signed [6:0] sext_ln151_417_fu_14625_p1;
wire  signed [6:0] sext_ln151_419_fu_14649_p1;
wire   [6:0] add_ln153_127_fu_14769_p2;
wire  signed [7:0] sext_ln153_106_fu_14775_p1;
wire  signed [7:0] sext_ln151_415_fu_14619_p1;
wire   [7:0] add_ln153_128_fu_14779_p2;
wire  signed [8:0] sext_ln153_107_fu_14785_p1;
wire  signed [8:0] sext_ln153_105_fu_14765_p1;
wire  signed [6:0] sext_ln151_404_fu_14550_p1;
wire  signed [6:0] sext_ln151_403_fu_14547_p1;
wire   [6:0] add_ln153_131_fu_14795_p2;
wire  signed [7:0] sext_ln153_109_fu_14801_p1;
wire  signed [7:0] sext_ln151_418_fu_14645_p1;
wire  signed [6:0] sext_ln151_407_fu_14577_p1;
wire  signed [6:0] sext_ln151_406_fu_14574_p1;
wire   [6:0] add_ln153_133_fu_14811_p2;
wire  signed [7:0] sext_ln153_111_fu_14817_p1;
wire  signed [7:0] sext_ln151_405_fu_14570_p1;
wire  signed [6:0] sext_ln151_410_fu_14604_p1;
wire  signed [6:0] sext_ln151_409_fu_14601_p1;
wire   [6:0] add_ln153_136_fu_14827_p2;
wire  signed [7:0] sext_ln153_114_fu_14833_p1;
wire  signed [7:0] sext_ln151_408_fu_14597_p1;
wire  signed [6:0] sext_ln151_411_fu_14607_p1;
wire  signed [6:0] sext_ln151_413_fu_14613_p1;
wire   [6:0] add_ln153_138_fu_14843_p2;
wire  signed [6:0] sext_ln151_412_fu_14610_p1;
wire  signed [6:0] sext_ln153_100_fu_14724_p1;
wire   [6:0] add_ln153_139_fu_14853_p2;
wire  signed [7:0] sext_ln153_117_fu_14859_p1;
wire  signed [7:0] sext_ln153_116_fu_14849_p1;
wire   [2:0] mul_res_721_fu_14886_p0;
wire  signed [2:0] mul_res_721_fu_14886_p1;
wire  signed [5:0] sext_ln151_146_fu_14875_p1;
wire  signed [5:0] mul_res_721_fu_14886_p2;
wire   [2:0] mul_res_724_fu_14913_p0;
wire  signed [2:0] mul_res_724_fu_14913_p1;
wire  signed [5:0] sext_ln151_149_fu_14902_p1;
wire  signed [5:0] mul_res_724_fu_14913_p2;
wire   [2:0] mul_res_734_fu_14961_p0;
wire  signed [2:0] mul_res_734_fu_14961_p1;
wire  signed [5:0] sext_ln151_159_fu_14950_p1;
wire  signed [5:0] mul_res_734_fu_14961_p2;
wire   [2:0] mul_res_739_fu_14994_p0;
wire  signed [2:0] mul_res_739_fu_14994_p1;
wire  signed [5:0] sext_ln151_164_fu_14983_p1;
wire  signed [5:0] mul_res_739_fu_14994_p2;
wire   [2:0] mul_res_740_fu_15015_p0;
wire  signed [2:0] mul_res_740_fu_15015_p1;
wire  signed [5:0] sext_ln151_165_fu_15004_p1;
wire  signed [5:0] mul_res_740_fu_15015_p2;
wire   [2:0] mul_res_741_fu_15036_p0;
wire  signed [2:0] mul_res_741_fu_15036_p1;
wire  signed [5:0] sext_ln151_166_fu_15025_p1;
wire  signed [5:0] mul_res_741_fu_15036_p2;
wire  signed [6:0] sext_ln151_447_fu_15021_p1;
wire  signed [6:0] sext_ln151_448_fu_15042_p1;
wire  signed [6:0] sext_ln151_443_fu_14974_p1;
wire  signed [6:0] sext_ln151_445_fu_14980_p1;
wire   [6:0] add_ln153_146_fu_15055_p2;
wire  signed [7:0] sext_ln153_122_fu_15061_p1;
wire  signed [7:0] sext_ln151_446_fu_15000_p1;
wire  signed [6:0] sext_ln151_437_fu_14938_p1;
wire  signed [6:0] sext_ln151_439_fu_14944_p1;
wire   [6:0] add_ln153_149_fu_15071_p2;
wire  signed [7:0] sext_ln153_124_fu_15077_p1;
wire  signed [7:0] sext_ln151_444_fu_14977_p1;
wire   [7:0] add_ln153_150_fu_15081_p2;
wire  signed [6:0] sext_ln151_440_fu_14947_p1;
wire  signed [6:0] sext_ln151_442_fu_14971_p1;
wire   [6:0] add_ln153_151_fu_15091_p2;
wire  signed [7:0] sext_ln153_126_fu_15097_p1;
wire  signed [7:0] sext_ln151_438_fu_14941_p1;
wire   [7:0] add_ln153_152_fu_15101_p2;
wire  signed [8:0] sext_ln153_127_fu_15107_p1;
wire  signed [8:0] sext_ln153_125_fu_15087_p1;
wire  signed [6:0] sext_ln151_427_fu_14872_p1;
wire  signed [6:0] sext_ln151_426_fu_14869_p1;
wire   [6:0] add_ln153_155_fu_15117_p2;
wire  signed [7:0] sext_ln153_129_fu_15123_p1;
wire  signed [7:0] sext_ln151_441_fu_14967_p1;
wire  signed [6:0] sext_ln151_430_fu_14899_p1;
wire  signed [6:0] sext_ln151_429_fu_14896_p1;
wire   [6:0] add_ln153_157_fu_15133_p2;
wire  signed [7:0] sext_ln153_131_fu_15139_p1;
wire  signed [7:0] sext_ln151_428_fu_14892_p1;
wire  signed [6:0] sext_ln151_433_fu_14926_p1;
wire  signed [6:0] sext_ln151_432_fu_14923_p1;
wire   [6:0] add_ln153_160_fu_15149_p2;
wire  signed [7:0] sext_ln153_134_fu_15155_p1;
wire  signed [7:0] sext_ln151_431_fu_14919_p1;
wire  signed [6:0] sext_ln151_434_fu_14929_p1;
wire  signed [6:0] sext_ln151_436_fu_14935_p1;
wire   [6:0] add_ln153_162_fu_15165_p2;
wire  signed [6:0] sext_ln151_435_fu_14932_p1;
wire  signed [6:0] sext_ln153_120_fu_15046_p1;
wire   [6:0] add_ln153_163_fu_15175_p2;
wire  signed [7:0] sext_ln153_137_fu_15181_p1;
wire  signed [7:0] sext_ln153_136_fu_15171_p1;
wire   [2:0] mul_res_745_fu_15208_p0;
wire  signed [2:0] mul_res_745_fu_15208_p1;
wire  signed [5:0] sext_ln151_170_fu_15197_p1;
wire  signed [5:0] mul_res_745_fu_15208_p2;
wire   [2:0] mul_res_748_fu_15235_p0;
wire  signed [2:0] mul_res_748_fu_15235_p1;
wire  signed [5:0] sext_ln151_173_fu_15224_p1;
wire  signed [5:0] mul_res_748_fu_15235_p2;
wire   [2:0] mul_res_758_fu_15283_p0;
wire  signed [2:0] mul_res_758_fu_15283_p1;
wire  signed [5:0] sext_ln151_183_fu_15272_p1;
wire  signed [5:0] mul_res_758_fu_15283_p2;
wire   [2:0] mul_res_763_fu_15316_p0;
wire  signed [2:0] mul_res_763_fu_15316_p1;
wire  signed [5:0] sext_ln151_188_fu_15305_p1;
wire  signed [5:0] mul_res_763_fu_15316_p2;
wire   [2:0] mul_res_764_fu_15337_p0;
wire  signed [2:0] mul_res_764_fu_15337_p1;
wire  signed [5:0] sext_ln151_189_fu_15326_p1;
wire  signed [5:0] mul_res_764_fu_15337_p2;
wire   [2:0] mul_res_765_fu_15358_p0;
wire  signed [2:0] mul_res_765_fu_15358_p1;
wire  signed [5:0] sext_ln151_190_fu_15347_p1;
wire  signed [5:0] mul_res_765_fu_15358_p2;
wire  signed [6:0] sext_ln151_470_fu_15343_p1;
wire  signed [6:0] sext_ln151_471_fu_15364_p1;
wire  signed [6:0] sext_ln151_466_fu_15296_p1;
wire  signed [6:0] sext_ln151_468_fu_15302_p1;
wire   [6:0] add_ln153_170_fu_15377_p2;
wire  signed [7:0] sext_ln153_142_fu_15383_p1;
wire  signed [7:0] sext_ln151_469_fu_15322_p1;
wire  signed [6:0] sext_ln151_460_fu_15260_p1;
wire  signed [6:0] sext_ln151_462_fu_15266_p1;
wire   [6:0] add_ln153_173_fu_15393_p2;
wire  signed [7:0] sext_ln153_144_fu_15399_p1;
wire  signed [7:0] sext_ln151_467_fu_15299_p1;
wire   [7:0] add_ln153_174_fu_15403_p2;
wire  signed [6:0] sext_ln151_463_fu_15269_p1;
wire  signed [6:0] sext_ln151_465_fu_15293_p1;
wire   [6:0] add_ln153_175_fu_15413_p2;
wire  signed [7:0] sext_ln153_146_fu_15419_p1;
wire  signed [7:0] sext_ln151_461_fu_15263_p1;
wire   [7:0] add_ln153_176_fu_15423_p2;
wire  signed [8:0] sext_ln153_147_fu_15429_p1;
wire  signed [8:0] sext_ln153_145_fu_15409_p1;
wire  signed [6:0] sext_ln151_450_fu_15194_p1;
wire  signed [6:0] sext_ln151_449_fu_15191_p1;
wire   [6:0] add_ln153_179_fu_15439_p2;
wire  signed [7:0] sext_ln153_149_fu_15445_p1;
wire  signed [7:0] sext_ln151_464_fu_15289_p1;
wire  signed [6:0] sext_ln151_453_fu_15221_p1;
wire  signed [6:0] sext_ln151_452_fu_15218_p1;
wire   [6:0] add_ln153_181_fu_15455_p2;
wire  signed [7:0] sext_ln153_151_fu_15461_p1;
wire  signed [7:0] sext_ln151_451_fu_15214_p1;
wire  signed [6:0] sext_ln151_456_fu_15248_p1;
wire  signed [6:0] sext_ln151_455_fu_15245_p1;
wire   [6:0] add_ln153_184_fu_15471_p2;
wire  signed [7:0] sext_ln153_154_fu_15477_p1;
wire  signed [7:0] sext_ln151_454_fu_15241_p1;
wire  signed [6:0] sext_ln151_457_fu_15251_p1;
wire  signed [6:0] sext_ln151_459_fu_15257_p1;
wire   [6:0] add_ln153_186_fu_15487_p2;
wire  signed [6:0] sext_ln151_458_fu_15254_p1;
wire  signed [6:0] sext_ln153_140_fu_15368_p1;
wire   [6:0] add_ln153_187_fu_15497_p2;
wire  signed [7:0] sext_ln153_157_fu_15503_p1;
wire  signed [7:0] sext_ln153_156_fu_15493_p1;
wire   [2:0] mul_res_769_fu_15530_p0;
wire  signed [2:0] mul_res_769_fu_15530_p1;
wire  signed [5:0] sext_ln151_194_fu_15519_p1;
wire  signed [5:0] mul_res_769_fu_15530_p2;
wire   [2:0] mul_res_772_fu_15557_p0;
wire  signed [2:0] mul_res_772_fu_15557_p1;
wire  signed [5:0] sext_ln151_197_fu_15546_p1;
wire  signed [5:0] mul_res_772_fu_15557_p2;
wire   [2:0] mul_res_782_fu_15605_p0;
wire  signed [2:0] mul_res_782_fu_15605_p1;
wire  signed [5:0] sext_ln151_207_fu_15594_p1;
wire  signed [5:0] mul_res_782_fu_15605_p2;
wire   [2:0] mul_res_787_fu_15638_p0;
wire  signed [2:0] mul_res_787_fu_15638_p1;
wire  signed [5:0] sext_ln151_212_fu_15627_p1;
wire  signed [5:0] mul_res_787_fu_15638_p2;
wire   [2:0] mul_res_788_fu_15659_p0;
wire  signed [2:0] mul_res_788_fu_15659_p1;
wire  signed [5:0] sext_ln151_213_fu_15648_p1;
wire  signed [5:0] mul_res_788_fu_15659_p2;
wire   [2:0] mul_res_789_fu_15680_p0;
wire  signed [2:0] mul_res_789_fu_15680_p1;
wire  signed [5:0] sext_ln151_214_fu_15669_p1;
wire  signed [5:0] mul_res_789_fu_15680_p2;
wire  signed [6:0] sext_ln151_493_fu_15665_p1;
wire  signed [6:0] sext_ln151_494_fu_15686_p1;
wire  signed [6:0] sext_ln151_489_fu_15618_p1;
wire  signed [6:0] sext_ln151_491_fu_15624_p1;
wire   [6:0] add_ln153_194_fu_15699_p2;
wire  signed [7:0] sext_ln153_162_fu_15705_p1;
wire  signed [7:0] sext_ln151_492_fu_15644_p1;
wire  signed [6:0] sext_ln151_483_fu_15582_p1;
wire  signed [6:0] sext_ln151_485_fu_15588_p1;
wire   [6:0] add_ln153_197_fu_15715_p2;
wire  signed [7:0] sext_ln153_164_fu_15721_p1;
wire  signed [7:0] sext_ln151_490_fu_15621_p1;
wire   [7:0] add_ln153_198_fu_15725_p2;
wire  signed [6:0] sext_ln151_486_fu_15591_p1;
wire  signed [6:0] sext_ln151_488_fu_15615_p1;
wire   [6:0] add_ln153_199_fu_15735_p2;
wire  signed [7:0] sext_ln153_166_fu_15741_p1;
wire  signed [7:0] sext_ln151_484_fu_15585_p1;
wire   [7:0] add_ln153_200_fu_15745_p2;
wire  signed [8:0] sext_ln153_167_fu_15751_p1;
wire  signed [8:0] sext_ln153_165_fu_15731_p1;
wire  signed [6:0] sext_ln151_473_fu_15516_p1;
wire  signed [6:0] sext_ln151_472_fu_15513_p1;
wire   [6:0] add_ln153_203_fu_15761_p2;
wire  signed [7:0] sext_ln153_169_fu_15767_p1;
wire  signed [7:0] sext_ln151_487_fu_15611_p1;
wire  signed [6:0] sext_ln151_476_fu_15543_p1;
wire  signed [6:0] sext_ln151_475_fu_15540_p1;
wire   [6:0] add_ln153_205_fu_15777_p2;
wire  signed [7:0] sext_ln153_171_fu_15783_p1;
wire  signed [7:0] sext_ln151_474_fu_15536_p1;
wire  signed [6:0] sext_ln151_479_fu_15570_p1;
wire  signed [6:0] sext_ln151_478_fu_15567_p1;
wire   [6:0] add_ln153_208_fu_15793_p2;
wire  signed [7:0] sext_ln153_174_fu_15799_p1;
wire  signed [7:0] sext_ln151_477_fu_15563_p1;
wire  signed [6:0] sext_ln151_480_fu_15573_p1;
wire  signed [6:0] sext_ln151_482_fu_15579_p1;
wire   [6:0] add_ln153_210_fu_15809_p2;
wire  signed [6:0] sext_ln151_481_fu_15576_p1;
wire  signed [6:0] sext_ln153_160_fu_15690_p1;
wire   [6:0] add_ln153_211_fu_15819_p2;
wire  signed [7:0] sext_ln153_177_fu_15825_p1;
wire  signed [7:0] sext_ln153_176_fu_15815_p1;
wire   [2:0] mul_res_793_fu_15852_p0;
wire  signed [2:0] mul_res_793_fu_15852_p1;
wire  signed [5:0] sext_ln151_218_fu_15841_p1;
wire  signed [5:0] mul_res_793_fu_15852_p2;
wire   [2:0] mul_res_796_fu_15879_p0;
wire  signed [2:0] mul_res_796_fu_15879_p1;
wire  signed [5:0] sext_ln151_221_fu_15868_p1;
wire  signed [5:0] mul_res_796_fu_15879_p2;
wire   [2:0] mul_res_806_fu_15927_p0;
wire  signed [2:0] mul_res_806_fu_15927_p1;
wire  signed [5:0] sext_ln151_231_fu_15916_p1;
wire  signed [5:0] mul_res_806_fu_15927_p2;
wire   [2:0] mul_res_811_fu_15960_p0;
wire  signed [2:0] mul_res_811_fu_15960_p1;
wire  signed [5:0] sext_ln151_236_fu_15949_p1;
wire  signed [5:0] mul_res_811_fu_15960_p2;
wire   [2:0] mul_res_812_fu_15981_p0;
wire  signed [2:0] mul_res_812_fu_15981_p1;
wire  signed [5:0] sext_ln151_237_fu_15970_p1;
wire  signed [5:0] mul_res_812_fu_15981_p2;
wire   [2:0] mul_res_813_fu_16002_p0;
wire  signed [2:0] mul_res_813_fu_16002_p1;
wire  signed [5:0] sext_ln151_238_fu_15991_p1;
wire  signed [5:0] mul_res_813_fu_16002_p2;
wire  signed [6:0] sext_ln151_516_fu_15987_p1;
wire  signed [6:0] sext_ln151_517_fu_16008_p1;
wire  signed [6:0] sext_ln151_512_fu_15940_p1;
wire  signed [6:0] sext_ln151_514_fu_15946_p1;
wire   [6:0] add_ln153_218_fu_16021_p2;
wire  signed [7:0] sext_ln153_182_fu_16027_p1;
wire  signed [7:0] sext_ln151_515_fu_15966_p1;
wire  signed [6:0] sext_ln151_506_fu_15904_p1;
wire  signed [6:0] sext_ln151_508_fu_15910_p1;
wire   [6:0] add_ln153_221_fu_16037_p2;
wire  signed [7:0] sext_ln153_184_fu_16043_p1;
wire  signed [7:0] sext_ln151_513_fu_15943_p1;
wire   [7:0] add_ln153_222_fu_16047_p2;
wire  signed [6:0] sext_ln151_509_fu_15913_p1;
wire  signed [6:0] sext_ln151_511_fu_15937_p1;
wire   [6:0] add_ln153_223_fu_16057_p2;
wire  signed [7:0] sext_ln153_186_fu_16063_p1;
wire  signed [7:0] sext_ln151_507_fu_15907_p1;
wire   [7:0] add_ln153_224_fu_16067_p2;
wire  signed [8:0] sext_ln153_187_fu_16073_p1;
wire  signed [8:0] sext_ln153_185_fu_16053_p1;
wire  signed [6:0] sext_ln151_496_fu_15838_p1;
wire  signed [6:0] sext_ln151_495_fu_15835_p1;
wire   [6:0] add_ln153_227_fu_16083_p2;
wire  signed [7:0] sext_ln153_189_fu_16089_p1;
wire  signed [7:0] sext_ln151_510_fu_15933_p1;
wire  signed [6:0] sext_ln151_499_fu_15865_p1;
wire  signed [6:0] sext_ln151_498_fu_15862_p1;
wire   [6:0] add_ln153_229_fu_16099_p2;
wire  signed [7:0] sext_ln153_191_fu_16105_p1;
wire  signed [7:0] sext_ln151_497_fu_15858_p1;
wire  signed [6:0] sext_ln151_502_fu_15892_p1;
wire  signed [6:0] sext_ln151_501_fu_15889_p1;
wire   [6:0] add_ln153_232_fu_16115_p2;
wire  signed [7:0] sext_ln153_194_fu_16121_p1;
wire  signed [7:0] sext_ln151_500_fu_15885_p1;
wire  signed [6:0] sext_ln151_503_fu_15895_p1;
wire  signed [6:0] sext_ln151_505_fu_15901_p1;
wire   [6:0] add_ln153_234_fu_16131_p2;
wire  signed [6:0] sext_ln151_504_fu_15898_p1;
wire  signed [6:0] sext_ln153_180_fu_16012_p1;
wire   [6:0] add_ln153_235_fu_16141_p2;
wire  signed [7:0] sext_ln153_197_fu_16147_p1;
wire  signed [7:0] sext_ln153_196_fu_16137_p1;
wire   [2:0] mul_res_817_fu_16174_p0;
wire  signed [2:0] mul_res_817_fu_16174_p1;
wire  signed [5:0] sext_ln151_242_fu_16163_p1;
wire  signed [5:0] mul_res_817_fu_16174_p2;
wire   [2:0] mul_res_820_fu_16201_p0;
wire  signed [2:0] mul_res_820_fu_16201_p1;
wire  signed [5:0] sext_ln151_245_fu_16190_p1;
wire  signed [5:0] mul_res_820_fu_16201_p2;
wire   [2:0] mul_res_827_fu_16239_p0;
wire  signed [2:0] mul_res_827_fu_16239_p1;
wire  signed [5:0] sext_ln151_252_fu_16229_p1;
wire  signed [5:0] mul_res_827_fu_16239_p2;
wire   [2:0] mul_res_830_fu_16265_p0;
wire  signed [2:0] mul_res_830_fu_16265_p1;
wire  signed [5:0] sext_ln151_255_fu_16254_p1;
wire  signed [5:0] mul_res_830_fu_16265_p2;
wire   [2:0] mul_res_833_fu_16291_p0;
wire  signed [2:0] mul_res_833_fu_16291_p1;
wire  signed [5:0] sext_ln151_258_fu_16281_p1;
wire  signed [5:0] mul_res_833_fu_16291_p2;
wire   [2:0] mul_res_835_fu_16314_p0;
wire  signed [2:0] mul_res_835_fu_16314_p1;
wire  signed [5:0] sext_ln151_260_fu_16303_p1;
wire  signed [5:0] mul_res_835_fu_16314_p2;
wire   [2:0] mul_res_836_fu_16335_p0;
wire  signed [2:0] mul_res_836_fu_16335_p1;
wire  signed [5:0] sext_ln151_261_fu_16324_p1;
wire  signed [5:0] mul_res_836_fu_16335_p2;
wire   [2:0] mul_res_837_fu_16356_p0;
wire  signed [2:0] mul_res_837_fu_16356_p1;
wire  signed [5:0] sext_ln151_262_fu_16345_p1;
wire  signed [5:0] mul_res_837_fu_16356_p2;
wire  signed [6:0] sext_ln151_539_fu_16341_p1;
wire  signed [6:0] sext_ln151_540_fu_16362_p1;
wire  signed [6:0] sext_ln151_535_fu_16278_p1;
wire  signed [6:0] sext_ln151_537_fu_16300_p1;
wire   [6:0] add_ln153_242_fu_16375_p2;
wire  signed [7:0] sext_ln153_202_fu_16381_p1;
wire  signed [7:0] sext_ln151_538_fu_16320_p1;
wire  signed [6:0] sext_ln151_529_fu_16226_p1;
wire  signed [6:0] sext_ln151_531_fu_16248_p1;
wire   [6:0] add_ln153_245_fu_16391_p2;
wire  signed [7:0] sext_ln153_204_fu_16397_p1;
wire  signed [7:0] sext_ln151_536_fu_16296_p1;
wire  signed [6:0] sext_ln151_532_fu_16251_p1;
wire  signed [6:0] sext_ln151_534_fu_16275_p1;
wire   [6:0] add_ln153_247_fu_16407_p2;
wire  signed [7:0] sext_ln153_206_fu_16413_p1;
wire  signed [7:0] sext_ln151_530_fu_16244_p1;
wire  signed [6:0] sext_ln151_519_fu_16160_p1;
wire  signed [6:0] sext_ln151_518_fu_16157_p1;
wire   [6:0] add_ln153_251_fu_16423_p2;
wire  signed [7:0] sext_ln153_209_fu_16429_p1;
wire  signed [7:0] sext_ln151_533_fu_16271_p1;
wire  signed [6:0] sext_ln151_522_fu_16187_p1;
wire  signed [6:0] sext_ln151_521_fu_16184_p1;
wire   [6:0] add_ln153_253_fu_16439_p2;
wire  signed [7:0] sext_ln153_211_fu_16445_p1;
wire  signed [7:0] sext_ln151_520_fu_16180_p1;
wire  signed [6:0] sext_ln151_525_fu_16214_p1;
wire  signed [6:0] sext_ln151_524_fu_16211_p1;
wire   [6:0] add_ln153_256_fu_16455_p2;
wire  signed [7:0] sext_ln153_214_fu_16461_p1;
wire  signed [7:0] sext_ln151_523_fu_16207_p1;
wire  signed [6:0] sext_ln151_526_fu_16217_p1;
wire  signed [6:0] sext_ln151_528_fu_16223_p1;
wire   [6:0] add_ln153_258_fu_16471_p2;
wire  signed [6:0] sext_ln151_527_fu_16220_p1;
wire  signed [6:0] sext_ln153_200_fu_16366_p1;
wire   [6:0] add_ln153_259_fu_16481_p2;
wire  signed [7:0] sext_ln153_217_fu_16487_p1;
wire  signed [7:0] sext_ln153_216_fu_16477_p1;
wire   [2:0] mul_res_841_fu_16514_p0;
wire  signed [2:0] mul_res_841_fu_16514_p1;
wire  signed [5:0] sext_ln151_266_fu_16503_p1;
wire  signed [5:0] mul_res_841_fu_16514_p2;
wire   [2:0] mul_res_844_fu_16541_p0;
wire  signed [2:0] mul_res_844_fu_16541_p1;
wire  signed [5:0] sext_ln151_269_fu_16530_p1;
wire  signed [5:0] mul_res_844_fu_16541_p2;
wire   [2:0] mul_res_851_fu_16579_p0;
wire  signed [2:0] mul_res_851_fu_16579_p1;
wire  signed [5:0] sext_ln151_276_fu_16569_p1;
wire  signed [5:0] mul_res_851_fu_16579_p2;
wire   [2:0] mul_res_854_fu_16605_p0;
wire  signed [2:0] mul_res_854_fu_16605_p1;
wire  signed [5:0] sext_ln151_279_fu_16594_p1;
wire  signed [5:0] mul_res_854_fu_16605_p2;
wire   [2:0] mul_res_857_fu_16631_p0;
wire  signed [2:0] mul_res_857_fu_16631_p1;
wire  signed [5:0] sext_ln151_282_fu_16621_p1;
wire  signed [5:0] mul_res_857_fu_16631_p2;
wire   [2:0] mul_res_859_fu_16654_p0;
wire  signed [2:0] mul_res_859_fu_16654_p1;
wire  signed [5:0] sext_ln151_284_fu_16643_p1;
wire  signed [5:0] mul_res_859_fu_16654_p2;
wire   [2:0] mul_res_860_fu_16675_p0;
wire  signed [2:0] mul_res_860_fu_16675_p1;
wire  signed [5:0] sext_ln151_285_fu_16664_p1;
wire  signed [5:0] mul_res_860_fu_16675_p2;
wire   [2:0] mul_res_861_fu_16696_p0;
wire  signed [2:0] mul_res_861_fu_16696_p1;
wire  signed [5:0] sext_ln151_286_fu_16685_p1;
wire  signed [5:0] mul_res_861_fu_16696_p2;
wire  signed [6:0] sext_ln151_562_fu_16681_p1;
wire  signed [6:0] sext_ln151_563_fu_16702_p1;
wire  signed [6:0] sext_ln151_558_fu_16618_p1;
wire  signed [6:0] sext_ln151_560_fu_16640_p1;
wire   [6:0] add_ln153_266_fu_16715_p2;
wire  signed [7:0] sext_ln153_222_fu_16721_p1;
wire  signed [7:0] sext_ln151_561_fu_16660_p1;
wire  signed [6:0] sext_ln151_552_fu_16566_p1;
wire  signed [6:0] sext_ln151_554_fu_16588_p1;
wire   [6:0] add_ln153_269_fu_16731_p2;
wire  signed [7:0] sext_ln153_224_fu_16737_p1;
wire  signed [7:0] sext_ln151_559_fu_16636_p1;
wire  signed [6:0] sext_ln151_555_fu_16591_p1;
wire  signed [6:0] sext_ln151_557_fu_16615_p1;
wire   [6:0] add_ln153_271_fu_16747_p2;
wire  signed [7:0] sext_ln153_226_fu_16753_p1;
wire  signed [7:0] sext_ln151_553_fu_16584_p1;
wire  signed [6:0] sext_ln151_542_fu_16500_p1;
wire  signed [6:0] sext_ln151_541_fu_16497_p1;
wire   [6:0] add_ln153_275_fu_16763_p2;
wire  signed [7:0] sext_ln153_229_fu_16769_p1;
wire  signed [7:0] sext_ln151_556_fu_16611_p1;
wire  signed [6:0] sext_ln151_545_fu_16527_p1;
wire  signed [6:0] sext_ln151_544_fu_16524_p1;
wire   [6:0] add_ln153_277_fu_16779_p2;
wire  signed [7:0] sext_ln153_231_fu_16785_p1;
wire  signed [7:0] sext_ln151_543_fu_16520_p1;
wire  signed [6:0] sext_ln151_548_fu_16554_p1;
wire  signed [6:0] sext_ln151_547_fu_16551_p1;
wire   [6:0] add_ln153_280_fu_16795_p2;
wire  signed [7:0] sext_ln153_234_fu_16801_p1;
wire  signed [7:0] sext_ln151_546_fu_16547_p1;
wire  signed [6:0] sext_ln151_549_fu_16557_p1;
wire  signed [6:0] sext_ln151_551_fu_16563_p1;
wire   [6:0] add_ln153_282_fu_16811_p2;
wire  signed [6:0] sext_ln151_550_fu_16560_p1;
wire  signed [6:0] sext_ln153_220_fu_16706_p1;
wire   [6:0] add_ln153_283_fu_16821_p2;
wire  signed [7:0] sext_ln153_237_fu_16827_p1;
wire  signed [7:0] sext_ln153_236_fu_16817_p1;
wire   [2:0] mul_res_865_fu_16854_p0;
wire   [5:0] zext_ln151_26_fu_16843_p1;
wire  signed [2:0] mul_res_865_fu_16854_p1;
wire  signed [5:0] mul_res_865_fu_16854_p2;
wire   [2:0] mul_res_868_fu_16881_p0;
wire   [5:0] zext_ln151_29_fu_16870_p1;
wire  signed [2:0] mul_res_868_fu_16881_p1;
wire  signed [5:0] mul_res_868_fu_16881_p2;
wire   [2:0] mul_res_875_fu_16919_p0;
wire   [5:0] zext_ln151_36_fu_16909_p1;
wire  signed [2:0] mul_res_875_fu_16919_p1;
wire  signed [5:0] mul_res_875_fu_16919_p2;
wire   [2:0] mul_res_878_fu_16945_p0;
wire   [5:0] zext_ln151_39_fu_16934_p1;
wire  signed [2:0] mul_res_878_fu_16945_p1;
wire  signed [5:0] mul_res_878_fu_16945_p2;
wire   [2:0] mul_res_881_fu_16971_p0;
wire   [5:0] zext_ln151_42_fu_16961_p1;
wire  signed [2:0] mul_res_881_fu_16971_p1;
wire  signed [5:0] mul_res_881_fu_16971_p2;
wire   [2:0] mul_res_883_fu_16994_p0;
wire   [5:0] zext_ln151_44_fu_16983_p1;
wire  signed [2:0] mul_res_883_fu_16994_p1;
wire  signed [5:0] mul_res_883_fu_16994_p2;
wire   [2:0] mul_res_884_fu_17015_p0;
wire   [5:0] zext_ln151_45_fu_17004_p1;
wire  signed [2:0] mul_res_884_fu_17015_p1;
wire  signed [5:0] mul_res_884_fu_17015_p2;
wire   [2:0] mul_res_885_fu_17036_p0;
wire   [5:0] zext_ln151_46_fu_17025_p1;
wire  signed [2:0] mul_res_885_fu_17036_p1;
wire  signed [5:0] mul_res_885_fu_17036_p2;
wire  signed [6:0] sext_ln151_585_fu_17021_p1;
wire  signed [6:0] sext_ln151_586_fu_17042_p1;
wire  signed [6:0] sext_ln151_581_fu_16958_p1;
wire  signed [6:0] sext_ln151_583_fu_16980_p1;
wire   [6:0] add_ln153_290_fu_17055_p2;
wire  signed [7:0] sext_ln153_242_fu_17061_p1;
wire  signed [7:0] sext_ln151_584_fu_17000_p1;
wire  signed [6:0] sext_ln151_575_fu_16906_p1;
wire  signed [6:0] sext_ln151_577_fu_16928_p1;
wire   [6:0] add_ln153_293_fu_17071_p2;
wire  signed [7:0] sext_ln153_244_fu_17077_p1;
wire  signed [7:0] sext_ln151_582_fu_16976_p1;
wire  signed [6:0] sext_ln151_578_fu_16931_p1;
wire  signed [6:0] sext_ln151_580_fu_16955_p1;
wire   [6:0] add_ln153_295_fu_17087_p2;
wire  signed [7:0] sext_ln153_246_fu_17093_p1;
wire  signed [7:0] sext_ln151_576_fu_16924_p1;
wire  signed [6:0] sext_ln151_565_fu_16840_p1;
wire  signed [6:0] sext_ln151_564_fu_16837_p1;
wire   [6:0] add_ln153_299_fu_17103_p2;
wire  signed [7:0] sext_ln153_249_fu_17109_p1;
wire  signed [7:0] sext_ln151_579_fu_16951_p1;
wire  signed [6:0] sext_ln151_568_fu_16867_p1;
wire  signed [6:0] sext_ln151_567_fu_16864_p1;
wire   [6:0] add_ln153_301_fu_17119_p2;
wire  signed [7:0] sext_ln153_251_fu_17125_p1;
wire  signed [7:0] sext_ln151_566_fu_16860_p1;
wire  signed [6:0] sext_ln151_571_fu_16894_p1;
wire  signed [6:0] sext_ln151_570_fu_16891_p1;
wire   [6:0] add_ln153_304_fu_17135_p2;
wire  signed [7:0] sext_ln153_254_fu_17141_p1;
wire  signed [7:0] sext_ln151_569_fu_16887_p1;
wire  signed [6:0] sext_ln151_572_fu_16897_p1;
wire  signed [6:0] sext_ln151_574_fu_16903_p1;
wire   [6:0] add_ln153_306_fu_17151_p2;
wire  signed [6:0] sext_ln151_573_fu_16900_p1;
wire  signed [6:0] sext_ln153_240_fu_17046_p1;
wire   [6:0] add_ln153_307_fu_17161_p2;
wire  signed [7:0] sext_ln153_257_fu_17167_p1;
wire  signed [7:0] sext_ln153_256_fu_17157_p1;
wire   [2:0] mul_res_889_fu_17191_p0;
wire  signed [2:0] mul_res_889_fu_17191_p1;
wire  signed [5:0] mul_res_889_fu_17191_p2;
wire   [2:0] mul_res_892_fu_17215_p0;
wire  signed [2:0] mul_res_892_fu_17215_p1;
wire  signed [5:0] mul_res_892_fu_17215_p2;
wire   [2:0] mul_res_899_fu_17250_p0;
wire  signed [2:0] mul_res_899_fu_17250_p1;
wire  signed [5:0] mul_res_899_fu_17250_p2;
wire   [2:0] mul_res_902_fu_17273_p0;
wire  signed [2:0] mul_res_902_fu_17273_p1;
wire  signed [5:0] mul_res_902_fu_17273_p2;
wire   [2:0] mul_res_905_fu_17296_p0;
wire  signed [2:0] mul_res_905_fu_17296_p1;
wire  signed [5:0] mul_res_905_fu_17296_p2;
wire   [2:0] mul_res_907_fu_17316_p0;
wire  signed [2:0] mul_res_907_fu_17316_p1;
wire  signed [5:0] mul_res_907_fu_17316_p2;
wire   [2:0] mul_res_908_fu_17334_p0;
wire  signed [2:0] mul_res_908_fu_17334_p1;
wire  signed [5:0] mul_res_908_fu_17334_p2;
wire   [2:0] mul_res_909_fu_17352_p0;
wire  signed [2:0] mul_res_909_fu_17352_p1;
wire  signed [5:0] mul_res_909_fu_17352_p2;
wire  signed [6:0] sext_ln151_608_fu_17340_p1;
wire  signed [6:0] sext_ln151_609_fu_17358_p1;
wire  signed [6:0] sext_ln151_604_fu_17286_p1;
wire  signed [6:0] sext_ln151_606_fu_17305_p1;
wire   [6:0] add_ln153_314_fu_17371_p2;
wire  signed [7:0] sext_ln153_262_fu_17377_p1;
wire  signed [7:0] sext_ln151_607_fu_17322_p1;
wire  signed [6:0] sext_ln151_598_fu_17240_p1;
wire  signed [6:0] sext_ln151_600_fu_17259_p1;
wire   [6:0] add_ln153_317_fu_17387_p2;
wire  signed [7:0] sext_ln153_264_fu_17393_p1;
wire  signed [7:0] sext_ln151_605_fu_17301_p1;
wire  signed [6:0] sext_ln151_601_fu_17262_p1;
wire  signed [6:0] sext_ln151_603_fu_17283_p1;
wire   [6:0] add_ln153_319_fu_17403_p2;
wire  signed [7:0] sext_ln153_266_fu_17409_p1;
wire  signed [7:0] sext_ln151_599_fu_17255_p1;
wire  signed [6:0] sext_ln151_588_fu_17180_p1;
wire  signed [6:0] sext_ln151_587_fu_17177_p1;
wire   [6:0] add_ln153_323_fu_17419_p2;
wire  signed [7:0] sext_ln153_269_fu_17425_p1;
wire  signed [7:0] sext_ln151_602_fu_17279_p1;
wire  signed [6:0] sext_ln151_591_fu_17204_p1;
wire  signed [6:0] sext_ln151_590_fu_17201_p1;
wire   [6:0] add_ln153_325_fu_17435_p2;
wire  signed [7:0] sext_ln153_271_fu_17441_p1;
wire  signed [7:0] sext_ln151_589_fu_17197_p1;
wire  signed [6:0] sext_ln151_594_fu_17228_p1;
wire  signed [6:0] sext_ln151_593_fu_17225_p1;
wire   [6:0] add_ln153_328_fu_17451_p2;
wire  signed [7:0] sext_ln153_274_fu_17457_p1;
wire  signed [7:0] sext_ln151_592_fu_17221_p1;
wire  signed [6:0] sext_ln151_595_fu_17231_p1;
wire  signed [6:0] sext_ln151_597_fu_17237_p1;
wire   [6:0] add_ln153_330_fu_17467_p2;
wire  signed [6:0] sext_ln151_596_fu_17234_p1;
wire  signed [6:0] sext_ln153_260_fu_17362_p1;
wire   [6:0] add_ln153_331_fu_17477_p2;
wire  signed [7:0] sext_ln153_277_fu_17483_p1;
wire  signed [7:0] sext_ln153_276_fu_17473_p1;
wire   [2:0] mul_res_913_fu_17507_p0;
wire  signed [2:0] mul_res_913_fu_17507_p1;
wire  signed [5:0] mul_res_913_fu_17507_p2;
wire   [2:0] mul_res_916_fu_17531_p0;
wire  signed [2:0] mul_res_916_fu_17531_p1;
wire  signed [5:0] mul_res_916_fu_17531_p2;
wire   [2:0] mul_res_923_fu_17566_p0;
wire  signed [2:0] mul_res_923_fu_17566_p1;
wire  signed [5:0] mul_res_923_fu_17566_p2;
wire   [2:0] mul_res_926_fu_17589_p0;
wire  signed [2:0] mul_res_926_fu_17589_p1;
wire  signed [5:0] mul_res_926_fu_17589_p2;
wire   [2:0] mul_res_929_fu_17612_p0;
wire  signed [2:0] mul_res_929_fu_17612_p1;
wire  signed [5:0] mul_res_929_fu_17612_p2;
wire   [2:0] mul_res_931_fu_17632_p0;
wire  signed [2:0] mul_res_931_fu_17632_p1;
wire  signed [5:0] mul_res_931_fu_17632_p2;
wire   [2:0] mul_res_932_fu_17650_p0;
wire  signed [2:0] mul_res_932_fu_17650_p1;
wire  signed [5:0] mul_res_932_fu_17650_p2;
wire   [2:0] mul_res_933_fu_17668_p0;
wire  signed [2:0] mul_res_933_fu_17668_p1;
wire  signed [5:0] mul_res_933_fu_17668_p2;
wire  signed [6:0] sext_ln151_631_fu_17656_p1;
wire  signed [6:0] sext_ln151_632_fu_17674_p1;
wire  signed [6:0] sext_ln151_627_fu_17602_p1;
wire  signed [6:0] sext_ln151_629_fu_17621_p1;
wire   [6:0] add_ln153_338_fu_17687_p2;
wire  signed [7:0] sext_ln153_282_fu_17693_p1;
wire  signed [7:0] sext_ln151_630_fu_17638_p1;
wire  signed [6:0] sext_ln151_621_fu_17556_p1;
wire  signed [6:0] sext_ln151_623_fu_17575_p1;
wire   [6:0] add_ln153_341_fu_17703_p2;
wire  signed [7:0] sext_ln153_284_fu_17709_p1;
wire  signed [7:0] sext_ln151_628_fu_17617_p1;
wire  signed [6:0] sext_ln151_624_fu_17578_p1;
wire  signed [6:0] sext_ln151_626_fu_17599_p1;
wire   [6:0] add_ln153_343_fu_17719_p2;
wire  signed [7:0] sext_ln153_286_fu_17725_p1;
wire  signed [7:0] sext_ln151_622_fu_17571_p1;
wire  signed [6:0] sext_ln151_611_fu_17496_p1;
wire  signed [6:0] sext_ln151_610_fu_17493_p1;
wire   [6:0] add_ln153_347_fu_17735_p2;
wire  signed [7:0] sext_ln153_289_fu_17741_p1;
wire  signed [7:0] sext_ln151_625_fu_17595_p1;
wire  signed [6:0] sext_ln151_614_fu_17520_p1;
wire  signed [6:0] sext_ln151_613_fu_17517_p1;
wire   [6:0] add_ln153_349_fu_17751_p2;
wire  signed [7:0] sext_ln153_291_fu_17757_p1;
wire  signed [7:0] sext_ln151_612_fu_17513_p1;
wire  signed [6:0] sext_ln151_617_fu_17544_p1;
wire  signed [6:0] sext_ln151_616_fu_17541_p1;
wire   [6:0] add_ln153_352_fu_17767_p2;
wire  signed [7:0] sext_ln153_294_fu_17773_p1;
wire  signed [7:0] sext_ln151_615_fu_17537_p1;
wire  signed [6:0] sext_ln151_618_fu_17547_p1;
wire  signed [6:0] sext_ln151_620_fu_17553_p1;
wire   [6:0] add_ln153_354_fu_17783_p2;
wire  signed [6:0] sext_ln151_619_fu_17550_p1;
wire  signed [6:0] sext_ln153_280_fu_17678_p1;
wire   [6:0] add_ln153_355_fu_17793_p2;
wire  signed [7:0] sext_ln153_297_fu_17799_p1;
wire  signed [7:0] sext_ln153_296_fu_17789_p1;
wire   [2:0] mul_res_937_fu_17823_p0;
wire  signed [2:0] mul_res_937_fu_17823_p1;
wire  signed [5:0] mul_res_937_fu_17823_p2;
wire   [2:0] mul_res_940_fu_17847_p0;
wire  signed [2:0] mul_res_940_fu_17847_p1;
wire  signed [5:0] mul_res_940_fu_17847_p2;
wire   [2:0] mul_res_947_fu_17882_p0;
wire  signed [2:0] mul_res_947_fu_17882_p1;
wire  signed [5:0] mul_res_947_fu_17882_p2;
wire   [2:0] mul_res_950_fu_17905_p0;
wire  signed [2:0] mul_res_950_fu_17905_p1;
wire  signed [5:0] mul_res_950_fu_17905_p2;
wire   [2:0] mul_res_953_fu_17928_p0;
wire  signed [2:0] mul_res_953_fu_17928_p1;
wire  signed [5:0] mul_res_953_fu_17928_p2;
wire   [2:0] mul_res_955_fu_17948_p0;
wire  signed [2:0] mul_res_955_fu_17948_p1;
wire  signed [5:0] mul_res_955_fu_17948_p2;
wire   [2:0] mul_res_956_fu_17966_p0;
wire  signed [2:0] mul_res_956_fu_17966_p1;
wire  signed [5:0] mul_res_956_fu_17966_p2;
wire   [2:0] mul_res_957_fu_17984_p0;
wire  signed [2:0] mul_res_957_fu_17984_p1;
wire  signed [5:0] mul_res_957_fu_17984_p2;
wire  signed [6:0] sext_ln151_654_fu_17972_p1;
wire  signed [6:0] sext_ln151_655_fu_17990_p1;
wire  signed [6:0] sext_ln151_650_fu_17918_p1;
wire  signed [6:0] sext_ln151_652_fu_17937_p1;
wire   [6:0] add_ln153_362_fu_18003_p2;
wire  signed [7:0] sext_ln153_302_fu_18009_p1;
wire  signed [7:0] sext_ln151_653_fu_17954_p1;
wire  signed [6:0] sext_ln151_644_fu_17872_p1;
wire  signed [6:0] sext_ln151_646_fu_17891_p1;
wire   [6:0] add_ln153_365_fu_18019_p2;
wire  signed [7:0] sext_ln153_304_fu_18025_p1;
wire  signed [7:0] sext_ln151_651_fu_17933_p1;
wire  signed [6:0] sext_ln151_647_fu_17894_p1;
wire  signed [6:0] sext_ln151_649_fu_17915_p1;
wire   [6:0] add_ln153_367_fu_18035_p2;
wire  signed [7:0] sext_ln153_306_fu_18041_p1;
wire  signed [7:0] sext_ln151_645_fu_17887_p1;
wire  signed [6:0] sext_ln151_634_fu_17812_p1;
wire  signed [6:0] sext_ln151_633_fu_17809_p1;
wire   [6:0] add_ln153_371_fu_18051_p2;
wire  signed [7:0] sext_ln153_309_fu_18057_p1;
wire  signed [7:0] sext_ln151_648_fu_17911_p1;
wire  signed [6:0] sext_ln151_637_fu_17836_p1;
wire  signed [6:0] sext_ln151_636_fu_17833_p1;
wire   [6:0] add_ln153_373_fu_18067_p2;
wire  signed [7:0] sext_ln153_311_fu_18073_p1;
wire  signed [7:0] sext_ln151_635_fu_17829_p1;
wire  signed [6:0] sext_ln151_640_fu_17860_p1;
wire  signed [6:0] sext_ln151_639_fu_17857_p1;
wire   [6:0] add_ln153_376_fu_18083_p2;
wire  signed [7:0] sext_ln153_314_fu_18089_p1;
wire  signed [7:0] sext_ln151_638_fu_17853_p1;
wire  signed [6:0] sext_ln151_641_fu_17863_p1;
wire  signed [6:0] sext_ln151_643_fu_17869_p1;
wire   [6:0] add_ln153_378_fu_18099_p2;
wire  signed [6:0] sext_ln151_642_fu_17866_p1;
wire  signed [6:0] sext_ln153_300_fu_17994_p1;
wire   [6:0] add_ln153_379_fu_18109_p2;
wire  signed [7:0] sext_ln153_317_fu_18115_p1;
wire  signed [7:0] sext_ln153_316_fu_18105_p1;
wire   [2:0] mul_res_961_fu_18139_p0;
wire  signed [2:0] mul_res_961_fu_18139_p1;
wire  signed [5:0] mul_res_961_fu_18139_p2;
wire   [2:0] mul_res_964_fu_18163_p0;
wire  signed [2:0] mul_res_964_fu_18163_p1;
wire  signed [5:0] mul_res_964_fu_18163_p2;
wire   [2:0] mul_res_971_fu_18198_p0;
wire  signed [2:0] mul_res_971_fu_18198_p1;
wire  signed [5:0] mul_res_971_fu_18198_p2;
wire   [2:0] mul_res_974_fu_18221_p0;
wire  signed [2:0] mul_res_974_fu_18221_p1;
wire  signed [5:0] mul_res_974_fu_18221_p2;
wire   [2:0] mul_res_977_fu_18244_p0;
wire  signed [2:0] mul_res_977_fu_18244_p1;
wire  signed [5:0] mul_res_977_fu_18244_p2;
wire   [2:0] mul_res_979_fu_18264_p0;
wire  signed [2:0] mul_res_979_fu_18264_p1;
wire  signed [5:0] mul_res_979_fu_18264_p2;
wire   [2:0] mul_res_980_fu_18282_p0;
wire  signed [2:0] mul_res_980_fu_18282_p1;
wire  signed [5:0] mul_res_980_fu_18282_p2;
wire   [2:0] mul_res_981_fu_18300_p0;
wire  signed [2:0] mul_res_981_fu_18300_p1;
wire  signed [5:0] mul_res_981_fu_18300_p2;
wire  signed [6:0] sext_ln151_677_fu_18288_p1;
wire  signed [6:0] sext_ln151_678_fu_18306_p1;
wire  signed [6:0] sext_ln151_673_fu_18234_p1;
wire  signed [6:0] sext_ln151_675_fu_18253_p1;
wire   [6:0] add_ln153_386_fu_18319_p2;
wire  signed [7:0] sext_ln153_322_fu_18325_p1;
wire  signed [7:0] sext_ln151_676_fu_18270_p1;
wire  signed [6:0] sext_ln151_667_fu_18188_p1;
wire  signed [6:0] sext_ln151_669_fu_18207_p1;
wire   [6:0] add_ln153_389_fu_18335_p2;
wire  signed [7:0] sext_ln153_324_fu_18341_p1;
wire  signed [7:0] sext_ln151_674_fu_18249_p1;
wire  signed [6:0] sext_ln151_670_fu_18210_p1;
wire  signed [6:0] sext_ln151_672_fu_18231_p1;
wire   [6:0] add_ln153_391_fu_18351_p2;
wire  signed [7:0] sext_ln153_326_fu_18357_p1;
wire  signed [7:0] sext_ln151_668_fu_18203_p1;
wire  signed [6:0] sext_ln151_657_fu_18128_p1;
wire  signed [6:0] sext_ln151_656_fu_18125_p1;
wire   [6:0] add_ln153_395_fu_18367_p2;
wire  signed [7:0] sext_ln153_329_fu_18373_p1;
wire  signed [7:0] sext_ln151_671_fu_18227_p1;
wire  signed [6:0] sext_ln151_660_fu_18152_p1;
wire  signed [6:0] sext_ln151_659_fu_18149_p1;
wire   [6:0] add_ln153_397_fu_18383_p2;
wire  signed [7:0] sext_ln153_331_fu_18389_p1;
wire  signed [7:0] sext_ln151_658_fu_18145_p1;
wire  signed [6:0] sext_ln151_663_fu_18176_p1;
wire  signed [6:0] sext_ln151_662_fu_18173_p1;
wire   [6:0] add_ln153_400_fu_18399_p2;
wire  signed [7:0] sext_ln153_334_fu_18405_p1;
wire  signed [7:0] sext_ln151_661_fu_18169_p1;
wire  signed [6:0] sext_ln151_664_fu_18179_p1;
wire  signed [6:0] sext_ln151_666_fu_18185_p1;
wire   [6:0] add_ln153_402_fu_18415_p2;
wire  signed [6:0] sext_ln151_665_fu_18182_p1;
wire  signed [6:0] sext_ln153_320_fu_18310_p1;
wire   [6:0] add_ln153_403_fu_18425_p2;
wire  signed [7:0] sext_ln153_337_fu_18431_p1;
wire  signed [7:0] sext_ln153_336_fu_18421_p1;
wire   [2:0] mul_res_985_fu_18455_p0;
wire  signed [2:0] mul_res_985_fu_18455_p1;
wire  signed [5:0] mul_res_985_fu_18455_p2;
wire   [2:0] mul_res_988_fu_18479_p0;
wire  signed [2:0] mul_res_988_fu_18479_p1;
wire  signed [5:0] mul_res_988_fu_18479_p2;
wire   [2:0] mul_res_995_fu_18514_p0;
wire  signed [2:0] mul_res_995_fu_18514_p1;
wire  signed [5:0] mul_res_995_fu_18514_p2;
wire   [2:0] mul_res_998_fu_18537_p0;
wire  signed [2:0] mul_res_998_fu_18537_p1;
wire  signed [5:0] mul_res_998_fu_18537_p2;
wire   [2:0] mul_res_1001_fu_18560_p0;
wire  signed [2:0] mul_res_1001_fu_18560_p1;
wire  signed [5:0] mul_res_1001_fu_18560_p2;
wire   [2:0] mul_res_1003_fu_18580_p0;
wire  signed [2:0] mul_res_1003_fu_18580_p1;
wire  signed [5:0] mul_res_1003_fu_18580_p2;
wire   [2:0] mul_res_1004_fu_18598_p0;
wire  signed [2:0] mul_res_1004_fu_18598_p1;
wire  signed [5:0] mul_res_1004_fu_18598_p2;
wire   [2:0] mul_res_1005_fu_18616_p0;
wire  signed [2:0] mul_res_1005_fu_18616_p1;
wire  signed [5:0] mul_res_1005_fu_18616_p2;
wire  signed [6:0] sext_ln151_700_fu_18604_p1;
wire  signed [6:0] sext_ln151_701_fu_18622_p1;
wire  signed [6:0] sext_ln151_696_fu_18550_p1;
wire  signed [6:0] sext_ln151_698_fu_18569_p1;
wire   [6:0] add_ln153_410_fu_18635_p2;
wire  signed [7:0] sext_ln153_342_fu_18641_p1;
wire  signed [7:0] sext_ln151_699_fu_18586_p1;
wire  signed [6:0] sext_ln151_690_fu_18504_p1;
wire  signed [6:0] sext_ln151_692_fu_18523_p1;
wire   [6:0] add_ln153_413_fu_18651_p2;
wire  signed [7:0] sext_ln153_344_fu_18657_p1;
wire  signed [7:0] sext_ln151_697_fu_18565_p1;
wire  signed [6:0] sext_ln151_693_fu_18526_p1;
wire  signed [6:0] sext_ln151_695_fu_18547_p1;
wire   [6:0] add_ln153_415_fu_18667_p2;
wire  signed [7:0] sext_ln153_346_fu_18673_p1;
wire  signed [7:0] sext_ln151_691_fu_18519_p1;
wire  signed [6:0] sext_ln151_680_fu_18444_p1;
wire  signed [6:0] sext_ln151_679_fu_18441_p1;
wire   [6:0] add_ln153_419_fu_18683_p2;
wire  signed [7:0] sext_ln153_349_fu_18689_p1;
wire  signed [7:0] sext_ln151_694_fu_18543_p1;
wire  signed [6:0] sext_ln151_683_fu_18468_p1;
wire  signed [6:0] sext_ln151_682_fu_18465_p1;
wire   [6:0] add_ln153_421_fu_18699_p2;
wire  signed [7:0] sext_ln153_351_fu_18705_p1;
wire  signed [7:0] sext_ln151_681_fu_18461_p1;
wire  signed [6:0] sext_ln151_686_fu_18492_p1;
wire  signed [6:0] sext_ln151_685_fu_18489_p1;
wire   [6:0] add_ln153_424_fu_18715_p2;
wire  signed [7:0] sext_ln153_354_fu_18721_p1;
wire  signed [7:0] sext_ln151_684_fu_18485_p1;
wire  signed [6:0] sext_ln151_687_fu_18495_p1;
wire  signed [6:0] sext_ln151_689_fu_18501_p1;
wire   [6:0] add_ln153_426_fu_18731_p2;
wire  signed [6:0] sext_ln151_688_fu_18498_p1;
wire  signed [6:0] sext_ln153_340_fu_18626_p1;
wire   [6:0] add_ln153_427_fu_18741_p2;
wire  signed [7:0] sext_ln153_357_fu_18747_p1;
wire  signed [7:0] sext_ln153_356_fu_18737_p1;
wire   [2:0] mul_res_1009_fu_18771_p0;
wire  signed [2:0] mul_res_1009_fu_18771_p1;
wire  signed [5:0] mul_res_1009_fu_18771_p2;
wire   [2:0] mul_res_1012_fu_18795_p0;
wire  signed [2:0] mul_res_1012_fu_18795_p1;
wire  signed [5:0] mul_res_1012_fu_18795_p2;
wire   [2:0] mul_res_1019_fu_18830_p0;
wire  signed [2:0] mul_res_1019_fu_18830_p1;
wire  signed [5:0] mul_res_1019_fu_18830_p2;
wire   [2:0] mul_res_1022_fu_18853_p0;
wire  signed [2:0] mul_res_1022_fu_18853_p1;
wire  signed [5:0] mul_res_1022_fu_18853_p2;
wire   [2:0] mul_res_1025_fu_18876_p0;
wire  signed [2:0] mul_res_1025_fu_18876_p1;
wire  signed [5:0] mul_res_1025_fu_18876_p2;
wire   [2:0] mul_res_1027_fu_18896_p0;
wire  signed [2:0] mul_res_1027_fu_18896_p1;
wire  signed [5:0] mul_res_1027_fu_18896_p2;
wire   [2:0] mul_res_1028_fu_18914_p0;
wire  signed [2:0] mul_res_1028_fu_18914_p1;
wire  signed [5:0] mul_res_1028_fu_18914_p2;
wire   [2:0] mul_res_1029_fu_18932_p0;
wire  signed [2:0] mul_res_1029_fu_18932_p1;
wire  signed [5:0] mul_res_1029_fu_18932_p2;
wire  signed [6:0] sext_ln151_723_fu_18920_p1;
wire  signed [6:0] sext_ln151_724_fu_18938_p1;
wire  signed [6:0] sext_ln151_719_fu_18866_p1;
wire  signed [6:0] sext_ln151_721_fu_18885_p1;
wire   [6:0] add_ln153_434_fu_18951_p2;
wire  signed [7:0] sext_ln153_362_fu_18957_p1;
wire  signed [7:0] sext_ln151_722_fu_18902_p1;
wire  signed [6:0] sext_ln151_713_fu_18820_p1;
wire  signed [6:0] sext_ln151_715_fu_18839_p1;
wire   [6:0] add_ln153_437_fu_18967_p2;
wire  signed [7:0] sext_ln153_364_fu_18973_p1;
wire  signed [7:0] sext_ln151_720_fu_18881_p1;
wire  signed [6:0] sext_ln151_716_fu_18842_p1;
wire  signed [6:0] sext_ln151_718_fu_18863_p1;
wire   [6:0] add_ln153_439_fu_18983_p2;
wire  signed [7:0] sext_ln153_366_fu_18989_p1;
wire  signed [7:0] sext_ln151_714_fu_18835_p1;
wire  signed [6:0] sext_ln151_703_fu_18760_p1;
wire  signed [6:0] sext_ln151_702_fu_18757_p1;
wire   [6:0] add_ln153_443_fu_18999_p2;
wire  signed [7:0] sext_ln153_369_fu_19005_p1;
wire  signed [7:0] sext_ln151_717_fu_18859_p1;
wire  signed [6:0] sext_ln151_706_fu_18784_p1;
wire  signed [6:0] sext_ln151_705_fu_18781_p1;
wire   [6:0] add_ln153_445_fu_19015_p2;
wire  signed [7:0] sext_ln153_371_fu_19021_p1;
wire  signed [7:0] sext_ln151_704_fu_18777_p1;
wire  signed [6:0] sext_ln151_709_fu_18808_p1;
wire  signed [6:0] sext_ln151_708_fu_18805_p1;
wire   [6:0] add_ln153_448_fu_19031_p2;
wire  signed [7:0] sext_ln153_374_fu_19037_p1;
wire  signed [7:0] sext_ln151_707_fu_18801_p1;
wire  signed [6:0] sext_ln151_710_fu_18811_p1;
wire  signed [6:0] sext_ln151_712_fu_18817_p1;
wire   [6:0] add_ln153_450_fu_19047_p2;
wire  signed [6:0] sext_ln151_711_fu_18814_p1;
wire  signed [6:0] sext_ln153_360_fu_18942_p1;
wire   [6:0] add_ln153_451_fu_19057_p2;
wire  signed [7:0] sext_ln153_377_fu_19063_p1;
wire  signed [7:0] sext_ln153_376_fu_19053_p1;
wire   [2:0] mul_res_1033_fu_19087_p0;
wire  signed [2:0] mul_res_1033_fu_19087_p1;
wire  signed [5:0] mul_res_1033_fu_19087_p2;
wire   [2:0] mul_res_1036_fu_19111_p0;
wire  signed [2:0] mul_res_1036_fu_19111_p1;
wire  signed [5:0] mul_res_1036_fu_19111_p2;
wire   [2:0] mul_res_1043_fu_19146_p0;
wire  signed [2:0] mul_res_1043_fu_19146_p1;
wire  signed [5:0] mul_res_1043_fu_19146_p2;
wire   [2:0] mul_res_1046_fu_19169_p0;
wire  signed [2:0] mul_res_1046_fu_19169_p1;
wire  signed [5:0] mul_res_1046_fu_19169_p2;
wire   [2:0] mul_res_1049_fu_19192_p0;
wire  signed [2:0] mul_res_1049_fu_19192_p1;
wire  signed [5:0] mul_res_1049_fu_19192_p2;
wire   [2:0] mul_res_1051_fu_19212_p0;
wire  signed [2:0] mul_res_1051_fu_19212_p1;
wire  signed [5:0] mul_res_1051_fu_19212_p2;
wire   [2:0] mul_res_1052_fu_19230_p0;
wire  signed [2:0] mul_res_1052_fu_19230_p1;
wire  signed [5:0] mul_res_1052_fu_19230_p2;
wire   [2:0] mul_res_1053_fu_19248_p0;
wire  signed [2:0] mul_res_1053_fu_19248_p1;
wire  signed [5:0] mul_res_1053_fu_19248_p2;
wire  signed [6:0] sext_ln151_746_fu_19236_p1;
wire  signed [6:0] sext_ln151_747_fu_19254_p1;
wire  signed [6:0] sext_ln151_742_fu_19182_p1;
wire  signed [6:0] sext_ln151_744_fu_19201_p1;
wire   [6:0] add_ln153_458_fu_19267_p2;
wire  signed [7:0] sext_ln153_382_fu_19273_p1;
wire  signed [7:0] sext_ln151_745_fu_19218_p1;
wire  signed [6:0] sext_ln151_736_fu_19136_p1;
wire  signed [6:0] sext_ln151_738_fu_19155_p1;
wire   [6:0] add_ln153_461_fu_19283_p2;
wire  signed [7:0] sext_ln153_384_fu_19289_p1;
wire  signed [7:0] sext_ln151_743_fu_19197_p1;
wire  signed [6:0] sext_ln151_739_fu_19158_p1;
wire  signed [6:0] sext_ln151_741_fu_19179_p1;
wire   [6:0] add_ln153_463_fu_19299_p2;
wire  signed [7:0] sext_ln153_386_fu_19305_p1;
wire  signed [7:0] sext_ln151_737_fu_19151_p1;
wire  signed [6:0] sext_ln151_726_fu_19076_p1;
wire  signed [6:0] sext_ln151_725_fu_19073_p1;
wire   [6:0] add_ln153_467_fu_19315_p2;
wire  signed [7:0] sext_ln153_389_fu_19321_p1;
wire  signed [7:0] sext_ln151_740_fu_19175_p1;
wire  signed [6:0] sext_ln151_729_fu_19100_p1;
wire  signed [6:0] sext_ln151_728_fu_19097_p1;
wire   [6:0] add_ln153_469_fu_19331_p2;
wire  signed [7:0] sext_ln153_391_fu_19337_p1;
wire  signed [7:0] sext_ln151_727_fu_19093_p1;
wire  signed [6:0] sext_ln151_732_fu_19124_p1;
wire  signed [6:0] sext_ln151_731_fu_19121_p1;
wire   [6:0] add_ln153_472_fu_19347_p2;
wire  signed [7:0] sext_ln153_394_fu_19353_p1;
wire  signed [7:0] sext_ln151_730_fu_19117_p1;
wire  signed [6:0] sext_ln151_733_fu_19127_p1;
wire  signed [6:0] sext_ln151_735_fu_19133_p1;
wire   [6:0] add_ln153_474_fu_19363_p2;
wire  signed [6:0] sext_ln151_734_fu_19130_p1;
wire  signed [6:0] sext_ln153_380_fu_19258_p1;
wire   [6:0] add_ln153_475_fu_19373_p2;
wire  signed [7:0] sext_ln153_397_fu_19379_p1;
wire  signed [7:0] sext_ln153_396_fu_19369_p1;
wire   [2:0] mul_res_1057_fu_19403_p0;
wire  signed [2:0] mul_res_1057_fu_19403_p1;
wire  signed [5:0] mul_res_1057_fu_19403_p2;
wire   [2:0] mul_res_1060_fu_19427_p0;
wire  signed [2:0] mul_res_1060_fu_19427_p1;
wire  signed [5:0] mul_res_1060_fu_19427_p2;
wire   [2:0] mul_res_1067_fu_19462_p0;
wire  signed [2:0] mul_res_1067_fu_19462_p1;
wire  signed [5:0] mul_res_1067_fu_19462_p2;
wire   [2:0] mul_res_1070_fu_19485_p0;
wire  signed [2:0] mul_res_1070_fu_19485_p1;
wire  signed [5:0] mul_res_1070_fu_19485_p2;
wire   [2:0] mul_res_1073_fu_19508_p0;
wire  signed [2:0] mul_res_1073_fu_19508_p1;
wire  signed [5:0] mul_res_1073_fu_19508_p2;
wire   [2:0] mul_res_1075_fu_19528_p0;
wire  signed [2:0] mul_res_1075_fu_19528_p1;
wire  signed [5:0] mul_res_1075_fu_19528_p2;
wire   [2:0] mul_res_1076_fu_19546_p0;
wire  signed [2:0] mul_res_1076_fu_19546_p1;
wire  signed [5:0] mul_res_1076_fu_19546_p2;
wire   [2:0] mul_res_1077_fu_19564_p0;
wire  signed [2:0] mul_res_1077_fu_19564_p1;
wire  signed [5:0] mul_res_1077_fu_19564_p2;
wire  signed [6:0] sext_ln151_769_fu_19552_p1;
wire  signed [6:0] sext_ln151_770_fu_19570_p1;
wire  signed [6:0] sext_ln151_765_fu_19498_p1;
wire  signed [6:0] sext_ln151_767_fu_19517_p1;
wire   [6:0] add_ln153_482_fu_19583_p2;
wire  signed [7:0] sext_ln153_402_fu_19589_p1;
wire  signed [7:0] sext_ln151_768_fu_19534_p1;
wire  signed [6:0] sext_ln151_759_fu_19452_p1;
wire  signed [6:0] sext_ln151_761_fu_19471_p1;
wire   [6:0] add_ln153_485_fu_19599_p2;
wire  signed [7:0] sext_ln153_404_fu_19605_p1;
wire  signed [7:0] sext_ln151_766_fu_19513_p1;
wire  signed [6:0] sext_ln151_762_fu_19474_p1;
wire  signed [6:0] sext_ln151_764_fu_19495_p1;
wire   [6:0] add_ln153_487_fu_19615_p2;
wire  signed [7:0] sext_ln153_406_fu_19621_p1;
wire  signed [7:0] sext_ln151_760_fu_19467_p1;
wire  signed [6:0] sext_ln151_749_fu_19392_p1;
wire  signed [6:0] sext_ln151_748_fu_19389_p1;
wire   [6:0] add_ln153_491_fu_19631_p2;
wire  signed [7:0] sext_ln153_409_fu_19637_p1;
wire  signed [7:0] sext_ln151_763_fu_19491_p1;
wire  signed [6:0] sext_ln151_752_fu_19416_p1;
wire  signed [6:0] sext_ln151_751_fu_19413_p1;
wire   [6:0] add_ln153_493_fu_19647_p2;
wire  signed [7:0] sext_ln153_411_fu_19653_p1;
wire  signed [7:0] sext_ln151_750_fu_19409_p1;
wire  signed [6:0] sext_ln151_755_fu_19440_p1;
wire  signed [6:0] sext_ln151_754_fu_19437_p1;
wire   [6:0] add_ln153_496_fu_19663_p2;
wire  signed [7:0] sext_ln153_414_fu_19669_p1;
wire  signed [7:0] sext_ln151_753_fu_19433_p1;
wire  signed [6:0] sext_ln151_756_fu_19443_p1;
wire  signed [6:0] sext_ln151_758_fu_19449_p1;
wire   [6:0] add_ln153_498_fu_19679_p2;
wire  signed [6:0] sext_ln151_757_fu_19446_p1;
wire  signed [6:0] sext_ln153_400_fu_19574_p1;
wire   [6:0] add_ln153_499_fu_19689_p2;
wire  signed [7:0] sext_ln153_417_fu_19695_p1;
wire  signed [7:0] sext_ln153_416_fu_19685_p1;
wire   [2:0] mul_res_1081_fu_19719_p0;
wire  signed [2:0] mul_res_1081_fu_19719_p1;
wire  signed [5:0] mul_res_1081_fu_19719_p2;
wire   [2:0] mul_res_1084_fu_19743_p0;
wire  signed [2:0] mul_res_1084_fu_19743_p1;
wire  signed [5:0] mul_res_1084_fu_19743_p2;
wire   [2:0] mul_res_1091_fu_19778_p0;
wire  signed [2:0] mul_res_1091_fu_19778_p1;
wire  signed [5:0] mul_res_1091_fu_19778_p2;
wire   [2:0] mul_res_1094_fu_19801_p0;
wire  signed [2:0] mul_res_1094_fu_19801_p1;
wire  signed [5:0] mul_res_1094_fu_19801_p2;
wire   [2:0] mul_res_1097_fu_19824_p0;
wire  signed [2:0] mul_res_1097_fu_19824_p1;
wire  signed [5:0] mul_res_1097_fu_19824_p2;
wire   [2:0] mul_res_1099_fu_19844_p0;
wire  signed [2:0] mul_res_1099_fu_19844_p1;
wire  signed [5:0] mul_res_1099_fu_19844_p2;
wire   [2:0] mul_res_1100_fu_19862_p0;
wire  signed [2:0] mul_res_1100_fu_19862_p1;
wire  signed [5:0] mul_res_1100_fu_19862_p2;
wire   [2:0] mul_res_1101_fu_19880_p0;
wire  signed [2:0] mul_res_1101_fu_19880_p1;
wire  signed [5:0] mul_res_1101_fu_19880_p2;
wire  signed [6:0] sext_ln151_792_fu_19868_p1;
wire  signed [6:0] sext_ln151_793_fu_19886_p1;
wire  signed [6:0] sext_ln151_788_fu_19814_p1;
wire  signed [6:0] sext_ln151_790_fu_19833_p1;
wire   [6:0] add_ln153_506_fu_19899_p2;
wire  signed [7:0] sext_ln153_422_fu_19905_p1;
wire  signed [7:0] sext_ln151_791_fu_19850_p1;
wire  signed [6:0] sext_ln151_782_fu_19768_p1;
wire  signed [6:0] sext_ln151_784_fu_19787_p1;
wire   [6:0] add_ln153_509_fu_19915_p2;
wire  signed [7:0] sext_ln153_424_fu_19921_p1;
wire  signed [7:0] sext_ln151_789_fu_19829_p1;
wire  signed [6:0] sext_ln151_785_fu_19790_p1;
wire  signed [6:0] sext_ln151_787_fu_19811_p1;
wire   [6:0] add_ln153_511_fu_19931_p2;
wire  signed [7:0] sext_ln153_426_fu_19937_p1;
wire  signed [7:0] sext_ln151_783_fu_19783_p1;
wire  signed [6:0] sext_ln151_772_fu_19708_p1;
wire  signed [6:0] sext_ln151_771_fu_19705_p1;
wire   [6:0] add_ln153_515_fu_19947_p2;
wire  signed [7:0] sext_ln153_429_fu_19953_p1;
wire  signed [7:0] sext_ln151_786_fu_19807_p1;
wire  signed [6:0] sext_ln151_775_fu_19732_p1;
wire  signed [6:0] sext_ln151_774_fu_19729_p1;
wire   [6:0] add_ln153_517_fu_19963_p2;
wire  signed [7:0] sext_ln153_431_fu_19969_p1;
wire  signed [7:0] sext_ln151_773_fu_19725_p1;
wire  signed [6:0] sext_ln151_778_fu_19756_p1;
wire  signed [6:0] sext_ln151_777_fu_19753_p1;
wire   [6:0] add_ln153_520_fu_19979_p2;
wire  signed [7:0] sext_ln153_434_fu_19985_p1;
wire  signed [7:0] sext_ln151_776_fu_19749_p1;
wire  signed [6:0] sext_ln151_779_fu_19759_p1;
wire  signed [6:0] sext_ln151_781_fu_19765_p1;
wire   [6:0] add_ln153_522_fu_19995_p2;
wire  signed [6:0] sext_ln151_780_fu_19762_p1;
wire  signed [6:0] sext_ln153_420_fu_19890_p1;
wire   [6:0] add_ln153_523_fu_20005_p2;
wire  signed [7:0] sext_ln153_437_fu_20011_p1;
wire  signed [7:0] sext_ln153_436_fu_20001_p1;
wire   [2:0] mul_res_1105_fu_20035_p0;
wire  signed [2:0] mul_res_1105_fu_20035_p1;
wire  signed [5:0] mul_res_1105_fu_20035_p2;
wire   [2:0] mul_res_1108_fu_20059_p0;
wire  signed [2:0] mul_res_1108_fu_20059_p1;
wire  signed [5:0] mul_res_1108_fu_20059_p2;
wire   [2:0] mul_res_1115_fu_20095_p0;
wire  signed [2:0] mul_res_1115_fu_20095_p1;
wire  signed [5:0] mul_res_1115_fu_20095_p2;
wire   [2:0] mul_res_1118_fu_20119_p0;
wire  signed [2:0] mul_res_1118_fu_20119_p1;
wire  signed [5:0] mul_res_1118_fu_20119_p2;
wire   [2:0] mul_res_1121_fu_20143_p0;
wire  signed [2:0] mul_res_1121_fu_20143_p1;
wire  signed [5:0] mul_res_1121_fu_20143_p2;
wire   [2:0] mul_res_1123_fu_20164_p0;
wire  signed [2:0] mul_res_1123_fu_20164_p1;
wire  signed [5:0] mul_res_1123_fu_20164_p2;
wire   [2:0] mul_res_1124_fu_20182_p0;
wire  signed [2:0] mul_res_1124_fu_20182_p1;
wire  signed [5:0] mul_res_1124_fu_20182_p2;
wire   [2:0] mul_res_1125_fu_20200_p0;
wire  signed [2:0] mul_res_1125_fu_20200_p1;
wire  signed [5:0] mul_res_1125_fu_20200_p2;
wire  signed [6:0] sext_ln151_815_fu_20188_p1;
wire  signed [6:0] sext_ln151_816_fu_20206_p1;
wire  signed [6:0] sext_ln151_811_fu_20132_p1;
wire  signed [6:0] sext_ln151_813_fu_20153_p1;
wire   [6:0] add_ln153_530_fu_20219_p2;
wire  signed [7:0] sext_ln153_442_fu_20225_p1;
wire  signed [7:0] sext_ln151_814_fu_20170_p1;
wire  signed [6:0] sext_ln151_805_fu_20084_p1;
wire  signed [6:0] sext_ln151_807_fu_20105_p1;
wire   [6:0] add_ln153_533_fu_20235_p2;
wire  signed [7:0] sext_ln153_444_fu_20241_p1;
wire  signed [7:0] sext_ln151_812_fu_20149_p1;
wire  signed [6:0] sext_ln151_808_fu_20108_p1;
wire  signed [6:0] sext_ln151_810_fu_20129_p1;
wire   [6:0] add_ln153_535_fu_20251_p2;
wire  signed [7:0] sext_ln153_446_fu_20257_p1;
wire  signed [7:0] sext_ln151_806_fu_20101_p1;
wire  signed [6:0] sext_ln151_795_fu_20024_p1;
wire  signed [6:0] sext_ln151_794_fu_20021_p1;
wire   [6:0] add_ln153_539_fu_20267_p2;
wire  signed [7:0] sext_ln153_449_fu_20273_p1;
wire  signed [7:0] sext_ln151_809_fu_20125_p1;
wire  signed [6:0] sext_ln151_798_fu_20048_p1;
wire  signed [6:0] sext_ln151_797_fu_20045_p1;
wire   [6:0] add_ln153_541_fu_20283_p2;
wire  signed [7:0] sext_ln153_451_fu_20289_p1;
wire  signed [7:0] sext_ln151_796_fu_20041_p1;
wire  signed [6:0] sext_ln151_801_fu_20072_p1;
wire  signed [6:0] sext_ln151_800_fu_20069_p1;
wire   [6:0] add_ln153_544_fu_20299_p2;
wire  signed [7:0] sext_ln153_454_fu_20305_p1;
wire  signed [7:0] sext_ln151_799_fu_20065_p1;
wire  signed [6:0] sext_ln151_802_fu_20075_p1;
wire  signed [6:0] sext_ln151_804_fu_20081_p1;
wire   [6:0] add_ln153_546_fu_20315_p2;
wire  signed [6:0] sext_ln151_803_fu_20078_p1;
wire  signed [6:0] sext_ln153_440_fu_20210_p1;
wire   [6:0] add_ln153_547_fu_20325_p2;
wire  signed [7:0] sext_ln153_457_fu_20331_p1;
wire  signed [7:0] sext_ln153_456_fu_20321_p1;
wire   [2:0] mul_res_1129_fu_20355_p0;
wire  signed [2:0] mul_res_1129_fu_20355_p1;
wire  signed [5:0] mul_res_1129_fu_20355_p2;
wire   [2:0] mul_res_1132_fu_20379_p0;
wire  signed [2:0] mul_res_1132_fu_20379_p1;
wire  signed [5:0] mul_res_1132_fu_20379_p2;
wire   [2:0] mul_res_1139_fu_20415_p0;
wire  signed [2:0] mul_res_1139_fu_20415_p1;
wire  signed [5:0] mul_res_1139_fu_20415_p2;
wire   [2:0] mul_res_1142_fu_20439_p0;
wire  signed [2:0] mul_res_1142_fu_20439_p1;
wire  signed [5:0] mul_res_1142_fu_20439_p2;
wire   [2:0] mul_res_1145_fu_20463_p0;
wire  signed [2:0] mul_res_1145_fu_20463_p1;
wire  signed [5:0] mul_res_1145_fu_20463_p2;
wire   [2:0] mul_res_1147_fu_20484_p0;
wire  signed [2:0] mul_res_1147_fu_20484_p1;
wire  signed [5:0] mul_res_1147_fu_20484_p2;
wire   [2:0] mul_res_1148_fu_20502_p0;
wire  signed [2:0] mul_res_1148_fu_20502_p1;
wire  signed [5:0] mul_res_1148_fu_20502_p2;
wire   [2:0] mul_res_1149_fu_20520_p0;
wire  signed [2:0] mul_res_1149_fu_20520_p1;
wire  signed [5:0] mul_res_1149_fu_20520_p2;
wire  signed [6:0] sext_ln151_838_fu_20508_p1;
wire  signed [6:0] sext_ln151_839_fu_20526_p1;
wire  signed [6:0] sext_ln151_834_fu_20452_p1;
wire  signed [6:0] sext_ln151_836_fu_20473_p1;
wire   [6:0] add_ln153_554_fu_20539_p2;
wire  signed [7:0] sext_ln153_462_fu_20545_p1;
wire  signed [7:0] sext_ln151_837_fu_20490_p1;
wire  signed [6:0] sext_ln151_828_fu_20404_p1;
wire  signed [6:0] sext_ln151_830_fu_20425_p1;
wire   [6:0] add_ln153_557_fu_20555_p2;
wire  signed [7:0] sext_ln153_464_fu_20561_p1;
wire  signed [7:0] sext_ln151_835_fu_20469_p1;
wire  signed [6:0] sext_ln151_831_fu_20428_p1;
wire  signed [6:0] sext_ln151_833_fu_20449_p1;
wire   [6:0] add_ln153_559_fu_20571_p2;
wire  signed [7:0] sext_ln153_466_fu_20577_p1;
wire  signed [7:0] sext_ln151_829_fu_20421_p1;
wire  signed [6:0] sext_ln151_818_fu_20344_p1;
wire  signed [6:0] sext_ln151_817_fu_20341_p1;
wire   [6:0] add_ln153_563_fu_20587_p2;
wire  signed [7:0] sext_ln153_469_fu_20593_p1;
wire  signed [7:0] sext_ln151_832_fu_20445_p1;
wire  signed [6:0] sext_ln151_821_fu_20368_p1;
wire  signed [6:0] sext_ln151_820_fu_20365_p1;
wire   [6:0] add_ln153_565_fu_20603_p2;
wire  signed [7:0] sext_ln153_471_fu_20609_p1;
wire  signed [7:0] sext_ln151_819_fu_20361_p1;
wire  signed [6:0] sext_ln151_824_fu_20392_p1;
wire  signed [6:0] sext_ln151_823_fu_20389_p1;
wire   [6:0] add_ln153_568_fu_20619_p2;
wire  signed [7:0] sext_ln153_474_fu_20625_p1;
wire  signed [7:0] sext_ln151_822_fu_20385_p1;
wire  signed [6:0] sext_ln151_825_fu_20395_p1;
wire  signed [6:0] sext_ln151_827_fu_20401_p1;
wire   [6:0] add_ln153_570_fu_20635_p2;
wire  signed [6:0] sext_ln151_826_fu_20398_p1;
wire  signed [6:0] sext_ln153_460_fu_20530_p1;
wire   [6:0] add_ln153_571_fu_20645_p2;
wire  signed [7:0] sext_ln153_477_fu_20651_p1;
wire  signed [7:0] sext_ln153_476_fu_20641_p1;
wire  signed [9:0] sext_ln131_fu_20805_p1;
wire  signed [9:0] sext_ln153_3_fu_20957_p1;
wire  signed [9:0] sext_ln153_1_fu_20954_p1;
wire  signed [9:0] sext_ln153_8_fu_20966_p1;
wire   [9:0] add_ln153_1_fu_20960_p2;
wire  signed [8:0] sext_ln153_12_fu_20978_p1;
wire  signed [8:0] sext_ln153_10_fu_20975_p1;
wire   [8:0] add_ln153_15_fu_20981_p2;
wire  signed [8:0] sext_ln153_18_fu_20994_p1;
wire  signed [8:0] sext_ln153_15_fu_20991_p1;
wire   [8:0] add_ln153_21_fu_20997_p2;
wire  signed [9:0] sext_ln153_19_fu_21003_p1;
wire  signed [9:0] sext_ln153_13_fu_20987_p1;
wire   [9:0] add_ln153_22_fu_21007_p2;
wire   [9:0] add_ln153_4_fu_20969_p2;
wire   [9:0] add_ln153_10_fu_21013_p2;
wire   [9:0] select_ln126_23_fu_20948_p3;
wire  signed [9:0] sext_ln153_23_fu_21028_p1;
wire  signed [9:0] sext_ln153_21_fu_21025_p1;
wire  signed [9:0] sext_ln153_28_fu_21037_p1;
wire   [9:0] add_ln153_25_fu_21031_p2;
wire  signed [8:0] sext_ln153_32_fu_21049_p1;
wire  signed [8:0] sext_ln153_30_fu_21046_p1;
wire   [8:0] add_ln153_39_fu_21052_p2;
wire  signed [8:0] sext_ln153_38_fu_21065_p1;
wire  signed [8:0] sext_ln153_35_fu_21062_p1;
wire   [8:0] add_ln153_45_fu_21068_p2;
wire  signed [9:0] sext_ln153_39_fu_21074_p1;
wire  signed [9:0] sext_ln153_33_fu_21058_p1;
wire   [9:0] add_ln153_46_fu_21078_p2;
wire   [9:0] add_ln153_28_fu_21040_p2;
wire   [9:0] add_ln153_34_fu_21084_p2;
wire   [9:0] select_ln126_22_fu_20942_p3;
wire  signed [9:0] sext_ln153_43_fu_21099_p1;
wire  signed [9:0] sext_ln153_41_fu_21096_p1;
wire  signed [9:0] sext_ln153_48_fu_21108_p1;
wire   [9:0] add_ln153_49_fu_21102_p2;
wire  signed [8:0] sext_ln153_52_fu_21120_p1;
wire  signed [8:0] sext_ln153_50_fu_21117_p1;
wire   [8:0] add_ln153_63_fu_21123_p2;
wire  signed [8:0] sext_ln153_58_fu_21136_p1;
wire  signed [8:0] sext_ln153_55_fu_21133_p1;
wire   [8:0] add_ln153_69_fu_21139_p2;
wire  signed [9:0] sext_ln153_59_fu_21145_p1;
wire  signed [9:0] sext_ln153_53_fu_21129_p1;
wire   [9:0] add_ln153_70_fu_21149_p2;
wire   [9:0] add_ln153_52_fu_21111_p2;
wire   [9:0] add_ln153_58_fu_21155_p2;
wire   [9:0] select_ln126_21_fu_20936_p3;
wire  signed [9:0] sext_ln153_63_fu_21170_p1;
wire  signed [9:0] sext_ln153_61_fu_21167_p1;
wire  signed [9:0] sext_ln153_68_fu_21179_p1;
wire   [9:0] add_ln153_73_fu_21173_p2;
wire  signed [8:0] sext_ln153_72_fu_21191_p1;
wire  signed [8:0] sext_ln153_70_fu_21188_p1;
wire   [8:0] add_ln153_87_fu_21194_p2;
wire  signed [8:0] sext_ln153_78_fu_21207_p1;
wire  signed [8:0] sext_ln153_75_fu_21204_p1;
wire   [8:0] add_ln153_93_fu_21210_p2;
wire  signed [9:0] sext_ln153_79_fu_21216_p1;
wire  signed [9:0] sext_ln153_73_fu_21200_p1;
wire   [9:0] add_ln153_94_fu_21220_p2;
wire   [9:0] add_ln153_76_fu_21182_p2;
wire   [9:0] add_ln153_82_fu_21226_p2;
wire   [9:0] select_ln126_20_fu_20930_p3;
wire  signed [9:0] sext_ln153_83_fu_21241_p1;
wire  signed [9:0] sext_ln153_81_fu_21238_p1;
wire  signed [9:0] sext_ln153_88_fu_21250_p1;
wire   [9:0] add_ln153_97_fu_21244_p2;
wire  signed [8:0] sext_ln153_92_fu_21262_p1;
wire  signed [8:0] sext_ln153_90_fu_21259_p1;
wire   [8:0] add_ln153_111_fu_21265_p2;
wire  signed [8:0] sext_ln153_98_fu_21278_p1;
wire  signed [8:0] sext_ln153_95_fu_21275_p1;
wire   [8:0] add_ln153_117_fu_21281_p2;
wire  signed [9:0] sext_ln153_99_fu_21287_p1;
wire  signed [9:0] sext_ln153_93_fu_21271_p1;
wire   [9:0] add_ln153_118_fu_21291_p2;
wire   [9:0] add_ln153_100_fu_21253_p2;
wire   [9:0] add_ln153_106_fu_21297_p2;
wire   [9:0] select_ln126_19_fu_20924_p3;
wire  signed [9:0] sext_ln153_103_fu_21312_p1;
wire  signed [9:0] sext_ln153_101_fu_21309_p1;
wire  signed [9:0] sext_ln153_108_fu_21321_p1;
wire   [9:0] add_ln153_121_fu_21315_p2;
wire  signed [8:0] sext_ln153_112_fu_21333_p1;
wire  signed [8:0] sext_ln153_110_fu_21330_p1;
wire   [8:0] add_ln153_135_fu_21336_p2;
wire  signed [8:0] sext_ln153_118_fu_21349_p1;
wire  signed [8:0] sext_ln153_115_fu_21346_p1;
wire   [8:0] add_ln153_141_fu_21352_p2;
wire  signed [9:0] sext_ln153_119_fu_21358_p1;
wire  signed [9:0] sext_ln153_113_fu_21342_p1;
wire   [9:0] add_ln153_142_fu_21362_p2;
wire   [9:0] add_ln153_124_fu_21324_p2;
wire   [9:0] add_ln153_130_fu_21368_p2;
wire   [9:0] select_ln126_18_fu_20918_p3;
wire  signed [9:0] sext_ln153_123_fu_21383_p1;
wire  signed [9:0] sext_ln153_121_fu_21380_p1;
wire  signed [9:0] sext_ln153_128_fu_21392_p1;
wire   [9:0] add_ln153_145_fu_21386_p2;
wire  signed [8:0] sext_ln153_132_fu_21404_p1;
wire  signed [8:0] sext_ln153_130_fu_21401_p1;
wire   [8:0] add_ln153_159_fu_21407_p2;
wire  signed [8:0] sext_ln153_138_fu_21420_p1;
wire  signed [8:0] sext_ln153_135_fu_21417_p1;
wire   [8:0] add_ln153_165_fu_21423_p2;
wire  signed [9:0] sext_ln153_139_fu_21429_p1;
wire  signed [9:0] sext_ln153_133_fu_21413_p1;
wire   [9:0] add_ln153_166_fu_21433_p2;
wire   [9:0] add_ln153_148_fu_21395_p2;
wire   [9:0] add_ln153_154_fu_21439_p2;
wire   [9:0] select_ln126_17_fu_20912_p3;
wire  signed [9:0] sext_ln153_143_fu_21454_p1;
wire  signed [9:0] sext_ln153_141_fu_21451_p1;
wire  signed [9:0] sext_ln153_148_fu_21463_p1;
wire   [9:0] add_ln153_169_fu_21457_p2;
wire  signed [8:0] sext_ln153_152_fu_21475_p1;
wire  signed [8:0] sext_ln153_150_fu_21472_p1;
wire   [8:0] add_ln153_183_fu_21478_p2;
wire  signed [8:0] sext_ln153_158_fu_21491_p1;
wire  signed [8:0] sext_ln153_155_fu_21488_p1;
wire   [8:0] add_ln153_189_fu_21494_p2;
wire  signed [9:0] sext_ln153_159_fu_21500_p1;
wire  signed [9:0] sext_ln153_153_fu_21484_p1;
wire   [9:0] add_ln153_190_fu_21504_p2;
wire   [9:0] add_ln153_172_fu_21466_p2;
wire   [9:0] add_ln153_178_fu_21510_p2;
wire   [9:0] select_ln126_16_fu_20906_p3;
wire  signed [9:0] sext_ln153_163_fu_21525_p1;
wire  signed [9:0] sext_ln153_161_fu_21522_p1;
wire  signed [9:0] sext_ln153_168_fu_21534_p1;
wire   [9:0] add_ln153_193_fu_21528_p2;
wire  signed [8:0] sext_ln153_172_fu_21546_p1;
wire  signed [8:0] sext_ln153_170_fu_21543_p1;
wire   [8:0] add_ln153_207_fu_21549_p2;
wire  signed [8:0] sext_ln153_178_fu_21562_p1;
wire  signed [8:0] sext_ln153_175_fu_21559_p1;
wire   [8:0] add_ln153_213_fu_21565_p2;
wire  signed [9:0] sext_ln153_179_fu_21571_p1;
wire  signed [9:0] sext_ln153_173_fu_21555_p1;
wire   [9:0] add_ln153_214_fu_21575_p2;
wire   [9:0] add_ln153_196_fu_21537_p2;
wire   [9:0] add_ln153_202_fu_21581_p2;
wire   [9:0] select_ln126_15_fu_20900_p3;
wire  signed [9:0] sext_ln153_183_fu_21596_p1;
wire  signed [9:0] sext_ln153_181_fu_21593_p1;
wire  signed [9:0] sext_ln153_188_fu_21605_p1;
wire   [9:0] add_ln153_217_fu_21599_p2;
wire  signed [8:0] sext_ln153_192_fu_21617_p1;
wire  signed [8:0] sext_ln153_190_fu_21614_p1;
wire   [8:0] add_ln153_231_fu_21620_p2;
wire  signed [8:0] sext_ln153_198_fu_21633_p1;
wire  signed [8:0] sext_ln153_195_fu_21630_p1;
wire   [8:0] add_ln153_237_fu_21636_p2;
wire  signed [9:0] sext_ln153_199_fu_21642_p1;
wire  signed [9:0] sext_ln153_193_fu_21626_p1;
wire   [9:0] add_ln153_238_fu_21646_p2;
wire   [9:0] add_ln153_220_fu_21608_p2;
wire   [9:0] add_ln153_226_fu_21652_p2;
wire   [9:0] select_ln126_14_fu_20894_p3;
wire  signed [9:0] sext_ln153_201_fu_21664_p1;
wire   [9:0] select_ln126_13_fu_20888_p3;
wire  signed [9:0] sext_ln153_203_fu_21673_p1;
wire   [9:0] add_ln153_241_fu_21667_p2;
wire  signed [8:0] sext_ln153_207_fu_21685_p1;
wire  signed [8:0] sext_ln153_205_fu_21682_p1;
wire   [8:0] add_ln153_249_fu_21688_p2;
wire  signed [9:0] sext_ln153_208_fu_21694_p1;
wire   [9:0] add_ln153_244_fu_21676_p2;
wire  signed [8:0] sext_ln153_212_fu_21707_p1;
wire  signed [8:0] sext_ln153_210_fu_21704_p1;
wire   [8:0] add_ln153_255_fu_21710_p2;
wire  signed [8:0] sext_ln153_218_fu_21723_p1;
wire  signed [8:0] sext_ln153_215_fu_21720_p1;
wire   [8:0] add_ln153_261_fu_21726_p2;
wire  signed [9:0] sext_ln153_219_fu_21732_p1;
wire  signed [9:0] sext_ln153_213_fu_21716_p1;
wire   [9:0] add_ln153_262_fu_21736_p2;
wire   [9:0] add_ln153_250_fu_21698_p2;
wire  signed [9:0] sext_ln153_221_fu_21748_p1;
wire   [9:0] select_ln126_12_fu_20881_p3;
wire  signed [9:0] sext_ln153_223_fu_21757_p1;
wire   [9:0] add_ln153_265_fu_21751_p2;
wire  signed [8:0] sext_ln153_227_fu_21769_p1;
wire  signed [8:0] sext_ln153_225_fu_21766_p1;
wire   [8:0] add_ln153_273_fu_21772_p2;
wire  signed [9:0] sext_ln153_228_fu_21778_p1;
wire   [9:0] add_ln153_268_fu_21760_p2;
wire  signed [8:0] sext_ln153_232_fu_21791_p1;
wire  signed [8:0] sext_ln153_230_fu_21788_p1;
wire   [8:0] add_ln153_279_fu_21794_p2;
wire  signed [8:0] sext_ln153_238_fu_21807_p1;
wire  signed [8:0] sext_ln153_235_fu_21804_p1;
wire   [8:0] add_ln153_285_fu_21810_p2;
wire  signed [9:0] sext_ln153_239_fu_21816_p1;
wire  signed [9:0] sext_ln153_233_fu_21800_p1;
wire   [9:0] add_ln153_286_fu_21820_p2;
wire   [9:0] add_ln153_274_fu_21782_p2;
wire  signed [9:0] sext_ln153_241_fu_21832_p1;
wire   [9:0] select_ln126_11_fu_20875_p3;
wire  signed [9:0] sext_ln153_243_fu_21841_p1;
wire   [9:0] add_ln153_289_fu_21835_p2;
wire  signed [8:0] sext_ln153_247_fu_21853_p1;
wire  signed [8:0] sext_ln153_245_fu_21850_p1;
wire   [8:0] add_ln153_297_fu_21856_p2;
wire  signed [9:0] sext_ln153_248_fu_21862_p1;
wire   [9:0] add_ln153_292_fu_21844_p2;
wire  signed [8:0] sext_ln153_252_fu_21875_p1;
wire  signed [8:0] sext_ln153_250_fu_21872_p1;
wire   [8:0] add_ln153_303_fu_21878_p2;
wire  signed [8:0] sext_ln153_258_fu_21891_p1;
wire  signed [8:0] sext_ln153_255_fu_21888_p1;
wire   [8:0] add_ln153_309_fu_21894_p2;
wire  signed [9:0] sext_ln153_259_fu_21900_p1;
wire  signed [9:0] sext_ln153_253_fu_21884_p1;
wire   [9:0] add_ln153_310_fu_21904_p2;
wire   [9:0] add_ln153_298_fu_21866_p2;
wire  signed [9:0] sext_ln153_261_fu_21916_p1;
wire   [9:0] select_ln126_10_fu_20869_p3;
wire  signed [9:0] sext_ln153_263_fu_21925_p1;
wire   [9:0] add_ln153_313_fu_21919_p2;
wire  signed [8:0] sext_ln153_267_fu_21937_p1;
wire  signed [8:0] sext_ln153_265_fu_21934_p1;
wire   [8:0] add_ln153_321_fu_21940_p2;
wire  signed [9:0] sext_ln153_268_fu_21946_p1;
wire   [9:0] add_ln153_316_fu_21928_p2;
wire  signed [8:0] sext_ln153_272_fu_21959_p1;
wire  signed [8:0] sext_ln153_270_fu_21956_p1;
wire   [8:0] add_ln153_327_fu_21962_p2;
wire  signed [8:0] sext_ln153_278_fu_21975_p1;
wire  signed [8:0] sext_ln153_275_fu_21972_p1;
wire   [8:0] add_ln153_333_fu_21978_p2;
wire  signed [9:0] sext_ln153_279_fu_21984_p1;
wire  signed [9:0] sext_ln153_273_fu_21968_p1;
wire   [9:0] add_ln153_334_fu_21988_p2;
wire   [9:0] add_ln153_322_fu_21950_p2;
wire  signed [9:0] sext_ln153_281_fu_22000_p1;
wire   [9:0] select_ln126_9_fu_20863_p3;
wire  signed [9:0] sext_ln153_283_fu_22009_p1;
wire   [9:0] add_ln153_337_fu_22003_p2;
wire  signed [8:0] sext_ln153_287_fu_22021_p1;
wire  signed [8:0] sext_ln153_285_fu_22018_p1;
wire   [8:0] add_ln153_345_fu_22024_p2;
wire  signed [9:0] sext_ln153_288_fu_22030_p1;
wire   [9:0] add_ln153_340_fu_22012_p2;
wire  signed [8:0] sext_ln153_292_fu_22043_p1;
wire  signed [8:0] sext_ln153_290_fu_22040_p1;
wire   [8:0] add_ln153_351_fu_22046_p2;
wire  signed [8:0] sext_ln153_298_fu_22059_p1;
wire  signed [8:0] sext_ln153_295_fu_22056_p1;
wire   [8:0] add_ln153_357_fu_22062_p2;
wire  signed [9:0] sext_ln153_299_fu_22068_p1;
wire  signed [9:0] sext_ln153_293_fu_22052_p1;
wire   [9:0] add_ln153_358_fu_22072_p2;
wire   [9:0] add_ln153_346_fu_22034_p2;
wire  signed [9:0] sext_ln153_301_fu_22084_p1;
wire   [9:0] select_ln126_8_fu_20857_p3;
wire  signed [9:0] sext_ln153_303_fu_22093_p1;
wire   [9:0] add_ln153_361_fu_22087_p2;
wire  signed [8:0] sext_ln153_307_fu_22105_p1;
wire  signed [8:0] sext_ln153_305_fu_22102_p1;
wire   [8:0] add_ln153_369_fu_22108_p2;
wire  signed [9:0] sext_ln153_308_fu_22114_p1;
wire   [9:0] add_ln153_364_fu_22096_p2;
wire  signed [8:0] sext_ln153_312_fu_22127_p1;
wire  signed [8:0] sext_ln153_310_fu_22124_p1;
wire   [8:0] add_ln153_375_fu_22130_p2;
wire  signed [8:0] sext_ln153_318_fu_22143_p1;
wire  signed [8:0] sext_ln153_315_fu_22140_p1;
wire   [8:0] add_ln153_381_fu_22146_p2;
wire  signed [9:0] sext_ln153_319_fu_22152_p1;
wire  signed [9:0] sext_ln153_313_fu_22136_p1;
wire   [9:0] add_ln153_382_fu_22156_p2;
wire   [9:0] add_ln153_370_fu_22118_p2;
wire  signed [9:0] sext_ln153_321_fu_22168_p1;
wire   [9:0] select_ln126_7_fu_20851_p3;
wire  signed [9:0] sext_ln153_323_fu_22177_p1;
wire   [9:0] add_ln153_385_fu_22171_p2;
wire  signed [8:0] sext_ln153_327_fu_22189_p1;
wire  signed [8:0] sext_ln153_325_fu_22186_p1;
wire   [8:0] add_ln153_393_fu_22192_p2;
wire  signed [9:0] sext_ln153_328_fu_22198_p1;
wire   [9:0] add_ln153_388_fu_22180_p2;
wire  signed [8:0] sext_ln153_332_fu_22211_p1;
wire  signed [8:0] sext_ln153_330_fu_22208_p1;
wire   [8:0] add_ln153_399_fu_22214_p2;
wire  signed [8:0] sext_ln153_338_fu_22227_p1;
wire  signed [8:0] sext_ln153_335_fu_22224_p1;
wire   [8:0] add_ln153_405_fu_22230_p2;
wire  signed [9:0] sext_ln153_339_fu_22236_p1;
wire  signed [9:0] sext_ln153_333_fu_22220_p1;
wire   [9:0] add_ln153_406_fu_22240_p2;
wire   [9:0] add_ln153_394_fu_22202_p2;
wire  signed [9:0] sext_ln153_341_fu_22252_p1;
wire   [9:0] select_ln126_6_fu_20845_p3;
wire  signed [9:0] sext_ln153_343_fu_22261_p1;
wire   [9:0] add_ln153_409_fu_22255_p2;
wire  signed [8:0] sext_ln153_347_fu_22273_p1;
wire  signed [8:0] sext_ln153_345_fu_22270_p1;
wire   [8:0] add_ln153_417_fu_22276_p2;
wire  signed [9:0] sext_ln153_348_fu_22282_p1;
wire   [9:0] add_ln153_412_fu_22264_p2;
wire  signed [8:0] sext_ln153_352_fu_22295_p1;
wire  signed [8:0] sext_ln153_350_fu_22292_p1;
wire   [8:0] add_ln153_423_fu_22298_p2;
wire  signed [8:0] sext_ln153_358_fu_22311_p1;
wire  signed [8:0] sext_ln153_355_fu_22308_p1;
wire   [8:0] add_ln153_429_fu_22314_p2;
wire  signed [9:0] sext_ln153_359_fu_22320_p1;
wire  signed [9:0] sext_ln153_353_fu_22304_p1;
wire   [9:0] add_ln153_430_fu_22324_p2;
wire   [9:0] add_ln153_418_fu_22286_p2;
wire  signed [9:0] sext_ln153_361_fu_22336_p1;
wire   [9:0] select_ln126_5_fu_20839_p3;
wire  signed [9:0] sext_ln153_363_fu_22345_p1;
wire   [9:0] add_ln153_433_fu_22339_p2;
wire  signed [8:0] sext_ln153_367_fu_22357_p1;
wire  signed [8:0] sext_ln153_365_fu_22354_p1;
wire   [8:0] add_ln153_441_fu_22360_p2;
wire  signed [9:0] sext_ln153_368_fu_22366_p1;
wire   [9:0] add_ln153_436_fu_22348_p2;
wire  signed [8:0] sext_ln153_372_fu_22379_p1;
wire  signed [8:0] sext_ln153_370_fu_22376_p1;
wire   [8:0] add_ln153_447_fu_22382_p2;
wire  signed [8:0] sext_ln153_378_fu_22395_p1;
wire  signed [8:0] sext_ln153_375_fu_22392_p1;
wire   [8:0] add_ln153_453_fu_22398_p2;
wire  signed [9:0] sext_ln153_379_fu_22404_p1;
wire  signed [9:0] sext_ln153_373_fu_22388_p1;
wire   [9:0] add_ln153_454_fu_22408_p2;
wire   [9:0] add_ln153_442_fu_22370_p2;
wire  signed [9:0] sext_ln153_381_fu_22420_p1;
wire   [9:0] select_ln126_4_fu_20833_p3;
wire  signed [9:0] sext_ln153_383_fu_22429_p1;
wire   [9:0] add_ln153_457_fu_22423_p2;
wire  signed [8:0] sext_ln153_387_fu_22441_p1;
wire  signed [8:0] sext_ln153_385_fu_22438_p1;
wire   [8:0] add_ln153_465_fu_22444_p2;
wire  signed [9:0] sext_ln153_388_fu_22450_p1;
wire   [9:0] add_ln153_460_fu_22432_p2;
wire  signed [8:0] sext_ln153_392_fu_22463_p1;
wire  signed [8:0] sext_ln153_390_fu_22460_p1;
wire   [8:0] add_ln153_471_fu_22466_p2;
wire  signed [8:0] sext_ln153_398_fu_22479_p1;
wire  signed [8:0] sext_ln153_395_fu_22476_p1;
wire   [8:0] add_ln153_477_fu_22482_p2;
wire  signed [9:0] sext_ln153_399_fu_22488_p1;
wire  signed [9:0] sext_ln153_393_fu_22472_p1;
wire   [9:0] add_ln153_478_fu_22492_p2;
wire   [9:0] add_ln153_466_fu_22454_p2;
wire  signed [9:0] sext_ln153_401_fu_22504_p1;
wire   [9:0] select_ln126_3_fu_20827_p3;
wire  signed [9:0] sext_ln153_403_fu_22513_p1;
wire   [9:0] add_ln153_481_fu_22507_p2;
wire  signed [8:0] sext_ln153_407_fu_22525_p1;
wire  signed [8:0] sext_ln153_405_fu_22522_p1;
wire   [8:0] add_ln153_489_fu_22528_p2;
wire  signed [9:0] sext_ln153_408_fu_22534_p1;
wire   [9:0] add_ln153_484_fu_22516_p2;
wire  signed [8:0] sext_ln153_412_fu_22547_p1;
wire  signed [8:0] sext_ln153_410_fu_22544_p1;
wire   [8:0] add_ln153_495_fu_22550_p2;
wire  signed [8:0] sext_ln153_418_fu_22563_p1;
wire  signed [8:0] sext_ln153_415_fu_22560_p1;
wire   [8:0] add_ln153_501_fu_22566_p2;
wire  signed [9:0] sext_ln153_419_fu_22572_p1;
wire  signed [9:0] sext_ln153_413_fu_22556_p1;
wire   [9:0] add_ln153_502_fu_22576_p2;
wire   [9:0] add_ln153_490_fu_22538_p2;
wire  signed [9:0] sext_ln153_421_fu_22588_p1;
wire   [9:0] select_ln126_2_fu_20821_p3;
wire  signed [9:0] sext_ln153_423_fu_22597_p1;
wire   [9:0] add_ln153_505_fu_22591_p2;
wire  signed [8:0] sext_ln153_427_fu_22609_p1;
wire  signed [8:0] sext_ln153_425_fu_22606_p1;
wire   [8:0] add_ln153_513_fu_22612_p2;
wire  signed [9:0] sext_ln153_428_fu_22618_p1;
wire   [9:0] add_ln153_508_fu_22600_p2;
wire  signed [8:0] sext_ln153_432_fu_22631_p1;
wire  signed [8:0] sext_ln153_430_fu_22628_p1;
wire   [8:0] add_ln153_519_fu_22634_p2;
wire  signed [8:0] sext_ln153_438_fu_22647_p1;
wire  signed [8:0] sext_ln153_435_fu_22644_p1;
wire   [8:0] add_ln153_525_fu_22650_p2;
wire  signed [9:0] sext_ln153_439_fu_22656_p1;
wire  signed [9:0] sext_ln153_433_fu_22640_p1;
wire   [9:0] add_ln153_526_fu_22660_p2;
wire   [9:0] add_ln153_514_fu_22622_p2;
wire  signed [9:0] sext_ln153_441_fu_22672_p1;
wire   [9:0] select_ln126_1_fu_20815_p3;
wire  signed [9:0] sext_ln153_443_fu_22681_p1;
wire   [9:0] add_ln153_529_fu_22675_p2;
wire  signed [8:0] sext_ln153_447_fu_22693_p1;
wire  signed [8:0] sext_ln153_445_fu_22690_p1;
wire   [8:0] add_ln153_537_fu_22696_p2;
wire  signed [9:0] sext_ln153_448_fu_22702_p1;
wire   [9:0] add_ln153_532_fu_22684_p2;
wire  signed [8:0] sext_ln153_452_fu_22715_p1;
wire  signed [8:0] sext_ln153_450_fu_22712_p1;
wire   [8:0] add_ln153_543_fu_22718_p2;
wire  signed [8:0] sext_ln153_458_fu_22731_p1;
wire  signed [8:0] sext_ln153_455_fu_22728_p1;
wire   [8:0] add_ln153_549_fu_22734_p2;
wire  signed [9:0] sext_ln153_459_fu_22740_p1;
wire  signed [9:0] sext_ln153_453_fu_22724_p1;
wire   [9:0] add_ln153_550_fu_22744_p2;
wire   [9:0] add_ln153_538_fu_22706_p2;
wire  signed [9:0] sext_ln153_461_fu_22756_p1;
wire   [9:0] select_ln126_fu_20808_p3;
wire  signed [9:0] sext_ln153_463_fu_22765_p1;
wire   [9:0] add_ln153_553_fu_22759_p2;
wire  signed [8:0] sext_ln153_467_fu_22777_p1;
wire  signed [8:0] sext_ln153_465_fu_22774_p1;
wire   [8:0] add_ln153_561_fu_22780_p2;
wire  signed [9:0] sext_ln153_468_fu_22786_p1;
wire   [9:0] add_ln153_556_fu_22768_p2;
wire  signed [8:0] sext_ln153_472_fu_22799_p1;
wire  signed [8:0] sext_ln153_470_fu_22796_p1;
wire   [8:0] add_ln153_567_fu_22802_p2;
wire  signed [8:0] sext_ln153_478_fu_22815_p1;
wire  signed [8:0] sext_ln153_475_fu_22812_p1;
wire   [8:0] add_ln153_573_fu_22818_p2;
wire  signed [9:0] sext_ln153_479_fu_22824_p1;
wire  signed [9:0] sext_ln153_473_fu_22808_p1;
wire   [9:0] add_ln153_574_fu_22828_p2;
wire   [9:0] add_ln153_562_fu_22790_p2;
wire    ap_continue_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_done_int_frp;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [6:0] frp_pipeline_valid_U_valid_out;
wire   [3:0] frp_pipeline_valid_U_num_valid_datasets;
wire   [239:0] pf_mac_sm_U_data_out;
wire    pf_mac_sm_U_data_out_vld;
wire    pf_mac_sm_U_pf_ready;
wire    pf_mac_sm_U_pf_done;
reg   [0:0] ap_frp_data_next_issued_cache_window_sm;
reg    ap_frp_data_issued_nxt_cache_window_sm_op104;
reg   [2:0] ap_frp_data_req_cache_window_sm;
reg   [0:0] ap_frp_data_req_cache_window_sm_op104;
reg    ap_condition_frp_roi_pvb_no_fwd_prs;
reg    ap_condition_frp_pvb_no_bkwd_prs;
reg    ap_condition_frp_pvb_pf_start;
reg    ap_frp_vld_in;
reg    frp_pipeline_valid_U_exitcond;
reg    pf_mac_sm_U_data_in_vld;
wire   [239:0] pf_mac_sm_U_frpsig_data_in;
reg    pf_all_done;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_done_reg = 1'b0;
//#0 cit_fu_2408 = 6'd0;
//#0 conv_i724_fu_2412 = 10'd0;
//#0 conv_i_111726_fu_2416 = 10'd0;
//#0 conv_i_2728_fu_2420 = 10'd0;
//#0 conv_i_3730_fu_2424 = 10'd0;
//#0 conv_i_4732_fu_2428 = 10'd0;
//#0 conv_i_5734_fu_2432 = 10'd0;
//#0 conv_i_6736_fu_2436 = 10'd0;
//#0 conv_i_7738_fu_2440 = 10'd0;
//#0 conv_i_8740_fu_2444 = 10'd0;
//#0 conv_i_9742_fu_2448 = 10'd0;
//#0 conv_i_10744_fu_2452 = 10'd0;
//#0 conv_i_11746_fu_2456 = 10'd0;
//#0 conv_i748_fu_2460 = 10'd0;
//#0 conv_i_111750_fu_2464 = 10'd0;
//#0 conv_i_2752_fu_2468 = 10'd0;
//#0 conv_i_3754_fu_2472 = 10'd0;
//#0 conv_i_4756_fu_2476 = 10'd0;
//#0 conv_i_5758_fu_2480 = 10'd0;
//#0 conv_i_6760_fu_2484 = 10'd0;
//#0 conv_i_7762_fu_2488 = 10'd0;
//#0 conv_i_8764_fu_2492 = 10'd0;
//#0 conv_i_9766_fu_2496 = 10'd0;
//#0 conv_i_10768_fu_2500 = 10'd0;
//#0 conv_i_11770_fu_2504 = 10'd0;
//#0 cot_fu_2508 = 5'd0;
//#0 indvar_flatten_fu_2512 = 11'd0;
//#0 indvar_flatten59_fu_2516 = 16'd0;
//#0 ap_frp_data_req_cache_window_sm = 3'd0;
//#0 pf_all_done = 1'b0;
end

MLP8_matmul_step2_mac_mlp_inst_m2_bias_arr_113_ROM_AUTO_1R #(
    .DataWidth( 151 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
mlp_inst_m2_bias_arr_113_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m2_bias_arr_113_address0),
    .ce0(mlp_inst_m2_bias_arr_113_ce0),
    .q0(mlp_inst_m2_bias_arr_113_q0)
);

MLP8_matmul_step2_mac_mlp_inst_m2_weight_arr_112_ROM_AUTO_1R #(
    .DataWidth( 864 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
mlp_inst_m2_weight_arr_112_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m2_weight_arr_112_address0),
    .ce0(mlp_inst_m2_weight_arr_112_ce0),
    .q0(mlp_inst_m2_weight_arr_112_q0)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U631(
    .din0(mul_res_fu_2855_p0),
    .din1(mul_res_fu_2855_p1),
    .dout(mul_res_fu_2855_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U632(
    .din0(mul_res_576_fu_2883_p0),
    .din1(mul_res_576_fu_2883_p1),
    .dout(mul_res_576_fu_2883_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U633(
    .din0(mul_res_578_fu_2945_p0),
    .din1(mul_res_578_fu_2945_p1),
    .dout(mul_res_578_fu_2945_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U634(
    .din0(mul_res_579_fu_2987_p0),
    .din1(mul_res_579_fu_2987_p1),
    .dout(mul_res_579_fu_2987_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U635(
    .din0(mul_res_581_fu_3049_p0),
    .din1(mul_res_581_fu_3049_p1),
    .dout(mul_res_581_fu_3049_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U636(
    .din0(mul_res_582_fu_3091_p0),
    .din1(mul_res_582_fu_3091_p1),
    .dout(mul_res_582_fu_3091_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U637(
    .din0(mul_res_583_fu_3133_p0),
    .din1(mul_res_583_fu_3133_p1),
    .dout(mul_res_583_fu_3133_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U638(
    .din0(mul_res_584_fu_3175_p0),
    .din1(mul_res_584_fu_3175_p1),
    .dout(mul_res_584_fu_3175_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U639(
    .din0(mul_res_585_fu_3217_p0),
    .din1(mul_res_585_fu_3217_p1),
    .dout(mul_res_585_fu_3217_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U640(
    .din0(mul_res_586_fu_3259_p0),
    .din1(mul_res_586_fu_3259_p1),
    .dout(mul_res_586_fu_3259_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U641(
    .din0(mul_res_587_fu_3301_p0),
    .din1(tmp_345_fu_3265_p4),
    .dout(mul_res_587_fu_3301_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U642(
    .din0(mul_res_588_fu_3343_p0),
    .din1(mul_res_588_fu_3343_p1),
    .dout(mul_res_588_fu_3343_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U643(
    .din0(mul_res_589_fu_3385_p0),
    .din1(mul_res_589_fu_3385_p1),
    .dout(mul_res_589_fu_3385_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U644(
    .din0(mul_res_591_fu_3447_p0),
    .din1(mul_res_591_fu_3447_p1),
    .dout(mul_res_591_fu_3447_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U645(
    .din0(mul_res_592_fu_3489_p0),
    .din1(mul_res_592_fu_3489_p1),
    .dout(mul_res_592_fu_3489_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U646(
    .din0(mul_res_593_fu_3531_p0),
    .din1(tmp_351_fu_3495_p4),
    .dout(mul_res_593_fu_3531_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U647(
    .din0(mul_res_594_fu_3573_p0),
    .din1(mul_res_594_fu_3573_p1),
    .dout(mul_res_594_fu_3573_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U648(
    .din0(mul_res_598_fu_3675_p0),
    .din1(mul_res_598_fu_3675_p1),
    .dout(mul_res_598_fu_3675_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U649(
    .din0(mul_res_599_fu_3703_p0),
    .din1(mul_res_599_fu_3703_p1),
    .dout(mul_res_599_fu_3703_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U650(
    .din0(mul_res_600_fu_3731_p0),
    .din1(mul_res_600_fu_3731_p1),
    .dout(mul_res_600_fu_3731_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U651(
    .din0(mul_res_602_fu_3769_p0),
    .din1(mul_res_602_fu_3769_p1),
    .dout(mul_res_602_fu_3769_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U652(
    .din0(mul_res_603_fu_3797_p0),
    .din1(mul_res_603_fu_3797_p1),
    .dout(mul_res_603_fu_3797_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U653(
    .din0(mul_res_605_fu_3835_p0),
    .din1(mul_res_605_fu_3835_p1),
    .dout(mul_res_605_fu_3835_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U654(
    .din0(mul_res_606_fu_3863_p0),
    .din1(mul_res_606_fu_3863_p1),
    .dout(mul_res_606_fu_3863_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U655(
    .din0(mul_res_607_fu_3891_p0),
    .din1(mul_res_607_fu_3891_p1),
    .dout(mul_res_607_fu_3891_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U656(
    .din0(mul_res_608_fu_3919_p0),
    .din1(mul_res_608_fu_3919_p1),
    .dout(mul_res_608_fu_3919_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U657(
    .din0(mul_res_609_fu_3947_p0),
    .din1(mul_res_609_fu_3947_p1),
    .dout(mul_res_609_fu_3947_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U658(
    .din0(mul_res_610_fu_3975_p0),
    .din1(mul_res_610_fu_3975_p1),
    .dout(mul_res_610_fu_3975_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U659(
    .din0(mul_res_611_fu_4003_p0),
    .din1(tmp_369_fu_3981_p4),
    .dout(mul_res_611_fu_4003_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U660(
    .din0(mul_res_612_fu_4031_p0),
    .din1(mul_res_612_fu_4031_p1),
    .dout(mul_res_612_fu_4031_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U661(
    .din0(mul_res_613_fu_4059_p0),
    .din1(mul_res_613_fu_4059_p1),
    .dout(mul_res_613_fu_4059_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U662(
    .din0(mul_res_615_fu_4097_p0),
    .din1(mul_res_615_fu_4097_p1),
    .dout(mul_res_615_fu_4097_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U663(
    .din0(mul_res_616_fu_4125_p0),
    .din1(mul_res_616_fu_4125_p1),
    .dout(mul_res_616_fu_4125_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U664(
    .din0(mul_res_617_fu_4153_p0),
    .din1(tmp_375_fu_4131_p4),
    .dout(mul_res_617_fu_4153_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U665(
    .din0(mul_res_618_fu_4181_p0),
    .din1(mul_res_618_fu_4181_p1),
    .dout(mul_res_618_fu_4181_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U666(
    .din0(mul_res_622_fu_4239_p0),
    .din1(mul_res_622_fu_4239_p1),
    .dout(mul_res_622_fu_4239_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U667(
    .din0(mul_res_623_fu_4267_p0),
    .din1(mul_res_623_fu_4267_p1),
    .dout(mul_res_623_fu_4267_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U668(
    .din0(mul_res_624_fu_4295_p0),
    .din1(mul_res_624_fu_4295_p1),
    .dout(mul_res_624_fu_4295_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U669(
    .din0(mul_res_626_fu_4333_p0),
    .din1(mul_res_626_fu_4333_p1),
    .dout(mul_res_626_fu_4333_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U670(
    .din0(mul_res_627_fu_4361_p0),
    .din1(mul_res_627_fu_4361_p1),
    .dout(mul_res_627_fu_4361_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U671(
    .din0(mul_res_629_fu_4399_p0),
    .din1(mul_res_629_fu_4399_p1),
    .dout(mul_res_629_fu_4399_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U672(
    .din0(mul_res_630_fu_4427_p0),
    .din1(mul_res_630_fu_4427_p1),
    .dout(mul_res_630_fu_4427_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U673(
    .din0(mul_res_631_fu_4455_p0),
    .din1(mul_res_631_fu_4455_p1),
    .dout(mul_res_631_fu_4455_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U674(
    .din0(mul_res_632_fu_4483_p0),
    .din1(mul_res_632_fu_4483_p1),
    .dout(mul_res_632_fu_4483_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U675(
    .din0(mul_res_633_fu_4511_p0),
    .din1(mul_res_633_fu_4511_p1),
    .dout(mul_res_633_fu_4511_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U676(
    .din0(mul_res_634_fu_4539_p0),
    .din1(mul_res_634_fu_4539_p1),
    .dout(mul_res_634_fu_4539_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U677(
    .din0(mul_res_635_fu_4567_p0),
    .din1(tmp_393_fu_4545_p4),
    .dout(mul_res_635_fu_4567_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U678(
    .din0(mul_res_636_fu_4595_p0),
    .din1(mul_res_636_fu_4595_p1),
    .dout(mul_res_636_fu_4595_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U679(
    .din0(mul_res_637_fu_4623_p0),
    .din1(mul_res_637_fu_4623_p1),
    .dout(mul_res_637_fu_4623_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U680(
    .din0(mul_res_639_fu_4661_p0),
    .din1(mul_res_639_fu_4661_p1),
    .dout(mul_res_639_fu_4661_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U681(
    .din0(mul_res_640_fu_4689_p0),
    .din1(mul_res_640_fu_4689_p1),
    .dout(mul_res_640_fu_4689_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U682(
    .din0(mul_res_641_fu_4717_p0),
    .din1(tmp_399_fu_4695_p4),
    .dout(mul_res_641_fu_4717_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U683(
    .din0(mul_res_642_fu_4745_p0),
    .din1(mul_res_642_fu_4745_p1),
    .dout(mul_res_642_fu_4745_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U684(
    .din0(mul_res_646_fu_4803_p0),
    .din1(mul_res_646_fu_4803_p1),
    .dout(mul_res_646_fu_4803_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U685(
    .din0(mul_res_647_fu_4831_p0),
    .din1(mul_res_647_fu_4831_p1),
    .dout(mul_res_647_fu_4831_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U686(
    .din0(mul_res_648_fu_4859_p0),
    .din1(mul_res_648_fu_4859_p1),
    .dout(mul_res_648_fu_4859_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U687(
    .din0(mul_res_650_fu_4897_p0),
    .din1(mul_res_650_fu_4897_p1),
    .dout(mul_res_650_fu_4897_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U688(
    .din0(mul_res_651_fu_4925_p0),
    .din1(mul_res_651_fu_4925_p1),
    .dout(mul_res_651_fu_4925_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U689(
    .din0(mul_res_653_fu_4963_p0),
    .din1(mul_res_653_fu_4963_p1),
    .dout(mul_res_653_fu_4963_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U690(
    .din0(mul_res_654_fu_4991_p0),
    .din1(mul_res_654_fu_4991_p1),
    .dout(mul_res_654_fu_4991_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U691(
    .din0(mul_res_655_fu_5019_p0),
    .din1(mul_res_655_fu_5019_p1),
    .dout(mul_res_655_fu_5019_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U692(
    .din0(mul_res_656_fu_5047_p0),
    .din1(mul_res_656_fu_5047_p1),
    .dout(mul_res_656_fu_5047_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U693(
    .din0(mul_res_657_fu_5075_p0),
    .din1(mul_res_657_fu_5075_p1),
    .dout(mul_res_657_fu_5075_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U694(
    .din0(mul_res_658_fu_5103_p0),
    .din1(mul_res_658_fu_5103_p1),
    .dout(mul_res_658_fu_5103_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U695(
    .din0(mul_res_659_fu_5131_p0),
    .din1(tmp_417_fu_5109_p4),
    .dout(mul_res_659_fu_5131_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U696(
    .din0(mul_res_660_fu_5159_p0),
    .din1(mul_res_660_fu_5159_p1),
    .dout(mul_res_660_fu_5159_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U697(
    .din0(mul_res_661_fu_5187_p0),
    .din1(mul_res_661_fu_5187_p1),
    .dout(mul_res_661_fu_5187_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U698(
    .din0(mul_res_663_fu_5225_p0),
    .din1(mul_res_663_fu_5225_p1),
    .dout(mul_res_663_fu_5225_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U699(
    .din0(mul_res_664_fu_5253_p0),
    .din1(mul_res_664_fu_5253_p1),
    .dout(mul_res_664_fu_5253_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U700(
    .din0(mul_res_665_fu_5281_p0),
    .din1(tmp_423_fu_5259_p4),
    .dout(mul_res_665_fu_5281_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U701(
    .din0(mul_res_666_fu_5309_p0),
    .din1(mul_res_666_fu_5309_p1),
    .dout(mul_res_666_fu_5309_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U702(
    .din0(mul_res_670_fu_5367_p0),
    .din1(mul_res_670_fu_5367_p1),
    .dout(mul_res_670_fu_5367_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U703(
    .din0(mul_res_671_fu_5395_p0),
    .din1(mul_res_671_fu_5395_p1),
    .dout(mul_res_671_fu_5395_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U704(
    .din0(mul_res_672_fu_5423_p0),
    .din1(mul_res_672_fu_5423_p1),
    .dout(mul_res_672_fu_5423_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U705(
    .din0(mul_res_674_fu_5461_p0),
    .din1(mul_res_674_fu_5461_p1),
    .dout(mul_res_674_fu_5461_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U706(
    .din0(mul_res_675_fu_5489_p0),
    .din1(mul_res_675_fu_5489_p1),
    .dout(mul_res_675_fu_5489_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U707(
    .din0(mul_res_677_fu_5527_p0),
    .din1(mul_res_677_fu_5527_p1),
    .dout(mul_res_677_fu_5527_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U708(
    .din0(mul_res_678_fu_5555_p0),
    .din1(mul_res_678_fu_5555_p1),
    .dout(mul_res_678_fu_5555_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U709(
    .din0(mul_res_679_fu_5583_p0),
    .din1(mul_res_679_fu_5583_p1),
    .dout(mul_res_679_fu_5583_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U710(
    .din0(mul_res_680_fu_5611_p0),
    .din1(mul_res_680_fu_5611_p1),
    .dout(mul_res_680_fu_5611_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U711(
    .din0(mul_res_681_fu_5639_p0),
    .din1(mul_res_681_fu_5639_p1),
    .dout(mul_res_681_fu_5639_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U712(
    .din0(mul_res_682_fu_5667_p0),
    .din1(mul_res_682_fu_5667_p1),
    .dout(mul_res_682_fu_5667_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U713(
    .din0(mul_res_683_fu_5695_p0),
    .din1(tmp_441_fu_5673_p4),
    .dout(mul_res_683_fu_5695_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U714(
    .din0(mul_res_684_fu_5723_p0),
    .din1(mul_res_684_fu_5723_p1),
    .dout(mul_res_684_fu_5723_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U715(
    .din0(mul_res_685_fu_5751_p0),
    .din1(mul_res_685_fu_5751_p1),
    .dout(mul_res_685_fu_5751_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U716(
    .din0(mul_res_687_fu_5789_p0),
    .din1(mul_res_687_fu_5789_p1),
    .dout(mul_res_687_fu_5789_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U717(
    .din0(mul_res_688_fu_5817_p0),
    .din1(mul_res_688_fu_5817_p1),
    .dout(mul_res_688_fu_5817_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U718(
    .din0(mul_res_689_fu_5845_p0),
    .din1(tmp_447_fu_5823_p4),
    .dout(mul_res_689_fu_5845_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U719(
    .din0(mul_res_690_fu_5873_p0),
    .din1(mul_res_690_fu_5873_p1),
    .dout(mul_res_690_fu_5873_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U720(
    .din0(mul_res_694_fu_5931_p0),
    .din1(mul_res_694_fu_5931_p1),
    .dout(mul_res_694_fu_5931_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U721(
    .din0(mul_res_695_fu_5959_p0),
    .din1(mul_res_695_fu_5959_p1),
    .dout(mul_res_695_fu_5959_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U722(
    .din0(mul_res_696_fu_5987_p0),
    .din1(mul_res_696_fu_5987_p1),
    .dout(mul_res_696_fu_5987_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U723(
    .din0(mul_res_698_fu_6025_p0),
    .din1(mul_res_698_fu_6025_p1),
    .dout(mul_res_698_fu_6025_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U724(
    .din0(mul_res_699_fu_6053_p0),
    .din1(mul_res_699_fu_6053_p1),
    .dout(mul_res_699_fu_6053_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U725(
    .din0(mul_res_701_fu_6091_p0),
    .din1(mul_res_701_fu_6091_p1),
    .dout(mul_res_701_fu_6091_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U726(
    .din0(mul_res_702_fu_6119_p0),
    .din1(mul_res_702_fu_6119_p1),
    .dout(mul_res_702_fu_6119_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U727(
    .din0(mul_res_703_fu_6147_p0),
    .din1(mul_res_703_fu_6147_p1),
    .dout(mul_res_703_fu_6147_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U728(
    .din0(mul_res_704_fu_6175_p0),
    .din1(mul_res_704_fu_6175_p1),
    .dout(mul_res_704_fu_6175_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U729(
    .din0(mul_res_705_fu_6203_p0),
    .din1(mul_res_705_fu_6203_p1),
    .dout(mul_res_705_fu_6203_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U730(
    .din0(mul_res_706_fu_6231_p0),
    .din1(mul_res_706_fu_6231_p1),
    .dout(mul_res_706_fu_6231_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U731(
    .din0(mul_res_707_fu_6259_p0),
    .din1(tmp_465_fu_6237_p4),
    .dout(mul_res_707_fu_6259_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U732(
    .din0(mul_res_708_fu_6287_p0),
    .din1(mul_res_708_fu_6287_p1),
    .dout(mul_res_708_fu_6287_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U733(
    .din0(mul_res_709_fu_6315_p0),
    .din1(mul_res_709_fu_6315_p1),
    .dout(mul_res_709_fu_6315_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U734(
    .din0(mul_res_711_fu_6353_p0),
    .din1(mul_res_711_fu_6353_p1),
    .dout(mul_res_711_fu_6353_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U735(
    .din0(mul_res_712_fu_6381_p0),
    .din1(mul_res_712_fu_6381_p1),
    .dout(mul_res_712_fu_6381_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U736(
    .din0(mul_res_713_fu_6409_p0),
    .din1(tmp_471_fu_6387_p4),
    .dout(mul_res_713_fu_6409_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U737(
    .din0(mul_res_714_fu_6437_p0),
    .din1(mul_res_714_fu_6437_p1),
    .dout(mul_res_714_fu_6437_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U738(
    .din0(mul_res_718_fu_6495_p0),
    .din1(mul_res_718_fu_6495_p1),
    .dout(mul_res_718_fu_6495_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U739(
    .din0(mul_res_719_fu_6523_p0),
    .din1(mul_res_719_fu_6523_p1),
    .dout(mul_res_719_fu_6523_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U740(
    .din0(mul_res_720_fu_6551_p0),
    .din1(mul_res_720_fu_6551_p1),
    .dout(mul_res_720_fu_6551_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U741(
    .din0(mul_res_722_fu_6589_p0),
    .din1(mul_res_722_fu_6589_p1),
    .dout(mul_res_722_fu_6589_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U742(
    .din0(mul_res_723_fu_6617_p0),
    .din1(mul_res_723_fu_6617_p1),
    .dout(mul_res_723_fu_6617_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U743(
    .din0(mul_res_725_fu_6655_p0),
    .din1(mul_res_725_fu_6655_p1),
    .dout(mul_res_725_fu_6655_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U744(
    .din0(mul_res_726_fu_6683_p0),
    .din1(mul_res_726_fu_6683_p1),
    .dout(mul_res_726_fu_6683_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U745(
    .din0(mul_res_727_fu_6711_p0),
    .din1(mul_res_727_fu_6711_p1),
    .dout(mul_res_727_fu_6711_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U746(
    .din0(mul_res_728_fu_6739_p0),
    .din1(mul_res_728_fu_6739_p1),
    .dout(mul_res_728_fu_6739_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U747(
    .din0(mul_res_729_fu_6767_p0),
    .din1(mul_res_729_fu_6767_p1),
    .dout(mul_res_729_fu_6767_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U748(
    .din0(mul_res_730_fu_6795_p0),
    .din1(mul_res_730_fu_6795_p1),
    .dout(mul_res_730_fu_6795_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U749(
    .din0(mul_res_731_fu_6823_p0),
    .din1(tmp_489_fu_6801_p4),
    .dout(mul_res_731_fu_6823_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U750(
    .din0(mul_res_732_fu_6851_p0),
    .din1(mul_res_732_fu_6851_p1),
    .dout(mul_res_732_fu_6851_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U751(
    .din0(mul_res_733_fu_6879_p0),
    .din1(mul_res_733_fu_6879_p1),
    .dout(mul_res_733_fu_6879_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U752(
    .din0(mul_res_735_fu_6917_p0),
    .din1(mul_res_735_fu_6917_p1),
    .dout(mul_res_735_fu_6917_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U753(
    .din0(mul_res_736_fu_6945_p0),
    .din1(mul_res_736_fu_6945_p1),
    .dout(mul_res_736_fu_6945_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U754(
    .din0(mul_res_737_fu_6973_p0),
    .din1(tmp_495_fu_6951_p4),
    .dout(mul_res_737_fu_6973_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U755(
    .din0(mul_res_738_fu_7001_p0),
    .din1(mul_res_738_fu_7001_p1),
    .dout(mul_res_738_fu_7001_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U756(
    .din0(mul_res_742_fu_7059_p0),
    .din1(mul_res_742_fu_7059_p1),
    .dout(mul_res_742_fu_7059_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U757(
    .din0(mul_res_743_fu_7087_p0),
    .din1(mul_res_743_fu_7087_p1),
    .dout(mul_res_743_fu_7087_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U758(
    .din0(mul_res_744_fu_7115_p0),
    .din1(mul_res_744_fu_7115_p1),
    .dout(mul_res_744_fu_7115_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U759(
    .din0(mul_res_746_fu_7153_p0),
    .din1(mul_res_746_fu_7153_p1),
    .dout(mul_res_746_fu_7153_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U760(
    .din0(mul_res_747_fu_7181_p0),
    .din1(mul_res_747_fu_7181_p1),
    .dout(mul_res_747_fu_7181_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U761(
    .din0(mul_res_749_fu_7219_p0),
    .din1(mul_res_749_fu_7219_p1),
    .dout(mul_res_749_fu_7219_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U762(
    .din0(mul_res_750_fu_7247_p0),
    .din1(mul_res_750_fu_7247_p1),
    .dout(mul_res_750_fu_7247_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U763(
    .din0(mul_res_751_fu_7275_p0),
    .din1(mul_res_751_fu_7275_p1),
    .dout(mul_res_751_fu_7275_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U764(
    .din0(mul_res_752_fu_7303_p0),
    .din1(mul_res_752_fu_7303_p1),
    .dout(mul_res_752_fu_7303_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U765(
    .din0(mul_res_753_fu_7331_p0),
    .din1(mul_res_753_fu_7331_p1),
    .dout(mul_res_753_fu_7331_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U766(
    .din0(mul_res_754_fu_7359_p0),
    .din1(mul_res_754_fu_7359_p1),
    .dout(mul_res_754_fu_7359_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U767(
    .din0(mul_res_755_fu_7387_p0),
    .din1(tmp_513_fu_7365_p4),
    .dout(mul_res_755_fu_7387_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U768(
    .din0(mul_res_756_fu_7415_p0),
    .din1(mul_res_756_fu_7415_p1),
    .dout(mul_res_756_fu_7415_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U769(
    .din0(mul_res_757_fu_7443_p0),
    .din1(mul_res_757_fu_7443_p1),
    .dout(mul_res_757_fu_7443_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U770(
    .din0(mul_res_759_fu_7481_p0),
    .din1(mul_res_759_fu_7481_p1),
    .dout(mul_res_759_fu_7481_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U771(
    .din0(mul_res_760_fu_7509_p0),
    .din1(mul_res_760_fu_7509_p1),
    .dout(mul_res_760_fu_7509_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U772(
    .din0(mul_res_761_fu_7537_p0),
    .din1(tmp_519_fu_7515_p4),
    .dout(mul_res_761_fu_7537_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U773(
    .din0(mul_res_762_fu_7565_p0),
    .din1(mul_res_762_fu_7565_p1),
    .dout(mul_res_762_fu_7565_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U774(
    .din0(mul_res_766_fu_7623_p0),
    .din1(mul_res_766_fu_7623_p1),
    .dout(mul_res_766_fu_7623_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U775(
    .din0(mul_res_767_fu_7651_p0),
    .din1(mul_res_767_fu_7651_p1),
    .dout(mul_res_767_fu_7651_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U776(
    .din0(mul_res_768_fu_7679_p0),
    .din1(mul_res_768_fu_7679_p1),
    .dout(mul_res_768_fu_7679_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U777(
    .din0(mul_res_770_fu_7717_p0),
    .din1(mul_res_770_fu_7717_p1),
    .dout(mul_res_770_fu_7717_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U778(
    .din0(mul_res_771_fu_7745_p0),
    .din1(mul_res_771_fu_7745_p1),
    .dout(mul_res_771_fu_7745_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U779(
    .din0(mul_res_773_fu_7783_p0),
    .din1(mul_res_773_fu_7783_p1),
    .dout(mul_res_773_fu_7783_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U780(
    .din0(mul_res_774_fu_7811_p0),
    .din1(mul_res_774_fu_7811_p1),
    .dout(mul_res_774_fu_7811_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U781(
    .din0(mul_res_775_fu_7839_p0),
    .din1(mul_res_775_fu_7839_p1),
    .dout(mul_res_775_fu_7839_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U782(
    .din0(mul_res_776_fu_7867_p0),
    .din1(mul_res_776_fu_7867_p1),
    .dout(mul_res_776_fu_7867_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U783(
    .din0(mul_res_777_fu_7895_p0),
    .din1(mul_res_777_fu_7895_p1),
    .dout(mul_res_777_fu_7895_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U784(
    .din0(mul_res_778_fu_7923_p0),
    .din1(mul_res_778_fu_7923_p1),
    .dout(mul_res_778_fu_7923_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U785(
    .din0(mul_res_779_fu_7951_p0),
    .din1(tmp_537_fu_7929_p4),
    .dout(mul_res_779_fu_7951_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U786(
    .din0(mul_res_780_fu_7979_p0),
    .din1(mul_res_780_fu_7979_p1),
    .dout(mul_res_780_fu_7979_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U787(
    .din0(mul_res_781_fu_8007_p0),
    .din1(mul_res_781_fu_8007_p1),
    .dout(mul_res_781_fu_8007_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U788(
    .din0(mul_res_783_fu_8045_p0),
    .din1(mul_res_783_fu_8045_p1),
    .dout(mul_res_783_fu_8045_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U789(
    .din0(mul_res_784_fu_8073_p0),
    .din1(mul_res_784_fu_8073_p1),
    .dout(mul_res_784_fu_8073_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U790(
    .din0(mul_res_785_fu_8101_p0),
    .din1(tmp_543_fu_8079_p4),
    .dout(mul_res_785_fu_8101_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U791(
    .din0(mul_res_786_fu_8129_p0),
    .din1(mul_res_786_fu_8129_p1),
    .dout(mul_res_786_fu_8129_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U792(
    .din0(mul_res_790_fu_8187_p0),
    .din1(mul_res_790_fu_8187_p1),
    .dout(mul_res_790_fu_8187_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U793(
    .din0(mul_res_791_fu_8215_p0),
    .din1(mul_res_791_fu_8215_p1),
    .dout(mul_res_791_fu_8215_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U794(
    .din0(mul_res_792_fu_8243_p0),
    .din1(mul_res_792_fu_8243_p1),
    .dout(mul_res_792_fu_8243_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U795(
    .din0(mul_res_794_fu_8281_p0),
    .din1(mul_res_794_fu_8281_p1),
    .dout(mul_res_794_fu_8281_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U796(
    .din0(mul_res_795_fu_8309_p0),
    .din1(mul_res_795_fu_8309_p1),
    .dout(mul_res_795_fu_8309_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U797(
    .din0(mul_res_797_fu_8347_p0),
    .din1(mul_res_797_fu_8347_p1),
    .dout(mul_res_797_fu_8347_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U798(
    .din0(mul_res_798_fu_8375_p0),
    .din1(mul_res_798_fu_8375_p1),
    .dout(mul_res_798_fu_8375_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U799(
    .din0(mul_res_799_fu_8403_p0),
    .din1(mul_res_799_fu_8403_p1),
    .dout(mul_res_799_fu_8403_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U800(
    .din0(mul_res_800_fu_8431_p0),
    .din1(mul_res_800_fu_8431_p1),
    .dout(mul_res_800_fu_8431_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U801(
    .din0(mul_res_801_fu_8459_p0),
    .din1(mul_res_801_fu_8459_p1),
    .dout(mul_res_801_fu_8459_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U802(
    .din0(mul_res_802_fu_8487_p0),
    .din1(mul_res_802_fu_8487_p1),
    .dout(mul_res_802_fu_8487_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U803(
    .din0(mul_res_803_fu_8515_p0),
    .din1(tmp_561_fu_8493_p4),
    .dout(mul_res_803_fu_8515_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U804(
    .din0(mul_res_804_fu_8543_p0),
    .din1(mul_res_804_fu_8543_p1),
    .dout(mul_res_804_fu_8543_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U805(
    .din0(mul_res_805_fu_8571_p0),
    .din1(mul_res_805_fu_8571_p1),
    .dout(mul_res_805_fu_8571_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U806(
    .din0(mul_res_807_fu_8609_p0),
    .din1(mul_res_807_fu_8609_p1),
    .dout(mul_res_807_fu_8609_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U807(
    .din0(mul_res_808_fu_8637_p0),
    .din1(mul_res_808_fu_8637_p1),
    .dout(mul_res_808_fu_8637_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U808(
    .din0(mul_res_809_fu_8665_p0),
    .din1(tmp_567_fu_8643_p4),
    .dout(mul_res_809_fu_8665_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U809(
    .din0(mul_res_810_fu_8693_p0),
    .din1(mul_res_810_fu_8693_p1),
    .dout(mul_res_810_fu_8693_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U810(
    .din0(mul_res_814_fu_8751_p0),
    .din1(mul_res_814_fu_8751_p1),
    .dout(mul_res_814_fu_8751_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U811(
    .din0(mul_res_815_fu_8779_p0),
    .din1(mul_res_815_fu_8779_p1),
    .dout(mul_res_815_fu_8779_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U812(
    .din0(mul_res_816_fu_8807_p0),
    .din1(mul_res_816_fu_8807_p1),
    .dout(mul_res_816_fu_8807_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U813(
    .din0(mul_res_818_fu_8845_p0),
    .din1(mul_res_818_fu_8845_p1),
    .dout(mul_res_818_fu_8845_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U814(
    .din0(mul_res_819_fu_8873_p0),
    .din1(mul_res_819_fu_8873_p1),
    .dout(mul_res_819_fu_8873_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U815(
    .din0(mul_res_821_fu_8911_p0),
    .din1(mul_res_821_fu_8911_p1),
    .dout(mul_res_821_fu_8911_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U816(
    .din0(mul_res_822_fu_8939_p0),
    .din1(mul_res_822_fu_8939_p1),
    .dout(mul_res_822_fu_8939_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U817(
    .din0(mul_res_823_fu_8967_p0),
    .din1(mul_res_823_fu_8967_p1),
    .dout(mul_res_823_fu_8967_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U818(
    .din0(mul_res_824_fu_8995_p0),
    .din1(mul_res_824_fu_8995_p1),
    .dout(mul_res_824_fu_8995_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U819(
    .din0(mul_res_825_fu_9023_p0),
    .din1(mul_res_825_fu_9023_p1),
    .dout(mul_res_825_fu_9023_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U820(
    .din0(mul_res_826_fu_9051_p0),
    .din1(mul_res_826_fu_9051_p1),
    .dout(mul_res_826_fu_9051_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U821(
    .din0(mul_res_828_fu_9089_p0),
    .din1(mul_res_828_fu_9089_p1),
    .dout(mul_res_828_fu_9089_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U822(
    .din0(mul_res_829_fu_9117_p0),
    .din1(mul_res_829_fu_9117_p1),
    .dout(mul_res_829_fu_9117_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U823(
    .din0(mul_res_831_fu_9155_p0),
    .din1(mul_res_831_fu_9155_p1),
    .dout(mul_res_831_fu_9155_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U824(
    .din0(mul_res_832_fu_9183_p0),
    .din1(mul_res_832_fu_9183_p1),
    .dout(mul_res_832_fu_9183_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U825(
    .din0(mul_res_834_fu_9221_p0),
    .din1(mul_res_834_fu_9221_p1),
    .dout(mul_res_834_fu_9221_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U826(
    .din0(mul_res_838_fu_9279_p0),
    .din1(mul_res_838_fu_9279_p1),
    .dout(mul_res_838_fu_9279_p2)
);

MLP8_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U827(
    .din0(mul_res_839_fu_9307_p0),
    .din1(mul_res_839_fu_9307_p1),
    .dout(mul_res_839_fu_9307_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U828(
    .din0(mul_res_840_fu_9335_p0),
    .din1(mul_res_840_fu_9335_p1),
    .dout(mul_res_840_fu_9335_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U829(
    .din0(mul_res_842_fu_9373_p0),
    .din1(mul_res_842_fu_9373_p1),
    .dout(mul_res_842_fu_9373_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U830(
    .din0(mul_res_843_fu_9401_p0),
    .din1(mul_res_843_fu_9401_p1),
    .dout(mul_res_843_fu_9401_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U831(
    .din0(mul_res_845_fu_9439_p0),
    .din1(mul_res_845_fu_9439_p1),
    .dout(mul_res_845_fu_9439_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U832(
    .din0(mul_res_846_fu_9467_p0),
    .din1(mul_res_846_fu_9467_p1),
    .dout(mul_res_846_fu_9467_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U833(
    .din0(mul_res_847_fu_9495_p0),
    .din1(mul_res_847_fu_9495_p1),
    .dout(mul_res_847_fu_9495_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U834(
    .din0(mul_res_848_fu_9523_p0),
    .din1(mul_res_848_fu_9523_p1),
    .dout(mul_res_848_fu_9523_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U835(
    .din0(mul_res_849_fu_9551_p0),
    .din1(mul_res_849_fu_9551_p1),
    .dout(mul_res_849_fu_9551_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U836(
    .din0(mul_res_850_fu_9579_p0),
    .din1(mul_res_850_fu_9579_p1),
    .dout(mul_res_850_fu_9579_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U837(
    .din0(mul_res_852_fu_9617_p0),
    .din1(mul_res_852_fu_9617_p1),
    .dout(mul_res_852_fu_9617_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U838(
    .din0(mul_res_853_fu_9645_p0),
    .din1(mul_res_853_fu_9645_p1),
    .dout(mul_res_853_fu_9645_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U839(
    .din0(mul_res_855_fu_9683_p0),
    .din1(mul_res_855_fu_9683_p1),
    .dout(mul_res_855_fu_9683_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U840(
    .din0(mul_res_856_fu_9711_p0),
    .din1(mul_res_856_fu_9711_p1),
    .dout(mul_res_856_fu_9711_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U841(
    .din0(mul_res_858_fu_9749_p0),
    .din1(mul_res_858_fu_9749_p1),
    .dout(mul_res_858_fu_9749_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U842(
    .din0(mul_res_862_fu_9807_p0),
    .din1(mul_res_862_fu_9807_p1),
    .dout(mul_res_862_fu_9807_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U843(
    .din0(mul_res_863_fu_9835_p0),
    .din1(mul_res_863_fu_9835_p1),
    .dout(mul_res_863_fu_9835_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U844(
    .din0(mul_res_864_fu_9863_p0),
    .din1(mul_res_864_fu_9863_p1),
    .dout(mul_res_864_fu_9863_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U845(
    .din0(mul_res_866_fu_9901_p0),
    .din1(mul_res_866_fu_9901_p1),
    .dout(mul_res_866_fu_9901_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U846(
    .din0(mul_res_867_fu_9929_p0),
    .din1(mul_res_867_fu_9929_p1),
    .dout(mul_res_867_fu_9929_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U847(
    .din0(mul_res_869_fu_9967_p0),
    .din1(mul_res_869_fu_9967_p1),
    .dout(mul_res_869_fu_9967_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U848(
    .din0(mul_res_870_fu_9995_p0),
    .din1(mul_res_870_fu_9995_p1),
    .dout(mul_res_870_fu_9995_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U849(
    .din0(mul_res_871_fu_10023_p0),
    .din1(mul_res_871_fu_10023_p1),
    .dout(mul_res_871_fu_10023_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U850(
    .din0(mul_res_872_fu_10051_p0),
    .din1(mul_res_872_fu_10051_p1),
    .dout(mul_res_872_fu_10051_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U851(
    .din0(mul_res_873_fu_10079_p0),
    .din1(mul_res_873_fu_10079_p1),
    .dout(mul_res_873_fu_10079_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U852(
    .din0(mul_res_874_fu_10107_p0),
    .din1(mul_res_874_fu_10107_p1),
    .dout(mul_res_874_fu_10107_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U853(
    .din0(mul_res_876_fu_10145_p0),
    .din1(mul_res_876_fu_10145_p1),
    .dout(mul_res_876_fu_10145_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U854(
    .din0(mul_res_877_fu_10173_p0),
    .din1(mul_res_877_fu_10173_p1),
    .dout(mul_res_877_fu_10173_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U855(
    .din0(mul_res_879_fu_10211_p0),
    .din1(mul_res_879_fu_10211_p1),
    .dout(mul_res_879_fu_10211_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U856(
    .din0(mul_res_880_fu_10239_p0),
    .din1(mul_res_880_fu_10239_p1),
    .dout(mul_res_880_fu_10239_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U857(
    .din0(mul_res_882_fu_10277_p0),
    .din1(mul_res_882_fu_10277_p1),
    .dout(mul_res_882_fu_10277_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U858(
    .din0(mul_res_886_fu_10335_p0),
    .din1(mul_res_886_fu_10335_p1),
    .dout(mul_res_886_fu_10335_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U859(
    .din0(mul_res_887_fu_10349_p0),
    .din1(mul_res_887_fu_10349_p1),
    .dout(mul_res_887_fu_10349_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U860(
    .din0(mul_res_888_fu_10363_p0),
    .din1(mul_res_888_fu_10363_p1),
    .dout(mul_res_888_fu_10363_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U861(
    .din0(mul_res_890_fu_10377_p0),
    .din1(mul_res_890_fu_10377_p1),
    .dout(mul_res_890_fu_10377_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U862(
    .din0(mul_res_891_fu_10391_p0),
    .din1(mul_res_891_fu_10391_p1),
    .dout(mul_res_891_fu_10391_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U863(
    .din0(mul_res_893_fu_10405_p0),
    .din1(mul_res_893_fu_10405_p1),
    .dout(mul_res_893_fu_10405_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U864(
    .din0(mul_res_894_fu_10419_p0),
    .din1(mul_res_894_fu_10419_p1),
    .dout(mul_res_894_fu_10419_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U865(
    .din0(mul_res_895_fu_10433_p0),
    .din1(mul_res_895_fu_10433_p1),
    .dout(mul_res_895_fu_10433_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U866(
    .din0(mul_res_896_fu_10447_p0),
    .din1(mul_res_896_fu_10447_p1),
    .dout(mul_res_896_fu_10447_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U867(
    .din0(mul_res_897_fu_10461_p0),
    .din1(mul_res_897_fu_10461_p1),
    .dout(mul_res_897_fu_10461_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U868(
    .din0(mul_res_898_fu_10475_p0),
    .din1(mul_res_898_fu_10475_p1),
    .dout(mul_res_898_fu_10475_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U869(
    .din0(mul_res_900_fu_10489_p0),
    .din1(mul_res_900_fu_10489_p1),
    .dout(mul_res_900_fu_10489_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U870(
    .din0(mul_res_901_fu_10503_p0),
    .din1(mul_res_901_fu_10503_p1),
    .dout(mul_res_901_fu_10503_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U871(
    .din0(mul_res_903_fu_10517_p0),
    .din1(mul_res_903_fu_10517_p1),
    .dout(mul_res_903_fu_10517_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U872(
    .din0(mul_res_904_fu_10531_p0),
    .din1(mul_res_904_fu_10531_p1),
    .dout(mul_res_904_fu_10531_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U873(
    .din0(mul_res_906_fu_10545_p0),
    .din1(mul_res_906_fu_10545_p1),
    .dout(mul_res_906_fu_10545_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U874(
    .din0(mul_res_910_fu_10559_p0),
    .din1(mul_res_910_fu_10559_p1),
    .dout(mul_res_910_fu_10559_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U875(
    .din0(mul_res_911_fu_10573_p0),
    .din1(mul_res_911_fu_10573_p1),
    .dout(mul_res_911_fu_10573_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U876(
    .din0(mul_res_912_fu_10587_p0),
    .din1(mul_res_912_fu_10587_p1),
    .dout(mul_res_912_fu_10587_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U877(
    .din0(mul_res_914_fu_10601_p0),
    .din1(mul_res_914_fu_10601_p1),
    .dout(mul_res_914_fu_10601_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U878(
    .din0(mul_res_915_fu_10615_p0),
    .din1(mul_res_915_fu_10615_p1),
    .dout(mul_res_915_fu_10615_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U879(
    .din0(mul_res_917_fu_10629_p0),
    .din1(mul_res_917_fu_10629_p1),
    .dout(mul_res_917_fu_10629_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U880(
    .din0(mul_res_918_fu_10643_p0),
    .din1(mul_res_918_fu_10643_p1),
    .dout(mul_res_918_fu_10643_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U881(
    .din0(mul_res_919_fu_10657_p0),
    .din1(mul_res_919_fu_10657_p1),
    .dout(mul_res_919_fu_10657_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U882(
    .din0(mul_res_920_fu_10671_p0),
    .din1(mul_res_920_fu_10671_p1),
    .dout(mul_res_920_fu_10671_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U883(
    .din0(mul_res_921_fu_10685_p0),
    .din1(mul_res_921_fu_10685_p1),
    .dout(mul_res_921_fu_10685_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U884(
    .din0(mul_res_922_fu_10699_p0),
    .din1(mul_res_922_fu_10699_p1),
    .dout(mul_res_922_fu_10699_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U885(
    .din0(mul_res_924_fu_10713_p0),
    .din1(mul_res_924_fu_10713_p1),
    .dout(mul_res_924_fu_10713_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U886(
    .din0(mul_res_925_fu_10727_p0),
    .din1(mul_res_925_fu_10727_p1),
    .dout(mul_res_925_fu_10727_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U887(
    .din0(mul_res_927_fu_10741_p0),
    .din1(mul_res_927_fu_10741_p1),
    .dout(mul_res_927_fu_10741_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U888(
    .din0(mul_res_928_fu_10755_p0),
    .din1(mul_res_928_fu_10755_p1),
    .dout(mul_res_928_fu_10755_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U889(
    .din0(mul_res_930_fu_10769_p0),
    .din1(mul_res_930_fu_10769_p1),
    .dout(mul_res_930_fu_10769_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U890(
    .din0(mul_res_934_fu_10783_p0),
    .din1(mul_res_934_fu_10783_p1),
    .dout(mul_res_934_fu_10783_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U891(
    .din0(mul_res_935_fu_10797_p0),
    .din1(mul_res_935_fu_10797_p1),
    .dout(mul_res_935_fu_10797_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U892(
    .din0(mul_res_936_fu_10811_p0),
    .din1(mul_res_936_fu_10811_p1),
    .dout(mul_res_936_fu_10811_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U893(
    .din0(mul_res_938_fu_10825_p0),
    .din1(mul_res_938_fu_10825_p1),
    .dout(mul_res_938_fu_10825_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U894(
    .din0(mul_res_939_fu_10839_p0),
    .din1(mul_res_939_fu_10839_p1),
    .dout(mul_res_939_fu_10839_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U895(
    .din0(mul_res_941_fu_10853_p0),
    .din1(mul_res_941_fu_10853_p1),
    .dout(mul_res_941_fu_10853_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U896(
    .din0(mul_res_942_fu_10867_p0),
    .din1(mul_res_942_fu_10867_p1),
    .dout(mul_res_942_fu_10867_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U897(
    .din0(mul_res_943_fu_10881_p0),
    .din1(mul_res_943_fu_10881_p1),
    .dout(mul_res_943_fu_10881_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U898(
    .din0(mul_res_944_fu_10895_p0),
    .din1(mul_res_944_fu_10895_p1),
    .dout(mul_res_944_fu_10895_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U899(
    .din0(mul_res_945_fu_10909_p0),
    .din1(mul_res_945_fu_10909_p1),
    .dout(mul_res_945_fu_10909_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U900(
    .din0(mul_res_946_fu_10923_p0),
    .din1(mul_res_946_fu_10923_p1),
    .dout(mul_res_946_fu_10923_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U901(
    .din0(mul_res_948_fu_10937_p0),
    .din1(mul_res_948_fu_10937_p1),
    .dout(mul_res_948_fu_10937_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U902(
    .din0(mul_res_949_fu_10951_p0),
    .din1(mul_res_949_fu_10951_p1),
    .dout(mul_res_949_fu_10951_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U903(
    .din0(mul_res_951_fu_10965_p0),
    .din1(mul_res_951_fu_10965_p1),
    .dout(mul_res_951_fu_10965_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U904(
    .din0(mul_res_952_fu_10979_p0),
    .din1(mul_res_952_fu_10979_p1),
    .dout(mul_res_952_fu_10979_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U905(
    .din0(mul_res_954_fu_10993_p0),
    .din1(mul_res_954_fu_10993_p1),
    .dout(mul_res_954_fu_10993_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U906(
    .din0(mul_res_958_fu_11007_p0),
    .din1(mul_res_958_fu_11007_p1),
    .dout(mul_res_958_fu_11007_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U907(
    .din0(mul_res_959_fu_11021_p0),
    .din1(mul_res_959_fu_11021_p1),
    .dout(mul_res_959_fu_11021_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U908(
    .din0(mul_res_960_fu_11035_p0),
    .din1(mul_res_960_fu_11035_p1),
    .dout(mul_res_960_fu_11035_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U909(
    .din0(mul_res_962_fu_11049_p0),
    .din1(mul_res_962_fu_11049_p1),
    .dout(mul_res_962_fu_11049_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U910(
    .din0(mul_res_963_fu_11063_p0),
    .din1(mul_res_963_fu_11063_p1),
    .dout(mul_res_963_fu_11063_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U911(
    .din0(mul_res_965_fu_11077_p0),
    .din1(mul_res_965_fu_11077_p1),
    .dout(mul_res_965_fu_11077_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U912(
    .din0(mul_res_966_fu_11091_p0),
    .din1(mul_res_966_fu_11091_p1),
    .dout(mul_res_966_fu_11091_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U913(
    .din0(mul_res_967_fu_11105_p0),
    .din1(mul_res_967_fu_11105_p1),
    .dout(mul_res_967_fu_11105_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U914(
    .din0(mul_res_968_fu_11119_p0),
    .din1(mul_res_968_fu_11119_p1),
    .dout(mul_res_968_fu_11119_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U915(
    .din0(mul_res_969_fu_11133_p0),
    .din1(mul_res_969_fu_11133_p1),
    .dout(mul_res_969_fu_11133_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U916(
    .din0(mul_res_970_fu_11147_p0),
    .din1(mul_res_970_fu_11147_p1),
    .dout(mul_res_970_fu_11147_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U917(
    .din0(mul_res_972_fu_11161_p0),
    .din1(mul_res_972_fu_11161_p1),
    .dout(mul_res_972_fu_11161_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U918(
    .din0(mul_res_973_fu_11175_p0),
    .din1(mul_res_973_fu_11175_p1),
    .dout(mul_res_973_fu_11175_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U919(
    .din0(mul_res_975_fu_11189_p0),
    .din1(mul_res_975_fu_11189_p1),
    .dout(mul_res_975_fu_11189_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U920(
    .din0(mul_res_976_fu_11203_p0),
    .din1(mul_res_976_fu_11203_p1),
    .dout(mul_res_976_fu_11203_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U921(
    .din0(mul_res_978_fu_11217_p0),
    .din1(mul_res_978_fu_11217_p1),
    .dout(mul_res_978_fu_11217_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U922(
    .din0(mul_res_982_fu_11231_p0),
    .din1(mul_res_982_fu_11231_p1),
    .dout(mul_res_982_fu_11231_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U923(
    .din0(mul_res_983_fu_11245_p0),
    .din1(mul_res_983_fu_11245_p1),
    .dout(mul_res_983_fu_11245_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U924(
    .din0(mul_res_984_fu_11259_p0),
    .din1(mul_res_984_fu_11259_p1),
    .dout(mul_res_984_fu_11259_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U925(
    .din0(mul_res_986_fu_11273_p0),
    .din1(mul_res_986_fu_11273_p1),
    .dout(mul_res_986_fu_11273_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U926(
    .din0(mul_res_987_fu_11287_p0),
    .din1(mul_res_987_fu_11287_p1),
    .dout(mul_res_987_fu_11287_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U927(
    .din0(mul_res_989_fu_11301_p0),
    .din1(mul_res_989_fu_11301_p1),
    .dout(mul_res_989_fu_11301_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U928(
    .din0(mul_res_990_fu_11315_p0),
    .din1(mul_res_990_fu_11315_p1),
    .dout(mul_res_990_fu_11315_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U929(
    .din0(mul_res_991_fu_11329_p0),
    .din1(mul_res_991_fu_11329_p1),
    .dout(mul_res_991_fu_11329_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U930(
    .din0(mul_res_992_fu_11343_p0),
    .din1(mul_res_992_fu_11343_p1),
    .dout(mul_res_992_fu_11343_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U931(
    .din0(mul_res_993_fu_11357_p0),
    .din1(mul_res_993_fu_11357_p1),
    .dout(mul_res_993_fu_11357_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U932(
    .din0(mul_res_994_fu_11371_p0),
    .din1(mul_res_994_fu_11371_p1),
    .dout(mul_res_994_fu_11371_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U933(
    .din0(mul_res_996_fu_11385_p0),
    .din1(mul_res_996_fu_11385_p1),
    .dout(mul_res_996_fu_11385_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U934(
    .din0(mul_res_997_fu_11399_p0),
    .din1(mul_res_997_fu_11399_p1),
    .dout(mul_res_997_fu_11399_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U935(
    .din0(mul_res_999_fu_11413_p0),
    .din1(mul_res_999_fu_11413_p1),
    .dout(mul_res_999_fu_11413_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U936(
    .din0(mul_res_1000_fu_11427_p0),
    .din1(mul_res_1000_fu_11427_p1),
    .dout(mul_res_1000_fu_11427_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U937(
    .din0(mul_res_1002_fu_11441_p0),
    .din1(mul_res_1002_fu_11441_p1),
    .dout(mul_res_1002_fu_11441_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U938(
    .din0(mul_res_1006_fu_11455_p0),
    .din1(mul_res_1006_fu_11455_p1),
    .dout(mul_res_1006_fu_11455_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U939(
    .din0(mul_res_1007_fu_11469_p0),
    .din1(mul_res_1007_fu_11469_p1),
    .dout(mul_res_1007_fu_11469_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U940(
    .din0(mul_res_1008_fu_11483_p0),
    .din1(mul_res_1008_fu_11483_p1),
    .dout(mul_res_1008_fu_11483_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U941(
    .din0(mul_res_1010_fu_11497_p0),
    .din1(mul_res_1010_fu_11497_p1),
    .dout(mul_res_1010_fu_11497_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U942(
    .din0(mul_res_1011_fu_11511_p0),
    .din1(mul_res_1011_fu_11511_p1),
    .dout(mul_res_1011_fu_11511_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U943(
    .din0(mul_res_1013_fu_11525_p0),
    .din1(mul_res_1013_fu_11525_p1),
    .dout(mul_res_1013_fu_11525_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U944(
    .din0(mul_res_1014_fu_11539_p0),
    .din1(mul_res_1014_fu_11539_p1),
    .dout(mul_res_1014_fu_11539_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U945(
    .din0(mul_res_1015_fu_11553_p0),
    .din1(mul_res_1015_fu_11553_p1),
    .dout(mul_res_1015_fu_11553_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U946(
    .din0(mul_res_1016_fu_11567_p0),
    .din1(mul_res_1016_fu_11567_p1),
    .dout(mul_res_1016_fu_11567_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U947(
    .din0(mul_res_1017_fu_11581_p0),
    .din1(mul_res_1017_fu_11581_p1),
    .dout(mul_res_1017_fu_11581_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U948(
    .din0(mul_res_1018_fu_11595_p0),
    .din1(mul_res_1018_fu_11595_p1),
    .dout(mul_res_1018_fu_11595_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U949(
    .din0(mul_res_1020_fu_11609_p0),
    .din1(mul_res_1020_fu_11609_p1),
    .dout(mul_res_1020_fu_11609_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U950(
    .din0(mul_res_1021_fu_11623_p0),
    .din1(mul_res_1021_fu_11623_p1),
    .dout(mul_res_1021_fu_11623_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U951(
    .din0(mul_res_1023_fu_11637_p0),
    .din1(mul_res_1023_fu_11637_p1),
    .dout(mul_res_1023_fu_11637_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U952(
    .din0(mul_res_1024_fu_11651_p0),
    .din1(mul_res_1024_fu_11651_p1),
    .dout(mul_res_1024_fu_11651_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U953(
    .din0(mul_res_1026_fu_11665_p0),
    .din1(mul_res_1026_fu_11665_p1),
    .dout(mul_res_1026_fu_11665_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U954(
    .din0(mul_res_1030_fu_11679_p0),
    .din1(mul_res_1030_fu_11679_p1),
    .dout(mul_res_1030_fu_11679_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U955(
    .din0(mul_res_1031_fu_11693_p0),
    .din1(mul_res_1031_fu_11693_p1),
    .dout(mul_res_1031_fu_11693_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U956(
    .din0(mul_res_1032_fu_11707_p0),
    .din1(mul_res_1032_fu_11707_p1),
    .dout(mul_res_1032_fu_11707_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U957(
    .din0(mul_res_1034_fu_11721_p0),
    .din1(mul_res_1034_fu_11721_p1),
    .dout(mul_res_1034_fu_11721_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U958(
    .din0(mul_res_1035_fu_11735_p0),
    .din1(mul_res_1035_fu_11735_p1),
    .dout(mul_res_1035_fu_11735_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U959(
    .din0(mul_res_1037_fu_11749_p0),
    .din1(mul_res_1037_fu_11749_p1),
    .dout(mul_res_1037_fu_11749_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U960(
    .din0(mul_res_1038_fu_11763_p0),
    .din1(mul_res_1038_fu_11763_p1),
    .dout(mul_res_1038_fu_11763_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U961(
    .din0(mul_res_1039_fu_11777_p0),
    .din1(mul_res_1039_fu_11777_p1),
    .dout(mul_res_1039_fu_11777_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U962(
    .din0(mul_res_1040_fu_11791_p0),
    .din1(mul_res_1040_fu_11791_p1),
    .dout(mul_res_1040_fu_11791_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U963(
    .din0(mul_res_1041_fu_11805_p0),
    .din1(mul_res_1041_fu_11805_p1),
    .dout(mul_res_1041_fu_11805_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U964(
    .din0(mul_res_1042_fu_11819_p0),
    .din1(mul_res_1042_fu_11819_p1),
    .dout(mul_res_1042_fu_11819_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U965(
    .din0(mul_res_1044_fu_11833_p0),
    .din1(mul_res_1044_fu_11833_p1),
    .dout(mul_res_1044_fu_11833_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U966(
    .din0(mul_res_1045_fu_11847_p0),
    .din1(mul_res_1045_fu_11847_p1),
    .dout(mul_res_1045_fu_11847_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U967(
    .din0(mul_res_1047_fu_11861_p0),
    .din1(mul_res_1047_fu_11861_p1),
    .dout(mul_res_1047_fu_11861_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U968(
    .din0(mul_res_1048_fu_11875_p0),
    .din1(mul_res_1048_fu_11875_p1),
    .dout(mul_res_1048_fu_11875_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U969(
    .din0(mul_res_1050_fu_11889_p0),
    .din1(mul_res_1050_fu_11889_p1),
    .dout(mul_res_1050_fu_11889_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U970(
    .din0(mul_res_1054_fu_11903_p0),
    .din1(mul_res_1054_fu_11903_p1),
    .dout(mul_res_1054_fu_11903_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U971(
    .din0(mul_res_1055_fu_11917_p0),
    .din1(mul_res_1055_fu_11917_p1),
    .dout(mul_res_1055_fu_11917_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U972(
    .din0(mul_res_1056_fu_11931_p0),
    .din1(mul_res_1056_fu_11931_p1),
    .dout(mul_res_1056_fu_11931_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U973(
    .din0(mul_res_1058_fu_11945_p0),
    .din1(mul_res_1058_fu_11945_p1),
    .dout(mul_res_1058_fu_11945_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U974(
    .din0(mul_res_1059_fu_11959_p0),
    .din1(mul_res_1059_fu_11959_p1),
    .dout(mul_res_1059_fu_11959_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U975(
    .din0(mul_res_1061_fu_11973_p0),
    .din1(mul_res_1061_fu_11973_p1),
    .dout(mul_res_1061_fu_11973_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U976(
    .din0(mul_res_1062_fu_11987_p0),
    .din1(mul_res_1062_fu_11987_p1),
    .dout(mul_res_1062_fu_11987_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U977(
    .din0(mul_res_1063_fu_12001_p0),
    .din1(mul_res_1063_fu_12001_p1),
    .dout(mul_res_1063_fu_12001_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U978(
    .din0(mul_res_1064_fu_12015_p0),
    .din1(mul_res_1064_fu_12015_p1),
    .dout(mul_res_1064_fu_12015_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U979(
    .din0(mul_res_1065_fu_12029_p0),
    .din1(mul_res_1065_fu_12029_p1),
    .dout(mul_res_1065_fu_12029_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U980(
    .din0(mul_res_1066_fu_12043_p0),
    .din1(mul_res_1066_fu_12043_p1),
    .dout(mul_res_1066_fu_12043_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U981(
    .din0(mul_res_1068_fu_12057_p0),
    .din1(mul_res_1068_fu_12057_p1),
    .dout(mul_res_1068_fu_12057_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U982(
    .din0(mul_res_1069_fu_12071_p0),
    .din1(mul_res_1069_fu_12071_p1),
    .dout(mul_res_1069_fu_12071_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U983(
    .din0(mul_res_1071_fu_12085_p0),
    .din1(mul_res_1071_fu_12085_p1),
    .dout(mul_res_1071_fu_12085_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U984(
    .din0(mul_res_1072_fu_12099_p0),
    .din1(mul_res_1072_fu_12099_p1),
    .dout(mul_res_1072_fu_12099_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U985(
    .din0(mul_res_1074_fu_12113_p0),
    .din1(mul_res_1074_fu_12113_p1),
    .dout(mul_res_1074_fu_12113_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U986(
    .din0(mul_res_1078_fu_12127_p0),
    .din1(mul_res_1078_fu_12127_p1),
    .dout(mul_res_1078_fu_12127_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U987(
    .din0(mul_res_1079_fu_12141_p0),
    .din1(mul_res_1079_fu_12141_p1),
    .dout(mul_res_1079_fu_12141_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U988(
    .din0(mul_res_1080_fu_12155_p0),
    .din1(mul_res_1080_fu_12155_p1),
    .dout(mul_res_1080_fu_12155_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U989(
    .din0(mul_res_1082_fu_12169_p0),
    .din1(mul_res_1082_fu_12169_p1),
    .dout(mul_res_1082_fu_12169_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U990(
    .din0(mul_res_1083_fu_12183_p0),
    .din1(mul_res_1083_fu_12183_p1),
    .dout(mul_res_1083_fu_12183_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U991(
    .din0(mul_res_1085_fu_12197_p0),
    .din1(mul_res_1085_fu_12197_p1),
    .dout(mul_res_1085_fu_12197_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U992(
    .din0(mul_res_1086_fu_12211_p0),
    .din1(mul_res_1086_fu_12211_p1),
    .dout(mul_res_1086_fu_12211_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U993(
    .din0(mul_res_1087_fu_12225_p0),
    .din1(mul_res_1087_fu_12225_p1),
    .dout(mul_res_1087_fu_12225_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U994(
    .din0(mul_res_1088_fu_12239_p0),
    .din1(mul_res_1088_fu_12239_p1),
    .dout(mul_res_1088_fu_12239_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U995(
    .din0(mul_res_1089_fu_12253_p0),
    .din1(mul_res_1089_fu_12253_p1),
    .dout(mul_res_1089_fu_12253_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U996(
    .din0(mul_res_1090_fu_12267_p0),
    .din1(mul_res_1090_fu_12267_p1),
    .dout(mul_res_1090_fu_12267_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U997(
    .din0(mul_res_1092_fu_12281_p0),
    .din1(mul_res_1092_fu_12281_p1),
    .dout(mul_res_1092_fu_12281_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U998(
    .din0(mul_res_1093_fu_12295_p0),
    .din1(mul_res_1093_fu_12295_p1),
    .dout(mul_res_1093_fu_12295_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U999(
    .din0(mul_res_1095_fu_12309_p0),
    .din1(mul_res_1095_fu_12309_p1),
    .dout(mul_res_1095_fu_12309_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1000(
    .din0(mul_res_1096_fu_12323_p0),
    .din1(mul_res_1096_fu_12323_p1),
    .dout(mul_res_1096_fu_12323_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1001(
    .din0(mul_res_1098_fu_12337_p0),
    .din1(mul_res_1098_fu_12337_p1),
    .dout(mul_res_1098_fu_12337_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1002(
    .din0(mul_res_1102_fu_12351_p0),
    .din1(mul_res_1102_fu_12351_p1),
    .dout(mul_res_1102_fu_12351_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1003(
    .din0(mul_res_1103_fu_12365_p0),
    .din1(mul_res_1103_fu_12365_p1),
    .dout(mul_res_1103_fu_12365_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1004(
    .din0(mul_res_1104_fu_12379_p0),
    .din1(mul_res_1104_fu_12379_p1),
    .dout(mul_res_1104_fu_12379_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1005(
    .din0(mul_res_1106_fu_12393_p0),
    .din1(mul_res_1106_fu_12393_p1),
    .dout(mul_res_1106_fu_12393_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1006(
    .din0(mul_res_1107_fu_12407_p0),
    .din1(mul_res_1107_fu_12407_p1),
    .dout(mul_res_1107_fu_12407_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1007(
    .din0(mul_res_1109_fu_12421_p0),
    .din1(mul_res_1109_fu_12421_p1),
    .dout(mul_res_1109_fu_12421_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1008(
    .din0(mul_res_1110_fu_12435_p0),
    .din1(mul_res_1110_fu_12435_p1),
    .dout(mul_res_1110_fu_12435_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1009(
    .din0(mul_res_1111_fu_12449_p0),
    .din1(mul_res_1111_fu_12449_p1),
    .dout(mul_res_1111_fu_12449_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1010(
    .din0(mul_res_1112_fu_12463_p0),
    .din1(mul_res_1112_fu_12463_p1),
    .dout(mul_res_1112_fu_12463_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1011(
    .din0(mul_res_1113_fu_12477_p0),
    .din1(mul_res_1113_fu_12477_p1),
    .dout(mul_res_1113_fu_12477_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1012(
    .din0(mul_res_1114_fu_12491_p0),
    .din1(mul_res_1114_fu_12491_p1),
    .dout(mul_res_1114_fu_12491_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1013(
    .din0(mul_res_1116_fu_12505_p0),
    .din1(mul_res_1116_fu_12505_p1),
    .dout(mul_res_1116_fu_12505_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1014(
    .din0(mul_res_1117_fu_12519_p0),
    .din1(mul_res_1117_fu_12519_p1),
    .dout(mul_res_1117_fu_12519_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1015(
    .din0(mul_res_1119_fu_12533_p0),
    .din1(mul_res_1119_fu_12533_p1),
    .dout(mul_res_1119_fu_12533_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1016(
    .din0(mul_res_1120_fu_12547_p0),
    .din1(mul_res_1120_fu_12547_p1),
    .dout(mul_res_1120_fu_12547_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1017(
    .din0(mul_res_1122_fu_12561_p0),
    .din1(mul_res_1122_fu_12561_p1),
    .dout(mul_res_1122_fu_12561_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1018(
    .din0(mul_res_1126_fu_12575_p0),
    .din1(mul_res_1126_fu_12575_p1),
    .dout(mul_res_1126_fu_12575_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1019(
    .din0(mul_res_1127_fu_12589_p0),
    .din1(mul_res_1127_fu_12589_p1),
    .dout(mul_res_1127_fu_12589_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1020(
    .din0(mul_res_1128_fu_12603_p0),
    .din1(mul_res_1128_fu_12603_p1),
    .dout(mul_res_1128_fu_12603_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1021(
    .din0(mul_res_1130_fu_12617_p0),
    .din1(mul_res_1130_fu_12617_p1),
    .dout(mul_res_1130_fu_12617_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1022(
    .din0(mul_res_1131_fu_12631_p0),
    .din1(mul_res_1131_fu_12631_p1),
    .dout(mul_res_1131_fu_12631_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1023(
    .din0(mul_res_1133_fu_12645_p0),
    .din1(mul_res_1133_fu_12645_p1),
    .dout(mul_res_1133_fu_12645_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1024(
    .din0(mul_res_1134_fu_12659_p0),
    .din1(mul_res_1134_fu_12659_p1),
    .dout(mul_res_1134_fu_12659_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1025(
    .din0(mul_res_1135_fu_12673_p0),
    .din1(mul_res_1135_fu_12673_p1),
    .dout(mul_res_1135_fu_12673_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1026(
    .din0(mul_res_1136_fu_12687_p0),
    .din1(mul_res_1136_fu_12687_p1),
    .dout(mul_res_1136_fu_12687_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1027(
    .din0(mul_res_1137_fu_12701_p0),
    .din1(mul_res_1137_fu_12701_p1),
    .dout(mul_res_1137_fu_12701_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1028(
    .din0(mul_res_1138_fu_12715_p0),
    .din1(mul_res_1138_fu_12715_p1),
    .dout(mul_res_1138_fu_12715_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1029(
    .din0(mul_res_1140_fu_12729_p0),
    .din1(mul_res_1140_fu_12729_p1),
    .dout(mul_res_1140_fu_12729_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1030(
    .din0(mul_res_1141_fu_12743_p0),
    .din1(mul_res_1141_fu_12743_p1),
    .dout(mul_res_1141_fu_12743_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1031(
    .din0(mul_res_1143_fu_12757_p0),
    .din1(mul_res_1143_fu_12757_p1),
    .dout(mul_res_1143_fu_12757_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1032(
    .din0(mul_res_1144_fu_12771_p0),
    .din1(mul_res_1144_fu_12771_p1),
    .dout(mul_res_1144_fu_12771_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1033(
    .din0(mul_res_1146_fu_12785_p0),
    .din1(mul_res_1146_fu_12785_p1),
    .dout(mul_res_1146_fu_12785_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1034(
    .din0(mul_res_1150_fu_12799_p0),
    .din1(mul_res_1150_fu_12799_p1),
    .dout(mul_res_1150_fu_12799_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1035(
    .din0(mul_res_577_fu_12939_p0),
    .din1(mul_res_577_fu_12939_p1),
    .dout(mul_res_577_fu_12939_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1036(
    .din0(mul_res_580_fu_12969_p0),
    .din1(mul_res_580_fu_12969_p1),
    .dout(mul_res_580_fu_12969_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1037(
    .din0(mul_res_590_fu_13020_p0),
    .din1(mul_res_590_fu_13020_p1),
    .dout(mul_res_590_fu_13020_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1038(
    .din0(mul_res_595_fu_13056_p0),
    .din1(mul_res_595_fu_13056_p1),
    .dout(mul_res_595_fu_13056_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1039(
    .din0(mul_res_596_fu_13080_p0),
    .din1(mul_res_596_fu_13080_p1),
    .dout(mul_res_596_fu_13080_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1040(
    .din0(mul_res_597_fu_13104_p0),
    .din1(mul_res_597_fu_13104_p1),
    .dout(mul_res_597_fu_13104_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1041(
    .din0(mul_res_601_fu_13276_p0),
    .din1(mul_res_601_fu_13276_p1),
    .dout(mul_res_601_fu_13276_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1042(
    .din0(mul_res_604_fu_13303_p0),
    .din1(mul_res_604_fu_13303_p1),
    .dout(mul_res_604_fu_13303_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1043(
    .din0(mul_res_614_fu_13351_p0),
    .din1(mul_res_614_fu_13351_p1),
    .dout(mul_res_614_fu_13351_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1044(
    .din0(mul_res_619_fu_13384_p0),
    .din1(mul_res_619_fu_13384_p1),
    .dout(mul_res_619_fu_13384_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1045(
    .din0(mul_res_620_fu_13405_p0),
    .din1(mul_res_620_fu_13405_p1),
    .dout(mul_res_620_fu_13405_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1046(
    .din0(mul_res_621_fu_13426_p0),
    .din1(mul_res_621_fu_13426_p1),
    .dout(mul_res_621_fu_13426_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1047(
    .din0(mul_res_625_fu_13598_p0),
    .din1(mul_res_625_fu_13598_p1),
    .dout(mul_res_625_fu_13598_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1048(
    .din0(mul_res_628_fu_13625_p0),
    .din1(mul_res_628_fu_13625_p1),
    .dout(mul_res_628_fu_13625_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1049(
    .din0(mul_res_638_fu_13673_p0),
    .din1(mul_res_638_fu_13673_p1),
    .dout(mul_res_638_fu_13673_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1050(
    .din0(mul_res_643_fu_13706_p0),
    .din1(mul_res_643_fu_13706_p1),
    .dout(mul_res_643_fu_13706_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1051(
    .din0(mul_res_644_fu_13727_p0),
    .din1(mul_res_644_fu_13727_p1),
    .dout(mul_res_644_fu_13727_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1052(
    .din0(mul_res_645_fu_13748_p0),
    .din1(mul_res_645_fu_13748_p1),
    .dout(mul_res_645_fu_13748_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1053(
    .din0(mul_res_649_fu_13920_p0),
    .din1(mul_res_649_fu_13920_p1),
    .dout(mul_res_649_fu_13920_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1054(
    .din0(mul_res_652_fu_13947_p0),
    .din1(mul_res_652_fu_13947_p1),
    .dout(mul_res_652_fu_13947_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1055(
    .din0(mul_res_662_fu_13995_p0),
    .din1(mul_res_662_fu_13995_p1),
    .dout(mul_res_662_fu_13995_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1056(
    .din0(mul_res_667_fu_14028_p0),
    .din1(mul_res_667_fu_14028_p1),
    .dout(mul_res_667_fu_14028_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1057(
    .din0(mul_res_668_fu_14049_p0),
    .din1(mul_res_668_fu_14049_p1),
    .dout(mul_res_668_fu_14049_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1058(
    .din0(mul_res_669_fu_14070_p0),
    .din1(mul_res_669_fu_14070_p1),
    .dout(mul_res_669_fu_14070_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1059(
    .din0(mul_res_673_fu_14242_p0),
    .din1(mul_res_673_fu_14242_p1),
    .dout(mul_res_673_fu_14242_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1060(
    .din0(mul_res_676_fu_14269_p0),
    .din1(mul_res_676_fu_14269_p1),
    .dout(mul_res_676_fu_14269_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1061(
    .din0(mul_res_686_fu_14317_p0),
    .din1(mul_res_686_fu_14317_p1),
    .dout(mul_res_686_fu_14317_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1062(
    .din0(mul_res_691_fu_14350_p0),
    .din1(mul_res_691_fu_14350_p1),
    .dout(mul_res_691_fu_14350_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1063(
    .din0(mul_res_692_fu_14371_p0),
    .din1(mul_res_692_fu_14371_p1),
    .dout(mul_res_692_fu_14371_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1064(
    .din0(mul_res_693_fu_14392_p0),
    .din1(mul_res_693_fu_14392_p1),
    .dout(mul_res_693_fu_14392_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1065(
    .din0(mul_res_697_fu_14564_p0),
    .din1(mul_res_697_fu_14564_p1),
    .dout(mul_res_697_fu_14564_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1066(
    .din0(mul_res_700_fu_14591_p0),
    .din1(mul_res_700_fu_14591_p1),
    .dout(mul_res_700_fu_14591_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1067(
    .din0(mul_res_710_fu_14639_p0),
    .din1(mul_res_710_fu_14639_p1),
    .dout(mul_res_710_fu_14639_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1068(
    .din0(mul_res_715_fu_14672_p0),
    .din1(mul_res_715_fu_14672_p1),
    .dout(mul_res_715_fu_14672_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1069(
    .din0(mul_res_716_fu_14693_p0),
    .din1(mul_res_716_fu_14693_p1),
    .dout(mul_res_716_fu_14693_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1070(
    .din0(mul_res_717_fu_14714_p0),
    .din1(mul_res_717_fu_14714_p1),
    .dout(mul_res_717_fu_14714_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1071(
    .din0(mul_res_721_fu_14886_p0),
    .din1(mul_res_721_fu_14886_p1),
    .dout(mul_res_721_fu_14886_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1072(
    .din0(mul_res_724_fu_14913_p0),
    .din1(mul_res_724_fu_14913_p1),
    .dout(mul_res_724_fu_14913_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1073(
    .din0(mul_res_734_fu_14961_p0),
    .din1(mul_res_734_fu_14961_p1),
    .dout(mul_res_734_fu_14961_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1074(
    .din0(mul_res_739_fu_14994_p0),
    .din1(mul_res_739_fu_14994_p1),
    .dout(mul_res_739_fu_14994_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1075(
    .din0(mul_res_740_fu_15015_p0),
    .din1(mul_res_740_fu_15015_p1),
    .dout(mul_res_740_fu_15015_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1076(
    .din0(mul_res_741_fu_15036_p0),
    .din1(mul_res_741_fu_15036_p1),
    .dout(mul_res_741_fu_15036_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1077(
    .din0(mul_res_745_fu_15208_p0),
    .din1(mul_res_745_fu_15208_p1),
    .dout(mul_res_745_fu_15208_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1078(
    .din0(mul_res_748_fu_15235_p0),
    .din1(mul_res_748_fu_15235_p1),
    .dout(mul_res_748_fu_15235_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1079(
    .din0(mul_res_758_fu_15283_p0),
    .din1(mul_res_758_fu_15283_p1),
    .dout(mul_res_758_fu_15283_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1080(
    .din0(mul_res_763_fu_15316_p0),
    .din1(mul_res_763_fu_15316_p1),
    .dout(mul_res_763_fu_15316_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1081(
    .din0(mul_res_764_fu_15337_p0),
    .din1(mul_res_764_fu_15337_p1),
    .dout(mul_res_764_fu_15337_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1082(
    .din0(mul_res_765_fu_15358_p0),
    .din1(mul_res_765_fu_15358_p1),
    .dout(mul_res_765_fu_15358_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1083(
    .din0(mul_res_769_fu_15530_p0),
    .din1(mul_res_769_fu_15530_p1),
    .dout(mul_res_769_fu_15530_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1084(
    .din0(mul_res_772_fu_15557_p0),
    .din1(mul_res_772_fu_15557_p1),
    .dout(mul_res_772_fu_15557_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1085(
    .din0(mul_res_782_fu_15605_p0),
    .din1(mul_res_782_fu_15605_p1),
    .dout(mul_res_782_fu_15605_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1086(
    .din0(mul_res_787_fu_15638_p0),
    .din1(mul_res_787_fu_15638_p1),
    .dout(mul_res_787_fu_15638_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1087(
    .din0(mul_res_788_fu_15659_p0),
    .din1(mul_res_788_fu_15659_p1),
    .dout(mul_res_788_fu_15659_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1088(
    .din0(mul_res_789_fu_15680_p0),
    .din1(mul_res_789_fu_15680_p1),
    .dout(mul_res_789_fu_15680_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1089(
    .din0(mul_res_793_fu_15852_p0),
    .din1(mul_res_793_fu_15852_p1),
    .dout(mul_res_793_fu_15852_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1090(
    .din0(mul_res_796_fu_15879_p0),
    .din1(mul_res_796_fu_15879_p1),
    .dout(mul_res_796_fu_15879_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1091(
    .din0(mul_res_806_fu_15927_p0),
    .din1(mul_res_806_fu_15927_p1),
    .dout(mul_res_806_fu_15927_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1092(
    .din0(mul_res_811_fu_15960_p0),
    .din1(mul_res_811_fu_15960_p1),
    .dout(mul_res_811_fu_15960_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1093(
    .din0(mul_res_812_fu_15981_p0),
    .din1(mul_res_812_fu_15981_p1),
    .dout(mul_res_812_fu_15981_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1094(
    .din0(mul_res_813_fu_16002_p0),
    .din1(mul_res_813_fu_16002_p1),
    .dout(mul_res_813_fu_16002_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1095(
    .din0(mul_res_817_fu_16174_p0),
    .din1(mul_res_817_fu_16174_p1),
    .dout(mul_res_817_fu_16174_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1096(
    .din0(mul_res_820_fu_16201_p0),
    .din1(mul_res_820_fu_16201_p1),
    .dout(mul_res_820_fu_16201_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1097(
    .din0(mul_res_827_fu_16239_p0),
    .din1(mul_res_827_fu_16239_p1),
    .dout(mul_res_827_fu_16239_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1098(
    .din0(mul_res_830_fu_16265_p0),
    .din1(mul_res_830_fu_16265_p1),
    .dout(mul_res_830_fu_16265_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1099(
    .din0(mul_res_833_fu_16291_p0),
    .din1(mul_res_833_fu_16291_p1),
    .dout(mul_res_833_fu_16291_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1100(
    .din0(mul_res_835_fu_16314_p0),
    .din1(mul_res_835_fu_16314_p1),
    .dout(mul_res_835_fu_16314_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1101(
    .din0(mul_res_836_fu_16335_p0),
    .din1(mul_res_836_fu_16335_p1),
    .dout(mul_res_836_fu_16335_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1102(
    .din0(mul_res_837_fu_16356_p0),
    .din1(mul_res_837_fu_16356_p1),
    .dout(mul_res_837_fu_16356_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1103(
    .din0(mul_res_841_fu_16514_p0),
    .din1(mul_res_841_fu_16514_p1),
    .dout(mul_res_841_fu_16514_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1104(
    .din0(mul_res_844_fu_16541_p0),
    .din1(mul_res_844_fu_16541_p1),
    .dout(mul_res_844_fu_16541_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1105(
    .din0(mul_res_851_fu_16579_p0),
    .din1(mul_res_851_fu_16579_p1),
    .dout(mul_res_851_fu_16579_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1106(
    .din0(mul_res_854_fu_16605_p0),
    .din1(mul_res_854_fu_16605_p1),
    .dout(mul_res_854_fu_16605_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1107(
    .din0(mul_res_857_fu_16631_p0),
    .din1(mul_res_857_fu_16631_p1),
    .dout(mul_res_857_fu_16631_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1108(
    .din0(mul_res_859_fu_16654_p0),
    .din1(mul_res_859_fu_16654_p1),
    .dout(mul_res_859_fu_16654_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1109(
    .din0(mul_res_860_fu_16675_p0),
    .din1(mul_res_860_fu_16675_p1),
    .dout(mul_res_860_fu_16675_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1110(
    .din0(mul_res_861_fu_16696_p0),
    .din1(mul_res_861_fu_16696_p1),
    .dout(mul_res_861_fu_16696_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1111(
    .din0(mul_res_865_fu_16854_p0),
    .din1(mul_res_865_fu_16854_p1),
    .dout(mul_res_865_fu_16854_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1112(
    .din0(mul_res_868_fu_16881_p0),
    .din1(mul_res_868_fu_16881_p1),
    .dout(mul_res_868_fu_16881_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1113(
    .din0(mul_res_875_fu_16919_p0),
    .din1(mul_res_875_fu_16919_p1),
    .dout(mul_res_875_fu_16919_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1114(
    .din0(mul_res_878_fu_16945_p0),
    .din1(mul_res_878_fu_16945_p1),
    .dout(mul_res_878_fu_16945_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1115(
    .din0(mul_res_881_fu_16971_p0),
    .din1(mul_res_881_fu_16971_p1),
    .dout(mul_res_881_fu_16971_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1116(
    .din0(mul_res_883_fu_16994_p0),
    .din1(mul_res_883_fu_16994_p1),
    .dout(mul_res_883_fu_16994_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1117(
    .din0(mul_res_884_fu_17015_p0),
    .din1(mul_res_884_fu_17015_p1),
    .dout(mul_res_884_fu_17015_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1118(
    .din0(mul_res_885_fu_17036_p0),
    .din1(mul_res_885_fu_17036_p1),
    .dout(mul_res_885_fu_17036_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1119(
    .din0(mul_res_889_fu_17191_p0),
    .din1(mul_res_889_fu_17191_p1),
    .dout(mul_res_889_fu_17191_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1120(
    .din0(mul_res_892_fu_17215_p0),
    .din1(mul_res_892_fu_17215_p1),
    .dout(mul_res_892_fu_17215_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1121(
    .din0(mul_res_899_fu_17250_p0),
    .din1(mul_res_899_fu_17250_p1),
    .dout(mul_res_899_fu_17250_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1122(
    .din0(mul_res_902_fu_17273_p0),
    .din1(mul_res_902_fu_17273_p1),
    .dout(mul_res_902_fu_17273_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1123(
    .din0(mul_res_905_fu_17296_p0),
    .din1(mul_res_905_fu_17296_p1),
    .dout(mul_res_905_fu_17296_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1124(
    .din0(mul_res_907_fu_17316_p0),
    .din1(mul_res_907_fu_17316_p1),
    .dout(mul_res_907_fu_17316_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1125(
    .din0(mul_res_908_fu_17334_p0),
    .din1(mul_res_908_fu_17334_p1),
    .dout(mul_res_908_fu_17334_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1126(
    .din0(mul_res_909_fu_17352_p0),
    .din1(mul_res_909_fu_17352_p1),
    .dout(mul_res_909_fu_17352_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1127(
    .din0(mul_res_913_fu_17507_p0),
    .din1(mul_res_913_fu_17507_p1),
    .dout(mul_res_913_fu_17507_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1128(
    .din0(mul_res_916_fu_17531_p0),
    .din1(mul_res_916_fu_17531_p1),
    .dout(mul_res_916_fu_17531_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1129(
    .din0(mul_res_923_fu_17566_p0),
    .din1(mul_res_923_fu_17566_p1),
    .dout(mul_res_923_fu_17566_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1130(
    .din0(mul_res_926_fu_17589_p0),
    .din1(mul_res_926_fu_17589_p1),
    .dout(mul_res_926_fu_17589_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1131(
    .din0(mul_res_929_fu_17612_p0),
    .din1(mul_res_929_fu_17612_p1),
    .dout(mul_res_929_fu_17612_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1132(
    .din0(mul_res_931_fu_17632_p0),
    .din1(mul_res_931_fu_17632_p1),
    .dout(mul_res_931_fu_17632_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1133(
    .din0(mul_res_932_fu_17650_p0),
    .din1(mul_res_932_fu_17650_p1),
    .dout(mul_res_932_fu_17650_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1134(
    .din0(mul_res_933_fu_17668_p0),
    .din1(mul_res_933_fu_17668_p1),
    .dout(mul_res_933_fu_17668_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1135(
    .din0(mul_res_937_fu_17823_p0),
    .din1(mul_res_937_fu_17823_p1),
    .dout(mul_res_937_fu_17823_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1136(
    .din0(mul_res_940_fu_17847_p0),
    .din1(mul_res_940_fu_17847_p1),
    .dout(mul_res_940_fu_17847_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1137(
    .din0(mul_res_947_fu_17882_p0),
    .din1(mul_res_947_fu_17882_p1),
    .dout(mul_res_947_fu_17882_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1138(
    .din0(mul_res_950_fu_17905_p0),
    .din1(mul_res_950_fu_17905_p1),
    .dout(mul_res_950_fu_17905_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1139(
    .din0(mul_res_953_fu_17928_p0),
    .din1(mul_res_953_fu_17928_p1),
    .dout(mul_res_953_fu_17928_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1140(
    .din0(mul_res_955_fu_17948_p0),
    .din1(mul_res_955_fu_17948_p1),
    .dout(mul_res_955_fu_17948_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1141(
    .din0(mul_res_956_fu_17966_p0),
    .din1(mul_res_956_fu_17966_p1),
    .dout(mul_res_956_fu_17966_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1142(
    .din0(mul_res_957_fu_17984_p0),
    .din1(mul_res_957_fu_17984_p1),
    .dout(mul_res_957_fu_17984_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1143(
    .din0(mul_res_961_fu_18139_p0),
    .din1(mul_res_961_fu_18139_p1),
    .dout(mul_res_961_fu_18139_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1144(
    .din0(mul_res_964_fu_18163_p0),
    .din1(mul_res_964_fu_18163_p1),
    .dout(mul_res_964_fu_18163_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1145(
    .din0(mul_res_971_fu_18198_p0),
    .din1(mul_res_971_fu_18198_p1),
    .dout(mul_res_971_fu_18198_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1146(
    .din0(mul_res_974_fu_18221_p0),
    .din1(mul_res_974_fu_18221_p1),
    .dout(mul_res_974_fu_18221_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1147(
    .din0(mul_res_977_fu_18244_p0),
    .din1(mul_res_977_fu_18244_p1),
    .dout(mul_res_977_fu_18244_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1148(
    .din0(mul_res_979_fu_18264_p0),
    .din1(mul_res_979_fu_18264_p1),
    .dout(mul_res_979_fu_18264_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1149(
    .din0(mul_res_980_fu_18282_p0),
    .din1(mul_res_980_fu_18282_p1),
    .dout(mul_res_980_fu_18282_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1150(
    .din0(mul_res_981_fu_18300_p0),
    .din1(mul_res_981_fu_18300_p1),
    .dout(mul_res_981_fu_18300_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1151(
    .din0(mul_res_985_fu_18455_p0),
    .din1(mul_res_985_fu_18455_p1),
    .dout(mul_res_985_fu_18455_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1152(
    .din0(mul_res_988_fu_18479_p0),
    .din1(mul_res_988_fu_18479_p1),
    .dout(mul_res_988_fu_18479_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1153(
    .din0(mul_res_995_fu_18514_p0),
    .din1(mul_res_995_fu_18514_p1),
    .dout(mul_res_995_fu_18514_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1154(
    .din0(mul_res_998_fu_18537_p0),
    .din1(mul_res_998_fu_18537_p1),
    .dout(mul_res_998_fu_18537_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1155(
    .din0(mul_res_1001_fu_18560_p0),
    .din1(mul_res_1001_fu_18560_p1),
    .dout(mul_res_1001_fu_18560_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1156(
    .din0(mul_res_1003_fu_18580_p0),
    .din1(mul_res_1003_fu_18580_p1),
    .dout(mul_res_1003_fu_18580_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1157(
    .din0(mul_res_1004_fu_18598_p0),
    .din1(mul_res_1004_fu_18598_p1),
    .dout(mul_res_1004_fu_18598_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1158(
    .din0(mul_res_1005_fu_18616_p0),
    .din1(mul_res_1005_fu_18616_p1),
    .dout(mul_res_1005_fu_18616_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1159(
    .din0(mul_res_1009_fu_18771_p0),
    .din1(mul_res_1009_fu_18771_p1),
    .dout(mul_res_1009_fu_18771_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1160(
    .din0(mul_res_1012_fu_18795_p0),
    .din1(mul_res_1012_fu_18795_p1),
    .dout(mul_res_1012_fu_18795_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1161(
    .din0(mul_res_1019_fu_18830_p0),
    .din1(mul_res_1019_fu_18830_p1),
    .dout(mul_res_1019_fu_18830_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1162(
    .din0(mul_res_1022_fu_18853_p0),
    .din1(mul_res_1022_fu_18853_p1),
    .dout(mul_res_1022_fu_18853_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1163(
    .din0(mul_res_1025_fu_18876_p0),
    .din1(mul_res_1025_fu_18876_p1),
    .dout(mul_res_1025_fu_18876_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1164(
    .din0(mul_res_1027_fu_18896_p0),
    .din1(mul_res_1027_fu_18896_p1),
    .dout(mul_res_1027_fu_18896_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1165(
    .din0(mul_res_1028_fu_18914_p0),
    .din1(mul_res_1028_fu_18914_p1),
    .dout(mul_res_1028_fu_18914_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1166(
    .din0(mul_res_1029_fu_18932_p0),
    .din1(mul_res_1029_fu_18932_p1),
    .dout(mul_res_1029_fu_18932_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1167(
    .din0(mul_res_1033_fu_19087_p0),
    .din1(mul_res_1033_fu_19087_p1),
    .dout(mul_res_1033_fu_19087_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1168(
    .din0(mul_res_1036_fu_19111_p0),
    .din1(mul_res_1036_fu_19111_p1),
    .dout(mul_res_1036_fu_19111_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1169(
    .din0(mul_res_1043_fu_19146_p0),
    .din1(mul_res_1043_fu_19146_p1),
    .dout(mul_res_1043_fu_19146_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1170(
    .din0(mul_res_1046_fu_19169_p0),
    .din1(mul_res_1046_fu_19169_p1),
    .dout(mul_res_1046_fu_19169_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1171(
    .din0(mul_res_1049_fu_19192_p0),
    .din1(mul_res_1049_fu_19192_p1),
    .dout(mul_res_1049_fu_19192_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1172(
    .din0(mul_res_1051_fu_19212_p0),
    .din1(mul_res_1051_fu_19212_p1),
    .dout(mul_res_1051_fu_19212_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1173(
    .din0(mul_res_1052_fu_19230_p0),
    .din1(mul_res_1052_fu_19230_p1),
    .dout(mul_res_1052_fu_19230_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1174(
    .din0(mul_res_1053_fu_19248_p0),
    .din1(mul_res_1053_fu_19248_p1),
    .dout(mul_res_1053_fu_19248_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1175(
    .din0(mul_res_1057_fu_19403_p0),
    .din1(mul_res_1057_fu_19403_p1),
    .dout(mul_res_1057_fu_19403_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1176(
    .din0(mul_res_1060_fu_19427_p0),
    .din1(mul_res_1060_fu_19427_p1),
    .dout(mul_res_1060_fu_19427_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1177(
    .din0(mul_res_1067_fu_19462_p0),
    .din1(mul_res_1067_fu_19462_p1),
    .dout(mul_res_1067_fu_19462_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1178(
    .din0(mul_res_1070_fu_19485_p0),
    .din1(mul_res_1070_fu_19485_p1),
    .dout(mul_res_1070_fu_19485_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1179(
    .din0(mul_res_1073_fu_19508_p0),
    .din1(mul_res_1073_fu_19508_p1),
    .dout(mul_res_1073_fu_19508_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1180(
    .din0(mul_res_1075_fu_19528_p0),
    .din1(mul_res_1075_fu_19528_p1),
    .dout(mul_res_1075_fu_19528_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1181(
    .din0(mul_res_1076_fu_19546_p0),
    .din1(mul_res_1076_fu_19546_p1),
    .dout(mul_res_1076_fu_19546_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1182(
    .din0(mul_res_1077_fu_19564_p0),
    .din1(mul_res_1077_fu_19564_p1),
    .dout(mul_res_1077_fu_19564_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1183(
    .din0(mul_res_1081_fu_19719_p0),
    .din1(mul_res_1081_fu_19719_p1),
    .dout(mul_res_1081_fu_19719_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1184(
    .din0(mul_res_1084_fu_19743_p0),
    .din1(mul_res_1084_fu_19743_p1),
    .dout(mul_res_1084_fu_19743_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1185(
    .din0(mul_res_1091_fu_19778_p0),
    .din1(mul_res_1091_fu_19778_p1),
    .dout(mul_res_1091_fu_19778_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1186(
    .din0(mul_res_1094_fu_19801_p0),
    .din1(mul_res_1094_fu_19801_p1),
    .dout(mul_res_1094_fu_19801_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1187(
    .din0(mul_res_1097_fu_19824_p0),
    .din1(mul_res_1097_fu_19824_p1),
    .dout(mul_res_1097_fu_19824_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1188(
    .din0(mul_res_1099_fu_19844_p0),
    .din1(mul_res_1099_fu_19844_p1),
    .dout(mul_res_1099_fu_19844_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1189(
    .din0(mul_res_1100_fu_19862_p0),
    .din1(mul_res_1100_fu_19862_p1),
    .dout(mul_res_1100_fu_19862_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1190(
    .din0(mul_res_1101_fu_19880_p0),
    .din1(mul_res_1101_fu_19880_p1),
    .dout(mul_res_1101_fu_19880_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1191(
    .din0(mul_res_1105_fu_20035_p0),
    .din1(mul_res_1105_fu_20035_p1),
    .dout(mul_res_1105_fu_20035_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1192(
    .din0(mul_res_1108_fu_20059_p0),
    .din1(mul_res_1108_fu_20059_p1),
    .dout(mul_res_1108_fu_20059_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1193(
    .din0(mul_res_1115_fu_20095_p0),
    .din1(mul_res_1115_fu_20095_p1),
    .dout(mul_res_1115_fu_20095_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1194(
    .din0(mul_res_1118_fu_20119_p0),
    .din1(mul_res_1118_fu_20119_p1),
    .dout(mul_res_1118_fu_20119_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1195(
    .din0(mul_res_1121_fu_20143_p0),
    .din1(mul_res_1121_fu_20143_p1),
    .dout(mul_res_1121_fu_20143_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1196(
    .din0(mul_res_1123_fu_20164_p0),
    .din1(mul_res_1123_fu_20164_p1),
    .dout(mul_res_1123_fu_20164_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1197(
    .din0(mul_res_1124_fu_20182_p0),
    .din1(mul_res_1124_fu_20182_p1),
    .dout(mul_res_1124_fu_20182_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1198(
    .din0(mul_res_1125_fu_20200_p0),
    .din1(mul_res_1125_fu_20200_p1),
    .dout(mul_res_1125_fu_20200_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1199(
    .din0(mul_res_1129_fu_20355_p0),
    .din1(mul_res_1129_fu_20355_p1),
    .dout(mul_res_1129_fu_20355_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1200(
    .din0(mul_res_1132_fu_20379_p0),
    .din1(mul_res_1132_fu_20379_p1),
    .dout(mul_res_1132_fu_20379_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1201(
    .din0(mul_res_1139_fu_20415_p0),
    .din1(mul_res_1139_fu_20415_p1),
    .dout(mul_res_1139_fu_20415_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1202(
    .din0(mul_res_1142_fu_20439_p0),
    .din1(mul_res_1142_fu_20439_p1),
    .dout(mul_res_1142_fu_20439_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1203(
    .din0(mul_res_1145_fu_20463_p0),
    .din1(mul_res_1145_fu_20463_p1),
    .dout(mul_res_1145_fu_20463_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1204(
    .din0(mul_res_1147_fu_20484_p0),
    .din1(mul_res_1147_fu_20484_p1),
    .dout(mul_res_1147_fu_20484_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1205(
    .din0(mul_res_1148_fu_20502_p0),
    .din1(mul_res_1148_fu_20502_p1),
    .dout(mul_res_1148_fu_20502_p2)
);

MLP8_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1206(
    .din0(mul_res_1149_fu_20520_p0),
    .din1(mul_res_1149_fu_20520_p1),
    .dout(mul_res_1149_fu_20520_p2)
);

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(pf_all_done),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(pf_all_done),
    .ap_continue(ap_continue)
);

MLP8_frp_pipeline_valid #(
    .PipelineLatency( 7 ),
    .PipelineII( 1 ),
    .CeilLog2Stages( 3 ),
    .ExitLatency( 0 ))
frp_pipeline_valid_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .valid_in(ap_frp_vld_in),
    .exitcond(frp_pipeline_valid_U_exitcond),
    .valid_out(frp_pipeline_valid_U_valid_out),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

MLP8_frp_fifoout #(
    .BlockingType( 1 ),
    .PipeLatency( 7 ),
    .PipelineII( 1 ),
    .DataWidth( 240 ),
    .NumWrites( 1 ),
    .CeilLog2Stages( 3 ),
    .CeilLog2FDepth( 3 ),
    .PfAllDoneEnable( 2 ))
pf_mac_sm_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(pf_mac_sm_U_frpsig_data_in),
    .data_out(pf_mac_sm_U_data_out),
    .valid(frp_pipeline_valid_U_valid_out),
    .data_in_vld(pf_mac_sm_U_data_in_vld),
    .data_out_vld(pf_mac_sm_U_data_out_vld),
    .data_in_last(ap_done_int_frp),
    .pf_continue(ap_continue),
    .pf_all_done(pf_all_done),
    .pf_ready(pf_mac_sm_U_pf_ready),
    .pf_done(pf_mac_sm_U_pf_done),
    .data_out_read(mac_sm_full_n),
    .ap_start(1'b0),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_frp_data_req_cache_window_sm <= 3'd0;
    end else begin
        if ((frp_pipeline_valid_U_valid_out[3'd0] == 1'b0)) begin
            ap_frp_data_req_cache_window_sm <= (ap_frp_data_req_cache_window_sm - ap_frp_data_next_issued_cache_window_sm);
        end else begin
            ap_frp_data_req_cache_window_sm <= ((ap_frp_data_req_cache_window_sm + ap_frp_data_req_cache_window_sm_op104) - ap_frp_data_next_issued_cache_window_sm);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pf_all_done <= 1'b0;
    end else begin
        pf_all_done <= pf_mac_sm_U_pf_done;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((frp_pipeline_valid_U_valid_out[3'd1] == 1'b1)) begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            cit_fu_2408 <= add_ln122_fu_2742_p2;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
            cit_fu_2408 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((frp_pipeline_valid_U_valid_out[3'd1] == 1'b1)) begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            cot_fu_2508 <= select_ln121_3_fu_2730_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
            cot_fu_2508 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((frp_pipeline_valid_U_valid_out[3'd0] == 1'b1) & ((icmp_ln120_fu_2625_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        indvar_flatten59_fu_2516 <= add_ln120_fu_2619_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten59_fu_2516 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((frp_pipeline_valid_U_valid_out[3'd0] == 1'b1) & ((icmp_ln120_fu_2625_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        indvar_flatten_fu_2512 <= select_ln121_4_fu_2643_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten_fu_2512 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln153_105_reg_26290 <= add_ln153_105_fu_14467_p2;
        add_ln153_108_reg_26295 <= add_ln153_108_fu_14483_p2;
        add_ln153_110_reg_26300 <= add_ln153_110_fu_14499_p2;
        add_ln153_113_reg_26305 <= add_ln153_113_fu_14515_p2;
        add_ln153_116_reg_26310 <= add_ln153_116_fu_14541_p2;
        add_ln153_119_reg_27070 <= add_ln153_119_fu_21303_p2;
        add_ln153_120_reg_26315 <= add_ln153_120_fu_14727_p2;
        add_ln153_123_reg_26320 <= add_ln153_123_fu_14743_p2;
        add_ln153_129_reg_26325 <= add_ln153_129_fu_14789_p2;
        add_ln153_12_reg_26155 <= add_ln153_12_fu_13195_p2;
        add_ln153_132_reg_26330 <= add_ln153_132_fu_14805_p2;
        add_ln153_134_reg_26335 <= add_ln153_134_fu_14821_p2;
        add_ln153_137_reg_26340 <= add_ln153_137_fu_14837_p2;
        add_ln153_140_reg_26345 <= add_ln153_140_fu_14863_p2;
        add_ln153_143_reg_27075 <= add_ln153_143_fu_21374_p2;
        add_ln153_144_reg_26350 <= add_ln153_144_fu_15049_p2;
        add_ln153_147_reg_26355 <= add_ln153_147_fu_15065_p2;
        add_ln153_14_reg_26160 <= add_ln153_14_fu_13211_p2;
        add_ln153_153_reg_26360 <= add_ln153_153_fu_15111_p2;
        add_ln153_156_reg_26365 <= add_ln153_156_fu_15127_p2;
        add_ln153_158_reg_26370 <= add_ln153_158_fu_15143_p2;
        add_ln153_161_reg_26375 <= add_ln153_161_fu_15159_p2;
        add_ln153_164_reg_26380 <= add_ln153_164_fu_15185_p2;
        add_ln153_167_reg_27080 <= add_ln153_167_fu_21445_p2;
        add_ln153_168_reg_26385 <= add_ln153_168_fu_15371_p2;
        add_ln153_171_reg_26390 <= add_ln153_171_fu_15387_p2;
        add_ln153_177_reg_26395 <= add_ln153_177_fu_15433_p2;
        add_ln153_17_reg_26165 <= add_ln153_17_fu_13227_p2;
        add_ln153_180_reg_26400 <= add_ln153_180_fu_15449_p2;
        add_ln153_182_reg_26405 <= add_ln153_182_fu_15465_p2;
        add_ln153_185_reg_26410 <= add_ln153_185_fu_15481_p2;
        add_ln153_188_reg_26415 <= add_ln153_188_fu_15507_p2;
        add_ln153_191_reg_27085 <= add_ln153_191_fu_21516_p2;
        add_ln153_192_reg_26420 <= add_ln153_192_fu_15693_p2;
        add_ln153_195_reg_26425 <= add_ln153_195_fu_15709_p2;
        add_ln153_201_reg_26430 <= add_ln153_201_fu_15755_p2;
        add_ln153_204_reg_26435 <= add_ln153_204_fu_15771_p2;
        add_ln153_206_reg_26440 <= add_ln153_206_fu_15787_p2;
        add_ln153_209_reg_26445 <= add_ln153_209_fu_15803_p2;
        add_ln153_20_reg_26170 <= add_ln153_20_fu_13253_p2;
        add_ln153_212_reg_26450 <= add_ln153_212_fu_15829_p2;
        add_ln153_215_reg_27090 <= add_ln153_215_fu_21587_p2;
        add_ln153_216_reg_26455 <= add_ln153_216_fu_16015_p2;
        add_ln153_219_reg_26460 <= add_ln153_219_fu_16031_p2;
        add_ln153_225_reg_26465 <= add_ln153_225_fu_16077_p2;
        add_ln153_228_reg_26470 <= add_ln153_228_fu_16093_p2;
        add_ln153_230_reg_26475 <= add_ln153_230_fu_16109_p2;
        add_ln153_233_reg_26480 <= add_ln153_233_fu_16125_p2;
        add_ln153_236_reg_26485 <= add_ln153_236_fu_16151_p2;
        add_ln153_239_reg_27095 <= add_ln153_239_fu_21658_p2;
        add_ln153_23_reg_27050 <= add_ln153_23_fu_21019_p2;
        add_ln153_240_reg_26490 <= add_ln153_240_fu_16369_p2;
        add_ln153_243_reg_26495 <= add_ln153_243_fu_16385_p2;
        add_ln153_246_reg_26500 <= add_ln153_246_fu_16401_p2;
        add_ln153_248_reg_26505 <= add_ln153_248_fu_16417_p2;
        add_ln153_24_reg_26175 <= add_ln153_24_fu_13439_p2;
        add_ln153_252_reg_26510 <= add_ln153_252_fu_16433_p2;
        add_ln153_254_reg_26515 <= add_ln153_254_fu_16449_p2;
        add_ln153_257_reg_26520 <= add_ln153_257_fu_16465_p2;
        add_ln153_260_reg_26525 <= add_ln153_260_fu_16491_p2;
        add_ln153_263_reg_27100 <= add_ln153_263_fu_21742_p2;
        add_ln153_264_reg_26530 <= add_ln153_264_fu_16709_p2;
        add_ln153_267_reg_26535 <= add_ln153_267_fu_16725_p2;
        add_ln153_270_reg_26540 <= add_ln153_270_fu_16741_p2;
        add_ln153_272_reg_26545 <= add_ln153_272_fu_16757_p2;
        add_ln153_276_reg_26550 <= add_ln153_276_fu_16773_p2;
        add_ln153_278_reg_26555 <= add_ln153_278_fu_16789_p2;
        add_ln153_27_reg_26180 <= add_ln153_27_fu_13455_p2;
        add_ln153_281_reg_26560 <= add_ln153_281_fu_16805_p2;
        add_ln153_284_reg_26565 <= add_ln153_284_fu_16831_p2;
        add_ln153_287_reg_27105 <= add_ln153_287_fu_21826_p2;
        add_ln153_288_reg_26570 <= add_ln153_288_fu_17049_p2;
        add_ln153_291_reg_26575 <= add_ln153_291_fu_17065_p2;
        add_ln153_294_reg_26580 <= add_ln153_294_fu_17081_p2;
        add_ln153_296_reg_26585 <= add_ln153_296_fu_17097_p2;
        add_ln153_300_reg_26590 <= add_ln153_300_fu_17113_p2;
        add_ln153_302_reg_26595 <= add_ln153_302_fu_17129_p2;
        add_ln153_305_reg_26600 <= add_ln153_305_fu_17145_p2;
        add_ln153_308_reg_26605 <= add_ln153_308_fu_17171_p2;
        add_ln153_311_reg_27110 <= add_ln153_311_fu_21910_p2;
        add_ln153_312_reg_26610 <= add_ln153_312_fu_17365_p2;
        add_ln153_315_reg_26615 <= add_ln153_315_fu_17381_p2;
        add_ln153_318_reg_26620 <= add_ln153_318_fu_17397_p2;
        add_ln153_320_reg_26625 <= add_ln153_320_fu_17413_p2;
        add_ln153_324_reg_26630 <= add_ln153_324_fu_17429_p2;
        add_ln153_326_reg_26635 <= add_ln153_326_fu_17445_p2;
        add_ln153_329_reg_26640 <= add_ln153_329_fu_17461_p2;
        add_ln153_332_reg_26645 <= add_ln153_332_fu_17487_p2;
        add_ln153_335_reg_27115 <= add_ln153_335_fu_21994_p2;
        add_ln153_336_reg_26650 <= add_ln153_336_fu_17681_p2;
        add_ln153_339_reg_26655 <= add_ln153_339_fu_17697_p2;
        add_ln153_33_reg_26185 <= add_ln153_33_fu_13501_p2;
        add_ln153_342_reg_26660 <= add_ln153_342_fu_17713_p2;
        add_ln153_344_reg_26665 <= add_ln153_344_fu_17729_p2;
        add_ln153_348_reg_26670 <= add_ln153_348_fu_17745_p2;
        add_ln153_350_reg_26675 <= add_ln153_350_fu_17761_p2;
        add_ln153_353_reg_26680 <= add_ln153_353_fu_17777_p2;
        add_ln153_356_reg_26685 <= add_ln153_356_fu_17803_p2;
        add_ln153_359_reg_27120 <= add_ln153_359_fu_22078_p2;
        add_ln153_360_reg_26690 <= add_ln153_360_fu_17997_p2;
        add_ln153_363_reg_26695 <= add_ln153_363_fu_18013_p2;
        add_ln153_366_reg_26700 <= add_ln153_366_fu_18029_p2;
        add_ln153_368_reg_26705 <= add_ln153_368_fu_18045_p2;
        add_ln153_36_reg_26190 <= add_ln153_36_fu_13517_p2;
        add_ln153_372_reg_26710 <= add_ln153_372_fu_18061_p2;
        add_ln153_374_reg_26715 <= add_ln153_374_fu_18077_p2;
        add_ln153_377_reg_26720 <= add_ln153_377_fu_18093_p2;
        add_ln153_380_reg_26725 <= add_ln153_380_fu_18119_p2;
        add_ln153_383_reg_27125 <= add_ln153_383_fu_22162_p2;
        add_ln153_384_reg_26730 <= add_ln153_384_fu_18313_p2;
        add_ln153_387_reg_26735 <= add_ln153_387_fu_18329_p2;
        add_ln153_38_reg_26195 <= add_ln153_38_fu_13533_p2;
        add_ln153_390_reg_26740 <= add_ln153_390_fu_18345_p2;
        add_ln153_392_reg_26745 <= add_ln153_392_fu_18361_p2;
        add_ln153_396_reg_26750 <= add_ln153_396_fu_18377_p2;
        add_ln153_398_reg_26755 <= add_ln153_398_fu_18393_p2;
        add_ln153_3_reg_26145 <= add_ln153_3_fu_13133_p2;
        add_ln153_401_reg_26760 <= add_ln153_401_fu_18409_p2;
        add_ln153_404_reg_26765 <= add_ln153_404_fu_18435_p2;
        add_ln153_407_reg_27130 <= add_ln153_407_fu_22246_p2;
        add_ln153_408_reg_26770 <= add_ln153_408_fu_18629_p2;
        add_ln153_411_reg_26775 <= add_ln153_411_fu_18645_p2;
        add_ln153_414_reg_26780 <= add_ln153_414_fu_18661_p2;
        add_ln153_416_reg_26785 <= add_ln153_416_fu_18677_p2;
        add_ln153_41_reg_26200 <= add_ln153_41_fu_13549_p2;
        add_ln153_420_reg_26790 <= add_ln153_420_fu_18693_p2;
        add_ln153_422_reg_26795 <= add_ln153_422_fu_18709_p2;
        add_ln153_425_reg_26800 <= add_ln153_425_fu_18725_p2;
        add_ln153_428_reg_26805 <= add_ln153_428_fu_18751_p2;
        add_ln153_431_reg_27135 <= add_ln153_431_fu_22330_p2;
        add_ln153_432_reg_26810 <= add_ln153_432_fu_18945_p2;
        add_ln153_435_reg_26815 <= add_ln153_435_fu_18961_p2;
        add_ln153_438_reg_26820 <= add_ln153_438_fu_18977_p2;
        add_ln153_440_reg_26825 <= add_ln153_440_fu_18993_p2;
        add_ln153_444_reg_26830 <= add_ln153_444_fu_19009_p2;
        add_ln153_446_reg_26835 <= add_ln153_446_fu_19025_p2;
        add_ln153_449_reg_26840 <= add_ln153_449_fu_19041_p2;
        add_ln153_44_reg_26205 <= add_ln153_44_fu_13575_p2;
        add_ln153_452_reg_26845 <= add_ln153_452_fu_19067_p2;
        add_ln153_455_reg_27140 <= add_ln153_455_fu_22414_p2;
        add_ln153_456_reg_26850 <= add_ln153_456_fu_19261_p2;
        add_ln153_459_reg_26855 <= add_ln153_459_fu_19277_p2;
        add_ln153_462_reg_26860 <= add_ln153_462_fu_19293_p2;
        add_ln153_464_reg_26865 <= add_ln153_464_fu_19309_p2;
        add_ln153_468_reg_26870 <= add_ln153_468_fu_19325_p2;
        add_ln153_470_reg_26875 <= add_ln153_470_fu_19341_p2;
        add_ln153_473_reg_26880 <= add_ln153_473_fu_19357_p2;
        add_ln153_476_reg_26885 <= add_ln153_476_fu_19383_p2;
        add_ln153_479_reg_27145 <= add_ln153_479_fu_22498_p2;
        add_ln153_47_reg_27055 <= add_ln153_47_fu_21090_p2;
        add_ln153_480_reg_26890 <= add_ln153_480_fu_19577_p2;
        add_ln153_483_reg_26895 <= add_ln153_483_fu_19593_p2;
        add_ln153_486_reg_26900 <= add_ln153_486_fu_19609_p2;
        add_ln153_488_reg_26905 <= add_ln153_488_fu_19625_p2;
        add_ln153_48_reg_26210 <= add_ln153_48_fu_13761_p2;
        add_ln153_492_reg_26910 <= add_ln153_492_fu_19641_p2;
        add_ln153_494_reg_26915 <= add_ln153_494_fu_19657_p2;
        add_ln153_497_reg_26920 <= add_ln153_497_fu_19673_p2;
        add_ln153_500_reg_26925 <= add_ln153_500_fu_19699_p2;
        add_ln153_503_reg_27150 <= add_ln153_503_fu_22582_p2;
        add_ln153_504_reg_26930 <= add_ln153_504_fu_19893_p2;
        add_ln153_507_reg_26935 <= add_ln153_507_fu_19909_p2;
        add_ln153_510_reg_26940 <= add_ln153_510_fu_19925_p2;
        add_ln153_512_reg_26945 <= add_ln153_512_fu_19941_p2;
        add_ln153_516_reg_26950 <= add_ln153_516_fu_19957_p2;
        add_ln153_518_reg_26955 <= add_ln153_518_fu_19973_p2;
        add_ln153_51_reg_26215 <= add_ln153_51_fu_13777_p2;
        add_ln153_521_reg_26960 <= add_ln153_521_fu_19989_p2;
        add_ln153_524_reg_26965 <= add_ln153_524_fu_20015_p2;
        add_ln153_527_reg_27155 <= add_ln153_527_fu_22666_p2;
        add_ln153_528_reg_26970 <= add_ln153_528_fu_20213_p2;
        add_ln153_531_reg_26975 <= add_ln153_531_fu_20229_p2;
        add_ln153_534_reg_26980 <= add_ln153_534_fu_20245_p2;
        add_ln153_536_reg_26985 <= add_ln153_536_fu_20261_p2;
        add_ln153_540_reg_26990 <= add_ln153_540_fu_20277_p2;
        add_ln153_542_reg_26995 <= add_ln153_542_fu_20293_p2;
        add_ln153_545_reg_27000 <= add_ln153_545_fu_20309_p2;
        add_ln153_548_reg_27005 <= add_ln153_548_fu_20335_p2;
        add_ln153_551_reg_27160 <= add_ln153_551_fu_22750_p2;
        add_ln153_552_reg_27010 <= add_ln153_552_fu_20533_p2;
        add_ln153_555_reg_27015 <= add_ln153_555_fu_20549_p2;
        add_ln153_558_reg_27020 <= add_ln153_558_fu_20565_p2;
        add_ln153_560_reg_27025 <= add_ln153_560_fu_20581_p2;
        add_ln153_564_reg_27030 <= add_ln153_564_fu_20597_p2;
        add_ln153_566_reg_27035 <= add_ln153_566_fu_20613_p2;
        add_ln153_569_reg_27040 <= add_ln153_569_fu_20629_p2;
        add_ln153_572_reg_27045 <= add_ln153_572_fu_20655_p2;
        add_ln153_575_reg_27165 <= add_ln153_575_fu_22834_p2;
        add_ln153_57_reg_26220 <= add_ln153_57_fu_13823_p2;
        add_ln153_60_reg_26225 <= add_ln153_60_fu_13839_p2;
        add_ln153_62_reg_26230 <= add_ln153_62_fu_13855_p2;
        add_ln153_65_reg_26235 <= add_ln153_65_fu_13871_p2;
        add_ln153_68_reg_26240 <= add_ln153_68_fu_13897_p2;
        add_ln153_71_reg_27060 <= add_ln153_71_fu_21161_p2;
        add_ln153_72_reg_26245 <= add_ln153_72_fu_14083_p2;
        add_ln153_75_reg_26250 <= add_ln153_75_fu_14099_p2;
        add_ln153_81_reg_26255 <= add_ln153_81_fu_14145_p2;
        add_ln153_84_reg_26260 <= add_ln153_84_fu_14161_p2;
        add_ln153_86_reg_26265 <= add_ln153_86_fu_14177_p2;
        add_ln153_89_reg_26270 <= add_ln153_89_fu_14193_p2;
        add_ln153_92_reg_26275 <= add_ln153_92_fu_14219_p2;
        add_ln153_95_reg_27065 <= add_ln153_95_fu_21232_p2;
        add_ln153_96_reg_26280 <= add_ln153_96_fu_14405_p2;
        add_ln153_99_reg_26285 <= add_ln153_99_fu_14421_p2;
        add_ln153_9_reg_26150 <= add_ln153_9_fu_13179_p2;
        add_ln153_reg_26140 <= add_ln153_fu_13117_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        icmp_ln126_reg_23426 <= icmp_ln126_fu_2793_p2;
        icmp_ln126_reg_23426_pp0_iter3_reg <= icmp_ln126_reg_23426;
        icmp_ln126_reg_23426_pp0_iter4_reg <= icmp_ln126_reg_23426_pp0_iter3_reg;
        icmp_ln161_reg_23454 <= icmp_ln161_fu_2802_p2;
        icmp_ln161_reg_23454_pp0_iter3_reg <= icmp_ln161_reg_23454;
        icmp_ln161_reg_23454_pp0_iter4_reg <= icmp_ln161_reg_23454_pp0_iter3_reg;
        icmp_ln161_reg_23454_pp0_iter5_reg <= icmp_ln161_reg_23454_pp0_iter4_reg;
        mul_res_1000_reg_25574 <= mul_res_1000_fu_11427_p2;
        mul_res_1002_reg_25579 <= mul_res_1002_fu_11441_p2;
        mul_res_1006_reg_25584 <= mul_res_1006_fu_11455_p2;
        mul_res_1007_reg_25589 <= mul_res_1007_fu_11469_p2;
        mul_res_1008_reg_25594 <= mul_res_1008_fu_11483_p2;
        mul_res_1010_reg_25599 <= mul_res_1010_fu_11497_p2;
        mul_res_1011_reg_25604 <= mul_res_1011_fu_11511_p2;
        mul_res_1013_reg_25609 <= mul_res_1013_fu_11525_p2;
        mul_res_1014_reg_25614 <= mul_res_1014_fu_11539_p2;
        mul_res_1015_reg_25619 <= mul_res_1015_fu_11553_p2;
        mul_res_1016_reg_25624 <= mul_res_1016_fu_11567_p2;
        mul_res_1017_reg_25629 <= mul_res_1017_fu_11581_p2;
        mul_res_1018_reg_25634 <= mul_res_1018_fu_11595_p2;
        mul_res_1020_reg_25639 <= mul_res_1020_fu_11609_p2;
        mul_res_1021_reg_25644 <= mul_res_1021_fu_11623_p2;
        mul_res_1023_reg_25649 <= mul_res_1023_fu_11637_p2;
        mul_res_1024_reg_25654 <= mul_res_1024_fu_11651_p2;
        mul_res_1026_reg_25659 <= mul_res_1026_fu_11665_p2;
        mul_res_1030_reg_25664 <= mul_res_1030_fu_11679_p2;
        mul_res_1031_reg_25669 <= mul_res_1031_fu_11693_p2;
        mul_res_1032_reg_25674 <= mul_res_1032_fu_11707_p2;
        mul_res_1034_reg_25679 <= mul_res_1034_fu_11721_p2;
        mul_res_1035_reg_25684 <= mul_res_1035_fu_11735_p2;
        mul_res_1037_reg_25689 <= mul_res_1037_fu_11749_p2;
        mul_res_1038_reg_25694 <= mul_res_1038_fu_11763_p2;
        mul_res_1039_reg_25699 <= mul_res_1039_fu_11777_p2;
        mul_res_1040_reg_25704 <= mul_res_1040_fu_11791_p2;
        mul_res_1041_reg_25709 <= mul_res_1041_fu_11805_p2;
        mul_res_1042_reg_25714 <= mul_res_1042_fu_11819_p2;
        mul_res_1044_reg_25719 <= mul_res_1044_fu_11833_p2;
        mul_res_1045_reg_25724 <= mul_res_1045_fu_11847_p2;
        mul_res_1047_reg_25729 <= mul_res_1047_fu_11861_p2;
        mul_res_1048_reg_25734 <= mul_res_1048_fu_11875_p2;
        mul_res_1050_reg_25739 <= mul_res_1050_fu_11889_p2;
        mul_res_1054_reg_25744 <= mul_res_1054_fu_11903_p2;
        mul_res_1055_reg_25749 <= mul_res_1055_fu_11917_p2;
        mul_res_1056_reg_25754 <= mul_res_1056_fu_11931_p2;
        mul_res_1058_reg_25759 <= mul_res_1058_fu_11945_p2;
        mul_res_1059_reg_25764 <= mul_res_1059_fu_11959_p2;
        mul_res_1061_reg_25769 <= mul_res_1061_fu_11973_p2;
        mul_res_1062_reg_25774 <= mul_res_1062_fu_11987_p2;
        mul_res_1063_reg_25779 <= mul_res_1063_fu_12001_p2;
        mul_res_1064_reg_25784 <= mul_res_1064_fu_12015_p2;
        mul_res_1065_reg_25789 <= mul_res_1065_fu_12029_p2;
        mul_res_1066_reg_25794 <= mul_res_1066_fu_12043_p2;
        mul_res_1068_reg_25799 <= mul_res_1068_fu_12057_p2;
        mul_res_1069_reg_25804 <= mul_res_1069_fu_12071_p2;
        mul_res_1071_reg_25809 <= mul_res_1071_fu_12085_p2;
        mul_res_1072_reg_25814 <= mul_res_1072_fu_12099_p2;
        mul_res_1074_reg_25819 <= mul_res_1074_fu_12113_p2;
        mul_res_1078_reg_25824 <= mul_res_1078_fu_12127_p2;
        mul_res_1079_reg_25829 <= mul_res_1079_fu_12141_p2;
        mul_res_1080_reg_25834 <= mul_res_1080_fu_12155_p2;
        mul_res_1082_reg_25839 <= mul_res_1082_fu_12169_p2;
        mul_res_1083_reg_25844 <= mul_res_1083_fu_12183_p2;
        mul_res_1085_reg_25849 <= mul_res_1085_fu_12197_p2;
        mul_res_1086_reg_25854 <= mul_res_1086_fu_12211_p2;
        mul_res_1087_reg_25859 <= mul_res_1087_fu_12225_p2;
        mul_res_1088_reg_25864 <= mul_res_1088_fu_12239_p2;
        mul_res_1089_reg_25869 <= mul_res_1089_fu_12253_p2;
        mul_res_1090_reg_25874 <= mul_res_1090_fu_12267_p2;
        mul_res_1092_reg_25879 <= mul_res_1092_fu_12281_p2;
        mul_res_1093_reg_25884 <= mul_res_1093_fu_12295_p2;
        mul_res_1095_reg_25889 <= mul_res_1095_fu_12309_p2;
        mul_res_1096_reg_25894 <= mul_res_1096_fu_12323_p2;
        mul_res_1098_reg_25899 <= mul_res_1098_fu_12337_p2;
        mul_res_1102_reg_25904 <= mul_res_1102_fu_12351_p2;
        mul_res_1103_reg_25909 <= mul_res_1103_fu_12365_p2;
        mul_res_1104_reg_25914 <= mul_res_1104_fu_12379_p2;
        mul_res_1106_reg_25919 <= mul_res_1106_fu_12393_p2;
        mul_res_1107_reg_25924 <= mul_res_1107_fu_12407_p2;
        mul_res_1109_reg_25929 <= mul_res_1109_fu_12421_p2;
        mul_res_1110_reg_25934 <= mul_res_1110_fu_12435_p2;
        mul_res_1111_reg_25939 <= mul_res_1111_fu_12449_p2;
        mul_res_1112_reg_25944 <= mul_res_1112_fu_12463_p2;
        mul_res_1113_reg_25949 <= mul_res_1113_fu_12477_p2;
        mul_res_1114_reg_25954 <= mul_res_1114_fu_12491_p2;
        mul_res_1116_reg_25959 <= mul_res_1116_fu_12505_p2;
        mul_res_1117_reg_25964 <= mul_res_1117_fu_12519_p2;
        mul_res_1119_reg_25969 <= mul_res_1119_fu_12533_p2;
        mul_res_1120_reg_25974 <= mul_res_1120_fu_12547_p2;
        mul_res_1122_reg_25979 <= mul_res_1122_fu_12561_p2;
        mul_res_1126_reg_25984 <= mul_res_1126_fu_12575_p2;
        mul_res_1127_reg_25989 <= mul_res_1127_fu_12589_p2;
        mul_res_1128_reg_25994 <= mul_res_1128_fu_12603_p2;
        mul_res_1130_reg_25999 <= mul_res_1130_fu_12617_p2;
        mul_res_1131_reg_26004 <= mul_res_1131_fu_12631_p2;
        mul_res_1133_reg_26009 <= mul_res_1133_fu_12645_p2;
        mul_res_1134_reg_26014 <= mul_res_1134_fu_12659_p2;
        mul_res_1135_reg_26019 <= mul_res_1135_fu_12673_p2;
        mul_res_1136_reg_26024 <= mul_res_1136_fu_12687_p2;
        mul_res_1137_reg_26029 <= mul_res_1137_fu_12701_p2;
        mul_res_1138_reg_26034 <= mul_res_1138_fu_12715_p2;
        mul_res_1140_reg_26039 <= mul_res_1140_fu_12729_p2;
        mul_res_1141_reg_26044 <= mul_res_1141_fu_12743_p2;
        mul_res_1143_reg_26049 <= mul_res_1143_fu_12757_p2;
        mul_res_1144_reg_26054 <= mul_res_1144_fu_12771_p2;
        mul_res_1146_reg_26059 <= mul_res_1146_fu_12785_p2;
        mul_res_1150_reg_26064 <= mul_res_1150_fu_12799_p2;
        mul_res_576_reg_23468 <= mul_res_576_fu_2883_p2;
        mul_res_578_reg_23483 <= mul_res_578_fu_2945_p2;
        mul_res_579_reg_23488 <= mul_res_579_fu_2987_p2;
        mul_res_581_reg_23503 <= mul_res_581_fu_3049_p2;
        mul_res_582_reg_23508 <= mul_res_582_fu_3091_p2;
        mul_res_583_reg_23513 <= mul_res_583_fu_3133_p2;
        mul_res_584_reg_23518 <= mul_res_584_fu_3175_p2;
        mul_res_585_reg_23523 <= mul_res_585_fu_3217_p2;
        mul_res_586_reg_23528 <= mul_res_586_fu_3259_p2;
        mul_res_587_reg_23547 <= mul_res_587_fu_3301_p2;
        mul_res_588_reg_23552 <= mul_res_588_fu_3343_p2;
        mul_res_589_reg_23557 <= mul_res_589_fu_3385_p2;
        mul_res_591_reg_23572 <= mul_res_591_fu_3447_p2;
        mul_res_592_reg_23577 <= mul_res_592_fu_3489_p2;
        mul_res_593_reg_23596 <= mul_res_593_fu_3531_p2;
        mul_res_594_reg_23601 <= mul_res_594_fu_3573_p2;
        mul_res_598_reg_23636 <= mul_res_598_fu_3675_p2;
        mul_res_599_reg_23641 <= mul_res_599_fu_3703_p2;
        mul_res_600_reg_23646 <= mul_res_600_fu_3731_p2;
        mul_res_602_reg_23656 <= mul_res_602_fu_3769_p2;
        mul_res_603_reg_23661 <= mul_res_603_fu_3797_p2;
        mul_res_605_reg_23671 <= mul_res_605_fu_3835_p2;
        mul_res_606_reg_23676 <= mul_res_606_fu_3863_p2;
        mul_res_607_reg_23681 <= mul_res_607_fu_3891_p2;
        mul_res_608_reg_23686 <= mul_res_608_fu_3919_p2;
        mul_res_609_reg_23691 <= mul_res_609_fu_3947_p2;
        mul_res_610_reg_23696 <= mul_res_610_fu_3975_p2;
        mul_res_611_reg_23707 <= mul_res_611_fu_4003_p2;
        mul_res_612_reg_23712 <= mul_res_612_fu_4031_p2;
        mul_res_613_reg_23717 <= mul_res_613_fu_4059_p2;
        mul_res_615_reg_23727 <= mul_res_615_fu_4097_p2;
        mul_res_616_reg_23732 <= mul_res_616_fu_4125_p2;
        mul_res_617_reg_23743 <= mul_res_617_fu_4153_p2;
        mul_res_618_reg_23748 <= mul_res_618_fu_4181_p2;
        mul_res_622_reg_23768 <= mul_res_622_fu_4239_p2;
        mul_res_623_reg_23773 <= mul_res_623_fu_4267_p2;
        mul_res_624_reg_23778 <= mul_res_624_fu_4295_p2;
        mul_res_626_reg_23788 <= mul_res_626_fu_4333_p2;
        mul_res_627_reg_23793 <= mul_res_627_fu_4361_p2;
        mul_res_629_reg_23803 <= mul_res_629_fu_4399_p2;
        mul_res_630_reg_23808 <= mul_res_630_fu_4427_p2;
        mul_res_631_reg_23813 <= mul_res_631_fu_4455_p2;
        mul_res_632_reg_23818 <= mul_res_632_fu_4483_p2;
        mul_res_633_reg_23823 <= mul_res_633_fu_4511_p2;
        mul_res_634_reg_23828 <= mul_res_634_fu_4539_p2;
        mul_res_635_reg_23839 <= mul_res_635_fu_4567_p2;
        mul_res_636_reg_23844 <= mul_res_636_fu_4595_p2;
        mul_res_637_reg_23849 <= mul_res_637_fu_4623_p2;
        mul_res_639_reg_23859 <= mul_res_639_fu_4661_p2;
        mul_res_640_reg_23864 <= mul_res_640_fu_4689_p2;
        mul_res_641_reg_23875 <= mul_res_641_fu_4717_p2;
        mul_res_642_reg_23880 <= mul_res_642_fu_4745_p2;
        mul_res_646_reg_23900 <= mul_res_646_fu_4803_p2;
        mul_res_647_reg_23905 <= mul_res_647_fu_4831_p2;
        mul_res_648_reg_23910 <= mul_res_648_fu_4859_p2;
        mul_res_650_reg_23920 <= mul_res_650_fu_4897_p2;
        mul_res_651_reg_23925 <= mul_res_651_fu_4925_p2;
        mul_res_653_reg_23935 <= mul_res_653_fu_4963_p2;
        mul_res_654_reg_23940 <= mul_res_654_fu_4991_p2;
        mul_res_655_reg_23945 <= mul_res_655_fu_5019_p2;
        mul_res_656_reg_23950 <= mul_res_656_fu_5047_p2;
        mul_res_657_reg_23955 <= mul_res_657_fu_5075_p2;
        mul_res_658_reg_23960 <= mul_res_658_fu_5103_p2;
        mul_res_659_reg_23971 <= mul_res_659_fu_5131_p2;
        mul_res_660_reg_23976 <= mul_res_660_fu_5159_p2;
        mul_res_661_reg_23981 <= mul_res_661_fu_5187_p2;
        mul_res_663_reg_23991 <= mul_res_663_fu_5225_p2;
        mul_res_664_reg_23996 <= mul_res_664_fu_5253_p2;
        mul_res_665_reg_24007 <= mul_res_665_fu_5281_p2;
        mul_res_666_reg_24012 <= mul_res_666_fu_5309_p2;
        mul_res_670_reg_24032 <= mul_res_670_fu_5367_p2;
        mul_res_671_reg_24037 <= mul_res_671_fu_5395_p2;
        mul_res_672_reg_24042 <= mul_res_672_fu_5423_p2;
        mul_res_674_reg_24052 <= mul_res_674_fu_5461_p2;
        mul_res_675_reg_24057 <= mul_res_675_fu_5489_p2;
        mul_res_677_reg_24067 <= mul_res_677_fu_5527_p2;
        mul_res_678_reg_24072 <= mul_res_678_fu_5555_p2;
        mul_res_679_reg_24077 <= mul_res_679_fu_5583_p2;
        mul_res_680_reg_24082 <= mul_res_680_fu_5611_p2;
        mul_res_681_reg_24087 <= mul_res_681_fu_5639_p2;
        mul_res_682_reg_24092 <= mul_res_682_fu_5667_p2;
        mul_res_683_reg_24103 <= mul_res_683_fu_5695_p2;
        mul_res_684_reg_24108 <= mul_res_684_fu_5723_p2;
        mul_res_685_reg_24113 <= mul_res_685_fu_5751_p2;
        mul_res_687_reg_24123 <= mul_res_687_fu_5789_p2;
        mul_res_688_reg_24128 <= mul_res_688_fu_5817_p2;
        mul_res_689_reg_24139 <= mul_res_689_fu_5845_p2;
        mul_res_690_reg_24144 <= mul_res_690_fu_5873_p2;
        mul_res_694_reg_24164 <= mul_res_694_fu_5931_p2;
        mul_res_695_reg_24169 <= mul_res_695_fu_5959_p2;
        mul_res_696_reg_24174 <= mul_res_696_fu_5987_p2;
        mul_res_698_reg_24184 <= mul_res_698_fu_6025_p2;
        mul_res_699_reg_24189 <= mul_res_699_fu_6053_p2;
        mul_res_701_reg_24199 <= mul_res_701_fu_6091_p2;
        mul_res_702_reg_24204 <= mul_res_702_fu_6119_p2;
        mul_res_703_reg_24209 <= mul_res_703_fu_6147_p2;
        mul_res_704_reg_24214 <= mul_res_704_fu_6175_p2;
        mul_res_705_reg_24219 <= mul_res_705_fu_6203_p2;
        mul_res_706_reg_24224 <= mul_res_706_fu_6231_p2;
        mul_res_707_reg_24235 <= mul_res_707_fu_6259_p2;
        mul_res_708_reg_24240 <= mul_res_708_fu_6287_p2;
        mul_res_709_reg_24245 <= mul_res_709_fu_6315_p2;
        mul_res_711_reg_24255 <= mul_res_711_fu_6353_p2;
        mul_res_712_reg_24260 <= mul_res_712_fu_6381_p2;
        mul_res_713_reg_24271 <= mul_res_713_fu_6409_p2;
        mul_res_714_reg_24276 <= mul_res_714_fu_6437_p2;
        mul_res_718_reg_24296 <= mul_res_718_fu_6495_p2;
        mul_res_719_reg_24301 <= mul_res_719_fu_6523_p2;
        mul_res_720_reg_24306 <= mul_res_720_fu_6551_p2;
        mul_res_722_reg_24316 <= mul_res_722_fu_6589_p2;
        mul_res_723_reg_24321 <= mul_res_723_fu_6617_p2;
        mul_res_725_reg_24331 <= mul_res_725_fu_6655_p2;
        mul_res_726_reg_24336 <= mul_res_726_fu_6683_p2;
        mul_res_727_reg_24341 <= mul_res_727_fu_6711_p2;
        mul_res_728_reg_24346 <= mul_res_728_fu_6739_p2;
        mul_res_729_reg_24351 <= mul_res_729_fu_6767_p2;
        mul_res_730_reg_24356 <= mul_res_730_fu_6795_p2;
        mul_res_731_reg_24367 <= mul_res_731_fu_6823_p2;
        mul_res_732_reg_24372 <= mul_res_732_fu_6851_p2;
        mul_res_733_reg_24377 <= mul_res_733_fu_6879_p2;
        mul_res_735_reg_24387 <= mul_res_735_fu_6917_p2;
        mul_res_736_reg_24392 <= mul_res_736_fu_6945_p2;
        mul_res_737_reg_24403 <= mul_res_737_fu_6973_p2;
        mul_res_738_reg_24408 <= mul_res_738_fu_7001_p2;
        mul_res_742_reg_24428 <= mul_res_742_fu_7059_p2;
        mul_res_743_reg_24433 <= mul_res_743_fu_7087_p2;
        mul_res_744_reg_24438 <= mul_res_744_fu_7115_p2;
        mul_res_746_reg_24448 <= mul_res_746_fu_7153_p2;
        mul_res_747_reg_24453 <= mul_res_747_fu_7181_p2;
        mul_res_749_reg_24463 <= mul_res_749_fu_7219_p2;
        mul_res_750_reg_24468 <= mul_res_750_fu_7247_p2;
        mul_res_751_reg_24473 <= mul_res_751_fu_7275_p2;
        mul_res_752_reg_24478 <= mul_res_752_fu_7303_p2;
        mul_res_753_reg_24483 <= mul_res_753_fu_7331_p2;
        mul_res_754_reg_24488 <= mul_res_754_fu_7359_p2;
        mul_res_755_reg_24499 <= mul_res_755_fu_7387_p2;
        mul_res_756_reg_24504 <= mul_res_756_fu_7415_p2;
        mul_res_757_reg_24509 <= mul_res_757_fu_7443_p2;
        mul_res_759_reg_24519 <= mul_res_759_fu_7481_p2;
        mul_res_760_reg_24524 <= mul_res_760_fu_7509_p2;
        mul_res_761_reg_24535 <= mul_res_761_fu_7537_p2;
        mul_res_762_reg_24540 <= mul_res_762_fu_7565_p2;
        mul_res_766_reg_24560 <= mul_res_766_fu_7623_p2;
        mul_res_767_reg_24565 <= mul_res_767_fu_7651_p2;
        mul_res_768_reg_24570 <= mul_res_768_fu_7679_p2;
        mul_res_770_reg_24580 <= mul_res_770_fu_7717_p2;
        mul_res_771_reg_24585 <= mul_res_771_fu_7745_p2;
        mul_res_773_reg_24595 <= mul_res_773_fu_7783_p2;
        mul_res_774_reg_24600 <= mul_res_774_fu_7811_p2;
        mul_res_775_reg_24605 <= mul_res_775_fu_7839_p2;
        mul_res_776_reg_24610 <= mul_res_776_fu_7867_p2;
        mul_res_777_reg_24615 <= mul_res_777_fu_7895_p2;
        mul_res_778_reg_24620 <= mul_res_778_fu_7923_p2;
        mul_res_779_reg_24631 <= mul_res_779_fu_7951_p2;
        mul_res_780_reg_24636 <= mul_res_780_fu_7979_p2;
        mul_res_781_reg_24641 <= mul_res_781_fu_8007_p2;
        mul_res_783_reg_24651 <= mul_res_783_fu_8045_p2;
        mul_res_784_reg_24656 <= mul_res_784_fu_8073_p2;
        mul_res_785_reg_24667 <= mul_res_785_fu_8101_p2;
        mul_res_786_reg_24672 <= mul_res_786_fu_8129_p2;
        mul_res_790_reg_24692 <= mul_res_790_fu_8187_p2;
        mul_res_791_reg_24697 <= mul_res_791_fu_8215_p2;
        mul_res_792_reg_24702 <= mul_res_792_fu_8243_p2;
        mul_res_794_reg_24712 <= mul_res_794_fu_8281_p2;
        mul_res_795_reg_24717 <= mul_res_795_fu_8309_p2;
        mul_res_797_reg_24727 <= mul_res_797_fu_8347_p2;
        mul_res_798_reg_24732 <= mul_res_798_fu_8375_p2;
        mul_res_799_reg_24737 <= mul_res_799_fu_8403_p2;
        mul_res_800_reg_24742 <= mul_res_800_fu_8431_p2;
        mul_res_801_reg_24747 <= mul_res_801_fu_8459_p2;
        mul_res_802_reg_24752 <= mul_res_802_fu_8487_p2;
        mul_res_803_reg_24763 <= mul_res_803_fu_8515_p2;
        mul_res_804_reg_24768 <= mul_res_804_fu_8543_p2;
        mul_res_805_reg_24773 <= mul_res_805_fu_8571_p2;
        mul_res_807_reg_24783 <= mul_res_807_fu_8609_p2;
        mul_res_808_reg_24788 <= mul_res_808_fu_8637_p2;
        mul_res_809_reg_24799 <= mul_res_809_fu_8665_p2;
        mul_res_810_reg_24804 <= mul_res_810_fu_8693_p2;
        mul_res_814_reg_24824 <= mul_res_814_fu_8751_p2;
        mul_res_815_reg_24829 <= mul_res_815_fu_8779_p2;
        mul_res_816_reg_24834 <= mul_res_816_fu_8807_p2;
        mul_res_818_reg_24844 <= mul_res_818_fu_8845_p2;
        mul_res_819_reg_24849 <= mul_res_819_fu_8873_p2;
        mul_res_821_reg_24859 <= mul_res_821_fu_8911_p2;
        mul_res_822_reg_24864 <= mul_res_822_fu_8939_p2;
        mul_res_823_reg_24869 <= mul_res_823_fu_8967_p2;
        mul_res_824_reg_24874 <= mul_res_824_fu_8995_p2;
        mul_res_825_reg_24879 <= mul_res_825_fu_9023_p2;
        mul_res_826_reg_24884 <= mul_res_826_fu_9051_p2;
        mul_res_828_reg_24894 <= mul_res_828_fu_9089_p2;
        mul_res_829_reg_24899 <= mul_res_829_fu_9117_p2;
        mul_res_831_reg_24909 <= mul_res_831_fu_9155_p2;
        mul_res_832_reg_24914 <= mul_res_832_fu_9183_p2;
        mul_res_834_reg_24924 <= mul_res_834_fu_9221_p2;
        mul_res_838_reg_24944 <= mul_res_838_fu_9279_p2;
        mul_res_839_reg_24949 <= mul_res_839_fu_9307_p2;
        mul_res_840_reg_24954 <= mul_res_840_fu_9335_p2;
        mul_res_842_reg_24964 <= mul_res_842_fu_9373_p2;
        mul_res_843_reg_24969 <= mul_res_843_fu_9401_p2;
        mul_res_845_reg_24979 <= mul_res_845_fu_9439_p2;
        mul_res_846_reg_24984 <= mul_res_846_fu_9467_p2;
        mul_res_847_reg_24989 <= mul_res_847_fu_9495_p2;
        mul_res_848_reg_24994 <= mul_res_848_fu_9523_p2;
        mul_res_849_reg_24999 <= mul_res_849_fu_9551_p2;
        mul_res_850_reg_25004 <= mul_res_850_fu_9579_p2;
        mul_res_852_reg_25014 <= mul_res_852_fu_9617_p2;
        mul_res_853_reg_25019 <= mul_res_853_fu_9645_p2;
        mul_res_855_reg_25029 <= mul_res_855_fu_9683_p2;
        mul_res_856_reg_25034 <= mul_res_856_fu_9711_p2;
        mul_res_858_reg_25044 <= mul_res_858_fu_9749_p2;
        mul_res_862_reg_25064 <= mul_res_862_fu_9807_p2;
        mul_res_863_reg_25069 <= mul_res_863_fu_9835_p2;
        mul_res_864_reg_25074 <= mul_res_864_fu_9863_p2;
        mul_res_866_reg_25084 <= mul_res_866_fu_9901_p2;
        mul_res_867_reg_25089 <= mul_res_867_fu_9929_p2;
        mul_res_869_reg_25099 <= mul_res_869_fu_9967_p2;
        mul_res_870_reg_25104 <= mul_res_870_fu_9995_p2;
        mul_res_871_reg_25109 <= mul_res_871_fu_10023_p2;
        mul_res_872_reg_25114 <= mul_res_872_fu_10051_p2;
        mul_res_873_reg_25119 <= mul_res_873_fu_10079_p2;
        mul_res_874_reg_25124 <= mul_res_874_fu_10107_p2;
        mul_res_876_reg_25134 <= mul_res_876_fu_10145_p2;
        mul_res_877_reg_25139 <= mul_res_877_fu_10173_p2;
        mul_res_879_reg_25149 <= mul_res_879_fu_10211_p2;
        mul_res_880_reg_25154 <= mul_res_880_fu_10239_p2;
        mul_res_882_reg_25164 <= mul_res_882_fu_10277_p2;
        mul_res_886_reg_25184 <= mul_res_886_fu_10335_p2;
        mul_res_887_reg_25189 <= mul_res_887_fu_10349_p2;
        mul_res_888_reg_25194 <= mul_res_888_fu_10363_p2;
        mul_res_890_reg_25199 <= mul_res_890_fu_10377_p2;
        mul_res_891_reg_25204 <= mul_res_891_fu_10391_p2;
        mul_res_893_reg_25209 <= mul_res_893_fu_10405_p2;
        mul_res_894_reg_25214 <= mul_res_894_fu_10419_p2;
        mul_res_895_reg_25219 <= mul_res_895_fu_10433_p2;
        mul_res_896_reg_25224 <= mul_res_896_fu_10447_p2;
        mul_res_897_reg_25229 <= mul_res_897_fu_10461_p2;
        mul_res_898_reg_25234 <= mul_res_898_fu_10475_p2;
        mul_res_900_reg_25239 <= mul_res_900_fu_10489_p2;
        mul_res_901_reg_25244 <= mul_res_901_fu_10503_p2;
        mul_res_903_reg_25249 <= mul_res_903_fu_10517_p2;
        mul_res_904_reg_25254 <= mul_res_904_fu_10531_p2;
        mul_res_906_reg_25259 <= mul_res_906_fu_10545_p2;
        mul_res_910_reg_25264 <= mul_res_910_fu_10559_p2;
        mul_res_911_reg_25269 <= mul_res_911_fu_10573_p2;
        mul_res_912_reg_25274 <= mul_res_912_fu_10587_p2;
        mul_res_914_reg_25279 <= mul_res_914_fu_10601_p2;
        mul_res_915_reg_25284 <= mul_res_915_fu_10615_p2;
        mul_res_917_reg_25289 <= mul_res_917_fu_10629_p2;
        mul_res_918_reg_25294 <= mul_res_918_fu_10643_p2;
        mul_res_919_reg_25299 <= mul_res_919_fu_10657_p2;
        mul_res_920_reg_25304 <= mul_res_920_fu_10671_p2;
        mul_res_921_reg_25309 <= mul_res_921_fu_10685_p2;
        mul_res_922_reg_25314 <= mul_res_922_fu_10699_p2;
        mul_res_924_reg_25319 <= mul_res_924_fu_10713_p2;
        mul_res_925_reg_25324 <= mul_res_925_fu_10727_p2;
        mul_res_927_reg_25329 <= mul_res_927_fu_10741_p2;
        mul_res_928_reg_25334 <= mul_res_928_fu_10755_p2;
        mul_res_930_reg_25339 <= mul_res_930_fu_10769_p2;
        mul_res_934_reg_25344 <= mul_res_934_fu_10783_p2;
        mul_res_935_reg_25349 <= mul_res_935_fu_10797_p2;
        mul_res_936_reg_25354 <= mul_res_936_fu_10811_p2;
        mul_res_938_reg_25359 <= mul_res_938_fu_10825_p2;
        mul_res_939_reg_25364 <= mul_res_939_fu_10839_p2;
        mul_res_941_reg_25369 <= mul_res_941_fu_10853_p2;
        mul_res_942_reg_25374 <= mul_res_942_fu_10867_p2;
        mul_res_943_reg_25379 <= mul_res_943_fu_10881_p2;
        mul_res_944_reg_25384 <= mul_res_944_fu_10895_p2;
        mul_res_945_reg_25389 <= mul_res_945_fu_10909_p2;
        mul_res_946_reg_25394 <= mul_res_946_fu_10923_p2;
        mul_res_948_reg_25399 <= mul_res_948_fu_10937_p2;
        mul_res_949_reg_25404 <= mul_res_949_fu_10951_p2;
        mul_res_951_reg_25409 <= mul_res_951_fu_10965_p2;
        mul_res_952_reg_25414 <= mul_res_952_fu_10979_p2;
        mul_res_954_reg_25419 <= mul_res_954_fu_10993_p2;
        mul_res_958_reg_25424 <= mul_res_958_fu_11007_p2;
        mul_res_959_reg_25429 <= mul_res_959_fu_11021_p2;
        mul_res_960_reg_25434 <= mul_res_960_fu_11035_p2;
        mul_res_962_reg_25439 <= mul_res_962_fu_11049_p2;
        mul_res_963_reg_25444 <= mul_res_963_fu_11063_p2;
        mul_res_965_reg_25449 <= mul_res_965_fu_11077_p2;
        mul_res_966_reg_25454 <= mul_res_966_fu_11091_p2;
        mul_res_967_reg_25459 <= mul_res_967_fu_11105_p2;
        mul_res_968_reg_25464 <= mul_res_968_fu_11119_p2;
        mul_res_969_reg_25469 <= mul_res_969_fu_11133_p2;
        mul_res_970_reg_25474 <= mul_res_970_fu_11147_p2;
        mul_res_972_reg_25479 <= mul_res_972_fu_11161_p2;
        mul_res_973_reg_25484 <= mul_res_973_fu_11175_p2;
        mul_res_975_reg_25489 <= mul_res_975_fu_11189_p2;
        mul_res_976_reg_25494 <= mul_res_976_fu_11203_p2;
        mul_res_978_reg_25499 <= mul_res_978_fu_11217_p2;
        mul_res_982_reg_25504 <= mul_res_982_fu_11231_p2;
        mul_res_983_reg_25509 <= mul_res_983_fu_11245_p2;
        mul_res_984_reg_25514 <= mul_res_984_fu_11259_p2;
        mul_res_986_reg_25519 <= mul_res_986_fu_11273_p2;
        mul_res_987_reg_25524 <= mul_res_987_fu_11287_p2;
        mul_res_989_reg_25529 <= mul_res_989_fu_11301_p2;
        mul_res_990_reg_25534 <= mul_res_990_fu_11315_p2;
        mul_res_991_reg_25539 <= mul_res_991_fu_11329_p2;
        mul_res_992_reg_25544 <= mul_res_992_fu_11343_p2;
        mul_res_993_reg_25549 <= mul_res_993_fu_11357_p2;
        mul_res_994_reg_25554 <= mul_res_994_fu_11371_p2;
        mul_res_996_reg_25559 <= mul_res_996_fu_11385_p2;
        mul_res_997_reg_25564 <= mul_res_997_fu_11399_p2;
        mul_res_999_reg_25569 <= mul_res_999_fu_11413_p2;
        mul_res_reg_23463 <= mul_res_fu_2855_p2;
        select_ln121_3_reg_23411_pp0_iter2_reg <= select_ln121_3_reg_23411;
        sext_ln151_108_reg_24097 <= sext_ln151_108_fu_5683_p1;
        sext_ln151_114_reg_24133 <= sext_ln151_114_fu_5833_p1;
        sext_ln151_12_reg_23541 <= sext_ln151_12_fu_3289_p1;
        sext_ln151_132_reg_24229 <= sext_ln151_132_fu_6247_p1;
        sext_ln151_138_reg_24265 <= sext_ln151_138_fu_6397_p1;
        sext_ln151_156_reg_24361 <= sext_ln151_156_fu_6811_p1;
        sext_ln151_162_reg_24397 <= sext_ln151_162_fu_6961_p1;
        sext_ln151_180_reg_24493 <= sext_ln151_180_fu_7375_p1;
        sext_ln151_186_reg_24529 <= sext_ln151_186_fu_7525_p1;
        sext_ln151_18_reg_23590 <= sext_ln151_18_fu_3519_p1;
        sext_ln151_204_reg_24625 <= sext_ln151_204_fu_7939_p1;
        sext_ln151_210_reg_24661 <= sext_ln151_210_fu_8089_p1;
        sext_ln151_228_reg_24757 <= sext_ln151_228_fu_8503_p1;
        sext_ln151_234_reg_24793 <= sext_ln151_234_fu_8653_p1;
        sext_ln151_36_reg_23701 <= sext_ln151_36_fu_3991_p1;
        sext_ln151_42_reg_23737 <= sext_ln151_42_fu_4141_p1;
        sext_ln151_60_reg_23833 <= sext_ln151_60_fu_4555_p1;
        sext_ln151_66_reg_23869 <= sext_ln151_66_fu_4705_p1;
        sext_ln151_84_reg_23965 <= sext_ln151_84_fu_5119_p1;
        sext_ln151_90_reg_24001 <= sext_ln151_90_fu_5269_p1;
        tmp_289_reg_23478 <= {{cache_window_sm_dout[8:6]}};
        tmp_292_reg_23498 <= {{cache_window_sm_dout[17:15]}};
        tmp_302_reg_23567 <= {{cache_window_sm_dout[47:45]}};
        tmp_307_reg_23611 <= {{cache_window_sm_dout[62:60]}};
        tmp_308_reg_23621 <= {{cache_window_sm_dout[65:63]}};
        tmp_309_reg_23631 <= {{cache_window_sm_dout[68:66]}};
        tmp_313_reg_25079 <= {{cache_window_sm_dout[80:78]}};
        tmp_316_reg_25094 <= {{cache_window_sm_dout[89:87]}};
        tmp_323_reg_25129 <= {{cache_window_sm_dout[110:108]}};
        tmp_326_reg_25144 <= {{cache_window_sm_dout[119:117]}};
        tmp_329_reg_25159 <= {{cache_window_sm_dout[128:126]}};
        tmp_331_reg_25169 <= {{cache_window_sm_dout[134:132]}};
        tmp_332_reg_25174 <= {{cache_window_sm_dout[137:135]}};
        tmp_333_reg_25179 <= {{cache_window_sm_dout[140:138]}};
        tmp_335_reg_23473 <= {{mlp_inst_m2_weight_arr_112_q0[8:6]}};
        tmp_338_reg_23493 <= {{mlp_inst_m2_weight_arr_112_q0[17:15]}};
        tmp_348_reg_23562 <= {{mlp_inst_m2_weight_arr_112_q0[47:45]}};
        tmp_353_reg_23606 <= {{mlp_inst_m2_weight_arr_112_q0[62:60]}};
        tmp_354_reg_23616 <= {{mlp_inst_m2_weight_arr_112_q0[65:63]}};
        tmp_355_reg_23626 <= {{mlp_inst_m2_weight_arr_112_q0[68:66]}};
        tmp_359_reg_23651 <= {{mlp_inst_m2_weight_arr_112_q0[80:78]}};
        tmp_362_reg_23666 <= {{mlp_inst_m2_weight_arr_112_q0[89:87]}};
        tmp_372_reg_23722 <= {{mlp_inst_m2_weight_arr_112_q0[119:117]}};
        tmp_377_reg_23753 <= {{mlp_inst_m2_weight_arr_112_q0[134:132]}};
        tmp_378_reg_23758 <= {{mlp_inst_m2_weight_arr_112_q0[137:135]}};
        tmp_379_reg_23763 <= {{mlp_inst_m2_weight_arr_112_q0[140:138]}};
        tmp_383_reg_23783 <= {{mlp_inst_m2_weight_arr_112_q0[152:150]}};
        tmp_386_reg_23798 <= {{mlp_inst_m2_weight_arr_112_q0[161:159]}};
        tmp_396_reg_23854 <= {{mlp_inst_m2_weight_arr_112_q0[191:189]}};
        tmp_401_reg_23885 <= {{mlp_inst_m2_weight_arr_112_q0[206:204]}};
        tmp_402_reg_23890 <= {{mlp_inst_m2_weight_arr_112_q0[209:207]}};
        tmp_403_reg_23895 <= {{mlp_inst_m2_weight_arr_112_q0[212:210]}};
        tmp_407_reg_23915 <= {{mlp_inst_m2_weight_arr_112_q0[224:222]}};
        tmp_410_reg_23930 <= {{mlp_inst_m2_weight_arr_112_q0[233:231]}};
        tmp_420_reg_23986 <= {{mlp_inst_m2_weight_arr_112_q0[263:261]}};
        tmp_425_reg_24017 <= {{mlp_inst_m2_weight_arr_112_q0[278:276]}};
        tmp_426_reg_24022 <= {{mlp_inst_m2_weight_arr_112_q0[281:279]}};
        tmp_427_reg_24027 <= {{mlp_inst_m2_weight_arr_112_q0[284:282]}};
        tmp_431_reg_24047 <= {{mlp_inst_m2_weight_arr_112_q0[296:294]}};
        tmp_434_reg_24062 <= {{mlp_inst_m2_weight_arr_112_q0[305:303]}};
        tmp_444_reg_24118 <= {{mlp_inst_m2_weight_arr_112_q0[335:333]}};
        tmp_449_reg_24149 <= {{mlp_inst_m2_weight_arr_112_q0[350:348]}};
        tmp_450_reg_24154 <= {{mlp_inst_m2_weight_arr_112_q0[353:351]}};
        tmp_451_reg_24159 <= {{mlp_inst_m2_weight_arr_112_q0[356:354]}};
        tmp_455_reg_24179 <= {{mlp_inst_m2_weight_arr_112_q0[368:366]}};
        tmp_458_reg_24194 <= {{mlp_inst_m2_weight_arr_112_q0[377:375]}};
        tmp_468_reg_24250 <= {{mlp_inst_m2_weight_arr_112_q0[407:405]}};
        tmp_473_reg_24281 <= {{mlp_inst_m2_weight_arr_112_q0[422:420]}};
        tmp_474_reg_24286 <= {{mlp_inst_m2_weight_arr_112_q0[425:423]}};
        tmp_475_reg_24291 <= {{mlp_inst_m2_weight_arr_112_q0[428:426]}};
        tmp_479_reg_24311 <= {{mlp_inst_m2_weight_arr_112_q0[440:438]}};
        tmp_482_reg_24326 <= {{mlp_inst_m2_weight_arr_112_q0[449:447]}};
        tmp_492_reg_24382 <= {{mlp_inst_m2_weight_arr_112_q0[479:477]}};
        tmp_497_reg_24413 <= {{mlp_inst_m2_weight_arr_112_q0[494:492]}};
        tmp_498_reg_24418 <= {{mlp_inst_m2_weight_arr_112_q0[497:495]}};
        tmp_499_reg_24423 <= {{mlp_inst_m2_weight_arr_112_q0[500:498]}};
        tmp_503_reg_24443 <= {{mlp_inst_m2_weight_arr_112_q0[512:510]}};
        tmp_506_reg_24458 <= {{mlp_inst_m2_weight_arr_112_q0[521:519]}};
        tmp_516_reg_24514 <= {{mlp_inst_m2_weight_arr_112_q0[551:549]}};
        tmp_521_reg_24545 <= {{mlp_inst_m2_weight_arr_112_q0[566:564]}};
        tmp_522_reg_24550 <= {{mlp_inst_m2_weight_arr_112_q0[569:567]}};
        tmp_523_reg_24555 <= {{mlp_inst_m2_weight_arr_112_q0[572:570]}};
        tmp_527_reg_24575 <= {{mlp_inst_m2_weight_arr_112_q0[584:582]}};
        tmp_530_reg_24590 <= {{mlp_inst_m2_weight_arr_112_q0[593:591]}};
        tmp_540_reg_24646 <= {{mlp_inst_m2_weight_arr_112_q0[623:621]}};
        tmp_545_reg_24677 <= {{mlp_inst_m2_weight_arr_112_q0[638:636]}};
        tmp_546_reg_24682 <= {{mlp_inst_m2_weight_arr_112_q0[641:639]}};
        tmp_547_reg_24687 <= {{mlp_inst_m2_weight_arr_112_q0[644:642]}};
        tmp_551_reg_24707 <= {{mlp_inst_m2_weight_arr_112_q0[656:654]}};
        tmp_554_reg_24722 <= {{mlp_inst_m2_weight_arr_112_q0[665:663]}};
        tmp_564_reg_24778 <= {{mlp_inst_m2_weight_arr_112_q0[695:693]}};
        tmp_569_reg_24809 <= {{mlp_inst_m2_weight_arr_112_q0[710:708]}};
        tmp_570_reg_24814 <= {{mlp_inst_m2_weight_arr_112_q0[713:711]}};
        tmp_571_reg_24819 <= {{mlp_inst_m2_weight_arr_112_q0[716:714]}};
        tmp_575_reg_24839 <= {{mlp_inst_m2_weight_arr_112_q0[728:726]}};
        tmp_578_reg_24854 <= {{mlp_inst_m2_weight_arr_112_q0[737:735]}};
        tmp_585_reg_24889 <= {{mlp_inst_m2_weight_arr_112_q0[758:756]}};
        tmp_588_reg_24904 <= {{mlp_inst_m2_weight_arr_112_q0[767:765]}};
        tmp_591_reg_24919 <= {{mlp_inst_m2_weight_arr_112_q0[776:774]}};
        tmp_593_reg_24929 <= {{mlp_inst_m2_weight_arr_112_q0[782:780]}};
        tmp_594_reg_24934 <= {{mlp_inst_m2_weight_arr_112_q0[785:783]}};
        tmp_595_reg_24939 <= {{mlp_inst_m2_weight_arr_112_q0[788:786]}};
        tmp_599_reg_24959 <= {{mlp_inst_m2_weight_arr_112_q0[800:798]}};
        tmp_602_reg_24974 <= {{mlp_inst_m2_weight_arr_112_q0[809:807]}};
        tmp_609_reg_25009 <= {{mlp_inst_m2_weight_arr_112_q0[830:828]}};
        tmp_612_reg_25024 <= {{mlp_inst_m2_weight_arr_112_q0[839:837]}};
        tmp_615_reg_25039 <= {{mlp_inst_m2_weight_arr_112_q0[848:846]}};
        tmp_617_reg_25049 <= {{mlp_inst_m2_weight_arr_112_q0[854:852]}};
        tmp_618_reg_25054 <= {{mlp_inst_m2_weight_arr_112_q0[857:855]}};
        tmp_619_reg_25059 <= {{mlp_inst_m2_weight_arr_112_q0[860:858]}};
        tmp_reg_26135 <= {{mlp_inst_m2_bias_arr_113_q0[150:143]}};
        trunc_ln131_1_reg_26075 <= {{mlp_inst_m2_bias_arr_113_q0[22:13]}};
        trunc_ln131_2_reg_26081 <= {{mlp_inst_m2_bias_arr_113_q0[35:26]}};
        trunc_ln131_3_reg_26087 <= {{mlp_inst_m2_bias_arr_113_q0[48:39]}};
        trunc_ln131_4_reg_26093 <= {{mlp_inst_m2_bias_arr_113_q0[61:52]}};
        trunc_ln131_5_reg_26099 <= {{mlp_inst_m2_bias_arr_113_q0[74:65]}};
        trunc_ln131_6_reg_26105 <= {{mlp_inst_m2_bias_arr_113_q0[87:78]}};
        trunc_ln131_7_reg_26111 <= {{mlp_inst_m2_bias_arr_113_q0[100:91]}};
        trunc_ln131_8_reg_26117 <= {{mlp_inst_m2_bias_arr_113_q0[113:104]}};
        trunc_ln131_9_reg_26123 <= {{mlp_inst_m2_bias_arr_113_q0[126:117]}};
        trunc_ln131_reg_26069 <= trunc_ln131_fu_12805_p1;
        trunc_ln131_s_reg_26129 <= {{mlp_inst_m2_bias_arr_113_q0[139:130]}};
        zext_ln151_12_reg_23533[2 : 0] <= zext_ln151_12_fu_3285_p1[2 : 0];
        zext_ln151_18_reg_23582[2 : 0] <= zext_ln151_18_fu_3515_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln121_reg_23397 <= icmp_ln121_fu_2631_p2;
        select_ln121_3_reg_23411 <= select_ln121_3_fu_2730_p3;
        select_ln121_reg_23404 <= select_ln121_fu_2722_p3;
        trunc_ln121_reg_23416 <= trunc_ln121_fu_2738_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        conv_i724_fu_2412 <= add_ln153_23_fu_21019_p2;
        conv_i748_fu_2460 <= add_ln153_311_fu_21910_p2;
        conv_i_10744_fu_2452 <= add_ln153_263_fu_21742_p2;
        conv_i_10768_fu_2500 <= add_ln153_551_fu_22750_p2;
        conv_i_111726_fu_2416 <= add_ln153_47_fu_21090_p2;
        conv_i_111750_fu_2464 <= add_ln153_335_fu_21994_p2;
        conv_i_11746_fu_2456 <= add_ln153_287_fu_21826_p2;
        conv_i_11770_fu_2504 <= add_ln153_575_fu_22834_p2;
        conv_i_2728_fu_2420 <= add_ln153_71_fu_21161_p2;
        conv_i_2752_fu_2468 <= add_ln153_359_fu_22078_p2;
        conv_i_3730_fu_2424 <= add_ln153_95_fu_21232_p2;
        conv_i_3754_fu_2472 <= add_ln153_383_fu_22162_p2;
        conv_i_4732_fu_2428 <= add_ln153_119_fu_21303_p2;
        conv_i_4756_fu_2476 <= add_ln153_407_fu_22246_p2;
        conv_i_5734_fu_2432 <= add_ln153_143_fu_21374_p2;
        conv_i_5758_fu_2480 <= add_ln153_431_fu_22330_p2;
        conv_i_6736_fu_2436 <= add_ln153_167_fu_21445_p2;
        conv_i_6760_fu_2484 <= add_ln153_455_fu_22414_p2;
        conv_i_7738_fu_2440 <= add_ln153_191_fu_21516_p2;
        conv_i_7762_fu_2488 <= add_ln153_479_fu_22498_p2;
        conv_i_8740_fu_2444 <= add_ln153_215_fu_21587_p2;
        conv_i_8764_fu_2492 <= add_ln153_503_fu_22582_p2;
        conv_i_9742_fu_2448 <= add_ln153_239_fu_21658_p2;
        conv_i_9766_fu_2496 <= add_ln153_527_fu_22666_p2;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[3'd0] == 1'b1) & ((icmp_ln120_fu_2625_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int_frp = 1'b1;
    end else begin
        ap_done_int_frp = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[3'd1] == 1'b1)) begin
        ap_enable_reg_pp0_iter1 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter1 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[3'd2] == 1'b1)) begin
        ap_enable_reg_pp0_iter2 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter2 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[3'd3] == 1'b1)) begin
        ap_enable_reg_pp0_iter3 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter3 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[3'd4] == 1'b1)) begin
        ap_enable_reg_pp0_iter4 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter4 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[3'd5] == 1'b1)) begin
        ap_enable_reg_pp0_iter5 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter5 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[3'd6] == 1'b1)) begin
        ap_enable_reg_pp0_iter6 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter6 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[3'd3] == 1'b1)) begin
        ap_frp_data_issued_nxt_cache_window_sm_op104 = 1'b1;
    end else begin
        ap_frp_data_issued_nxt_cache_window_sm_op104 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_frp_data_issued_nxt_cache_window_sm_op104 == 1'b1)) begin
        ap_frp_data_next_issued_cache_window_sm = 1'd1;
    end else begin
        ap_frp_data_next_issued_cache_window_sm = 1'd0;
    end
end

always @ (*) begin
    if ((~(icmp_ln120_fu_2625_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_frp_data_req_cache_window_sm_op104 = 1'd1;
    end else begin
        ap_frp_data_req_cache_window_sm_op104 = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_frp_pvb_pf_start) & (1'b1 == ap_condition_frp_pvb_no_bkwd_prs) & (1'b1 == ap_condition_frp_roi_pvb_no_fwd_prs))) begin
        ap_frp_vld_in = 1'b1;
    end else begin
        ap_frp_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (frp_pipeline_valid_U_valid_out[3'd0] == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[3'd1] == 1'b1) & ((1'b0 == ap_block_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1)))) begin
        ap_sig_allocacmp_cit_load = 6'd0;
    end else begin
        ap_sig_allocacmp_cit_load = cit_fu_2408;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[3'd1] == 1'b1) & ((1'b0 == ap_block_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1)))) begin
        ap_sig_allocacmp_cot_load = 5'd0;
    end else begin
        ap_sig_allocacmp_cot_load = cot_fu_2508;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten59_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten59_load = indvar_flatten59_fu_2516;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_2512;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cache_window_sm_read = 1'b1;
    end else begin
        cache_window_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_2625_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        frp_pipeline_valid_U_exitcond = 1'b1;
    end else begin
        frp_pipeline_valid_U_exitcond = 1'b0;
    end
end

always @ (*) begin
    if ((pf_mac_sm_U_data_out_vld == 1'b1)) begin
        mac_sm_write = 1'b1;
    end else begin
        mac_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        mlp_inst_m2_bias_arr_113_ce0 = 1'b1;
    end else begin
        mlp_inst_m2_bias_arr_113_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_m2_weight_arr_112_ce0 = 1'b1;
    end else begin
        mlp_inst_m2_weight_arr_112_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln161_reg_23454_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        pf_mac_sm_U_data_in_vld = 1'b1;
    end else begin
        pf_mac_sm_U_data_in_vld = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln120_fu_2619_p2 = (ap_sig_allocacmp_indvar_flatten59_load + 16'd1);

assign add_ln121_2_fu_2637_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln121_fu_2711_p2 = (select_ln120_fu_2687_p3 + 5'd1);

assign add_ln122_fu_2742_p2 = (select_ln121_fu_2722_p3 + 6'd1);

assign add_ln151_fu_2782_p2 = (tmp_288_fu_2772_p3 + zext_ln151_48_fu_2779_p1);

assign add_ln153_100_fu_21253_p2 = ($signed(sext_ln153_88_fu_21250_p1) + $signed(add_ln153_97_fu_21244_p2));

assign add_ln153_101_fu_14427_p2 = ($signed(sext_ln151_391_fu_14294_p1) + $signed(sext_ln151_393_fu_14300_p1));

assign add_ln153_102_fu_14437_p2 = ($signed(sext_ln153_84_fu_14433_p1) + $signed(sext_ln151_398_fu_14333_p1));

assign add_ln153_103_fu_14447_p2 = ($signed(sext_ln151_394_fu_14303_p1) + $signed(sext_ln151_396_fu_14327_p1));

assign add_ln153_104_fu_14457_p2 = ($signed(sext_ln153_86_fu_14453_p1) + $signed(sext_ln151_392_fu_14297_p1));

assign add_ln153_105_fu_14467_p2 = ($signed(sext_ln153_87_fu_14463_p1) + $signed(sext_ln153_85_fu_14443_p1));

assign add_ln153_106_fu_21297_p2 = (add_ln153_118_fu_21291_p2 + add_ln153_100_fu_21253_p2);

assign add_ln153_107_fu_14473_p2 = ($signed(sext_ln151_381_fu_14228_p1) + $signed(sext_ln151_380_fu_14225_p1));

assign add_ln153_108_fu_14483_p2 = ($signed(sext_ln153_89_fu_14479_p1) + $signed(sext_ln151_395_fu_14323_p1));

assign add_ln153_109_fu_14489_p2 = ($signed(sext_ln151_384_fu_14255_p1) + $signed(sext_ln151_383_fu_14252_p1));

assign add_ln153_10_fu_21013_p2 = (add_ln153_22_fu_21007_p2 + add_ln153_4_fu_20969_p2);

assign add_ln153_110_fu_14499_p2 = ($signed(sext_ln153_91_fu_14495_p1) + $signed(sext_ln151_382_fu_14248_p1));

assign add_ln153_111_fu_21265_p2 = ($signed(sext_ln153_92_fu_21262_p1) + $signed(sext_ln153_90_fu_21259_p1));

assign add_ln153_112_fu_14505_p2 = ($signed(sext_ln151_387_fu_14282_p1) + $signed(sext_ln151_386_fu_14279_p1));

assign add_ln153_113_fu_14515_p2 = ($signed(sext_ln153_94_fu_14511_p1) + $signed(sext_ln151_385_fu_14275_p1));

assign add_ln153_114_fu_14521_p2 = ($signed(sext_ln151_388_fu_14285_p1) + $signed(sext_ln151_390_fu_14291_p1));

assign add_ln153_115_fu_14531_p2 = ($signed(sext_ln151_389_fu_14288_p1) + $signed(sext_ln153_80_fu_14402_p1));

assign add_ln153_116_fu_14541_p2 = ($signed(sext_ln153_97_fu_14537_p1) + $signed(sext_ln153_96_fu_14527_p1));

assign add_ln153_117_fu_21281_p2 = ($signed(sext_ln153_98_fu_21278_p1) + $signed(sext_ln153_95_fu_21275_p1));

assign add_ln153_118_fu_21291_p2 = ($signed(sext_ln153_99_fu_21287_p1) + $signed(sext_ln153_93_fu_21271_p1));

assign add_ln153_119_fu_21303_p2 = (add_ln153_106_fu_21297_p2 + select_ln126_19_fu_20924_p3);

assign add_ln153_11_fu_13185_p2 = ($signed(sext_ln151_289_fu_12922_p1) + $signed(sext_ln151_288_fu_12919_p1));

assign add_ln153_120_fu_14727_p2 = ($signed(sext_ln151_424_fu_14699_p1) + $signed(sext_ln151_425_fu_14720_p1));

assign add_ln153_121_fu_21315_p2 = ($signed(sext_ln153_103_fu_21312_p1) + $signed(sext_ln153_101_fu_21309_p1));

assign add_ln153_122_fu_14733_p2 = ($signed(sext_ln151_420_fu_14652_p1) + $signed(sext_ln151_422_fu_14658_p1));

assign add_ln153_123_fu_14743_p2 = ($signed(sext_ln153_102_fu_14739_p1) + $signed(sext_ln151_423_fu_14678_p1));

assign add_ln153_124_fu_21324_p2 = ($signed(sext_ln153_108_fu_21321_p1) + $signed(add_ln153_121_fu_21315_p2));

assign add_ln153_125_fu_14749_p2 = ($signed(sext_ln151_414_fu_14616_p1) + $signed(sext_ln151_416_fu_14622_p1));

assign add_ln153_126_fu_14759_p2 = ($signed(sext_ln153_104_fu_14755_p1) + $signed(sext_ln151_421_fu_14655_p1));

assign add_ln153_127_fu_14769_p2 = ($signed(sext_ln151_417_fu_14625_p1) + $signed(sext_ln151_419_fu_14649_p1));

assign add_ln153_128_fu_14779_p2 = ($signed(sext_ln153_106_fu_14775_p1) + $signed(sext_ln151_415_fu_14619_p1));

assign add_ln153_129_fu_14789_p2 = ($signed(sext_ln153_107_fu_14785_p1) + $signed(sext_ln153_105_fu_14765_p1));

assign add_ln153_12_fu_13195_p2 = ($signed(sext_ln153_9_fu_13191_p1) + $signed(sext_ln151_303_fu_13026_p1));

assign add_ln153_130_fu_21368_p2 = (add_ln153_142_fu_21362_p2 + add_ln153_124_fu_21324_p2);

assign add_ln153_131_fu_14795_p2 = ($signed(sext_ln151_404_fu_14550_p1) + $signed(sext_ln151_403_fu_14547_p1));

assign add_ln153_132_fu_14805_p2 = ($signed(sext_ln153_109_fu_14801_p1) + $signed(sext_ln151_418_fu_14645_p1));

assign add_ln153_133_fu_14811_p2 = ($signed(sext_ln151_407_fu_14577_p1) + $signed(sext_ln151_406_fu_14574_p1));

assign add_ln153_134_fu_14821_p2 = ($signed(sext_ln153_111_fu_14817_p1) + $signed(sext_ln151_405_fu_14570_p1));

assign add_ln153_135_fu_21336_p2 = ($signed(sext_ln153_112_fu_21333_p1) + $signed(sext_ln153_110_fu_21330_p1));

assign add_ln153_136_fu_14827_p2 = ($signed(sext_ln151_410_fu_14604_p1) + $signed(sext_ln151_409_fu_14601_p1));

assign add_ln153_137_fu_14837_p2 = ($signed(sext_ln153_114_fu_14833_p1) + $signed(sext_ln151_408_fu_14597_p1));

assign add_ln153_138_fu_14843_p2 = ($signed(sext_ln151_411_fu_14607_p1) + $signed(sext_ln151_413_fu_14613_p1));

assign add_ln153_139_fu_14853_p2 = ($signed(sext_ln151_412_fu_14610_p1) + $signed(sext_ln153_100_fu_14724_p1));

assign add_ln153_13_fu_13201_p2 = ($signed(sext_ln151_292_fu_12952_p1) + $signed(sext_ln151_291_fu_12949_p1));

assign add_ln153_140_fu_14863_p2 = ($signed(sext_ln153_117_fu_14859_p1) + $signed(sext_ln153_116_fu_14849_p1));

assign add_ln153_141_fu_21352_p2 = ($signed(sext_ln153_118_fu_21349_p1) + $signed(sext_ln153_115_fu_21346_p1));

assign add_ln153_142_fu_21362_p2 = ($signed(sext_ln153_119_fu_21358_p1) + $signed(sext_ln153_113_fu_21342_p1));

assign add_ln153_143_fu_21374_p2 = (add_ln153_130_fu_21368_p2 + select_ln126_18_fu_20918_p3);

assign add_ln153_144_fu_15049_p2 = ($signed(sext_ln151_447_fu_15021_p1) + $signed(sext_ln151_448_fu_15042_p1));

assign add_ln153_145_fu_21386_p2 = ($signed(sext_ln153_123_fu_21383_p1) + $signed(sext_ln153_121_fu_21380_p1));

assign add_ln153_146_fu_15055_p2 = ($signed(sext_ln151_443_fu_14974_p1) + $signed(sext_ln151_445_fu_14980_p1));

assign add_ln153_147_fu_15065_p2 = ($signed(sext_ln153_122_fu_15061_p1) + $signed(sext_ln151_446_fu_15000_p1));

assign add_ln153_148_fu_21395_p2 = ($signed(sext_ln153_128_fu_21392_p1) + $signed(add_ln153_145_fu_21386_p2));

assign add_ln153_149_fu_15071_p2 = ($signed(sext_ln151_437_fu_14938_p1) + $signed(sext_ln151_439_fu_14944_p1));

assign add_ln153_14_fu_13211_p2 = ($signed(sext_ln153_11_fu_13207_p1) + $signed(sext_ln151_290_fu_12945_p1));

assign add_ln153_150_fu_15081_p2 = ($signed(sext_ln153_124_fu_15077_p1) + $signed(sext_ln151_444_fu_14977_p1));

assign add_ln153_151_fu_15091_p2 = ($signed(sext_ln151_440_fu_14947_p1) + $signed(sext_ln151_442_fu_14971_p1));

assign add_ln153_152_fu_15101_p2 = ($signed(sext_ln153_126_fu_15097_p1) + $signed(sext_ln151_438_fu_14941_p1));

assign add_ln153_153_fu_15111_p2 = ($signed(sext_ln153_127_fu_15107_p1) + $signed(sext_ln153_125_fu_15087_p1));

assign add_ln153_154_fu_21439_p2 = (add_ln153_166_fu_21433_p2 + add_ln153_148_fu_21395_p2);

assign add_ln153_155_fu_15117_p2 = ($signed(sext_ln151_427_fu_14872_p1) + $signed(sext_ln151_426_fu_14869_p1));

assign add_ln153_156_fu_15127_p2 = ($signed(sext_ln153_129_fu_15123_p1) + $signed(sext_ln151_441_fu_14967_p1));

assign add_ln153_157_fu_15133_p2 = ($signed(sext_ln151_430_fu_14899_p1) + $signed(sext_ln151_429_fu_14896_p1));

assign add_ln153_158_fu_15143_p2 = ($signed(sext_ln153_131_fu_15139_p1) + $signed(sext_ln151_428_fu_14892_p1));

assign add_ln153_159_fu_21407_p2 = ($signed(sext_ln153_132_fu_21404_p1) + $signed(sext_ln153_130_fu_21401_p1));

assign add_ln153_15_fu_20981_p2 = ($signed(sext_ln153_12_fu_20978_p1) + $signed(sext_ln153_10_fu_20975_p1));

assign add_ln153_160_fu_15149_p2 = ($signed(sext_ln151_433_fu_14926_p1) + $signed(sext_ln151_432_fu_14923_p1));

assign add_ln153_161_fu_15159_p2 = ($signed(sext_ln153_134_fu_15155_p1) + $signed(sext_ln151_431_fu_14919_p1));

assign add_ln153_162_fu_15165_p2 = ($signed(sext_ln151_434_fu_14929_p1) + $signed(sext_ln151_436_fu_14935_p1));

assign add_ln153_163_fu_15175_p2 = ($signed(sext_ln151_435_fu_14932_p1) + $signed(sext_ln153_120_fu_15046_p1));

assign add_ln153_164_fu_15185_p2 = ($signed(sext_ln153_137_fu_15181_p1) + $signed(sext_ln153_136_fu_15171_p1));

assign add_ln153_165_fu_21423_p2 = ($signed(sext_ln153_138_fu_21420_p1) + $signed(sext_ln153_135_fu_21417_p1));

assign add_ln153_166_fu_21433_p2 = ($signed(sext_ln153_139_fu_21429_p1) + $signed(sext_ln153_133_fu_21413_p1));

assign add_ln153_167_fu_21445_p2 = (add_ln153_154_fu_21439_p2 + select_ln126_17_fu_20912_p3);

assign add_ln153_168_fu_15371_p2 = ($signed(sext_ln151_470_fu_15343_p1) + $signed(sext_ln151_471_fu_15364_p1));

assign add_ln153_169_fu_21457_p2 = ($signed(sext_ln153_143_fu_21454_p1) + $signed(sext_ln153_141_fu_21451_p1));

assign add_ln153_16_fu_13217_p2 = ($signed(sext_ln151_295_fu_12982_p1) + $signed(sext_ln151_294_fu_12979_p1));

assign add_ln153_170_fu_15377_p2 = ($signed(sext_ln151_466_fu_15296_p1) + $signed(sext_ln151_468_fu_15302_p1));

assign add_ln153_171_fu_15387_p2 = ($signed(sext_ln153_142_fu_15383_p1) + $signed(sext_ln151_469_fu_15322_p1));

assign add_ln153_172_fu_21466_p2 = ($signed(sext_ln153_148_fu_21463_p1) + $signed(add_ln153_169_fu_21457_p2));

assign add_ln153_173_fu_15393_p2 = ($signed(sext_ln151_460_fu_15260_p1) + $signed(sext_ln151_462_fu_15266_p1));

assign add_ln153_174_fu_15403_p2 = ($signed(sext_ln153_144_fu_15399_p1) + $signed(sext_ln151_467_fu_15299_p1));

assign add_ln153_175_fu_15413_p2 = ($signed(sext_ln151_463_fu_15269_p1) + $signed(sext_ln151_465_fu_15293_p1));

assign add_ln153_176_fu_15423_p2 = ($signed(sext_ln153_146_fu_15419_p1) + $signed(sext_ln151_461_fu_15263_p1));

assign add_ln153_177_fu_15433_p2 = ($signed(sext_ln153_147_fu_15429_p1) + $signed(sext_ln153_145_fu_15409_p1));

assign add_ln153_178_fu_21510_p2 = (add_ln153_190_fu_21504_p2 + add_ln153_172_fu_21466_p2);

assign add_ln153_179_fu_15439_p2 = ($signed(sext_ln151_450_fu_15194_p1) + $signed(sext_ln151_449_fu_15191_p1));

assign add_ln153_17_fu_13227_p2 = ($signed(sext_ln153_14_fu_13223_p1) + $signed(sext_ln151_293_fu_12975_p1));

assign add_ln153_180_fu_15449_p2 = ($signed(sext_ln153_149_fu_15445_p1) + $signed(sext_ln151_464_fu_15289_p1));

assign add_ln153_181_fu_15455_p2 = ($signed(sext_ln151_453_fu_15221_p1) + $signed(sext_ln151_452_fu_15218_p1));

assign add_ln153_182_fu_15465_p2 = ($signed(sext_ln153_151_fu_15461_p1) + $signed(sext_ln151_451_fu_15214_p1));

assign add_ln153_183_fu_21478_p2 = ($signed(sext_ln153_152_fu_21475_p1) + $signed(sext_ln153_150_fu_21472_p1));

assign add_ln153_184_fu_15471_p2 = ($signed(sext_ln151_456_fu_15248_p1) + $signed(sext_ln151_455_fu_15245_p1));

assign add_ln153_185_fu_15481_p2 = ($signed(sext_ln153_154_fu_15477_p1) + $signed(sext_ln151_454_fu_15241_p1));

assign add_ln153_186_fu_15487_p2 = ($signed(sext_ln151_457_fu_15251_p1) + $signed(sext_ln151_459_fu_15257_p1));

assign add_ln153_187_fu_15497_p2 = ($signed(sext_ln151_458_fu_15254_p1) + $signed(sext_ln153_140_fu_15368_p1));

assign add_ln153_188_fu_15507_p2 = ($signed(sext_ln153_157_fu_15503_p1) + $signed(sext_ln153_156_fu_15493_p1));

assign add_ln153_189_fu_21494_p2 = ($signed(sext_ln153_158_fu_21491_p1) + $signed(sext_ln153_155_fu_21488_p1));

assign add_ln153_18_fu_13233_p2 = ($signed(sext_ln151_296_fu_12985_p1) + $signed(sext_ln151_298_fu_12991_p1));

assign add_ln153_190_fu_21504_p2 = ($signed(sext_ln153_159_fu_21500_p1) + $signed(sext_ln153_153_fu_21484_p1));

assign add_ln153_191_fu_21516_p2 = (add_ln153_178_fu_21510_p2 + select_ln126_16_fu_20906_p3);

assign add_ln153_192_fu_15693_p2 = ($signed(sext_ln151_493_fu_15665_p1) + $signed(sext_ln151_494_fu_15686_p1));

assign add_ln153_193_fu_21528_p2 = ($signed(sext_ln153_163_fu_21525_p1) + $signed(sext_ln153_161_fu_21522_p1));

assign add_ln153_194_fu_15699_p2 = ($signed(sext_ln151_489_fu_15618_p1) + $signed(sext_ln151_491_fu_15624_p1));

assign add_ln153_195_fu_15709_p2 = ($signed(sext_ln153_162_fu_15705_p1) + $signed(sext_ln151_492_fu_15644_p1));

assign add_ln153_196_fu_21537_p2 = ($signed(sext_ln153_168_fu_21534_p1) + $signed(add_ln153_193_fu_21528_p2));

assign add_ln153_197_fu_15715_p2 = ($signed(sext_ln151_483_fu_15582_p1) + $signed(sext_ln151_485_fu_15588_p1));

assign add_ln153_198_fu_15725_p2 = ($signed(sext_ln153_164_fu_15721_p1) + $signed(sext_ln151_490_fu_15621_p1));

assign add_ln153_199_fu_15735_p2 = ($signed(sext_ln151_486_fu_15591_p1) + $signed(sext_ln151_488_fu_15615_p1));

assign add_ln153_19_fu_13243_p2 = ($signed(sext_ln151_297_fu_12988_p1) + $signed(sext_ln153_fu_13114_p1));

assign add_ln153_1_fu_20960_p2 = ($signed(sext_ln153_3_fu_20957_p1) + $signed(sext_ln153_1_fu_20954_p1));

assign add_ln153_200_fu_15745_p2 = ($signed(sext_ln153_166_fu_15741_p1) + $signed(sext_ln151_484_fu_15585_p1));

assign add_ln153_201_fu_15755_p2 = ($signed(sext_ln153_167_fu_15751_p1) + $signed(sext_ln153_165_fu_15731_p1));

assign add_ln153_202_fu_21581_p2 = (add_ln153_214_fu_21575_p2 + add_ln153_196_fu_21537_p2);

assign add_ln153_203_fu_15761_p2 = ($signed(sext_ln151_473_fu_15516_p1) + $signed(sext_ln151_472_fu_15513_p1));

assign add_ln153_204_fu_15771_p2 = ($signed(sext_ln153_169_fu_15767_p1) + $signed(sext_ln151_487_fu_15611_p1));

assign add_ln153_205_fu_15777_p2 = ($signed(sext_ln151_476_fu_15543_p1) + $signed(sext_ln151_475_fu_15540_p1));

assign add_ln153_206_fu_15787_p2 = ($signed(sext_ln153_171_fu_15783_p1) + $signed(sext_ln151_474_fu_15536_p1));

assign add_ln153_207_fu_21549_p2 = ($signed(sext_ln153_172_fu_21546_p1) + $signed(sext_ln153_170_fu_21543_p1));

assign add_ln153_208_fu_15793_p2 = ($signed(sext_ln151_479_fu_15570_p1) + $signed(sext_ln151_478_fu_15567_p1));

assign add_ln153_209_fu_15803_p2 = ($signed(sext_ln153_174_fu_15799_p1) + $signed(sext_ln151_477_fu_15563_p1));

assign add_ln153_20_fu_13253_p2 = ($signed(sext_ln153_17_fu_13249_p1) + $signed(sext_ln153_16_fu_13239_p1));

assign add_ln153_210_fu_15809_p2 = ($signed(sext_ln151_480_fu_15573_p1) + $signed(sext_ln151_482_fu_15579_p1));

assign add_ln153_211_fu_15819_p2 = ($signed(sext_ln151_481_fu_15576_p1) + $signed(sext_ln153_160_fu_15690_p1));

assign add_ln153_212_fu_15829_p2 = ($signed(sext_ln153_177_fu_15825_p1) + $signed(sext_ln153_176_fu_15815_p1));

assign add_ln153_213_fu_21565_p2 = ($signed(sext_ln153_178_fu_21562_p1) + $signed(sext_ln153_175_fu_21559_p1));

assign add_ln153_214_fu_21575_p2 = ($signed(sext_ln153_179_fu_21571_p1) + $signed(sext_ln153_173_fu_21555_p1));

assign add_ln153_215_fu_21587_p2 = (add_ln153_202_fu_21581_p2 + select_ln126_15_fu_20900_p3);

assign add_ln153_216_fu_16015_p2 = ($signed(sext_ln151_516_fu_15987_p1) + $signed(sext_ln151_517_fu_16008_p1));

assign add_ln153_217_fu_21599_p2 = ($signed(sext_ln153_183_fu_21596_p1) + $signed(sext_ln153_181_fu_21593_p1));

assign add_ln153_218_fu_16021_p2 = ($signed(sext_ln151_512_fu_15940_p1) + $signed(sext_ln151_514_fu_15946_p1));

assign add_ln153_219_fu_16031_p2 = ($signed(sext_ln153_182_fu_16027_p1) + $signed(sext_ln151_515_fu_15966_p1));

assign add_ln153_21_fu_20997_p2 = ($signed(sext_ln153_18_fu_20994_p1) + $signed(sext_ln153_15_fu_20991_p1));

assign add_ln153_220_fu_21608_p2 = ($signed(sext_ln153_188_fu_21605_p1) + $signed(add_ln153_217_fu_21599_p2));

assign add_ln153_221_fu_16037_p2 = ($signed(sext_ln151_506_fu_15904_p1) + $signed(sext_ln151_508_fu_15910_p1));

assign add_ln153_222_fu_16047_p2 = ($signed(sext_ln153_184_fu_16043_p1) + $signed(sext_ln151_513_fu_15943_p1));

assign add_ln153_223_fu_16057_p2 = ($signed(sext_ln151_509_fu_15913_p1) + $signed(sext_ln151_511_fu_15937_p1));

assign add_ln153_224_fu_16067_p2 = ($signed(sext_ln153_186_fu_16063_p1) + $signed(sext_ln151_507_fu_15907_p1));

assign add_ln153_225_fu_16077_p2 = ($signed(sext_ln153_187_fu_16073_p1) + $signed(sext_ln153_185_fu_16053_p1));

assign add_ln153_226_fu_21652_p2 = (add_ln153_238_fu_21646_p2 + add_ln153_220_fu_21608_p2);

assign add_ln153_227_fu_16083_p2 = ($signed(sext_ln151_496_fu_15838_p1) + $signed(sext_ln151_495_fu_15835_p1));

assign add_ln153_228_fu_16093_p2 = ($signed(sext_ln153_189_fu_16089_p1) + $signed(sext_ln151_510_fu_15933_p1));

assign add_ln153_229_fu_16099_p2 = ($signed(sext_ln151_499_fu_15865_p1) + $signed(sext_ln151_498_fu_15862_p1));

assign add_ln153_22_fu_21007_p2 = ($signed(sext_ln153_19_fu_21003_p1) + $signed(sext_ln153_13_fu_20987_p1));

assign add_ln153_230_fu_16109_p2 = ($signed(sext_ln153_191_fu_16105_p1) + $signed(sext_ln151_497_fu_15858_p1));

assign add_ln153_231_fu_21620_p2 = ($signed(sext_ln153_192_fu_21617_p1) + $signed(sext_ln153_190_fu_21614_p1));

assign add_ln153_232_fu_16115_p2 = ($signed(sext_ln151_502_fu_15892_p1) + $signed(sext_ln151_501_fu_15889_p1));

assign add_ln153_233_fu_16125_p2 = ($signed(sext_ln153_194_fu_16121_p1) + $signed(sext_ln151_500_fu_15885_p1));

assign add_ln153_234_fu_16131_p2 = ($signed(sext_ln151_503_fu_15895_p1) + $signed(sext_ln151_505_fu_15901_p1));

assign add_ln153_235_fu_16141_p2 = ($signed(sext_ln151_504_fu_15898_p1) + $signed(sext_ln153_180_fu_16012_p1));

assign add_ln153_236_fu_16151_p2 = ($signed(sext_ln153_197_fu_16147_p1) + $signed(sext_ln153_196_fu_16137_p1));

assign add_ln153_237_fu_21636_p2 = ($signed(sext_ln153_198_fu_21633_p1) + $signed(sext_ln153_195_fu_21630_p1));

assign add_ln153_238_fu_21646_p2 = ($signed(sext_ln153_199_fu_21642_p1) + $signed(sext_ln153_193_fu_21626_p1));

assign add_ln153_239_fu_21658_p2 = (add_ln153_226_fu_21652_p2 + select_ln126_14_fu_20894_p3);

assign add_ln153_23_fu_21019_p2 = (add_ln153_10_fu_21013_p2 + select_ln126_23_fu_20948_p3);

assign add_ln153_240_fu_16369_p2 = ($signed(sext_ln151_539_fu_16341_p1) + $signed(sext_ln151_540_fu_16362_p1));

assign add_ln153_241_fu_21667_p2 = ($signed(sext_ln153_201_fu_21664_p1) + $signed(select_ln126_13_fu_20888_p3));

assign add_ln153_242_fu_16375_p2 = ($signed(sext_ln151_535_fu_16278_p1) + $signed(sext_ln151_537_fu_16300_p1));

assign add_ln153_243_fu_16385_p2 = ($signed(sext_ln153_202_fu_16381_p1) + $signed(sext_ln151_538_fu_16320_p1));

assign add_ln153_244_fu_21676_p2 = ($signed(sext_ln153_203_fu_21673_p1) + $signed(add_ln153_241_fu_21667_p2));

assign add_ln153_245_fu_16391_p2 = ($signed(sext_ln151_529_fu_16226_p1) + $signed(sext_ln151_531_fu_16248_p1));

assign add_ln153_246_fu_16401_p2 = ($signed(sext_ln153_204_fu_16397_p1) + $signed(sext_ln151_536_fu_16296_p1));

assign add_ln153_247_fu_16407_p2 = ($signed(sext_ln151_532_fu_16251_p1) + $signed(sext_ln151_534_fu_16275_p1));

assign add_ln153_248_fu_16417_p2 = ($signed(sext_ln153_206_fu_16413_p1) + $signed(sext_ln151_530_fu_16244_p1));

assign add_ln153_249_fu_21688_p2 = ($signed(sext_ln153_207_fu_21685_p1) + $signed(sext_ln153_205_fu_21682_p1));

assign add_ln153_24_fu_13439_p2 = ($signed(sext_ln151_332_fu_13411_p1) + $signed(sext_ln151_333_fu_13432_p1));

assign add_ln153_250_fu_21698_p2 = ($signed(sext_ln153_208_fu_21694_p1) + $signed(add_ln153_244_fu_21676_p2));

assign add_ln153_251_fu_16423_p2 = ($signed(sext_ln151_519_fu_16160_p1) + $signed(sext_ln151_518_fu_16157_p1));

assign add_ln153_252_fu_16433_p2 = ($signed(sext_ln153_209_fu_16429_p1) + $signed(sext_ln151_533_fu_16271_p1));

assign add_ln153_253_fu_16439_p2 = ($signed(sext_ln151_522_fu_16187_p1) + $signed(sext_ln151_521_fu_16184_p1));

assign add_ln153_254_fu_16449_p2 = ($signed(sext_ln153_211_fu_16445_p1) + $signed(sext_ln151_520_fu_16180_p1));

assign add_ln153_255_fu_21710_p2 = ($signed(sext_ln153_212_fu_21707_p1) + $signed(sext_ln153_210_fu_21704_p1));

assign add_ln153_256_fu_16455_p2 = ($signed(sext_ln151_525_fu_16214_p1) + $signed(sext_ln151_524_fu_16211_p1));

assign add_ln153_257_fu_16465_p2 = ($signed(sext_ln153_214_fu_16461_p1) + $signed(sext_ln151_523_fu_16207_p1));

assign add_ln153_258_fu_16471_p2 = ($signed(sext_ln151_526_fu_16217_p1) + $signed(sext_ln151_528_fu_16223_p1));

assign add_ln153_259_fu_16481_p2 = ($signed(sext_ln151_527_fu_16220_p1) + $signed(sext_ln153_200_fu_16366_p1));

assign add_ln153_25_fu_21031_p2 = ($signed(sext_ln153_23_fu_21028_p1) + $signed(sext_ln153_21_fu_21025_p1));

assign add_ln153_260_fu_16491_p2 = ($signed(sext_ln153_217_fu_16487_p1) + $signed(sext_ln153_216_fu_16477_p1));

assign add_ln153_261_fu_21726_p2 = ($signed(sext_ln153_218_fu_21723_p1) + $signed(sext_ln153_215_fu_21720_p1));

assign add_ln153_262_fu_21736_p2 = ($signed(sext_ln153_219_fu_21732_p1) + $signed(sext_ln153_213_fu_21716_p1));

assign add_ln153_263_fu_21742_p2 = (add_ln153_262_fu_21736_p2 + add_ln153_250_fu_21698_p2);

assign add_ln153_264_fu_16709_p2 = ($signed(sext_ln151_562_fu_16681_p1) + $signed(sext_ln151_563_fu_16702_p1));

assign add_ln153_265_fu_21751_p2 = ($signed(sext_ln153_221_fu_21748_p1) + $signed(select_ln126_12_fu_20881_p3));

assign add_ln153_266_fu_16715_p2 = ($signed(sext_ln151_558_fu_16618_p1) + $signed(sext_ln151_560_fu_16640_p1));

assign add_ln153_267_fu_16725_p2 = ($signed(sext_ln153_222_fu_16721_p1) + $signed(sext_ln151_561_fu_16660_p1));

assign add_ln153_268_fu_21760_p2 = ($signed(sext_ln153_223_fu_21757_p1) + $signed(add_ln153_265_fu_21751_p2));

assign add_ln153_269_fu_16731_p2 = ($signed(sext_ln151_552_fu_16566_p1) + $signed(sext_ln151_554_fu_16588_p1));

assign add_ln153_26_fu_13445_p2 = ($signed(sext_ln151_328_fu_13364_p1) + $signed(sext_ln151_330_fu_13370_p1));

assign add_ln153_270_fu_16741_p2 = ($signed(sext_ln153_224_fu_16737_p1) + $signed(sext_ln151_559_fu_16636_p1));

assign add_ln153_271_fu_16747_p2 = ($signed(sext_ln151_555_fu_16591_p1) + $signed(sext_ln151_557_fu_16615_p1));

assign add_ln153_272_fu_16757_p2 = ($signed(sext_ln153_226_fu_16753_p1) + $signed(sext_ln151_553_fu_16584_p1));

assign add_ln153_273_fu_21772_p2 = ($signed(sext_ln153_227_fu_21769_p1) + $signed(sext_ln153_225_fu_21766_p1));

assign add_ln153_274_fu_21782_p2 = ($signed(sext_ln153_228_fu_21778_p1) + $signed(add_ln153_268_fu_21760_p2));

assign add_ln153_275_fu_16763_p2 = ($signed(sext_ln151_542_fu_16500_p1) + $signed(sext_ln151_541_fu_16497_p1));

assign add_ln153_276_fu_16773_p2 = ($signed(sext_ln153_229_fu_16769_p1) + $signed(sext_ln151_556_fu_16611_p1));

assign add_ln153_277_fu_16779_p2 = ($signed(sext_ln151_545_fu_16527_p1) + $signed(sext_ln151_544_fu_16524_p1));

assign add_ln153_278_fu_16789_p2 = ($signed(sext_ln153_231_fu_16785_p1) + $signed(sext_ln151_543_fu_16520_p1));

assign add_ln153_279_fu_21794_p2 = ($signed(sext_ln153_232_fu_21791_p1) + $signed(sext_ln153_230_fu_21788_p1));

assign add_ln153_27_fu_13455_p2 = ($signed(sext_ln153_22_fu_13451_p1) + $signed(sext_ln151_331_fu_13390_p1));

assign add_ln153_280_fu_16795_p2 = ($signed(sext_ln151_548_fu_16554_p1) + $signed(sext_ln151_547_fu_16551_p1));

assign add_ln153_281_fu_16805_p2 = ($signed(sext_ln153_234_fu_16801_p1) + $signed(sext_ln151_546_fu_16547_p1));

assign add_ln153_282_fu_16811_p2 = ($signed(sext_ln151_549_fu_16557_p1) + $signed(sext_ln151_551_fu_16563_p1));

assign add_ln153_283_fu_16821_p2 = ($signed(sext_ln151_550_fu_16560_p1) + $signed(sext_ln153_220_fu_16706_p1));

assign add_ln153_284_fu_16831_p2 = ($signed(sext_ln153_237_fu_16827_p1) + $signed(sext_ln153_236_fu_16817_p1));

assign add_ln153_285_fu_21810_p2 = ($signed(sext_ln153_238_fu_21807_p1) + $signed(sext_ln153_235_fu_21804_p1));

assign add_ln153_286_fu_21820_p2 = ($signed(sext_ln153_239_fu_21816_p1) + $signed(sext_ln153_233_fu_21800_p1));

assign add_ln153_287_fu_21826_p2 = (add_ln153_286_fu_21820_p2 + add_ln153_274_fu_21782_p2);

assign add_ln153_288_fu_17049_p2 = ($signed(sext_ln151_585_fu_17021_p1) + $signed(sext_ln151_586_fu_17042_p1));

assign add_ln153_289_fu_21835_p2 = ($signed(sext_ln153_241_fu_21832_p1) + $signed(select_ln126_11_fu_20875_p3));

assign add_ln153_28_fu_21040_p2 = ($signed(sext_ln153_28_fu_21037_p1) + $signed(add_ln153_25_fu_21031_p2));

assign add_ln153_290_fu_17055_p2 = ($signed(sext_ln151_581_fu_16958_p1) + $signed(sext_ln151_583_fu_16980_p1));

assign add_ln153_291_fu_17065_p2 = ($signed(sext_ln153_242_fu_17061_p1) + $signed(sext_ln151_584_fu_17000_p1));

assign add_ln153_292_fu_21844_p2 = ($signed(sext_ln153_243_fu_21841_p1) + $signed(add_ln153_289_fu_21835_p2));

assign add_ln153_293_fu_17071_p2 = ($signed(sext_ln151_575_fu_16906_p1) + $signed(sext_ln151_577_fu_16928_p1));

assign add_ln153_294_fu_17081_p2 = ($signed(sext_ln153_244_fu_17077_p1) + $signed(sext_ln151_582_fu_16976_p1));

assign add_ln153_295_fu_17087_p2 = ($signed(sext_ln151_578_fu_16931_p1) + $signed(sext_ln151_580_fu_16955_p1));

assign add_ln153_296_fu_17097_p2 = ($signed(sext_ln153_246_fu_17093_p1) + $signed(sext_ln151_576_fu_16924_p1));

assign add_ln153_297_fu_21856_p2 = ($signed(sext_ln153_247_fu_21853_p1) + $signed(sext_ln153_245_fu_21850_p1));

assign add_ln153_298_fu_21866_p2 = ($signed(sext_ln153_248_fu_21862_p1) + $signed(add_ln153_292_fu_21844_p2));

assign add_ln153_299_fu_17103_p2 = ($signed(sext_ln151_565_fu_16840_p1) + $signed(sext_ln151_564_fu_16837_p1));

assign add_ln153_29_fu_13461_p2 = ($signed(sext_ln151_322_fu_13328_p1) + $signed(sext_ln151_324_fu_13334_p1));

assign add_ln153_2_fu_13123_p2 = ($signed(sext_ln151_305_fu_13033_p1) + $signed(sext_ln151_307_fu_13039_p1));

assign add_ln153_300_fu_17113_p2 = ($signed(sext_ln153_249_fu_17109_p1) + $signed(sext_ln151_579_fu_16951_p1));

assign add_ln153_301_fu_17119_p2 = ($signed(sext_ln151_568_fu_16867_p1) + $signed(sext_ln151_567_fu_16864_p1));

assign add_ln153_302_fu_17129_p2 = ($signed(sext_ln153_251_fu_17125_p1) + $signed(sext_ln151_566_fu_16860_p1));

assign add_ln153_303_fu_21878_p2 = ($signed(sext_ln153_252_fu_21875_p1) + $signed(sext_ln153_250_fu_21872_p1));

assign add_ln153_304_fu_17135_p2 = ($signed(sext_ln151_571_fu_16894_p1) + $signed(sext_ln151_570_fu_16891_p1));

assign add_ln153_305_fu_17145_p2 = ($signed(sext_ln153_254_fu_17141_p1) + $signed(sext_ln151_569_fu_16887_p1));

assign add_ln153_306_fu_17151_p2 = ($signed(sext_ln151_572_fu_16897_p1) + $signed(sext_ln151_574_fu_16903_p1));

assign add_ln153_307_fu_17161_p2 = ($signed(sext_ln151_573_fu_16900_p1) + $signed(sext_ln153_240_fu_17046_p1));

assign add_ln153_308_fu_17171_p2 = ($signed(sext_ln153_257_fu_17167_p1) + $signed(sext_ln153_256_fu_17157_p1));

assign add_ln153_309_fu_21894_p2 = ($signed(sext_ln153_258_fu_21891_p1) + $signed(sext_ln153_255_fu_21888_p1));

assign add_ln153_30_fu_13471_p2 = ($signed(sext_ln153_24_fu_13467_p1) + $signed(sext_ln151_329_fu_13367_p1));

assign add_ln153_310_fu_21904_p2 = ($signed(sext_ln153_259_fu_21900_p1) + $signed(sext_ln153_253_fu_21884_p1));

assign add_ln153_311_fu_21910_p2 = (add_ln153_310_fu_21904_p2 + add_ln153_298_fu_21866_p2);

assign add_ln153_312_fu_17365_p2 = ($signed(sext_ln151_608_fu_17340_p1) + $signed(sext_ln151_609_fu_17358_p1));

assign add_ln153_313_fu_21919_p2 = ($signed(sext_ln153_261_fu_21916_p1) + $signed(select_ln126_10_fu_20869_p3));

assign add_ln153_314_fu_17371_p2 = ($signed(sext_ln151_604_fu_17286_p1) + $signed(sext_ln151_606_fu_17305_p1));

assign add_ln153_315_fu_17381_p2 = ($signed(sext_ln153_262_fu_17377_p1) + $signed(sext_ln151_607_fu_17322_p1));

assign add_ln153_316_fu_21928_p2 = ($signed(sext_ln153_263_fu_21925_p1) + $signed(add_ln153_313_fu_21919_p2));

assign add_ln153_317_fu_17387_p2 = ($signed(sext_ln151_598_fu_17240_p1) + $signed(sext_ln151_600_fu_17259_p1));

assign add_ln153_318_fu_17397_p2 = ($signed(sext_ln153_264_fu_17393_p1) + $signed(sext_ln151_605_fu_17301_p1));

assign add_ln153_319_fu_17403_p2 = ($signed(sext_ln151_601_fu_17262_p1) + $signed(sext_ln151_603_fu_17283_p1));

assign add_ln153_31_fu_13481_p2 = ($signed(sext_ln151_325_fu_13337_p1) + $signed(sext_ln151_327_fu_13361_p1));

assign add_ln153_320_fu_17413_p2 = ($signed(sext_ln153_266_fu_17409_p1) + $signed(sext_ln151_599_fu_17255_p1));

assign add_ln153_321_fu_21940_p2 = ($signed(sext_ln153_267_fu_21937_p1) + $signed(sext_ln153_265_fu_21934_p1));

assign add_ln153_322_fu_21950_p2 = ($signed(sext_ln153_268_fu_21946_p1) + $signed(add_ln153_316_fu_21928_p2));

assign add_ln153_323_fu_17419_p2 = ($signed(sext_ln151_588_fu_17180_p1) + $signed(sext_ln151_587_fu_17177_p1));

assign add_ln153_324_fu_17429_p2 = ($signed(sext_ln153_269_fu_17425_p1) + $signed(sext_ln151_602_fu_17279_p1));

assign add_ln153_325_fu_17435_p2 = ($signed(sext_ln151_591_fu_17204_p1) + $signed(sext_ln151_590_fu_17201_p1));

assign add_ln153_326_fu_17445_p2 = ($signed(sext_ln153_271_fu_17441_p1) + $signed(sext_ln151_589_fu_17197_p1));

assign add_ln153_327_fu_21962_p2 = ($signed(sext_ln153_272_fu_21959_p1) + $signed(sext_ln153_270_fu_21956_p1));

assign add_ln153_328_fu_17451_p2 = ($signed(sext_ln151_594_fu_17228_p1) + $signed(sext_ln151_593_fu_17225_p1));

assign add_ln153_329_fu_17461_p2 = ($signed(sext_ln153_274_fu_17457_p1) + $signed(sext_ln151_592_fu_17221_p1));

assign add_ln153_32_fu_13491_p2 = ($signed(sext_ln153_26_fu_13487_p1) + $signed(sext_ln151_323_fu_13331_p1));

assign add_ln153_330_fu_17467_p2 = ($signed(sext_ln151_595_fu_17231_p1) + $signed(sext_ln151_597_fu_17237_p1));

assign add_ln153_331_fu_17477_p2 = ($signed(sext_ln151_596_fu_17234_p1) + $signed(sext_ln153_260_fu_17362_p1));

assign add_ln153_332_fu_17487_p2 = ($signed(sext_ln153_277_fu_17483_p1) + $signed(sext_ln153_276_fu_17473_p1));

assign add_ln153_333_fu_21978_p2 = ($signed(sext_ln153_278_fu_21975_p1) + $signed(sext_ln153_275_fu_21972_p1));

assign add_ln153_334_fu_21988_p2 = ($signed(sext_ln153_279_fu_21984_p1) + $signed(sext_ln153_273_fu_21968_p1));

assign add_ln153_335_fu_21994_p2 = (add_ln153_334_fu_21988_p2 + add_ln153_322_fu_21950_p2);

assign add_ln153_336_fu_17681_p2 = ($signed(sext_ln151_631_fu_17656_p1) + $signed(sext_ln151_632_fu_17674_p1));

assign add_ln153_337_fu_22003_p2 = ($signed(sext_ln153_281_fu_22000_p1) + $signed(select_ln126_9_fu_20863_p3));

assign add_ln153_338_fu_17687_p2 = ($signed(sext_ln151_627_fu_17602_p1) + $signed(sext_ln151_629_fu_17621_p1));

assign add_ln153_339_fu_17697_p2 = ($signed(sext_ln153_282_fu_17693_p1) + $signed(sext_ln151_630_fu_17638_p1));

assign add_ln153_33_fu_13501_p2 = ($signed(sext_ln153_27_fu_13497_p1) + $signed(sext_ln153_25_fu_13477_p1));

assign add_ln153_340_fu_22012_p2 = ($signed(sext_ln153_283_fu_22009_p1) + $signed(add_ln153_337_fu_22003_p2));

assign add_ln153_341_fu_17703_p2 = ($signed(sext_ln151_621_fu_17556_p1) + $signed(sext_ln151_623_fu_17575_p1));

assign add_ln153_342_fu_17713_p2 = ($signed(sext_ln153_284_fu_17709_p1) + $signed(sext_ln151_628_fu_17617_p1));

assign add_ln153_343_fu_17719_p2 = ($signed(sext_ln151_624_fu_17578_p1) + $signed(sext_ln151_626_fu_17599_p1));

assign add_ln153_344_fu_17729_p2 = ($signed(sext_ln153_286_fu_17725_p1) + $signed(sext_ln151_622_fu_17571_p1));

assign add_ln153_345_fu_22024_p2 = ($signed(sext_ln153_287_fu_22021_p1) + $signed(sext_ln153_285_fu_22018_p1));

assign add_ln153_346_fu_22034_p2 = ($signed(sext_ln153_288_fu_22030_p1) + $signed(add_ln153_340_fu_22012_p2));

assign add_ln153_347_fu_17735_p2 = ($signed(sext_ln151_611_fu_17496_p1) + $signed(sext_ln151_610_fu_17493_p1));

assign add_ln153_348_fu_17745_p2 = ($signed(sext_ln153_289_fu_17741_p1) + $signed(sext_ln151_625_fu_17595_p1));

assign add_ln153_349_fu_17751_p2 = ($signed(sext_ln151_614_fu_17520_p1) + $signed(sext_ln151_613_fu_17517_p1));

assign add_ln153_34_fu_21084_p2 = (add_ln153_46_fu_21078_p2 + add_ln153_28_fu_21040_p2);

assign add_ln153_350_fu_17761_p2 = ($signed(sext_ln153_291_fu_17757_p1) + $signed(sext_ln151_612_fu_17513_p1));

assign add_ln153_351_fu_22046_p2 = ($signed(sext_ln153_292_fu_22043_p1) + $signed(sext_ln153_290_fu_22040_p1));

assign add_ln153_352_fu_17767_p2 = ($signed(sext_ln151_617_fu_17544_p1) + $signed(sext_ln151_616_fu_17541_p1));

assign add_ln153_353_fu_17777_p2 = ($signed(sext_ln153_294_fu_17773_p1) + $signed(sext_ln151_615_fu_17537_p1));

assign add_ln153_354_fu_17783_p2 = ($signed(sext_ln151_618_fu_17547_p1) + $signed(sext_ln151_620_fu_17553_p1));

assign add_ln153_355_fu_17793_p2 = ($signed(sext_ln151_619_fu_17550_p1) + $signed(sext_ln153_280_fu_17678_p1));

assign add_ln153_356_fu_17803_p2 = ($signed(sext_ln153_297_fu_17799_p1) + $signed(sext_ln153_296_fu_17789_p1));

assign add_ln153_357_fu_22062_p2 = ($signed(sext_ln153_298_fu_22059_p1) + $signed(sext_ln153_295_fu_22056_p1));

assign add_ln153_358_fu_22072_p2 = ($signed(sext_ln153_299_fu_22068_p1) + $signed(sext_ln153_293_fu_22052_p1));

assign add_ln153_359_fu_22078_p2 = (add_ln153_358_fu_22072_p2 + add_ln153_346_fu_22034_p2);

assign add_ln153_35_fu_13507_p2 = ($signed(sext_ln151_312_fu_13262_p1) + $signed(sext_ln151_311_fu_13259_p1));

assign add_ln153_360_fu_17997_p2 = ($signed(sext_ln151_654_fu_17972_p1) + $signed(sext_ln151_655_fu_17990_p1));

assign add_ln153_361_fu_22087_p2 = ($signed(sext_ln153_301_fu_22084_p1) + $signed(select_ln126_8_fu_20857_p3));

assign add_ln153_362_fu_18003_p2 = ($signed(sext_ln151_650_fu_17918_p1) + $signed(sext_ln151_652_fu_17937_p1));

assign add_ln153_363_fu_18013_p2 = ($signed(sext_ln153_302_fu_18009_p1) + $signed(sext_ln151_653_fu_17954_p1));

assign add_ln153_364_fu_22096_p2 = ($signed(sext_ln153_303_fu_22093_p1) + $signed(add_ln153_361_fu_22087_p2));

assign add_ln153_365_fu_18019_p2 = ($signed(sext_ln151_644_fu_17872_p1) + $signed(sext_ln151_646_fu_17891_p1));

assign add_ln153_366_fu_18029_p2 = ($signed(sext_ln153_304_fu_18025_p1) + $signed(sext_ln151_651_fu_17933_p1));

assign add_ln153_367_fu_18035_p2 = ($signed(sext_ln151_647_fu_17894_p1) + $signed(sext_ln151_649_fu_17915_p1));

assign add_ln153_368_fu_18045_p2 = ($signed(sext_ln153_306_fu_18041_p1) + $signed(sext_ln151_645_fu_17887_p1));

assign add_ln153_369_fu_22108_p2 = ($signed(sext_ln153_307_fu_22105_p1) + $signed(sext_ln153_305_fu_22102_p1));

assign add_ln153_36_fu_13517_p2 = ($signed(sext_ln153_29_fu_13513_p1) + $signed(sext_ln151_326_fu_13357_p1));

assign add_ln153_370_fu_22118_p2 = ($signed(sext_ln153_308_fu_22114_p1) + $signed(add_ln153_364_fu_22096_p2));

assign add_ln153_371_fu_18051_p2 = ($signed(sext_ln151_634_fu_17812_p1) + $signed(sext_ln151_633_fu_17809_p1));

assign add_ln153_372_fu_18061_p2 = ($signed(sext_ln153_309_fu_18057_p1) + $signed(sext_ln151_648_fu_17911_p1));

assign add_ln153_373_fu_18067_p2 = ($signed(sext_ln151_637_fu_17836_p1) + $signed(sext_ln151_636_fu_17833_p1));

assign add_ln153_374_fu_18077_p2 = ($signed(sext_ln153_311_fu_18073_p1) + $signed(sext_ln151_635_fu_17829_p1));

assign add_ln153_375_fu_22130_p2 = ($signed(sext_ln153_312_fu_22127_p1) + $signed(sext_ln153_310_fu_22124_p1));

assign add_ln153_376_fu_18083_p2 = ($signed(sext_ln151_640_fu_17860_p1) + $signed(sext_ln151_639_fu_17857_p1));

assign add_ln153_377_fu_18093_p2 = ($signed(sext_ln153_314_fu_18089_p1) + $signed(sext_ln151_638_fu_17853_p1));

assign add_ln153_378_fu_18099_p2 = ($signed(sext_ln151_641_fu_17863_p1) + $signed(sext_ln151_643_fu_17869_p1));

assign add_ln153_379_fu_18109_p2 = ($signed(sext_ln151_642_fu_17866_p1) + $signed(sext_ln153_300_fu_17994_p1));

assign add_ln153_37_fu_13523_p2 = ($signed(sext_ln151_315_fu_13289_p1) + $signed(sext_ln151_314_fu_13286_p1));

assign add_ln153_380_fu_18119_p2 = ($signed(sext_ln153_317_fu_18115_p1) + $signed(sext_ln153_316_fu_18105_p1));

assign add_ln153_381_fu_22146_p2 = ($signed(sext_ln153_318_fu_22143_p1) + $signed(sext_ln153_315_fu_22140_p1));

assign add_ln153_382_fu_22156_p2 = ($signed(sext_ln153_319_fu_22152_p1) + $signed(sext_ln153_313_fu_22136_p1));

assign add_ln153_383_fu_22162_p2 = (add_ln153_382_fu_22156_p2 + add_ln153_370_fu_22118_p2);

assign add_ln153_384_fu_18313_p2 = ($signed(sext_ln151_677_fu_18288_p1) + $signed(sext_ln151_678_fu_18306_p1));

assign add_ln153_385_fu_22171_p2 = ($signed(sext_ln153_321_fu_22168_p1) + $signed(select_ln126_7_fu_20851_p3));

assign add_ln153_386_fu_18319_p2 = ($signed(sext_ln151_673_fu_18234_p1) + $signed(sext_ln151_675_fu_18253_p1));

assign add_ln153_387_fu_18329_p2 = ($signed(sext_ln153_322_fu_18325_p1) + $signed(sext_ln151_676_fu_18270_p1));

assign add_ln153_388_fu_22180_p2 = ($signed(sext_ln153_323_fu_22177_p1) + $signed(add_ln153_385_fu_22171_p2));

assign add_ln153_389_fu_18335_p2 = ($signed(sext_ln151_667_fu_18188_p1) + $signed(sext_ln151_669_fu_18207_p1));

assign add_ln153_38_fu_13533_p2 = ($signed(sext_ln153_31_fu_13529_p1) + $signed(sext_ln151_313_fu_13282_p1));

assign add_ln153_390_fu_18345_p2 = ($signed(sext_ln153_324_fu_18341_p1) + $signed(sext_ln151_674_fu_18249_p1));

assign add_ln153_391_fu_18351_p2 = ($signed(sext_ln151_670_fu_18210_p1) + $signed(sext_ln151_672_fu_18231_p1));

assign add_ln153_392_fu_18361_p2 = ($signed(sext_ln153_326_fu_18357_p1) + $signed(sext_ln151_668_fu_18203_p1));

assign add_ln153_393_fu_22192_p2 = ($signed(sext_ln153_327_fu_22189_p1) + $signed(sext_ln153_325_fu_22186_p1));

assign add_ln153_394_fu_22202_p2 = ($signed(sext_ln153_328_fu_22198_p1) + $signed(add_ln153_388_fu_22180_p2));

assign add_ln153_395_fu_18367_p2 = ($signed(sext_ln151_657_fu_18128_p1) + $signed(sext_ln151_656_fu_18125_p1));

assign add_ln153_396_fu_18377_p2 = ($signed(sext_ln153_329_fu_18373_p1) + $signed(sext_ln151_671_fu_18227_p1));

assign add_ln153_397_fu_18383_p2 = ($signed(sext_ln151_660_fu_18152_p1) + $signed(sext_ln151_659_fu_18149_p1));

assign add_ln153_398_fu_18393_p2 = ($signed(sext_ln153_331_fu_18389_p1) + $signed(sext_ln151_658_fu_18145_p1));

assign add_ln153_399_fu_22214_p2 = ($signed(sext_ln153_332_fu_22211_p1) + $signed(sext_ln153_330_fu_22208_p1));

assign add_ln153_39_fu_21052_p2 = ($signed(sext_ln153_32_fu_21049_p1) + $signed(sext_ln153_30_fu_21046_p1));

assign add_ln153_3_fu_13133_p2 = ($signed(sext_ln153_2_fu_13129_p1) + $signed(sext_ln151_308_fu_13062_p1));

assign add_ln153_400_fu_18399_p2 = ($signed(sext_ln151_663_fu_18176_p1) + $signed(sext_ln151_662_fu_18173_p1));

assign add_ln153_401_fu_18409_p2 = ($signed(sext_ln153_334_fu_18405_p1) + $signed(sext_ln151_661_fu_18169_p1));

assign add_ln153_402_fu_18415_p2 = ($signed(sext_ln151_664_fu_18179_p1) + $signed(sext_ln151_666_fu_18185_p1));

assign add_ln153_403_fu_18425_p2 = ($signed(sext_ln151_665_fu_18182_p1) + $signed(sext_ln153_320_fu_18310_p1));

assign add_ln153_404_fu_18435_p2 = ($signed(sext_ln153_337_fu_18431_p1) + $signed(sext_ln153_336_fu_18421_p1));

assign add_ln153_405_fu_22230_p2 = ($signed(sext_ln153_338_fu_22227_p1) + $signed(sext_ln153_335_fu_22224_p1));

assign add_ln153_406_fu_22240_p2 = ($signed(sext_ln153_339_fu_22236_p1) + $signed(sext_ln153_333_fu_22220_p1));

assign add_ln153_407_fu_22246_p2 = (add_ln153_406_fu_22240_p2 + add_ln153_394_fu_22202_p2);

assign add_ln153_408_fu_18629_p2 = ($signed(sext_ln151_700_fu_18604_p1) + $signed(sext_ln151_701_fu_18622_p1));

assign add_ln153_409_fu_22255_p2 = ($signed(sext_ln153_341_fu_22252_p1) + $signed(select_ln126_6_fu_20845_p3));

assign add_ln153_40_fu_13539_p2 = ($signed(sext_ln151_318_fu_13316_p1) + $signed(sext_ln151_317_fu_13313_p1));

assign add_ln153_410_fu_18635_p2 = ($signed(sext_ln151_696_fu_18550_p1) + $signed(sext_ln151_698_fu_18569_p1));

assign add_ln153_411_fu_18645_p2 = ($signed(sext_ln153_342_fu_18641_p1) + $signed(sext_ln151_699_fu_18586_p1));

assign add_ln153_412_fu_22264_p2 = ($signed(sext_ln153_343_fu_22261_p1) + $signed(add_ln153_409_fu_22255_p2));

assign add_ln153_413_fu_18651_p2 = ($signed(sext_ln151_690_fu_18504_p1) + $signed(sext_ln151_692_fu_18523_p1));

assign add_ln153_414_fu_18661_p2 = ($signed(sext_ln153_344_fu_18657_p1) + $signed(sext_ln151_697_fu_18565_p1));

assign add_ln153_415_fu_18667_p2 = ($signed(sext_ln151_693_fu_18526_p1) + $signed(sext_ln151_695_fu_18547_p1));

assign add_ln153_416_fu_18677_p2 = ($signed(sext_ln153_346_fu_18673_p1) + $signed(sext_ln151_691_fu_18519_p1));

assign add_ln153_417_fu_22276_p2 = ($signed(sext_ln153_347_fu_22273_p1) + $signed(sext_ln153_345_fu_22270_p1));

assign add_ln153_418_fu_22286_p2 = ($signed(sext_ln153_348_fu_22282_p1) + $signed(add_ln153_412_fu_22264_p2));

assign add_ln153_419_fu_18683_p2 = ($signed(sext_ln151_680_fu_18444_p1) + $signed(sext_ln151_679_fu_18441_p1));

assign add_ln153_41_fu_13549_p2 = ($signed(sext_ln153_34_fu_13545_p1) + $signed(sext_ln151_316_fu_13309_p1));

assign add_ln153_420_fu_18693_p2 = ($signed(sext_ln153_349_fu_18689_p1) + $signed(sext_ln151_694_fu_18543_p1));

assign add_ln153_421_fu_18699_p2 = ($signed(sext_ln151_683_fu_18468_p1) + $signed(sext_ln151_682_fu_18465_p1));

assign add_ln153_422_fu_18709_p2 = ($signed(sext_ln153_351_fu_18705_p1) + $signed(sext_ln151_681_fu_18461_p1));

assign add_ln153_423_fu_22298_p2 = ($signed(sext_ln153_352_fu_22295_p1) + $signed(sext_ln153_350_fu_22292_p1));

assign add_ln153_424_fu_18715_p2 = ($signed(sext_ln151_686_fu_18492_p1) + $signed(sext_ln151_685_fu_18489_p1));

assign add_ln153_425_fu_18725_p2 = ($signed(sext_ln153_354_fu_18721_p1) + $signed(sext_ln151_684_fu_18485_p1));

assign add_ln153_426_fu_18731_p2 = ($signed(sext_ln151_687_fu_18495_p1) + $signed(sext_ln151_689_fu_18501_p1));

assign add_ln153_427_fu_18741_p2 = ($signed(sext_ln151_688_fu_18498_p1) + $signed(sext_ln153_340_fu_18626_p1));

assign add_ln153_428_fu_18751_p2 = ($signed(sext_ln153_357_fu_18747_p1) + $signed(sext_ln153_356_fu_18737_p1));

assign add_ln153_429_fu_22314_p2 = ($signed(sext_ln153_358_fu_22311_p1) + $signed(sext_ln153_355_fu_22308_p1));

assign add_ln153_42_fu_13555_p2 = ($signed(sext_ln151_319_fu_13319_p1) + $signed(sext_ln151_321_fu_13325_p1));

assign add_ln153_430_fu_22324_p2 = ($signed(sext_ln153_359_fu_22320_p1) + $signed(sext_ln153_353_fu_22304_p1));

assign add_ln153_431_fu_22330_p2 = (add_ln153_430_fu_22324_p2 + add_ln153_418_fu_22286_p2);

assign add_ln153_432_fu_18945_p2 = ($signed(sext_ln151_723_fu_18920_p1) + $signed(sext_ln151_724_fu_18938_p1));

assign add_ln153_433_fu_22339_p2 = ($signed(sext_ln153_361_fu_22336_p1) + $signed(select_ln126_5_fu_20839_p3));

assign add_ln153_434_fu_18951_p2 = ($signed(sext_ln151_719_fu_18866_p1) + $signed(sext_ln151_721_fu_18885_p1));

assign add_ln153_435_fu_18961_p2 = ($signed(sext_ln153_362_fu_18957_p1) + $signed(sext_ln151_722_fu_18902_p1));

assign add_ln153_436_fu_22348_p2 = ($signed(sext_ln153_363_fu_22345_p1) + $signed(add_ln153_433_fu_22339_p2));

assign add_ln153_437_fu_18967_p2 = ($signed(sext_ln151_713_fu_18820_p1) + $signed(sext_ln151_715_fu_18839_p1));

assign add_ln153_438_fu_18977_p2 = ($signed(sext_ln153_364_fu_18973_p1) + $signed(sext_ln151_720_fu_18881_p1));

assign add_ln153_439_fu_18983_p2 = ($signed(sext_ln151_716_fu_18842_p1) + $signed(sext_ln151_718_fu_18863_p1));

assign add_ln153_43_fu_13565_p2 = ($signed(sext_ln151_320_fu_13322_p1) + $signed(sext_ln153_20_fu_13436_p1));

assign add_ln153_440_fu_18993_p2 = ($signed(sext_ln153_366_fu_18989_p1) + $signed(sext_ln151_714_fu_18835_p1));

assign add_ln153_441_fu_22360_p2 = ($signed(sext_ln153_367_fu_22357_p1) + $signed(sext_ln153_365_fu_22354_p1));

assign add_ln153_442_fu_22370_p2 = ($signed(sext_ln153_368_fu_22366_p1) + $signed(add_ln153_436_fu_22348_p2));

assign add_ln153_443_fu_18999_p2 = ($signed(sext_ln151_703_fu_18760_p1) + $signed(sext_ln151_702_fu_18757_p1));

assign add_ln153_444_fu_19009_p2 = ($signed(sext_ln153_369_fu_19005_p1) + $signed(sext_ln151_717_fu_18859_p1));

assign add_ln153_445_fu_19015_p2 = ($signed(sext_ln151_706_fu_18784_p1) + $signed(sext_ln151_705_fu_18781_p1));

assign add_ln153_446_fu_19025_p2 = ($signed(sext_ln153_371_fu_19021_p1) + $signed(sext_ln151_704_fu_18777_p1));

assign add_ln153_447_fu_22382_p2 = ($signed(sext_ln153_372_fu_22379_p1) + $signed(sext_ln153_370_fu_22376_p1));

assign add_ln153_448_fu_19031_p2 = ($signed(sext_ln151_709_fu_18808_p1) + $signed(sext_ln151_708_fu_18805_p1));

assign add_ln153_449_fu_19041_p2 = ($signed(sext_ln153_374_fu_19037_p1) + $signed(sext_ln151_707_fu_18801_p1));

assign add_ln153_44_fu_13575_p2 = ($signed(sext_ln153_37_fu_13571_p1) + $signed(sext_ln153_36_fu_13561_p1));

assign add_ln153_450_fu_19047_p2 = ($signed(sext_ln151_710_fu_18811_p1) + $signed(sext_ln151_712_fu_18817_p1));

assign add_ln153_451_fu_19057_p2 = ($signed(sext_ln151_711_fu_18814_p1) + $signed(sext_ln153_360_fu_18942_p1));

assign add_ln153_452_fu_19067_p2 = ($signed(sext_ln153_377_fu_19063_p1) + $signed(sext_ln153_376_fu_19053_p1));

assign add_ln153_453_fu_22398_p2 = ($signed(sext_ln153_378_fu_22395_p1) + $signed(sext_ln153_375_fu_22392_p1));

assign add_ln153_454_fu_22408_p2 = ($signed(sext_ln153_379_fu_22404_p1) + $signed(sext_ln153_373_fu_22388_p1));

assign add_ln153_455_fu_22414_p2 = (add_ln153_454_fu_22408_p2 + add_ln153_442_fu_22370_p2);

assign add_ln153_456_fu_19261_p2 = ($signed(sext_ln151_746_fu_19236_p1) + $signed(sext_ln151_747_fu_19254_p1));

assign add_ln153_457_fu_22423_p2 = ($signed(sext_ln153_381_fu_22420_p1) + $signed(select_ln126_4_fu_20833_p3));

assign add_ln153_458_fu_19267_p2 = ($signed(sext_ln151_742_fu_19182_p1) + $signed(sext_ln151_744_fu_19201_p1));

assign add_ln153_459_fu_19277_p2 = ($signed(sext_ln153_382_fu_19273_p1) + $signed(sext_ln151_745_fu_19218_p1));

assign add_ln153_45_fu_21068_p2 = ($signed(sext_ln153_38_fu_21065_p1) + $signed(sext_ln153_35_fu_21062_p1));

assign add_ln153_460_fu_22432_p2 = ($signed(sext_ln153_383_fu_22429_p1) + $signed(add_ln153_457_fu_22423_p2));

assign add_ln153_461_fu_19283_p2 = ($signed(sext_ln151_736_fu_19136_p1) + $signed(sext_ln151_738_fu_19155_p1));

assign add_ln153_462_fu_19293_p2 = ($signed(sext_ln153_384_fu_19289_p1) + $signed(sext_ln151_743_fu_19197_p1));

assign add_ln153_463_fu_19299_p2 = ($signed(sext_ln151_739_fu_19158_p1) + $signed(sext_ln151_741_fu_19179_p1));

assign add_ln153_464_fu_19309_p2 = ($signed(sext_ln153_386_fu_19305_p1) + $signed(sext_ln151_737_fu_19151_p1));

assign add_ln153_465_fu_22444_p2 = ($signed(sext_ln153_387_fu_22441_p1) + $signed(sext_ln153_385_fu_22438_p1));

assign add_ln153_466_fu_22454_p2 = ($signed(sext_ln153_388_fu_22450_p1) + $signed(add_ln153_460_fu_22432_p2));

assign add_ln153_467_fu_19315_p2 = ($signed(sext_ln151_726_fu_19076_p1) + $signed(sext_ln151_725_fu_19073_p1));

assign add_ln153_468_fu_19325_p2 = ($signed(sext_ln153_389_fu_19321_p1) + $signed(sext_ln151_740_fu_19175_p1));

assign add_ln153_469_fu_19331_p2 = ($signed(sext_ln151_729_fu_19100_p1) + $signed(sext_ln151_728_fu_19097_p1));

assign add_ln153_46_fu_21078_p2 = ($signed(sext_ln153_39_fu_21074_p1) + $signed(sext_ln153_33_fu_21058_p1));

assign add_ln153_470_fu_19341_p2 = ($signed(sext_ln153_391_fu_19337_p1) + $signed(sext_ln151_727_fu_19093_p1));

assign add_ln153_471_fu_22466_p2 = ($signed(sext_ln153_392_fu_22463_p1) + $signed(sext_ln153_390_fu_22460_p1));

assign add_ln153_472_fu_19347_p2 = ($signed(sext_ln151_732_fu_19124_p1) + $signed(sext_ln151_731_fu_19121_p1));

assign add_ln153_473_fu_19357_p2 = ($signed(sext_ln153_394_fu_19353_p1) + $signed(sext_ln151_730_fu_19117_p1));

assign add_ln153_474_fu_19363_p2 = ($signed(sext_ln151_733_fu_19127_p1) + $signed(sext_ln151_735_fu_19133_p1));

assign add_ln153_475_fu_19373_p2 = ($signed(sext_ln151_734_fu_19130_p1) + $signed(sext_ln153_380_fu_19258_p1));

assign add_ln153_476_fu_19383_p2 = ($signed(sext_ln153_397_fu_19379_p1) + $signed(sext_ln153_396_fu_19369_p1));

assign add_ln153_477_fu_22482_p2 = ($signed(sext_ln153_398_fu_22479_p1) + $signed(sext_ln153_395_fu_22476_p1));

assign add_ln153_478_fu_22492_p2 = ($signed(sext_ln153_399_fu_22488_p1) + $signed(sext_ln153_393_fu_22472_p1));

assign add_ln153_479_fu_22498_p2 = (add_ln153_478_fu_22492_p2 + add_ln153_466_fu_22454_p2);

assign add_ln153_47_fu_21090_p2 = (add_ln153_34_fu_21084_p2 + select_ln126_22_fu_20942_p3);

assign add_ln153_480_fu_19577_p2 = ($signed(sext_ln151_769_fu_19552_p1) + $signed(sext_ln151_770_fu_19570_p1));

assign add_ln153_481_fu_22507_p2 = ($signed(sext_ln153_401_fu_22504_p1) + $signed(select_ln126_3_fu_20827_p3));

assign add_ln153_482_fu_19583_p2 = ($signed(sext_ln151_765_fu_19498_p1) + $signed(sext_ln151_767_fu_19517_p1));

assign add_ln153_483_fu_19593_p2 = ($signed(sext_ln153_402_fu_19589_p1) + $signed(sext_ln151_768_fu_19534_p1));

assign add_ln153_484_fu_22516_p2 = ($signed(sext_ln153_403_fu_22513_p1) + $signed(add_ln153_481_fu_22507_p2));

assign add_ln153_485_fu_19599_p2 = ($signed(sext_ln151_759_fu_19452_p1) + $signed(sext_ln151_761_fu_19471_p1));

assign add_ln153_486_fu_19609_p2 = ($signed(sext_ln153_404_fu_19605_p1) + $signed(sext_ln151_766_fu_19513_p1));

assign add_ln153_487_fu_19615_p2 = ($signed(sext_ln151_762_fu_19474_p1) + $signed(sext_ln151_764_fu_19495_p1));

assign add_ln153_488_fu_19625_p2 = ($signed(sext_ln153_406_fu_19621_p1) + $signed(sext_ln151_760_fu_19467_p1));

assign add_ln153_489_fu_22528_p2 = ($signed(sext_ln153_407_fu_22525_p1) + $signed(sext_ln153_405_fu_22522_p1));

assign add_ln153_48_fu_13761_p2 = ($signed(sext_ln151_355_fu_13733_p1) + $signed(sext_ln151_356_fu_13754_p1));

assign add_ln153_490_fu_22538_p2 = ($signed(sext_ln153_408_fu_22534_p1) + $signed(add_ln153_484_fu_22516_p2));

assign add_ln153_491_fu_19631_p2 = ($signed(sext_ln151_749_fu_19392_p1) + $signed(sext_ln151_748_fu_19389_p1));

assign add_ln153_492_fu_19641_p2 = ($signed(sext_ln153_409_fu_19637_p1) + $signed(sext_ln151_763_fu_19491_p1));

assign add_ln153_493_fu_19647_p2 = ($signed(sext_ln151_752_fu_19416_p1) + $signed(sext_ln151_751_fu_19413_p1));

assign add_ln153_494_fu_19657_p2 = ($signed(sext_ln153_411_fu_19653_p1) + $signed(sext_ln151_750_fu_19409_p1));

assign add_ln153_495_fu_22550_p2 = ($signed(sext_ln153_412_fu_22547_p1) + $signed(sext_ln153_410_fu_22544_p1));

assign add_ln153_496_fu_19663_p2 = ($signed(sext_ln151_755_fu_19440_p1) + $signed(sext_ln151_754_fu_19437_p1));

assign add_ln153_497_fu_19673_p2 = ($signed(sext_ln153_414_fu_19669_p1) + $signed(sext_ln151_753_fu_19433_p1));

assign add_ln153_498_fu_19679_p2 = ($signed(sext_ln151_756_fu_19443_p1) + $signed(sext_ln151_758_fu_19449_p1));

assign add_ln153_499_fu_19689_p2 = ($signed(sext_ln151_757_fu_19446_p1) + $signed(sext_ln153_400_fu_19574_p1));

assign add_ln153_49_fu_21102_p2 = ($signed(sext_ln153_43_fu_21099_p1) + $signed(sext_ln153_41_fu_21096_p1));

assign add_ln153_4_fu_20969_p2 = ($signed(sext_ln153_8_fu_20966_p1) + $signed(add_ln153_1_fu_20960_p2));

assign add_ln153_500_fu_19699_p2 = ($signed(sext_ln153_417_fu_19695_p1) + $signed(sext_ln153_416_fu_19685_p1));

assign add_ln153_501_fu_22566_p2 = ($signed(sext_ln153_418_fu_22563_p1) + $signed(sext_ln153_415_fu_22560_p1));

assign add_ln153_502_fu_22576_p2 = ($signed(sext_ln153_419_fu_22572_p1) + $signed(sext_ln153_413_fu_22556_p1));

assign add_ln153_503_fu_22582_p2 = (add_ln153_502_fu_22576_p2 + add_ln153_490_fu_22538_p2);

assign add_ln153_504_fu_19893_p2 = ($signed(sext_ln151_792_fu_19868_p1) + $signed(sext_ln151_793_fu_19886_p1));

assign add_ln153_505_fu_22591_p2 = ($signed(sext_ln153_421_fu_22588_p1) + $signed(select_ln126_2_fu_20821_p3));

assign add_ln153_506_fu_19899_p2 = ($signed(sext_ln151_788_fu_19814_p1) + $signed(sext_ln151_790_fu_19833_p1));

assign add_ln153_507_fu_19909_p2 = ($signed(sext_ln153_422_fu_19905_p1) + $signed(sext_ln151_791_fu_19850_p1));

assign add_ln153_508_fu_22600_p2 = ($signed(sext_ln153_423_fu_22597_p1) + $signed(add_ln153_505_fu_22591_p2));

assign add_ln153_509_fu_19915_p2 = ($signed(sext_ln151_782_fu_19768_p1) + $signed(sext_ln151_784_fu_19787_p1));

assign add_ln153_50_fu_13767_p2 = ($signed(sext_ln151_351_fu_13686_p1) + $signed(sext_ln151_353_fu_13692_p1));

assign add_ln153_510_fu_19925_p2 = ($signed(sext_ln153_424_fu_19921_p1) + $signed(sext_ln151_789_fu_19829_p1));

assign add_ln153_511_fu_19931_p2 = ($signed(sext_ln151_785_fu_19790_p1) + $signed(sext_ln151_787_fu_19811_p1));

assign add_ln153_512_fu_19941_p2 = ($signed(sext_ln153_426_fu_19937_p1) + $signed(sext_ln151_783_fu_19783_p1));

assign add_ln153_513_fu_22612_p2 = ($signed(sext_ln153_427_fu_22609_p1) + $signed(sext_ln153_425_fu_22606_p1));

assign add_ln153_514_fu_22622_p2 = ($signed(sext_ln153_428_fu_22618_p1) + $signed(add_ln153_508_fu_22600_p2));

assign add_ln153_515_fu_19947_p2 = ($signed(sext_ln151_772_fu_19708_p1) + $signed(sext_ln151_771_fu_19705_p1));

assign add_ln153_516_fu_19957_p2 = ($signed(sext_ln153_429_fu_19953_p1) + $signed(sext_ln151_786_fu_19807_p1));

assign add_ln153_517_fu_19963_p2 = ($signed(sext_ln151_775_fu_19732_p1) + $signed(sext_ln151_774_fu_19729_p1));

assign add_ln153_518_fu_19973_p2 = ($signed(sext_ln153_431_fu_19969_p1) + $signed(sext_ln151_773_fu_19725_p1));

assign add_ln153_519_fu_22634_p2 = ($signed(sext_ln153_432_fu_22631_p1) + $signed(sext_ln153_430_fu_22628_p1));

assign add_ln153_51_fu_13777_p2 = ($signed(sext_ln153_42_fu_13773_p1) + $signed(sext_ln151_354_fu_13712_p1));

assign add_ln153_520_fu_19979_p2 = ($signed(sext_ln151_778_fu_19756_p1) + $signed(sext_ln151_777_fu_19753_p1));

assign add_ln153_521_fu_19989_p2 = ($signed(sext_ln153_434_fu_19985_p1) + $signed(sext_ln151_776_fu_19749_p1));

assign add_ln153_522_fu_19995_p2 = ($signed(sext_ln151_779_fu_19759_p1) + $signed(sext_ln151_781_fu_19765_p1));

assign add_ln153_523_fu_20005_p2 = ($signed(sext_ln151_780_fu_19762_p1) + $signed(sext_ln153_420_fu_19890_p1));

assign add_ln153_524_fu_20015_p2 = ($signed(sext_ln153_437_fu_20011_p1) + $signed(sext_ln153_436_fu_20001_p1));

assign add_ln153_525_fu_22650_p2 = ($signed(sext_ln153_438_fu_22647_p1) + $signed(sext_ln153_435_fu_22644_p1));

assign add_ln153_526_fu_22660_p2 = ($signed(sext_ln153_439_fu_22656_p1) + $signed(sext_ln153_433_fu_22640_p1));

assign add_ln153_527_fu_22666_p2 = (add_ln153_526_fu_22660_p2 + add_ln153_514_fu_22622_p2);

assign add_ln153_528_fu_20213_p2 = ($signed(sext_ln151_815_fu_20188_p1) + $signed(sext_ln151_816_fu_20206_p1));

assign add_ln153_529_fu_22675_p2 = ($signed(sext_ln153_441_fu_22672_p1) + $signed(select_ln126_1_fu_20815_p3));

assign add_ln153_52_fu_21111_p2 = ($signed(sext_ln153_48_fu_21108_p1) + $signed(add_ln153_49_fu_21102_p2));

assign add_ln153_530_fu_20219_p2 = ($signed(sext_ln151_811_fu_20132_p1) + $signed(sext_ln151_813_fu_20153_p1));

assign add_ln153_531_fu_20229_p2 = ($signed(sext_ln153_442_fu_20225_p1) + $signed(sext_ln151_814_fu_20170_p1));

assign add_ln153_532_fu_22684_p2 = ($signed(sext_ln153_443_fu_22681_p1) + $signed(add_ln153_529_fu_22675_p2));

assign add_ln153_533_fu_20235_p2 = ($signed(sext_ln151_805_fu_20084_p1) + $signed(sext_ln151_807_fu_20105_p1));

assign add_ln153_534_fu_20245_p2 = ($signed(sext_ln153_444_fu_20241_p1) + $signed(sext_ln151_812_fu_20149_p1));

assign add_ln153_535_fu_20251_p2 = ($signed(sext_ln151_808_fu_20108_p1) + $signed(sext_ln151_810_fu_20129_p1));

assign add_ln153_536_fu_20261_p2 = ($signed(sext_ln153_446_fu_20257_p1) + $signed(sext_ln151_806_fu_20101_p1));

assign add_ln153_537_fu_22696_p2 = ($signed(sext_ln153_447_fu_22693_p1) + $signed(sext_ln153_445_fu_22690_p1));

assign add_ln153_538_fu_22706_p2 = ($signed(sext_ln153_448_fu_22702_p1) + $signed(add_ln153_532_fu_22684_p2));

assign add_ln153_539_fu_20267_p2 = ($signed(sext_ln151_795_fu_20024_p1) + $signed(sext_ln151_794_fu_20021_p1));

assign add_ln153_53_fu_13783_p2 = ($signed(sext_ln151_345_fu_13650_p1) + $signed(sext_ln151_347_fu_13656_p1));

assign add_ln153_540_fu_20277_p2 = ($signed(sext_ln153_449_fu_20273_p1) + $signed(sext_ln151_809_fu_20125_p1));

assign add_ln153_541_fu_20283_p2 = ($signed(sext_ln151_798_fu_20048_p1) + $signed(sext_ln151_797_fu_20045_p1));

assign add_ln153_542_fu_20293_p2 = ($signed(sext_ln153_451_fu_20289_p1) + $signed(sext_ln151_796_fu_20041_p1));

assign add_ln153_543_fu_22718_p2 = ($signed(sext_ln153_452_fu_22715_p1) + $signed(sext_ln153_450_fu_22712_p1));

assign add_ln153_544_fu_20299_p2 = ($signed(sext_ln151_801_fu_20072_p1) + $signed(sext_ln151_800_fu_20069_p1));

assign add_ln153_545_fu_20309_p2 = ($signed(sext_ln153_454_fu_20305_p1) + $signed(sext_ln151_799_fu_20065_p1));

assign add_ln153_546_fu_20315_p2 = ($signed(sext_ln151_802_fu_20075_p1) + $signed(sext_ln151_804_fu_20081_p1));

assign add_ln153_547_fu_20325_p2 = ($signed(sext_ln151_803_fu_20078_p1) + $signed(sext_ln153_440_fu_20210_p1));

assign add_ln153_548_fu_20335_p2 = ($signed(sext_ln153_457_fu_20331_p1) + $signed(sext_ln153_456_fu_20321_p1));

assign add_ln153_549_fu_22734_p2 = ($signed(sext_ln153_458_fu_22731_p1) + $signed(sext_ln153_455_fu_22728_p1));

assign add_ln153_54_fu_13793_p2 = ($signed(sext_ln153_44_fu_13789_p1) + $signed(sext_ln151_352_fu_13689_p1));

assign add_ln153_550_fu_22744_p2 = ($signed(sext_ln153_459_fu_22740_p1) + $signed(sext_ln153_453_fu_22724_p1));

assign add_ln153_551_fu_22750_p2 = (add_ln153_550_fu_22744_p2 + add_ln153_538_fu_22706_p2);

assign add_ln153_552_fu_20533_p2 = ($signed(sext_ln151_838_fu_20508_p1) + $signed(sext_ln151_839_fu_20526_p1));

assign add_ln153_553_fu_22759_p2 = ($signed(sext_ln153_461_fu_22756_p1) + $signed(select_ln126_fu_20808_p3));

assign add_ln153_554_fu_20539_p2 = ($signed(sext_ln151_834_fu_20452_p1) + $signed(sext_ln151_836_fu_20473_p1));

assign add_ln153_555_fu_20549_p2 = ($signed(sext_ln153_462_fu_20545_p1) + $signed(sext_ln151_837_fu_20490_p1));

assign add_ln153_556_fu_22768_p2 = ($signed(sext_ln153_463_fu_22765_p1) + $signed(add_ln153_553_fu_22759_p2));

assign add_ln153_557_fu_20555_p2 = ($signed(sext_ln151_828_fu_20404_p1) + $signed(sext_ln151_830_fu_20425_p1));

assign add_ln153_558_fu_20565_p2 = ($signed(sext_ln153_464_fu_20561_p1) + $signed(sext_ln151_835_fu_20469_p1));

assign add_ln153_559_fu_20571_p2 = ($signed(sext_ln151_831_fu_20428_p1) + $signed(sext_ln151_833_fu_20449_p1));

assign add_ln153_55_fu_13803_p2 = ($signed(sext_ln151_348_fu_13659_p1) + $signed(sext_ln151_350_fu_13683_p1));

assign add_ln153_560_fu_20581_p2 = ($signed(sext_ln153_466_fu_20577_p1) + $signed(sext_ln151_829_fu_20421_p1));

assign add_ln153_561_fu_22780_p2 = ($signed(sext_ln153_467_fu_22777_p1) + $signed(sext_ln153_465_fu_22774_p1));

assign add_ln153_562_fu_22790_p2 = ($signed(sext_ln153_468_fu_22786_p1) + $signed(add_ln153_556_fu_22768_p2));

assign add_ln153_563_fu_20587_p2 = ($signed(sext_ln151_818_fu_20344_p1) + $signed(sext_ln151_817_fu_20341_p1));

assign add_ln153_564_fu_20597_p2 = ($signed(sext_ln153_469_fu_20593_p1) + $signed(sext_ln151_832_fu_20445_p1));

assign add_ln153_565_fu_20603_p2 = ($signed(sext_ln151_821_fu_20368_p1) + $signed(sext_ln151_820_fu_20365_p1));

assign add_ln153_566_fu_20613_p2 = ($signed(sext_ln153_471_fu_20609_p1) + $signed(sext_ln151_819_fu_20361_p1));

assign add_ln153_567_fu_22802_p2 = ($signed(sext_ln153_472_fu_22799_p1) + $signed(sext_ln153_470_fu_22796_p1));

assign add_ln153_568_fu_20619_p2 = ($signed(sext_ln151_824_fu_20392_p1) + $signed(sext_ln151_823_fu_20389_p1));

assign add_ln153_569_fu_20629_p2 = ($signed(sext_ln153_474_fu_20625_p1) + $signed(sext_ln151_822_fu_20385_p1));

assign add_ln153_56_fu_13813_p2 = ($signed(sext_ln153_46_fu_13809_p1) + $signed(sext_ln151_346_fu_13653_p1));

assign add_ln153_570_fu_20635_p2 = ($signed(sext_ln151_825_fu_20395_p1) + $signed(sext_ln151_827_fu_20401_p1));

assign add_ln153_571_fu_20645_p2 = ($signed(sext_ln151_826_fu_20398_p1) + $signed(sext_ln153_460_fu_20530_p1));

assign add_ln153_572_fu_20655_p2 = ($signed(sext_ln153_477_fu_20651_p1) + $signed(sext_ln153_476_fu_20641_p1));

assign add_ln153_573_fu_22818_p2 = ($signed(sext_ln153_478_fu_22815_p1) + $signed(sext_ln153_475_fu_22812_p1));

assign add_ln153_574_fu_22828_p2 = ($signed(sext_ln153_479_fu_22824_p1) + $signed(sext_ln153_473_fu_22808_p1));

assign add_ln153_575_fu_22834_p2 = (add_ln153_574_fu_22828_p2 + add_ln153_562_fu_22790_p2);

assign add_ln153_57_fu_13823_p2 = ($signed(sext_ln153_47_fu_13819_p1) + $signed(sext_ln153_45_fu_13799_p1));

assign add_ln153_58_fu_21155_p2 = (add_ln153_70_fu_21149_p2 + add_ln153_52_fu_21111_p2);

assign add_ln153_59_fu_13829_p2 = ($signed(sext_ln151_335_fu_13584_p1) + $signed(sext_ln151_334_fu_13581_p1));

assign add_ln153_5_fu_13139_p2 = ($signed(sext_ln151_299_fu_12994_p1) + $signed(sext_ln151_301_fu_13000_p1));

assign add_ln153_60_fu_13839_p2 = ($signed(sext_ln153_49_fu_13835_p1) + $signed(sext_ln151_349_fu_13679_p1));

assign add_ln153_61_fu_13845_p2 = ($signed(sext_ln151_338_fu_13611_p1) + $signed(sext_ln151_337_fu_13608_p1));

assign add_ln153_62_fu_13855_p2 = ($signed(sext_ln153_51_fu_13851_p1) + $signed(sext_ln151_336_fu_13604_p1));

assign add_ln153_63_fu_21123_p2 = ($signed(sext_ln153_52_fu_21120_p1) + $signed(sext_ln153_50_fu_21117_p1));

assign add_ln153_64_fu_13861_p2 = ($signed(sext_ln151_341_fu_13638_p1) + $signed(sext_ln151_340_fu_13635_p1));

assign add_ln153_65_fu_13871_p2 = ($signed(sext_ln153_54_fu_13867_p1) + $signed(sext_ln151_339_fu_13631_p1));

assign add_ln153_66_fu_13877_p2 = ($signed(sext_ln151_342_fu_13641_p1) + $signed(sext_ln151_344_fu_13647_p1));

assign add_ln153_67_fu_13887_p2 = ($signed(sext_ln151_343_fu_13644_p1) + $signed(sext_ln153_40_fu_13758_p1));

assign add_ln153_68_fu_13897_p2 = ($signed(sext_ln153_57_fu_13893_p1) + $signed(sext_ln153_56_fu_13883_p1));

assign add_ln153_69_fu_21139_p2 = ($signed(sext_ln153_58_fu_21136_p1) + $signed(sext_ln153_55_fu_21133_p1));

assign add_ln153_6_fu_13149_p2 = ($signed(sext_ln153_4_fu_13145_p1) + $signed(sext_ln151_306_fu_13036_p1));

assign add_ln153_70_fu_21149_p2 = ($signed(sext_ln153_59_fu_21145_p1) + $signed(sext_ln153_53_fu_21129_p1));

assign add_ln153_71_fu_21161_p2 = (add_ln153_58_fu_21155_p2 + select_ln126_21_fu_20936_p3);

assign add_ln153_72_fu_14083_p2 = ($signed(sext_ln151_378_fu_14055_p1) + $signed(sext_ln151_379_fu_14076_p1));

assign add_ln153_73_fu_21173_p2 = ($signed(sext_ln153_63_fu_21170_p1) + $signed(sext_ln153_61_fu_21167_p1));

assign add_ln153_74_fu_14089_p2 = ($signed(sext_ln151_374_fu_14008_p1) + $signed(sext_ln151_376_fu_14014_p1));

assign add_ln153_75_fu_14099_p2 = ($signed(sext_ln153_62_fu_14095_p1) + $signed(sext_ln151_377_fu_14034_p1));

assign add_ln153_76_fu_21182_p2 = ($signed(sext_ln153_68_fu_21179_p1) + $signed(add_ln153_73_fu_21173_p2));

assign add_ln153_77_fu_14105_p2 = ($signed(sext_ln151_368_fu_13972_p1) + $signed(sext_ln151_370_fu_13978_p1));

assign add_ln153_78_fu_14115_p2 = ($signed(sext_ln153_64_fu_14111_p1) + $signed(sext_ln151_375_fu_14011_p1));

assign add_ln153_79_fu_14125_p2 = ($signed(sext_ln151_371_fu_13981_p1) + $signed(sext_ln151_373_fu_14005_p1));

assign add_ln153_7_fu_13159_p2 = ($signed(sext_ln151_302_fu_13003_p1) + $signed(sext_ln151_304_fu_13030_p1));

assign add_ln153_80_fu_14135_p2 = ($signed(sext_ln153_66_fu_14131_p1) + $signed(sext_ln151_369_fu_13975_p1));

assign add_ln153_81_fu_14145_p2 = ($signed(sext_ln153_67_fu_14141_p1) + $signed(sext_ln153_65_fu_14121_p1));

assign add_ln153_82_fu_21226_p2 = (add_ln153_94_fu_21220_p2 + add_ln153_76_fu_21182_p2);

assign add_ln153_83_fu_14151_p2 = ($signed(sext_ln151_358_fu_13906_p1) + $signed(sext_ln151_357_fu_13903_p1));

assign add_ln153_84_fu_14161_p2 = ($signed(sext_ln153_69_fu_14157_p1) + $signed(sext_ln151_372_fu_14001_p1));

assign add_ln153_85_fu_14167_p2 = ($signed(sext_ln151_361_fu_13933_p1) + $signed(sext_ln151_360_fu_13930_p1));

assign add_ln153_86_fu_14177_p2 = ($signed(sext_ln153_71_fu_14173_p1) + $signed(sext_ln151_359_fu_13926_p1));

assign add_ln153_87_fu_21194_p2 = ($signed(sext_ln153_72_fu_21191_p1) + $signed(sext_ln153_70_fu_21188_p1));

assign add_ln153_88_fu_14183_p2 = ($signed(sext_ln151_364_fu_13960_p1) + $signed(sext_ln151_363_fu_13957_p1));

assign add_ln153_89_fu_14193_p2 = ($signed(sext_ln153_74_fu_14189_p1) + $signed(sext_ln151_362_fu_13953_p1));

assign add_ln153_8_fu_13169_p2 = ($signed(sext_ln153_6_fu_13165_p1) + $signed(sext_ln151_300_fu_12997_p1));

assign add_ln153_90_fu_14199_p2 = ($signed(sext_ln151_365_fu_13963_p1) + $signed(sext_ln151_367_fu_13969_p1));

assign add_ln153_91_fu_14209_p2 = ($signed(sext_ln151_366_fu_13966_p1) + $signed(sext_ln153_60_fu_14080_p1));

assign add_ln153_92_fu_14219_p2 = ($signed(sext_ln153_77_fu_14215_p1) + $signed(sext_ln153_76_fu_14205_p1));

assign add_ln153_93_fu_21210_p2 = ($signed(sext_ln153_78_fu_21207_p1) + $signed(sext_ln153_75_fu_21204_p1));

assign add_ln153_94_fu_21220_p2 = ($signed(sext_ln153_79_fu_21216_p1) + $signed(sext_ln153_73_fu_21200_p1));

assign add_ln153_95_fu_21232_p2 = (add_ln153_82_fu_21226_p2 + select_ln126_20_fu_20930_p3);

assign add_ln153_96_fu_14405_p2 = ($signed(sext_ln151_401_fu_14377_p1) + $signed(sext_ln151_402_fu_14398_p1));

assign add_ln153_97_fu_21244_p2 = ($signed(sext_ln153_83_fu_21241_p1) + $signed(sext_ln153_81_fu_21238_p1));

assign add_ln153_98_fu_14411_p2 = ($signed(sext_ln151_397_fu_14330_p1) + $signed(sext_ln151_399_fu_14336_p1));

assign add_ln153_99_fu_14421_p2 = ($signed(sext_ln153_82_fu_14417_p1) + $signed(sext_ln151_400_fu_14356_p1));

assign add_ln153_9_fu_13179_p2 = ($signed(sext_ln153_7_fu_13175_p1) + $signed(sext_ln153_5_fu_13155_p1));

assign add_ln153_fu_13117_p2 = ($signed(sext_ln151_309_fu_13086_p1) + $signed(sext_ln151_310_fu_13110_p1));

assign and_ln120_fu_2705_p2 = (xor_ln120_fu_2694_p2 & icmp_ln122_fu_2699_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = 1'b0;

assign ap_block_pp0_stage0_01001 = 1'b0;

assign ap_block_pp0_stage0_11001 = 1'b0;

assign ap_block_pp0_stage0_subdone = 1'b0;

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state4_pp0_stage0_iter3 = (1'b1 == 1'b0);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = ((icmp_ln161_reg_23454_pp0_iter5_reg == 1'd1) & (1'b1 == 1'b0));
end

always @ (*) begin
    ap_condition_frp_pvb_no_bkwd_prs = (pf_mac_sm_U_pf_ready == 1'b1);
end

always @ (*) begin
    ap_condition_frp_pvb_pf_start = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_condition_frp_roi_pvb_no_fwd_prs = ~(cache_window_sm_num_data_valid < (ap_frp_data_req_cache_window_sm + ap_frp_data_req_cache_window_sm_op104));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign cache_window_sm_blk_n = 1'b1;

assign icmp_ln120_fu_2625_p2 = ((ap_sig_allocacmp_indvar_flatten59_load == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_2631_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2699_p2 = ((ap_sig_allocacmp_cit_load == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_2793_p2 = ((select_ln121_reg_23404 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_2802_p2 = ((select_ln121_reg_23404 == 6'd31) ? 1'b1 : 1'b0);

assign lshr_ln_fu_2821_p4 = {{cache_window_sm_dout[5:3]}};

assign mac_sm_blk_n = 1'b1;

assign mac_sm_din = pf_mac_sm_U_data_out;

assign mlp_inst_m2_bias_arr_113_address0 = zext_ln121_fu_2807_p1;

assign mlp_inst_m2_weight_arr_112_address0 = zext_ln151_49_fu_2788_p1;

assign mul_res_1000_fu_11427_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_1000_fu_11427_p1 = sext_ln151_137_fu_6369_p1;

assign mul_res_1001_fu_18560_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_1001_fu_18560_p1 = sext_ln151_138_reg_24265;

assign mul_res_1002_fu_11441_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_1002_fu_11441_p1 = sext_ln151_139_fu_6425_p1;

assign mul_res_1003_fu_18580_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_1003_fu_18580_p1 = sext_ln151_140_fu_14661_p1;

assign mul_res_1004_fu_18598_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_1004_fu_18598_p1 = sext_ln151_141_fu_14682_p1;

assign mul_res_1005_fu_18616_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_1005_fu_18616_p1 = sext_ln151_142_fu_14703_p1;

assign mul_res_1006_fu_11455_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_1006_fu_11455_p1 = sext_ln151_143_fu_6483_p1;

assign mul_res_1007_fu_11469_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_1007_fu_11469_p1 = sext_ln151_144_fu_6511_p1;

assign mul_res_1008_fu_11483_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_1008_fu_11483_p1 = sext_ln151_145_fu_6539_p1;

assign mul_res_1009_fu_18771_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_1009_fu_18771_p1 = sext_ln151_146_fu_14875_p1;

assign mul_res_1010_fu_11497_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_1010_fu_11497_p1 = sext_ln151_147_fu_6577_p1;

assign mul_res_1011_fu_11511_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_1011_fu_11511_p1 = sext_ln151_148_fu_6605_p1;

assign mul_res_1012_fu_18795_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_1012_fu_18795_p1 = sext_ln151_149_fu_14902_p1;

assign mul_res_1013_fu_11525_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_1013_fu_11525_p1 = sext_ln151_150_fu_6643_p1;

assign mul_res_1014_fu_11539_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_1014_fu_11539_p1 = sext_ln151_151_fu_6671_p1;

assign mul_res_1015_fu_11553_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_1015_fu_11553_p1 = sext_ln151_152_fu_6699_p1;

assign mul_res_1016_fu_11567_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_1016_fu_11567_p1 = sext_ln151_153_fu_6727_p1;

assign mul_res_1017_fu_11581_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_1017_fu_11581_p1 = sext_ln151_154_fu_6755_p1;

assign mul_res_1018_fu_11595_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_1018_fu_11595_p1 = sext_ln151_155_fu_6783_p1;

assign mul_res_1019_fu_18830_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_1019_fu_18830_p1 = sext_ln151_156_reg_24361;

assign mul_res_1020_fu_11609_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_1020_fu_11609_p1 = sext_ln151_157_fu_6839_p1;

assign mul_res_1021_fu_11623_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_1021_fu_11623_p1 = sext_ln151_158_fu_6867_p1;

assign mul_res_1022_fu_18853_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_1022_fu_18853_p1 = sext_ln151_159_fu_14950_p1;

assign mul_res_1023_fu_11637_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_1023_fu_11637_p1 = sext_ln151_160_fu_6905_p1;

assign mul_res_1024_fu_11651_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_1024_fu_11651_p1 = sext_ln151_161_fu_6933_p1;

assign mul_res_1025_fu_18876_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_1025_fu_18876_p1 = sext_ln151_162_reg_24397;

assign mul_res_1026_fu_11665_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_1026_fu_11665_p1 = sext_ln151_163_fu_6989_p1;

assign mul_res_1027_fu_18896_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_1027_fu_18896_p1 = sext_ln151_164_fu_14983_p1;

assign mul_res_1028_fu_18914_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_1028_fu_18914_p1 = sext_ln151_165_fu_15004_p1;

assign mul_res_1029_fu_18932_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_1029_fu_18932_p1 = sext_ln151_166_fu_15025_p1;

assign mul_res_1030_fu_11679_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_1030_fu_11679_p1 = sext_ln151_167_fu_7047_p1;

assign mul_res_1031_fu_11693_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_1031_fu_11693_p1 = sext_ln151_168_fu_7075_p1;

assign mul_res_1032_fu_11707_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_1032_fu_11707_p1 = sext_ln151_169_fu_7103_p1;

assign mul_res_1033_fu_19087_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_1033_fu_19087_p1 = sext_ln151_170_fu_15197_p1;

assign mul_res_1034_fu_11721_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_1034_fu_11721_p1 = sext_ln151_171_fu_7141_p1;

assign mul_res_1035_fu_11735_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_1035_fu_11735_p1 = sext_ln151_172_fu_7169_p1;

assign mul_res_1036_fu_19111_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_1036_fu_19111_p1 = sext_ln151_173_fu_15224_p1;

assign mul_res_1037_fu_11749_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_1037_fu_11749_p1 = sext_ln151_174_fu_7207_p1;

assign mul_res_1038_fu_11763_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_1038_fu_11763_p1 = sext_ln151_175_fu_7235_p1;

assign mul_res_1039_fu_11777_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_1039_fu_11777_p1 = sext_ln151_176_fu_7263_p1;

assign mul_res_1040_fu_11791_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_1040_fu_11791_p1 = sext_ln151_177_fu_7291_p1;

assign mul_res_1041_fu_11805_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_1041_fu_11805_p1 = sext_ln151_178_fu_7319_p1;

assign mul_res_1042_fu_11819_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_1042_fu_11819_p1 = sext_ln151_179_fu_7347_p1;

assign mul_res_1043_fu_19146_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_1043_fu_19146_p1 = sext_ln151_180_reg_24493;

assign mul_res_1044_fu_11833_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_1044_fu_11833_p1 = sext_ln151_181_fu_7403_p1;

assign mul_res_1045_fu_11847_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_1045_fu_11847_p1 = sext_ln151_182_fu_7431_p1;

assign mul_res_1046_fu_19169_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_1046_fu_19169_p1 = sext_ln151_183_fu_15272_p1;

assign mul_res_1047_fu_11861_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_1047_fu_11861_p1 = sext_ln151_184_fu_7469_p1;

assign mul_res_1048_fu_11875_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_1048_fu_11875_p1 = sext_ln151_185_fu_7497_p1;

assign mul_res_1049_fu_19192_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_1049_fu_19192_p1 = sext_ln151_186_reg_24529;

assign mul_res_1050_fu_11889_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_1050_fu_11889_p1 = sext_ln151_187_fu_7553_p1;

assign mul_res_1051_fu_19212_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_1051_fu_19212_p1 = sext_ln151_188_fu_15305_p1;

assign mul_res_1052_fu_19230_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_1052_fu_19230_p1 = sext_ln151_189_fu_15326_p1;

assign mul_res_1053_fu_19248_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_1053_fu_19248_p1 = sext_ln151_190_fu_15347_p1;

assign mul_res_1054_fu_11903_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_1054_fu_11903_p1 = sext_ln151_191_fu_7611_p1;

assign mul_res_1055_fu_11917_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_1055_fu_11917_p1 = sext_ln151_192_fu_7639_p1;

assign mul_res_1056_fu_11931_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_1056_fu_11931_p1 = sext_ln151_193_fu_7667_p1;

assign mul_res_1057_fu_19403_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_1057_fu_19403_p1 = sext_ln151_194_fu_15519_p1;

assign mul_res_1058_fu_11945_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_1058_fu_11945_p1 = sext_ln151_195_fu_7705_p1;

assign mul_res_1059_fu_11959_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_1059_fu_11959_p1 = sext_ln151_196_fu_7733_p1;

assign mul_res_1060_fu_19427_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_1060_fu_19427_p1 = sext_ln151_197_fu_15546_p1;

assign mul_res_1061_fu_11973_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_1061_fu_11973_p1 = sext_ln151_198_fu_7771_p1;

assign mul_res_1062_fu_11987_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_1062_fu_11987_p1 = sext_ln151_199_fu_7799_p1;

assign mul_res_1063_fu_12001_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_1063_fu_12001_p1 = sext_ln151_200_fu_7827_p1;

assign mul_res_1064_fu_12015_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_1064_fu_12015_p1 = sext_ln151_201_fu_7855_p1;

assign mul_res_1065_fu_12029_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_1065_fu_12029_p1 = sext_ln151_202_fu_7883_p1;

assign mul_res_1066_fu_12043_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_1066_fu_12043_p1 = sext_ln151_203_fu_7911_p1;

assign mul_res_1067_fu_19462_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_1067_fu_19462_p1 = sext_ln151_204_reg_24625;

assign mul_res_1068_fu_12057_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_1068_fu_12057_p1 = sext_ln151_205_fu_7967_p1;

assign mul_res_1069_fu_12071_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_1069_fu_12071_p1 = sext_ln151_206_fu_7995_p1;

assign mul_res_1070_fu_19485_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_1070_fu_19485_p1 = sext_ln151_207_fu_15594_p1;

assign mul_res_1071_fu_12085_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_1071_fu_12085_p1 = sext_ln151_208_fu_8033_p1;

assign mul_res_1072_fu_12099_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_1072_fu_12099_p1 = sext_ln151_209_fu_8061_p1;

assign mul_res_1073_fu_19508_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_1073_fu_19508_p1 = sext_ln151_210_reg_24661;

assign mul_res_1074_fu_12113_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_1074_fu_12113_p1 = sext_ln151_211_fu_8117_p1;

assign mul_res_1075_fu_19528_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_1075_fu_19528_p1 = sext_ln151_212_fu_15627_p1;

assign mul_res_1076_fu_19546_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_1076_fu_19546_p1 = sext_ln151_213_fu_15648_p1;

assign mul_res_1077_fu_19564_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_1077_fu_19564_p1 = sext_ln151_214_fu_15669_p1;

assign mul_res_1078_fu_12127_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_1078_fu_12127_p1 = sext_ln151_215_fu_8175_p1;

assign mul_res_1079_fu_12141_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_1079_fu_12141_p1 = sext_ln151_216_fu_8203_p1;

assign mul_res_1080_fu_12155_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_1080_fu_12155_p1 = sext_ln151_217_fu_8231_p1;

assign mul_res_1081_fu_19719_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_1081_fu_19719_p1 = sext_ln151_218_fu_15841_p1;

assign mul_res_1082_fu_12169_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_1082_fu_12169_p1 = sext_ln151_219_fu_8269_p1;

assign mul_res_1083_fu_12183_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_1083_fu_12183_p1 = sext_ln151_220_fu_8297_p1;

assign mul_res_1084_fu_19743_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_1084_fu_19743_p1 = sext_ln151_221_fu_15868_p1;

assign mul_res_1085_fu_12197_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_1085_fu_12197_p1 = sext_ln151_222_fu_8335_p1;

assign mul_res_1086_fu_12211_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_1086_fu_12211_p1 = sext_ln151_223_fu_8363_p1;

assign mul_res_1087_fu_12225_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_1087_fu_12225_p1 = sext_ln151_224_fu_8391_p1;

assign mul_res_1088_fu_12239_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_1088_fu_12239_p1 = sext_ln151_225_fu_8419_p1;

assign mul_res_1089_fu_12253_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_1089_fu_12253_p1 = sext_ln151_226_fu_8447_p1;

assign mul_res_1090_fu_12267_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_1090_fu_12267_p1 = sext_ln151_227_fu_8475_p1;

assign mul_res_1091_fu_19778_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_1091_fu_19778_p1 = sext_ln151_228_reg_24757;

assign mul_res_1092_fu_12281_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_1092_fu_12281_p1 = sext_ln151_229_fu_8531_p1;

assign mul_res_1093_fu_12295_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_1093_fu_12295_p1 = sext_ln151_230_fu_8559_p1;

assign mul_res_1094_fu_19801_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_1094_fu_19801_p1 = sext_ln151_231_fu_15916_p1;

assign mul_res_1095_fu_12309_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_1095_fu_12309_p1 = sext_ln151_232_fu_8597_p1;

assign mul_res_1096_fu_12323_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_1096_fu_12323_p1 = sext_ln151_233_fu_8625_p1;

assign mul_res_1097_fu_19824_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_1097_fu_19824_p1 = sext_ln151_234_reg_24793;

assign mul_res_1098_fu_12337_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_1098_fu_12337_p1 = sext_ln151_235_fu_8681_p1;

assign mul_res_1099_fu_19844_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_1099_fu_19844_p1 = sext_ln151_236_fu_15949_p1;

assign mul_res_1100_fu_19862_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_1100_fu_19862_p1 = sext_ln151_237_fu_15970_p1;

assign mul_res_1101_fu_19880_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_1101_fu_19880_p1 = sext_ln151_238_fu_15991_p1;

assign mul_res_1102_fu_12351_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_1102_fu_12351_p1 = sext_ln151_239_fu_8739_p1;

assign mul_res_1103_fu_12365_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_1103_fu_12365_p1 = sext_ln151_240_fu_8767_p1;

assign mul_res_1104_fu_12379_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_1104_fu_12379_p1 = sext_ln151_241_fu_8795_p1;

assign mul_res_1105_fu_20035_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_1105_fu_20035_p1 = sext_ln151_242_fu_16163_p1;

assign mul_res_1106_fu_12393_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_1106_fu_12393_p1 = sext_ln151_243_fu_8833_p1;

assign mul_res_1107_fu_12407_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_1107_fu_12407_p1 = sext_ln151_244_fu_8861_p1;

assign mul_res_1108_fu_20059_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_1108_fu_20059_p1 = sext_ln151_245_fu_16190_p1;

assign mul_res_1109_fu_12421_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_1109_fu_12421_p1 = sext_ln151_246_fu_8899_p1;

assign mul_res_1110_fu_12435_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_1110_fu_12435_p1 = sext_ln151_247_fu_8927_p1;

assign mul_res_1111_fu_12449_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_1111_fu_12449_p1 = sext_ln151_248_fu_8955_p1;

assign mul_res_1112_fu_12463_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_1112_fu_12463_p1 = sext_ln151_249_fu_8983_p1;

assign mul_res_1113_fu_12477_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_1113_fu_12477_p1 = sext_ln151_250_fu_9011_p1;

assign mul_res_1114_fu_12491_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_1114_fu_12491_p1 = sext_ln151_251_fu_9039_p1;

assign mul_res_1115_fu_20095_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_1115_fu_20095_p1 = sext_ln151_252_fu_16229_p1;

assign mul_res_1116_fu_12505_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_1116_fu_12505_p1 = sext_ln151_253_fu_9077_p1;

assign mul_res_1117_fu_12519_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_1117_fu_12519_p1 = sext_ln151_254_fu_9105_p1;

assign mul_res_1118_fu_20119_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_1118_fu_20119_p1 = sext_ln151_255_fu_16254_p1;

assign mul_res_1119_fu_12533_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_1119_fu_12533_p1 = sext_ln151_256_fu_9143_p1;

assign mul_res_1120_fu_12547_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_1120_fu_12547_p1 = sext_ln151_257_fu_9171_p1;

assign mul_res_1121_fu_20143_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_1121_fu_20143_p1 = sext_ln151_258_fu_16281_p1;

assign mul_res_1122_fu_12561_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_1122_fu_12561_p1 = sext_ln151_259_fu_9209_p1;

assign mul_res_1123_fu_20164_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_1123_fu_20164_p1 = sext_ln151_260_fu_16303_p1;

assign mul_res_1124_fu_20182_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_1124_fu_20182_p1 = sext_ln151_261_fu_16324_p1;

assign mul_res_1125_fu_20200_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_1125_fu_20200_p1 = sext_ln151_262_fu_16345_p1;

assign mul_res_1126_fu_12575_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_1126_fu_12575_p1 = sext_ln151_263_fu_9267_p1;

assign mul_res_1127_fu_12589_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_1127_fu_12589_p1 = sext_ln151_264_fu_9295_p1;

assign mul_res_1128_fu_12603_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_1128_fu_12603_p1 = sext_ln151_265_fu_9323_p1;

assign mul_res_1129_fu_20355_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_1129_fu_20355_p1 = sext_ln151_266_fu_16503_p1;

assign mul_res_1130_fu_12617_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_1130_fu_12617_p1 = sext_ln151_267_fu_9361_p1;

assign mul_res_1131_fu_12631_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_1131_fu_12631_p1 = sext_ln151_268_fu_9389_p1;

assign mul_res_1132_fu_20379_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_1132_fu_20379_p1 = sext_ln151_269_fu_16530_p1;

assign mul_res_1133_fu_12645_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_1133_fu_12645_p1 = sext_ln151_270_fu_9427_p1;

assign mul_res_1134_fu_12659_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_1134_fu_12659_p1 = sext_ln151_271_fu_9455_p1;

assign mul_res_1135_fu_12673_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_1135_fu_12673_p1 = sext_ln151_272_fu_9483_p1;

assign mul_res_1136_fu_12687_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_1136_fu_12687_p1 = sext_ln151_273_fu_9511_p1;

assign mul_res_1137_fu_12701_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_1137_fu_12701_p1 = sext_ln151_274_fu_9539_p1;

assign mul_res_1138_fu_12715_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_1138_fu_12715_p1 = sext_ln151_275_fu_9567_p1;

assign mul_res_1139_fu_20415_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_1139_fu_20415_p1 = sext_ln151_276_fu_16569_p1;

assign mul_res_1140_fu_12729_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_1140_fu_12729_p1 = sext_ln151_277_fu_9605_p1;

assign mul_res_1141_fu_12743_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_1141_fu_12743_p1 = sext_ln151_278_fu_9633_p1;

assign mul_res_1142_fu_20439_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_1142_fu_20439_p1 = sext_ln151_279_fu_16594_p1;

assign mul_res_1143_fu_12757_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_1143_fu_12757_p1 = sext_ln151_280_fu_9671_p1;

assign mul_res_1144_fu_12771_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_1144_fu_12771_p1 = sext_ln151_281_fu_9699_p1;

assign mul_res_1145_fu_20463_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_1145_fu_20463_p1 = sext_ln151_282_fu_16621_p1;

assign mul_res_1146_fu_12785_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_1146_fu_12785_p1 = sext_ln151_283_fu_9737_p1;

assign mul_res_1147_fu_20484_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_1147_fu_20484_p1 = sext_ln151_284_fu_16643_p1;

assign mul_res_1148_fu_20502_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_1148_fu_20502_p1 = sext_ln151_285_fu_16664_p1;

assign mul_res_1149_fu_20520_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_1149_fu_20520_p1 = sext_ln151_286_fu_16685_p1;

assign mul_res_1150_fu_12799_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_1150_fu_12799_p1 = sext_ln151_287_fu_9795_p1;

assign mul_res_576_fu_2883_p0 = zext_ln137_fu_2831_p1;

assign mul_res_576_fu_2883_p1 = sext_ln151_1_fu_2871_p1;

assign mul_res_577_fu_12939_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_577_fu_12939_p1 = sext_ln151_2_fu_12928_p1;

assign mul_res_578_fu_2945_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_578_fu_2945_p1 = sext_ln151_3_fu_2933_p1;

assign mul_res_579_fu_2987_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_579_fu_2987_p1 = sext_ln151_4_fu_2975_p1;

assign mul_res_580_fu_12969_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_580_fu_12969_p1 = sext_ln151_5_fu_12958_p1;

assign mul_res_581_fu_3049_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_581_fu_3049_p1 = sext_ln151_6_fu_3037_p1;

assign mul_res_582_fu_3091_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_582_fu_3091_p1 = sext_ln151_7_fu_3079_p1;

assign mul_res_583_fu_3133_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_583_fu_3133_p1 = sext_ln151_8_fu_3121_p1;

assign mul_res_584_fu_3175_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_584_fu_3175_p1 = sext_ln151_9_fu_3163_p1;

assign mul_res_585_fu_3217_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_585_fu_3217_p1 = sext_ln151_10_fu_3205_p1;

assign mul_res_586_fu_3259_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_586_fu_3259_p1 = sext_ln151_11_fu_3247_p1;

assign mul_res_587_fu_3301_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_588_fu_3343_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_588_fu_3343_p1 = sext_ln151_13_fu_3331_p1;

assign mul_res_589_fu_3385_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_589_fu_3385_p1 = sext_ln151_14_fu_3373_p1;

assign mul_res_590_fu_13020_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_590_fu_13020_p1 = sext_ln151_15_fu_13009_p1;

assign mul_res_591_fu_3447_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_591_fu_3447_p1 = sext_ln151_16_fu_3435_p1;

assign mul_res_592_fu_3489_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_592_fu_3489_p1 = sext_ln151_17_fu_3477_p1;

assign mul_res_593_fu_3531_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_594_fu_3573_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_594_fu_3573_p1 = sext_ln151_19_fu_3561_p1;

assign mul_res_595_fu_13056_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_595_fu_13056_p1 = sext_ln151_20_fu_13045_p1;

assign mul_res_596_fu_13080_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_596_fu_13080_p1 = sext_ln151_21_fu_13069_p1;

assign mul_res_597_fu_13104_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_597_fu_13104_p1 = sext_ln151_22_fu_13093_p1;

assign mul_res_598_fu_3675_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_598_fu_3675_p1 = sext_ln151_23_fu_3663_p1;

assign mul_res_599_fu_3703_p0 = sext_ln151_24_fu_3691_p1;

assign mul_res_599_fu_3703_p1 = zext_ln151_fu_2839_p1;

assign mul_res_600_fu_3731_p0 = zext_ln137_fu_2831_p1;

assign mul_res_600_fu_3731_p1 = sext_ln151_25_fu_3719_p1;

assign mul_res_601_fu_13276_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_601_fu_13276_p1 = sext_ln151_26_fu_13265_p1;

assign mul_res_602_fu_3769_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_602_fu_3769_p1 = sext_ln151_27_fu_3757_p1;

assign mul_res_603_fu_3797_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_603_fu_3797_p1 = sext_ln151_28_fu_3785_p1;

assign mul_res_604_fu_13303_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_604_fu_13303_p1 = sext_ln151_29_fu_13292_p1;

assign mul_res_605_fu_3835_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_605_fu_3835_p1 = sext_ln151_30_fu_3823_p1;

assign mul_res_606_fu_3863_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_606_fu_3863_p1 = sext_ln151_31_fu_3851_p1;

assign mul_res_607_fu_3891_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_607_fu_3891_p1 = sext_ln151_32_fu_3879_p1;

assign mul_res_608_fu_3919_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_608_fu_3919_p1 = sext_ln151_33_fu_3907_p1;

assign mul_res_609_fu_3947_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_609_fu_3947_p1 = sext_ln151_34_fu_3935_p1;

assign mul_res_610_fu_3975_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_610_fu_3975_p1 = sext_ln151_35_fu_3963_p1;

assign mul_res_611_fu_4003_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_612_fu_4031_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_612_fu_4031_p1 = sext_ln151_37_fu_4019_p1;

assign mul_res_613_fu_4059_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_613_fu_4059_p1 = sext_ln151_38_fu_4047_p1;

assign mul_res_614_fu_13351_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_614_fu_13351_p1 = sext_ln151_39_fu_13340_p1;

assign mul_res_615_fu_4097_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_615_fu_4097_p1 = sext_ln151_40_fu_4085_p1;

assign mul_res_616_fu_4125_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_616_fu_4125_p1 = sext_ln151_41_fu_4113_p1;

assign mul_res_617_fu_4153_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_618_fu_4181_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_618_fu_4181_p1 = sext_ln151_43_fu_4169_p1;

assign mul_res_619_fu_13384_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_619_fu_13384_p1 = sext_ln151_44_fu_13373_p1;

assign mul_res_620_fu_13405_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_620_fu_13405_p1 = sext_ln151_45_fu_13394_p1;

assign mul_res_621_fu_13426_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_621_fu_13426_p1 = sext_ln151_46_fu_13415_p1;

assign mul_res_622_fu_4239_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_622_fu_4239_p1 = sext_ln151_47_fu_4227_p1;

assign mul_res_623_fu_4267_p0 = sext_ln151_48_fu_4255_p1;

assign mul_res_623_fu_4267_p1 = zext_ln151_fu_2839_p1;

assign mul_res_624_fu_4295_p0 = zext_ln137_fu_2831_p1;

assign mul_res_624_fu_4295_p1 = sext_ln151_49_fu_4283_p1;

assign mul_res_625_fu_13598_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_625_fu_13598_p1 = sext_ln151_50_fu_13587_p1;

assign mul_res_626_fu_4333_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_626_fu_4333_p1 = sext_ln151_51_fu_4321_p1;

assign mul_res_627_fu_4361_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_627_fu_4361_p1 = sext_ln151_52_fu_4349_p1;

assign mul_res_628_fu_13625_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_628_fu_13625_p1 = sext_ln151_53_fu_13614_p1;

assign mul_res_629_fu_4399_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_629_fu_4399_p1 = sext_ln151_54_fu_4387_p1;

assign mul_res_630_fu_4427_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_630_fu_4427_p1 = sext_ln151_55_fu_4415_p1;

assign mul_res_631_fu_4455_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_631_fu_4455_p1 = sext_ln151_56_fu_4443_p1;

assign mul_res_632_fu_4483_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_632_fu_4483_p1 = sext_ln151_57_fu_4471_p1;

assign mul_res_633_fu_4511_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_633_fu_4511_p1 = sext_ln151_58_fu_4499_p1;

assign mul_res_634_fu_4539_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_634_fu_4539_p1 = sext_ln151_59_fu_4527_p1;

assign mul_res_635_fu_4567_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_636_fu_4595_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_636_fu_4595_p1 = sext_ln151_61_fu_4583_p1;

assign mul_res_637_fu_4623_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_637_fu_4623_p1 = sext_ln151_62_fu_4611_p1;

assign mul_res_638_fu_13673_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_638_fu_13673_p1 = sext_ln151_63_fu_13662_p1;

assign mul_res_639_fu_4661_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_639_fu_4661_p1 = sext_ln151_64_fu_4649_p1;

assign mul_res_640_fu_4689_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_640_fu_4689_p1 = sext_ln151_65_fu_4677_p1;

assign mul_res_641_fu_4717_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_642_fu_4745_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_642_fu_4745_p1 = sext_ln151_67_fu_4733_p1;

assign mul_res_643_fu_13706_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_643_fu_13706_p1 = sext_ln151_68_fu_13695_p1;

assign mul_res_644_fu_13727_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_644_fu_13727_p1 = sext_ln151_69_fu_13716_p1;

assign mul_res_645_fu_13748_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_645_fu_13748_p1 = sext_ln151_70_fu_13737_p1;

assign mul_res_646_fu_4803_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_646_fu_4803_p1 = sext_ln151_71_fu_4791_p1;

assign mul_res_647_fu_4831_p0 = sext_ln151_72_fu_4819_p1;

assign mul_res_647_fu_4831_p1 = zext_ln151_fu_2839_p1;

assign mul_res_648_fu_4859_p0 = zext_ln137_fu_2831_p1;

assign mul_res_648_fu_4859_p1 = sext_ln151_73_fu_4847_p1;

assign mul_res_649_fu_13920_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_649_fu_13920_p1 = sext_ln151_74_fu_13909_p1;

assign mul_res_650_fu_4897_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_650_fu_4897_p1 = sext_ln151_75_fu_4885_p1;

assign mul_res_651_fu_4925_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_651_fu_4925_p1 = sext_ln151_76_fu_4913_p1;

assign mul_res_652_fu_13947_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_652_fu_13947_p1 = sext_ln151_77_fu_13936_p1;

assign mul_res_653_fu_4963_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_653_fu_4963_p1 = sext_ln151_78_fu_4951_p1;

assign mul_res_654_fu_4991_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_654_fu_4991_p1 = sext_ln151_79_fu_4979_p1;

assign mul_res_655_fu_5019_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_655_fu_5019_p1 = sext_ln151_80_fu_5007_p1;

assign mul_res_656_fu_5047_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_656_fu_5047_p1 = sext_ln151_81_fu_5035_p1;

assign mul_res_657_fu_5075_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_657_fu_5075_p1 = sext_ln151_82_fu_5063_p1;

assign mul_res_658_fu_5103_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_658_fu_5103_p1 = sext_ln151_83_fu_5091_p1;

assign mul_res_659_fu_5131_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_660_fu_5159_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_660_fu_5159_p1 = sext_ln151_85_fu_5147_p1;

assign mul_res_661_fu_5187_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_661_fu_5187_p1 = sext_ln151_86_fu_5175_p1;

assign mul_res_662_fu_13995_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_662_fu_13995_p1 = sext_ln151_87_fu_13984_p1;

assign mul_res_663_fu_5225_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_663_fu_5225_p1 = sext_ln151_88_fu_5213_p1;

assign mul_res_664_fu_5253_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_664_fu_5253_p1 = sext_ln151_89_fu_5241_p1;

assign mul_res_665_fu_5281_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_666_fu_5309_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_666_fu_5309_p1 = sext_ln151_91_fu_5297_p1;

assign mul_res_667_fu_14028_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_667_fu_14028_p1 = sext_ln151_92_fu_14017_p1;

assign mul_res_668_fu_14049_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_668_fu_14049_p1 = sext_ln151_93_fu_14038_p1;

assign mul_res_669_fu_14070_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_669_fu_14070_p1 = sext_ln151_94_fu_14059_p1;

assign mul_res_670_fu_5367_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_670_fu_5367_p1 = sext_ln151_95_fu_5355_p1;

assign mul_res_671_fu_5395_p0 = sext_ln151_96_fu_5383_p1;

assign mul_res_671_fu_5395_p1 = zext_ln151_fu_2839_p1;

assign mul_res_672_fu_5423_p0 = zext_ln137_fu_2831_p1;

assign mul_res_672_fu_5423_p1 = sext_ln151_97_fu_5411_p1;

assign mul_res_673_fu_14242_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_673_fu_14242_p1 = sext_ln151_98_fu_14231_p1;

assign mul_res_674_fu_5461_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_674_fu_5461_p1 = sext_ln151_99_fu_5449_p1;

assign mul_res_675_fu_5489_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_675_fu_5489_p1 = sext_ln151_100_fu_5477_p1;

assign mul_res_676_fu_14269_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_676_fu_14269_p1 = sext_ln151_101_fu_14258_p1;

assign mul_res_677_fu_5527_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_677_fu_5527_p1 = sext_ln151_102_fu_5515_p1;

assign mul_res_678_fu_5555_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_678_fu_5555_p1 = sext_ln151_103_fu_5543_p1;

assign mul_res_679_fu_5583_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_679_fu_5583_p1 = sext_ln151_104_fu_5571_p1;

assign mul_res_680_fu_5611_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_680_fu_5611_p1 = sext_ln151_105_fu_5599_p1;

assign mul_res_681_fu_5639_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_681_fu_5639_p1 = sext_ln151_106_fu_5627_p1;

assign mul_res_682_fu_5667_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_682_fu_5667_p1 = sext_ln151_107_fu_5655_p1;

assign mul_res_683_fu_5695_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_684_fu_5723_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_684_fu_5723_p1 = sext_ln151_109_fu_5711_p1;

assign mul_res_685_fu_5751_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_685_fu_5751_p1 = sext_ln151_110_fu_5739_p1;

assign mul_res_686_fu_14317_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_686_fu_14317_p1 = sext_ln151_111_fu_14306_p1;

assign mul_res_687_fu_5789_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_687_fu_5789_p1 = sext_ln151_112_fu_5777_p1;

assign mul_res_688_fu_5817_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_688_fu_5817_p1 = sext_ln151_113_fu_5805_p1;

assign mul_res_689_fu_5845_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_690_fu_5873_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_690_fu_5873_p1 = sext_ln151_115_fu_5861_p1;

assign mul_res_691_fu_14350_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_691_fu_14350_p1 = sext_ln151_116_fu_14339_p1;

assign mul_res_692_fu_14371_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_692_fu_14371_p1 = sext_ln151_117_fu_14360_p1;

assign mul_res_693_fu_14392_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_693_fu_14392_p1 = sext_ln151_118_fu_14381_p1;

assign mul_res_694_fu_5931_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_694_fu_5931_p1 = sext_ln151_119_fu_5919_p1;

assign mul_res_695_fu_5959_p0 = sext_ln151_120_fu_5947_p1;

assign mul_res_695_fu_5959_p1 = zext_ln151_fu_2839_p1;

assign mul_res_696_fu_5987_p0 = zext_ln137_fu_2831_p1;

assign mul_res_696_fu_5987_p1 = sext_ln151_121_fu_5975_p1;

assign mul_res_697_fu_14564_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_697_fu_14564_p1 = sext_ln151_122_fu_14553_p1;

assign mul_res_698_fu_6025_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_698_fu_6025_p1 = sext_ln151_123_fu_6013_p1;

assign mul_res_699_fu_6053_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_699_fu_6053_p1 = sext_ln151_124_fu_6041_p1;

assign mul_res_700_fu_14591_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_700_fu_14591_p1 = sext_ln151_125_fu_14580_p1;

assign mul_res_701_fu_6091_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_701_fu_6091_p1 = sext_ln151_126_fu_6079_p1;

assign mul_res_702_fu_6119_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_702_fu_6119_p1 = sext_ln151_127_fu_6107_p1;

assign mul_res_703_fu_6147_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_703_fu_6147_p1 = sext_ln151_128_fu_6135_p1;

assign mul_res_704_fu_6175_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_704_fu_6175_p1 = sext_ln151_129_fu_6163_p1;

assign mul_res_705_fu_6203_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_705_fu_6203_p1 = sext_ln151_130_fu_6191_p1;

assign mul_res_706_fu_6231_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_706_fu_6231_p1 = sext_ln151_131_fu_6219_p1;

assign mul_res_707_fu_6259_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_708_fu_6287_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_708_fu_6287_p1 = sext_ln151_133_fu_6275_p1;

assign mul_res_709_fu_6315_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_709_fu_6315_p1 = sext_ln151_134_fu_6303_p1;

assign mul_res_710_fu_14639_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_710_fu_14639_p1 = sext_ln151_135_fu_14628_p1;

assign mul_res_711_fu_6353_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_711_fu_6353_p1 = sext_ln151_136_fu_6341_p1;

assign mul_res_712_fu_6381_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_712_fu_6381_p1 = sext_ln151_137_fu_6369_p1;

assign mul_res_713_fu_6409_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_714_fu_6437_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_714_fu_6437_p1 = sext_ln151_139_fu_6425_p1;

assign mul_res_715_fu_14672_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_715_fu_14672_p1 = sext_ln151_140_fu_14661_p1;

assign mul_res_716_fu_14693_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_716_fu_14693_p1 = sext_ln151_141_fu_14682_p1;

assign mul_res_717_fu_14714_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_717_fu_14714_p1 = sext_ln151_142_fu_14703_p1;

assign mul_res_718_fu_6495_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_718_fu_6495_p1 = sext_ln151_143_fu_6483_p1;

assign mul_res_719_fu_6523_p0 = sext_ln151_144_fu_6511_p1;

assign mul_res_719_fu_6523_p1 = zext_ln151_fu_2839_p1;

assign mul_res_720_fu_6551_p0 = zext_ln137_fu_2831_p1;

assign mul_res_720_fu_6551_p1 = sext_ln151_145_fu_6539_p1;

assign mul_res_721_fu_14886_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_721_fu_14886_p1 = sext_ln151_146_fu_14875_p1;

assign mul_res_722_fu_6589_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_722_fu_6589_p1 = sext_ln151_147_fu_6577_p1;

assign mul_res_723_fu_6617_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_723_fu_6617_p1 = sext_ln151_148_fu_6605_p1;

assign mul_res_724_fu_14913_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_724_fu_14913_p1 = sext_ln151_149_fu_14902_p1;

assign mul_res_725_fu_6655_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_725_fu_6655_p1 = sext_ln151_150_fu_6643_p1;

assign mul_res_726_fu_6683_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_726_fu_6683_p1 = sext_ln151_151_fu_6671_p1;

assign mul_res_727_fu_6711_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_727_fu_6711_p1 = sext_ln151_152_fu_6699_p1;

assign mul_res_728_fu_6739_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_728_fu_6739_p1 = sext_ln151_153_fu_6727_p1;

assign mul_res_729_fu_6767_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_729_fu_6767_p1 = sext_ln151_154_fu_6755_p1;

assign mul_res_730_fu_6795_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_730_fu_6795_p1 = sext_ln151_155_fu_6783_p1;

assign mul_res_731_fu_6823_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_732_fu_6851_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_732_fu_6851_p1 = sext_ln151_157_fu_6839_p1;

assign mul_res_733_fu_6879_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_733_fu_6879_p1 = sext_ln151_158_fu_6867_p1;

assign mul_res_734_fu_14961_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_734_fu_14961_p1 = sext_ln151_159_fu_14950_p1;

assign mul_res_735_fu_6917_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_735_fu_6917_p1 = sext_ln151_160_fu_6905_p1;

assign mul_res_736_fu_6945_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_736_fu_6945_p1 = sext_ln151_161_fu_6933_p1;

assign mul_res_737_fu_6973_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_738_fu_7001_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_738_fu_7001_p1 = sext_ln151_163_fu_6989_p1;

assign mul_res_739_fu_14994_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_739_fu_14994_p1 = sext_ln151_164_fu_14983_p1;

assign mul_res_740_fu_15015_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_740_fu_15015_p1 = sext_ln151_165_fu_15004_p1;

assign mul_res_741_fu_15036_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_741_fu_15036_p1 = sext_ln151_166_fu_15025_p1;

assign mul_res_742_fu_7059_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_742_fu_7059_p1 = sext_ln151_167_fu_7047_p1;

assign mul_res_743_fu_7087_p0 = sext_ln151_168_fu_7075_p1;

assign mul_res_743_fu_7087_p1 = zext_ln151_fu_2839_p1;

assign mul_res_744_fu_7115_p0 = zext_ln137_fu_2831_p1;

assign mul_res_744_fu_7115_p1 = sext_ln151_169_fu_7103_p1;

assign mul_res_745_fu_15208_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_745_fu_15208_p1 = sext_ln151_170_fu_15197_p1;

assign mul_res_746_fu_7153_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_746_fu_7153_p1 = sext_ln151_171_fu_7141_p1;

assign mul_res_747_fu_7181_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_747_fu_7181_p1 = sext_ln151_172_fu_7169_p1;

assign mul_res_748_fu_15235_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_748_fu_15235_p1 = sext_ln151_173_fu_15224_p1;

assign mul_res_749_fu_7219_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_749_fu_7219_p1 = sext_ln151_174_fu_7207_p1;

assign mul_res_750_fu_7247_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_750_fu_7247_p1 = sext_ln151_175_fu_7235_p1;

assign mul_res_751_fu_7275_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_751_fu_7275_p1 = sext_ln151_176_fu_7263_p1;

assign mul_res_752_fu_7303_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_752_fu_7303_p1 = sext_ln151_177_fu_7291_p1;

assign mul_res_753_fu_7331_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_753_fu_7331_p1 = sext_ln151_178_fu_7319_p1;

assign mul_res_754_fu_7359_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_754_fu_7359_p1 = sext_ln151_179_fu_7347_p1;

assign mul_res_755_fu_7387_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_756_fu_7415_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_756_fu_7415_p1 = sext_ln151_181_fu_7403_p1;

assign mul_res_757_fu_7443_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_757_fu_7443_p1 = sext_ln151_182_fu_7431_p1;

assign mul_res_758_fu_15283_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_758_fu_15283_p1 = sext_ln151_183_fu_15272_p1;

assign mul_res_759_fu_7481_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_759_fu_7481_p1 = sext_ln151_184_fu_7469_p1;

assign mul_res_760_fu_7509_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_760_fu_7509_p1 = sext_ln151_185_fu_7497_p1;

assign mul_res_761_fu_7537_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_762_fu_7565_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_762_fu_7565_p1 = sext_ln151_187_fu_7553_p1;

assign mul_res_763_fu_15316_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_763_fu_15316_p1 = sext_ln151_188_fu_15305_p1;

assign mul_res_764_fu_15337_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_764_fu_15337_p1 = sext_ln151_189_fu_15326_p1;

assign mul_res_765_fu_15358_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_765_fu_15358_p1 = sext_ln151_190_fu_15347_p1;

assign mul_res_766_fu_7623_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_766_fu_7623_p1 = sext_ln151_191_fu_7611_p1;

assign mul_res_767_fu_7651_p0 = sext_ln151_192_fu_7639_p1;

assign mul_res_767_fu_7651_p1 = zext_ln151_fu_2839_p1;

assign mul_res_768_fu_7679_p0 = zext_ln137_fu_2831_p1;

assign mul_res_768_fu_7679_p1 = sext_ln151_193_fu_7667_p1;

assign mul_res_769_fu_15530_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_769_fu_15530_p1 = sext_ln151_194_fu_15519_p1;

assign mul_res_770_fu_7717_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_770_fu_7717_p1 = sext_ln151_195_fu_7705_p1;

assign mul_res_771_fu_7745_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_771_fu_7745_p1 = sext_ln151_196_fu_7733_p1;

assign mul_res_772_fu_15557_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_772_fu_15557_p1 = sext_ln151_197_fu_15546_p1;

assign mul_res_773_fu_7783_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_773_fu_7783_p1 = sext_ln151_198_fu_7771_p1;

assign mul_res_774_fu_7811_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_774_fu_7811_p1 = sext_ln151_199_fu_7799_p1;

assign mul_res_775_fu_7839_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_775_fu_7839_p1 = sext_ln151_200_fu_7827_p1;

assign mul_res_776_fu_7867_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_776_fu_7867_p1 = sext_ln151_201_fu_7855_p1;

assign mul_res_777_fu_7895_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_777_fu_7895_p1 = sext_ln151_202_fu_7883_p1;

assign mul_res_778_fu_7923_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_778_fu_7923_p1 = sext_ln151_203_fu_7911_p1;

assign mul_res_779_fu_7951_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_780_fu_7979_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_780_fu_7979_p1 = sext_ln151_205_fu_7967_p1;

assign mul_res_781_fu_8007_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_781_fu_8007_p1 = sext_ln151_206_fu_7995_p1;

assign mul_res_782_fu_15605_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_782_fu_15605_p1 = sext_ln151_207_fu_15594_p1;

assign mul_res_783_fu_8045_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_783_fu_8045_p1 = sext_ln151_208_fu_8033_p1;

assign mul_res_784_fu_8073_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_784_fu_8073_p1 = sext_ln151_209_fu_8061_p1;

assign mul_res_785_fu_8101_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_786_fu_8129_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_786_fu_8129_p1 = sext_ln151_211_fu_8117_p1;

assign mul_res_787_fu_15638_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_787_fu_15638_p1 = sext_ln151_212_fu_15627_p1;

assign mul_res_788_fu_15659_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_788_fu_15659_p1 = sext_ln151_213_fu_15648_p1;

assign mul_res_789_fu_15680_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_789_fu_15680_p1 = sext_ln151_214_fu_15669_p1;

assign mul_res_790_fu_8187_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_790_fu_8187_p1 = sext_ln151_215_fu_8175_p1;

assign mul_res_791_fu_8215_p0 = sext_ln151_216_fu_8203_p1;

assign mul_res_791_fu_8215_p1 = zext_ln151_fu_2839_p1;

assign mul_res_792_fu_8243_p0 = zext_ln137_fu_2831_p1;

assign mul_res_792_fu_8243_p1 = sext_ln151_217_fu_8231_p1;

assign mul_res_793_fu_15852_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_793_fu_15852_p1 = sext_ln151_218_fu_15841_p1;

assign mul_res_794_fu_8281_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_794_fu_8281_p1 = sext_ln151_219_fu_8269_p1;

assign mul_res_795_fu_8309_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_795_fu_8309_p1 = sext_ln151_220_fu_8297_p1;

assign mul_res_796_fu_15879_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_796_fu_15879_p1 = sext_ln151_221_fu_15868_p1;

assign mul_res_797_fu_8347_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_797_fu_8347_p1 = sext_ln151_222_fu_8335_p1;

assign mul_res_798_fu_8375_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_798_fu_8375_p1 = sext_ln151_223_fu_8363_p1;

assign mul_res_799_fu_8403_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_799_fu_8403_p1 = sext_ln151_224_fu_8391_p1;

assign mul_res_800_fu_8431_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_800_fu_8431_p1 = sext_ln151_225_fu_8419_p1;

assign mul_res_801_fu_8459_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_801_fu_8459_p1 = sext_ln151_226_fu_8447_p1;

assign mul_res_802_fu_8487_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_802_fu_8487_p1 = sext_ln151_227_fu_8475_p1;

assign mul_res_803_fu_8515_p0 = zext_ln151_12_fu_3285_p1;

assign mul_res_804_fu_8543_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_804_fu_8543_p1 = sext_ln151_229_fu_8531_p1;

assign mul_res_805_fu_8571_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_805_fu_8571_p1 = sext_ln151_230_fu_8559_p1;

assign mul_res_806_fu_15927_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_806_fu_15927_p1 = sext_ln151_231_fu_15916_p1;

assign mul_res_807_fu_8609_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_807_fu_8609_p1 = sext_ln151_232_fu_8597_p1;

assign mul_res_808_fu_8637_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_808_fu_8637_p1 = sext_ln151_233_fu_8625_p1;

assign mul_res_809_fu_8665_p0 = zext_ln151_18_fu_3515_p1;

assign mul_res_810_fu_8693_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_810_fu_8693_p1 = sext_ln151_235_fu_8681_p1;

assign mul_res_811_fu_15960_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_811_fu_15960_p1 = sext_ln151_236_fu_15949_p1;

assign mul_res_812_fu_15981_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_812_fu_15981_p1 = sext_ln151_237_fu_15970_p1;

assign mul_res_813_fu_16002_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_813_fu_16002_p1 = sext_ln151_238_fu_15991_p1;

assign mul_res_814_fu_8751_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_814_fu_8751_p1 = sext_ln151_239_fu_8739_p1;

assign mul_res_815_fu_8779_p0 = sext_ln151_240_fu_8767_p1;

assign mul_res_815_fu_8779_p1 = zext_ln151_fu_2839_p1;

assign mul_res_816_fu_8807_p0 = zext_ln137_fu_2831_p1;

assign mul_res_816_fu_8807_p1 = sext_ln151_241_fu_8795_p1;

assign mul_res_817_fu_16174_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_817_fu_16174_p1 = sext_ln151_242_fu_16163_p1;

assign mul_res_818_fu_8845_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_818_fu_8845_p1 = sext_ln151_243_fu_8833_p1;

assign mul_res_819_fu_8873_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_819_fu_8873_p1 = sext_ln151_244_fu_8861_p1;

assign mul_res_820_fu_16201_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_820_fu_16201_p1 = sext_ln151_245_fu_16190_p1;

assign mul_res_821_fu_8911_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_821_fu_8911_p1 = sext_ln151_246_fu_8899_p1;

assign mul_res_822_fu_8939_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_822_fu_8939_p1 = sext_ln151_247_fu_8927_p1;

assign mul_res_823_fu_8967_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_823_fu_8967_p1 = sext_ln151_248_fu_8955_p1;

assign mul_res_824_fu_8995_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_824_fu_8995_p1 = sext_ln151_249_fu_8983_p1;

assign mul_res_825_fu_9023_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_825_fu_9023_p1 = sext_ln151_250_fu_9011_p1;

assign mul_res_826_fu_9051_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_826_fu_9051_p1 = sext_ln151_251_fu_9039_p1;

assign mul_res_827_fu_16239_p0 = zext_ln151_12_reg_23533;

assign mul_res_827_fu_16239_p1 = sext_ln151_252_fu_16229_p1;

assign mul_res_828_fu_9089_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_828_fu_9089_p1 = sext_ln151_253_fu_9077_p1;

assign mul_res_829_fu_9117_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_829_fu_9117_p1 = sext_ln151_254_fu_9105_p1;

assign mul_res_830_fu_16265_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_830_fu_16265_p1 = sext_ln151_255_fu_16254_p1;

assign mul_res_831_fu_9155_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_831_fu_9155_p1 = sext_ln151_256_fu_9143_p1;

assign mul_res_832_fu_9183_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_832_fu_9183_p1 = sext_ln151_257_fu_9171_p1;

assign mul_res_833_fu_16291_p0 = zext_ln151_18_reg_23582;

assign mul_res_833_fu_16291_p1 = sext_ln151_258_fu_16281_p1;

assign mul_res_834_fu_9221_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_834_fu_9221_p1 = sext_ln151_259_fu_9209_p1;

assign mul_res_835_fu_16314_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_835_fu_16314_p1 = sext_ln151_260_fu_16303_p1;

assign mul_res_836_fu_16335_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_836_fu_16335_p1 = sext_ln151_261_fu_16324_p1;

assign mul_res_837_fu_16356_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_837_fu_16356_p1 = sext_ln151_262_fu_16345_p1;

assign mul_res_838_fu_9279_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_838_fu_9279_p1 = sext_ln151_263_fu_9267_p1;

assign mul_res_839_fu_9307_p0 = sext_ln151_264_fu_9295_p1;

assign mul_res_839_fu_9307_p1 = zext_ln151_fu_2839_p1;

assign mul_res_840_fu_9335_p0 = zext_ln137_fu_2831_p1;

assign mul_res_840_fu_9335_p1 = sext_ln151_265_fu_9323_p1;

assign mul_res_841_fu_16514_p0 = zext_ln151_2_fu_12925_p1;

assign mul_res_841_fu_16514_p1 = sext_ln151_266_fu_16503_p1;

assign mul_res_842_fu_9373_p0 = zext_ln151_3_fu_2929_p1;

assign mul_res_842_fu_9373_p1 = sext_ln151_267_fu_9361_p1;

assign mul_res_843_fu_9401_p0 = zext_ln151_4_fu_2971_p1;

assign mul_res_843_fu_9401_p1 = sext_ln151_268_fu_9389_p1;

assign mul_res_844_fu_16541_p0 = zext_ln151_5_fu_12955_p1;

assign mul_res_844_fu_16541_p1 = sext_ln151_269_fu_16530_p1;

assign mul_res_845_fu_9439_p0 = zext_ln151_6_fu_3033_p1;

assign mul_res_845_fu_9439_p1 = sext_ln151_270_fu_9427_p1;

assign mul_res_846_fu_9467_p0 = zext_ln151_7_fu_3075_p1;

assign mul_res_846_fu_9467_p1 = sext_ln151_271_fu_9455_p1;

assign mul_res_847_fu_9495_p0 = zext_ln151_8_fu_3117_p1;

assign mul_res_847_fu_9495_p1 = sext_ln151_272_fu_9483_p1;

assign mul_res_848_fu_9523_p0 = zext_ln151_9_fu_3159_p1;

assign mul_res_848_fu_9523_p1 = sext_ln151_273_fu_9511_p1;

assign mul_res_849_fu_9551_p0 = zext_ln151_10_fu_3201_p1;

assign mul_res_849_fu_9551_p1 = sext_ln151_274_fu_9539_p1;

assign mul_res_850_fu_9579_p0 = zext_ln151_11_fu_3243_p1;

assign mul_res_850_fu_9579_p1 = sext_ln151_275_fu_9567_p1;

assign mul_res_851_fu_16579_p0 = zext_ln151_12_reg_23533;

assign mul_res_851_fu_16579_p1 = sext_ln151_276_fu_16569_p1;

assign mul_res_852_fu_9617_p0 = zext_ln151_13_fu_3327_p1;

assign mul_res_852_fu_9617_p1 = sext_ln151_277_fu_9605_p1;

assign mul_res_853_fu_9645_p0 = zext_ln151_14_fu_3369_p1;

assign mul_res_853_fu_9645_p1 = sext_ln151_278_fu_9633_p1;

assign mul_res_854_fu_16605_p0 = zext_ln151_15_fu_13006_p1;

assign mul_res_854_fu_16605_p1 = sext_ln151_279_fu_16594_p1;

assign mul_res_855_fu_9683_p0 = zext_ln151_16_fu_3431_p1;

assign mul_res_855_fu_9683_p1 = sext_ln151_280_fu_9671_p1;

assign mul_res_856_fu_9711_p0 = zext_ln151_17_fu_3473_p1;

assign mul_res_856_fu_9711_p1 = sext_ln151_281_fu_9699_p1;

assign mul_res_857_fu_16631_p0 = zext_ln151_18_reg_23582;

assign mul_res_857_fu_16631_p1 = sext_ln151_282_fu_16621_p1;

assign mul_res_858_fu_9749_p0 = zext_ln151_19_fu_3557_p1;

assign mul_res_858_fu_9749_p1 = sext_ln151_283_fu_9737_p1;

assign mul_res_859_fu_16654_p0 = zext_ln151_20_fu_13042_p1;

assign mul_res_859_fu_16654_p1 = sext_ln151_284_fu_16643_p1;

assign mul_res_860_fu_16675_p0 = zext_ln151_21_fu_13066_p1;

assign mul_res_860_fu_16675_p1 = sext_ln151_285_fu_16664_p1;

assign mul_res_861_fu_16696_p0 = zext_ln151_22_fu_13090_p1;

assign mul_res_861_fu_16696_p1 = sext_ln151_286_fu_16685_p1;

assign mul_res_862_fu_9807_p0 = zext_ln151_23_fu_3659_p1;

assign mul_res_862_fu_9807_p1 = sext_ln151_287_fu_9795_p1;

assign mul_res_863_fu_9835_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_863_fu_9835_p1 = sext_ln151_fu_2843_p1;

assign mul_res_864_fu_9863_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_864_fu_9863_p1 = sext_ln151_1_fu_2871_p1;

assign mul_res_865_fu_16854_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_865_fu_16854_p1 = sext_ln151_2_fu_12928_p1;

assign mul_res_866_fu_9901_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_866_fu_9901_p1 = sext_ln151_3_fu_2933_p1;

assign mul_res_867_fu_9929_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_867_fu_9929_p1 = sext_ln151_4_fu_2975_p1;

assign mul_res_868_fu_16881_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_868_fu_16881_p1 = sext_ln151_5_fu_12958_p1;

assign mul_res_869_fu_9967_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_869_fu_9967_p1 = sext_ln151_6_fu_3037_p1;

assign mul_res_870_fu_9995_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_870_fu_9995_p1 = sext_ln151_7_fu_3079_p1;

assign mul_res_871_fu_10023_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_871_fu_10023_p1 = sext_ln151_8_fu_3121_p1;

assign mul_res_872_fu_10051_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_872_fu_10051_p1 = sext_ln151_9_fu_3163_p1;

assign mul_res_873_fu_10079_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_873_fu_10079_p1 = sext_ln151_10_fu_3205_p1;

assign mul_res_874_fu_10107_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_874_fu_10107_p1 = sext_ln151_11_fu_3247_p1;

assign mul_res_875_fu_16919_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_875_fu_16919_p1 = sext_ln151_12_reg_23541;

assign mul_res_876_fu_10145_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_876_fu_10145_p1 = sext_ln151_13_fu_3331_p1;

assign mul_res_877_fu_10173_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_877_fu_10173_p1 = sext_ln151_14_fu_3373_p1;

assign mul_res_878_fu_16945_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_878_fu_16945_p1 = sext_ln151_15_fu_13009_p1;

assign mul_res_879_fu_10211_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_879_fu_10211_p1 = sext_ln151_16_fu_3435_p1;

assign mul_res_880_fu_10239_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_880_fu_10239_p1 = sext_ln151_17_fu_3477_p1;

assign mul_res_881_fu_16971_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_881_fu_16971_p1 = sext_ln151_18_reg_23590;

assign mul_res_882_fu_10277_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_882_fu_10277_p1 = sext_ln151_19_fu_3561_p1;

assign mul_res_883_fu_16994_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_883_fu_16994_p1 = sext_ln151_20_fu_13045_p1;

assign mul_res_884_fu_17015_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_884_fu_17015_p1 = sext_ln151_21_fu_13069_p1;

assign mul_res_885_fu_17036_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_885_fu_17036_p1 = sext_ln151_22_fu_13093_p1;

assign mul_res_886_fu_10335_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_886_fu_10335_p1 = sext_ln151_23_fu_3663_p1;

assign mul_res_887_fu_10349_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_887_fu_10349_p1 = sext_ln151_24_fu_3691_p1;

assign mul_res_888_fu_10363_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_888_fu_10363_p1 = sext_ln151_25_fu_3719_p1;

assign mul_res_889_fu_17191_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_889_fu_17191_p1 = sext_ln151_26_fu_13265_p1;

assign mul_res_890_fu_10377_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_890_fu_10377_p1 = sext_ln151_27_fu_3757_p1;

assign mul_res_891_fu_10391_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_891_fu_10391_p1 = sext_ln151_28_fu_3785_p1;

assign mul_res_892_fu_17215_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_892_fu_17215_p1 = sext_ln151_29_fu_13292_p1;

assign mul_res_893_fu_10405_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_893_fu_10405_p1 = sext_ln151_30_fu_3823_p1;

assign mul_res_894_fu_10419_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_894_fu_10419_p1 = sext_ln151_31_fu_3851_p1;

assign mul_res_895_fu_10433_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_895_fu_10433_p1 = sext_ln151_32_fu_3879_p1;

assign mul_res_896_fu_10447_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_896_fu_10447_p1 = sext_ln151_33_fu_3907_p1;

assign mul_res_897_fu_10461_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_897_fu_10461_p1 = sext_ln151_34_fu_3935_p1;

assign mul_res_898_fu_10475_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_898_fu_10475_p1 = sext_ln151_35_fu_3963_p1;

assign mul_res_899_fu_17250_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_899_fu_17250_p1 = sext_ln151_36_reg_23701;

assign mul_res_900_fu_10489_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_900_fu_10489_p1 = sext_ln151_37_fu_4019_p1;

assign mul_res_901_fu_10503_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_901_fu_10503_p1 = sext_ln151_38_fu_4047_p1;

assign mul_res_902_fu_17273_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_902_fu_17273_p1 = sext_ln151_39_fu_13340_p1;

assign mul_res_903_fu_10517_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_903_fu_10517_p1 = sext_ln151_40_fu_4085_p1;

assign mul_res_904_fu_10531_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_904_fu_10531_p1 = sext_ln151_41_fu_4113_p1;

assign mul_res_905_fu_17296_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_905_fu_17296_p1 = sext_ln151_42_reg_23737;

assign mul_res_906_fu_10545_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_906_fu_10545_p1 = sext_ln151_43_fu_4169_p1;

assign mul_res_907_fu_17316_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_907_fu_17316_p1 = sext_ln151_44_fu_13373_p1;

assign mul_res_908_fu_17334_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_908_fu_17334_p1 = sext_ln151_45_fu_13394_p1;

assign mul_res_909_fu_17352_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_909_fu_17352_p1 = sext_ln151_46_fu_13415_p1;

assign mul_res_910_fu_10559_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_910_fu_10559_p1 = sext_ln151_47_fu_4227_p1;

assign mul_res_911_fu_10573_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_911_fu_10573_p1 = sext_ln151_48_fu_4255_p1;

assign mul_res_912_fu_10587_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_912_fu_10587_p1 = sext_ln151_49_fu_4283_p1;

assign mul_res_913_fu_17507_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_913_fu_17507_p1 = sext_ln151_50_fu_13587_p1;

assign mul_res_914_fu_10601_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_914_fu_10601_p1 = sext_ln151_51_fu_4321_p1;

assign mul_res_915_fu_10615_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_915_fu_10615_p1 = sext_ln151_52_fu_4349_p1;

assign mul_res_916_fu_17531_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_916_fu_17531_p1 = sext_ln151_53_fu_13614_p1;

assign mul_res_917_fu_10629_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_917_fu_10629_p1 = sext_ln151_54_fu_4387_p1;

assign mul_res_918_fu_10643_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_918_fu_10643_p1 = sext_ln151_55_fu_4415_p1;

assign mul_res_919_fu_10657_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_919_fu_10657_p1 = sext_ln151_56_fu_4443_p1;

assign mul_res_920_fu_10671_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_920_fu_10671_p1 = sext_ln151_57_fu_4471_p1;

assign mul_res_921_fu_10685_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_921_fu_10685_p1 = sext_ln151_58_fu_4499_p1;

assign mul_res_922_fu_10699_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_922_fu_10699_p1 = sext_ln151_59_fu_4527_p1;

assign mul_res_923_fu_17566_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_923_fu_17566_p1 = sext_ln151_60_reg_23833;

assign mul_res_924_fu_10713_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_924_fu_10713_p1 = sext_ln151_61_fu_4583_p1;

assign mul_res_925_fu_10727_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_925_fu_10727_p1 = sext_ln151_62_fu_4611_p1;

assign mul_res_926_fu_17589_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_926_fu_17589_p1 = sext_ln151_63_fu_13662_p1;

assign mul_res_927_fu_10741_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_927_fu_10741_p1 = sext_ln151_64_fu_4649_p1;

assign mul_res_928_fu_10755_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_928_fu_10755_p1 = sext_ln151_65_fu_4677_p1;

assign mul_res_929_fu_17612_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_929_fu_17612_p1 = sext_ln151_66_reg_23869;

assign mul_res_930_fu_10769_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_930_fu_10769_p1 = sext_ln151_67_fu_4733_p1;

assign mul_res_931_fu_17632_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_931_fu_17632_p1 = sext_ln151_68_fu_13695_p1;

assign mul_res_932_fu_17650_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_932_fu_17650_p1 = sext_ln151_69_fu_13716_p1;

assign mul_res_933_fu_17668_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_933_fu_17668_p1 = sext_ln151_70_fu_13737_p1;

assign mul_res_934_fu_10783_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_934_fu_10783_p1 = sext_ln151_71_fu_4791_p1;

assign mul_res_935_fu_10797_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_935_fu_10797_p1 = sext_ln151_72_fu_4819_p1;

assign mul_res_936_fu_10811_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_936_fu_10811_p1 = sext_ln151_73_fu_4847_p1;

assign mul_res_937_fu_17823_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_937_fu_17823_p1 = sext_ln151_74_fu_13909_p1;

assign mul_res_938_fu_10825_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_938_fu_10825_p1 = sext_ln151_75_fu_4885_p1;

assign mul_res_939_fu_10839_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_939_fu_10839_p1 = sext_ln151_76_fu_4913_p1;

assign mul_res_940_fu_17847_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_940_fu_17847_p1 = sext_ln151_77_fu_13936_p1;

assign mul_res_941_fu_10853_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_941_fu_10853_p1 = sext_ln151_78_fu_4951_p1;

assign mul_res_942_fu_10867_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_942_fu_10867_p1 = sext_ln151_79_fu_4979_p1;

assign mul_res_943_fu_10881_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_943_fu_10881_p1 = sext_ln151_80_fu_5007_p1;

assign mul_res_944_fu_10895_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_944_fu_10895_p1 = sext_ln151_81_fu_5035_p1;

assign mul_res_945_fu_10909_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_945_fu_10909_p1 = sext_ln151_82_fu_5063_p1;

assign mul_res_946_fu_10923_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_946_fu_10923_p1 = sext_ln151_83_fu_5091_p1;

assign mul_res_947_fu_17882_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_947_fu_17882_p1 = sext_ln151_84_reg_23965;

assign mul_res_948_fu_10937_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_948_fu_10937_p1 = sext_ln151_85_fu_5147_p1;

assign mul_res_949_fu_10951_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_949_fu_10951_p1 = sext_ln151_86_fu_5175_p1;

assign mul_res_950_fu_17905_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_950_fu_17905_p1 = sext_ln151_87_fu_13984_p1;

assign mul_res_951_fu_10965_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_951_fu_10965_p1 = sext_ln151_88_fu_5213_p1;

assign mul_res_952_fu_10979_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_952_fu_10979_p1 = sext_ln151_89_fu_5241_p1;

assign mul_res_953_fu_17928_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_953_fu_17928_p1 = sext_ln151_90_reg_24001;

assign mul_res_954_fu_10993_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_954_fu_10993_p1 = sext_ln151_91_fu_5297_p1;

assign mul_res_955_fu_17948_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_955_fu_17948_p1 = sext_ln151_92_fu_14017_p1;

assign mul_res_956_fu_17966_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_956_fu_17966_p1 = sext_ln151_93_fu_14038_p1;

assign mul_res_957_fu_17984_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_957_fu_17984_p1 = sext_ln151_94_fu_14059_p1;

assign mul_res_958_fu_11007_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_958_fu_11007_p1 = sext_ln151_95_fu_5355_p1;

assign mul_res_959_fu_11021_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_959_fu_11021_p1 = sext_ln151_96_fu_5383_p1;

assign mul_res_960_fu_11035_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_960_fu_11035_p1 = sext_ln151_97_fu_5411_p1;

assign mul_res_961_fu_18139_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_961_fu_18139_p1 = sext_ln151_98_fu_14231_p1;

assign mul_res_962_fu_11049_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_962_fu_11049_p1 = sext_ln151_99_fu_5449_p1;

assign mul_res_963_fu_11063_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_963_fu_11063_p1 = sext_ln151_100_fu_5477_p1;

assign mul_res_964_fu_18163_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_964_fu_18163_p1 = sext_ln151_101_fu_14258_p1;

assign mul_res_965_fu_11077_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_965_fu_11077_p1 = sext_ln151_102_fu_5515_p1;

assign mul_res_966_fu_11091_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_966_fu_11091_p1 = sext_ln151_103_fu_5543_p1;

assign mul_res_967_fu_11105_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_967_fu_11105_p1 = sext_ln151_104_fu_5571_p1;

assign mul_res_968_fu_11119_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_968_fu_11119_p1 = sext_ln151_105_fu_5599_p1;

assign mul_res_969_fu_11133_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_969_fu_11133_p1 = sext_ln151_106_fu_5627_p1;

assign mul_res_970_fu_11147_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_970_fu_11147_p1 = sext_ln151_107_fu_5655_p1;

assign mul_res_971_fu_18198_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_971_fu_18198_p1 = sext_ln151_108_reg_24097;

assign mul_res_972_fu_11161_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_972_fu_11161_p1 = sext_ln151_109_fu_5711_p1;

assign mul_res_973_fu_11175_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_973_fu_11175_p1 = sext_ln151_110_fu_5739_p1;

assign mul_res_974_fu_18221_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_974_fu_18221_p1 = sext_ln151_111_fu_14306_p1;

assign mul_res_975_fu_11189_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_975_fu_11189_p1 = sext_ln151_112_fu_5777_p1;

assign mul_res_976_fu_11203_p0 = zext_ln151_41_fu_10227_p1;

assign mul_res_976_fu_11203_p1 = sext_ln151_113_fu_5805_p1;

assign mul_res_977_fu_18244_p0 = zext_ln151_42_fu_16961_p1;

assign mul_res_977_fu_18244_p1 = sext_ln151_114_reg_24133;

assign mul_res_978_fu_11217_p0 = zext_ln151_43_fu_10265_p1;

assign mul_res_978_fu_11217_p1 = sext_ln151_115_fu_5861_p1;

assign mul_res_979_fu_18264_p0 = zext_ln151_44_fu_16983_p1;

assign mul_res_979_fu_18264_p1 = sext_ln151_116_fu_14339_p1;

assign mul_res_980_fu_18282_p0 = zext_ln151_45_fu_17004_p1;

assign mul_res_980_fu_18282_p1 = sext_ln151_117_fu_14360_p1;

assign mul_res_981_fu_18300_p0 = zext_ln151_46_fu_17025_p1;

assign mul_res_981_fu_18300_p1 = sext_ln151_118_fu_14381_p1;

assign mul_res_982_fu_11231_p0 = zext_ln151_47_fu_10323_p1;

assign mul_res_982_fu_11231_p1 = sext_ln151_119_fu_5919_p1;

assign mul_res_983_fu_11245_p0 = zext_ln151_24_fu_9823_p1;

assign mul_res_983_fu_11245_p1 = sext_ln151_120_fu_5947_p1;

assign mul_res_984_fu_11259_p0 = zext_ln151_25_fu_9851_p1;

assign mul_res_984_fu_11259_p1 = sext_ln151_121_fu_5975_p1;

assign mul_res_985_fu_18455_p0 = zext_ln151_26_fu_16843_p1;

assign mul_res_985_fu_18455_p1 = sext_ln151_122_fu_14553_p1;

assign mul_res_986_fu_11273_p0 = zext_ln151_27_fu_9889_p1;

assign mul_res_986_fu_11273_p1 = sext_ln151_123_fu_6013_p1;

assign mul_res_987_fu_11287_p0 = zext_ln151_28_fu_9917_p1;

assign mul_res_987_fu_11287_p1 = sext_ln151_124_fu_6041_p1;

assign mul_res_988_fu_18479_p0 = zext_ln151_29_fu_16870_p1;

assign mul_res_988_fu_18479_p1 = sext_ln151_125_fu_14580_p1;

assign mul_res_989_fu_11301_p0 = zext_ln151_30_fu_9955_p1;

assign mul_res_989_fu_11301_p1 = sext_ln151_126_fu_6079_p1;

assign mul_res_990_fu_11315_p0 = zext_ln151_31_fu_9983_p1;

assign mul_res_990_fu_11315_p1 = sext_ln151_127_fu_6107_p1;

assign mul_res_991_fu_11329_p0 = zext_ln151_32_fu_10011_p1;

assign mul_res_991_fu_11329_p1 = sext_ln151_128_fu_6135_p1;

assign mul_res_992_fu_11343_p0 = zext_ln151_33_fu_10039_p1;

assign mul_res_992_fu_11343_p1 = sext_ln151_129_fu_6163_p1;

assign mul_res_993_fu_11357_p0 = zext_ln151_34_fu_10067_p1;

assign mul_res_993_fu_11357_p1 = sext_ln151_130_fu_6191_p1;

assign mul_res_994_fu_11371_p0 = zext_ln151_35_fu_10095_p1;

assign mul_res_994_fu_11371_p1 = sext_ln151_131_fu_6219_p1;

assign mul_res_995_fu_18514_p0 = zext_ln151_36_fu_16909_p1;

assign mul_res_995_fu_18514_p1 = sext_ln151_132_reg_24229;

assign mul_res_996_fu_11385_p0 = zext_ln151_37_fu_10133_p1;

assign mul_res_996_fu_11385_p1 = sext_ln151_133_fu_6275_p1;

assign mul_res_997_fu_11399_p0 = zext_ln151_38_fu_10161_p1;

assign mul_res_997_fu_11399_p1 = sext_ln151_134_fu_6303_p1;

assign mul_res_998_fu_18537_p0 = zext_ln151_39_fu_16934_p1;

assign mul_res_998_fu_18537_p1 = sext_ln151_135_fu_14628_p1;

assign mul_res_999_fu_11413_p0 = zext_ln151_40_fu_10199_p1;

assign mul_res_999_fu_11413_p1 = sext_ln151_136_fu_6341_p1;

assign mul_res_fu_2855_p0 = sext_ln151_fu_2843_p1;

assign mul_res_fu_2855_p1 = zext_ln151_fu_2839_p1;

assign or_ln121_fu_2717_p2 = (icmp_ln121_reg_23397 | and_ln120_fu_2705_p2);

assign pf_mac_sm_U_frpsig_data_in = {{{{{{{{{{{{{{{{{{{{{{{{add_ln153_575_reg_27165}, {add_ln153_551_reg_27160}}, {add_ln153_527_reg_27155}}, {add_ln153_503_reg_27150}}, {add_ln153_479_reg_27145}}, {add_ln153_455_reg_27140}}, {add_ln153_431_reg_27135}}, {add_ln153_407_reg_27130}}, {add_ln153_383_reg_27125}}, {add_ln153_359_reg_27120}}, {add_ln153_335_reg_27115}}, {add_ln153_311_reg_27110}}, {add_ln153_287_reg_27105}}, {add_ln153_263_reg_27100}}, {add_ln153_239_reg_27095}}, {add_ln153_215_reg_27090}}, {add_ln153_191_reg_27085}}, {add_ln153_167_reg_27080}}, {add_ln153_143_reg_27075}}, {add_ln153_119_reg_27070}}, {add_ln153_95_reg_27065}}, {add_ln153_71_reg_27060}}, {add_ln153_47_reg_27055}}, {add_ln153_23_reg_27050}};

assign select_ln120_fu_2687_p3 = ((icmp_ln121_reg_23397[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_cot_load);

assign select_ln121_3_fu_2730_p3 = ((and_ln120_fu_2705_p2[0:0] == 1'b1) ? add_ln121_fu_2711_p2 : select_ln120_fu_2687_p3);

assign select_ln121_4_fu_2643_p3 = ((icmp_ln121_fu_2631_p2[0:0] == 1'b1) ? 11'd1 : add_ln121_2_fu_2637_p2);

assign select_ln121_fu_2722_p3 = ((or_ln121_fu_2717_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_cit_load);

assign select_ln126_10_fu_20869_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_1_reg_26075 : conv_i_111750_fu_2464);

assign select_ln126_11_fu_20875_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_reg_26069 : conv_i748_fu_2460);

assign select_ln126_12_fu_20881_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? sext_ln131_fu_20805_p1 : conv_i_11746_fu_2456);

assign select_ln126_13_fu_20888_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_s_reg_26129 : conv_i_10744_fu_2452);

assign select_ln126_14_fu_20894_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_9_reg_26123 : conv_i_9742_fu_2448);

assign select_ln126_15_fu_20900_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_8_reg_26117 : conv_i_8740_fu_2444);

assign select_ln126_16_fu_20906_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_7_reg_26111 : conv_i_7738_fu_2440);

assign select_ln126_17_fu_20912_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_6_reg_26105 : conv_i_6736_fu_2436);

assign select_ln126_18_fu_20918_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_5_reg_26099 : conv_i_5734_fu_2432);

assign select_ln126_19_fu_20924_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_4_reg_26093 : conv_i_4732_fu_2428);

assign select_ln126_1_fu_20815_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_s_reg_26129 : conv_i_10768_fu_2500);

assign select_ln126_20_fu_20930_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_3_reg_26087 : conv_i_3730_fu_2424);

assign select_ln126_21_fu_20936_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_2_reg_26081 : conv_i_2728_fu_2420);

assign select_ln126_22_fu_20942_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_1_reg_26075 : conv_i_111726_fu_2416);

assign select_ln126_23_fu_20948_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_reg_26069 : conv_i724_fu_2412);

assign select_ln126_2_fu_20821_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_9_reg_26123 : conv_i_9766_fu_2496);

assign select_ln126_3_fu_20827_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_8_reg_26117 : conv_i_8764_fu_2492);

assign select_ln126_4_fu_20833_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_7_reg_26111 : conv_i_7762_fu_2488);

assign select_ln126_5_fu_20839_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_6_reg_26105 : conv_i_6760_fu_2484);

assign select_ln126_6_fu_20845_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_5_reg_26099 : conv_i_5758_fu_2480);

assign select_ln126_7_fu_20851_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_4_reg_26093 : conv_i_4756_fu_2476);

assign select_ln126_8_fu_20857_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_3_reg_26087 : conv_i_3754_fu_2472);

assign select_ln126_9_fu_20863_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? trunc_ln131_2_reg_26081 : conv_i_2752_fu_2468);

assign select_ln126_fu_20808_p3 = ((icmp_ln126_reg_23426_pp0_iter4_reg[0:0] == 1'b1) ? sext_ln131_fu_20805_p1 : conv_i_11770_fu_2504);

assign sext_ln131_fu_20805_p1 = $signed(tmp_reg_26135);

assign sext_ln151_100_fu_5477_p1 = $signed(tmp_433_fu_5467_p4);

assign sext_ln151_101_fu_14258_p1 = $signed(tmp_434_reg_24062);

assign sext_ln151_102_fu_5515_p1 = $signed(tmp_435_fu_5505_p4);

assign sext_ln151_103_fu_5543_p1 = $signed(tmp_436_fu_5533_p4);

assign sext_ln151_104_fu_5571_p1 = $signed(tmp_437_fu_5561_p4);

assign sext_ln151_105_fu_5599_p1 = $signed(tmp_438_fu_5589_p4);

assign sext_ln151_106_fu_5627_p1 = $signed(tmp_439_fu_5617_p4);

assign sext_ln151_107_fu_5655_p1 = $signed(tmp_440_fu_5645_p4);

assign sext_ln151_108_fu_5683_p1 = tmp_441_fu_5673_p4;

assign sext_ln151_109_fu_5711_p1 = $signed(tmp_442_fu_5701_p4);

assign sext_ln151_10_fu_3205_p1 = $signed(tmp_343_fu_3181_p4);

assign sext_ln151_110_fu_5739_p1 = $signed(tmp_443_fu_5729_p4);

assign sext_ln151_111_fu_14306_p1 = $signed(tmp_444_reg_24118);

assign sext_ln151_112_fu_5777_p1 = $signed(tmp_445_fu_5767_p4);

assign sext_ln151_113_fu_5805_p1 = $signed(tmp_446_fu_5795_p4);

assign sext_ln151_114_fu_5833_p1 = tmp_447_fu_5823_p4;

assign sext_ln151_115_fu_5861_p1 = $signed(tmp_448_fu_5851_p4);

assign sext_ln151_116_fu_14339_p1 = $signed(tmp_449_reg_24149);

assign sext_ln151_117_fu_14360_p1 = $signed(tmp_450_reg_24154);

assign sext_ln151_118_fu_14381_p1 = $signed(tmp_451_reg_24159);

assign sext_ln151_119_fu_5919_p1 = $signed(tmp_452_fu_5909_p4);

assign sext_ln151_11_fu_3247_p1 = $signed(tmp_344_fu_3223_p4);

assign sext_ln151_120_fu_5947_p1 = $signed(tmp_453_fu_5937_p4);

assign sext_ln151_121_fu_5975_p1 = $signed(tmp_454_fu_5965_p4);

assign sext_ln151_122_fu_14553_p1 = $signed(tmp_455_reg_24179);

assign sext_ln151_123_fu_6013_p1 = $signed(tmp_456_fu_6003_p4);

assign sext_ln151_124_fu_6041_p1 = $signed(tmp_457_fu_6031_p4);

assign sext_ln151_125_fu_14580_p1 = $signed(tmp_458_reg_24194);

assign sext_ln151_126_fu_6079_p1 = $signed(tmp_459_fu_6069_p4);

assign sext_ln151_127_fu_6107_p1 = $signed(tmp_460_fu_6097_p4);

assign sext_ln151_128_fu_6135_p1 = $signed(tmp_461_fu_6125_p4);

assign sext_ln151_129_fu_6163_p1 = $signed(tmp_462_fu_6153_p4);

assign sext_ln151_12_fu_3289_p1 = tmp_345_fu_3265_p4;

assign sext_ln151_130_fu_6191_p1 = $signed(tmp_463_fu_6181_p4);

assign sext_ln151_131_fu_6219_p1 = $signed(tmp_464_fu_6209_p4);

assign sext_ln151_132_fu_6247_p1 = tmp_465_fu_6237_p4;

assign sext_ln151_133_fu_6275_p1 = $signed(tmp_466_fu_6265_p4);

assign sext_ln151_134_fu_6303_p1 = $signed(tmp_467_fu_6293_p4);

assign sext_ln151_135_fu_14628_p1 = $signed(tmp_468_reg_24250);

assign sext_ln151_136_fu_6341_p1 = $signed(tmp_469_fu_6331_p4);

assign sext_ln151_137_fu_6369_p1 = $signed(tmp_470_fu_6359_p4);

assign sext_ln151_138_fu_6397_p1 = tmp_471_fu_6387_p4;

assign sext_ln151_139_fu_6425_p1 = $signed(tmp_472_fu_6415_p4);

assign sext_ln151_13_fu_3331_p1 = $signed(tmp_346_fu_3307_p4);

assign sext_ln151_140_fu_14661_p1 = $signed(tmp_473_reg_24281);

assign sext_ln151_141_fu_14682_p1 = $signed(tmp_474_reg_24286);

assign sext_ln151_142_fu_14703_p1 = $signed(tmp_475_reg_24291);

assign sext_ln151_143_fu_6483_p1 = $signed(tmp_476_fu_6473_p4);

assign sext_ln151_144_fu_6511_p1 = $signed(tmp_477_fu_6501_p4);

assign sext_ln151_145_fu_6539_p1 = $signed(tmp_478_fu_6529_p4);

assign sext_ln151_146_fu_14875_p1 = $signed(tmp_479_reg_24311);

assign sext_ln151_147_fu_6577_p1 = $signed(tmp_480_fu_6567_p4);

assign sext_ln151_148_fu_6605_p1 = $signed(tmp_481_fu_6595_p4);

assign sext_ln151_149_fu_14902_p1 = $signed(tmp_482_reg_24326);

assign sext_ln151_14_fu_3373_p1 = $signed(tmp_347_fu_3349_p4);

assign sext_ln151_150_fu_6643_p1 = $signed(tmp_483_fu_6633_p4);

assign sext_ln151_151_fu_6671_p1 = $signed(tmp_484_fu_6661_p4);

assign sext_ln151_152_fu_6699_p1 = $signed(tmp_485_fu_6689_p4);

assign sext_ln151_153_fu_6727_p1 = $signed(tmp_486_fu_6717_p4);

assign sext_ln151_154_fu_6755_p1 = $signed(tmp_487_fu_6745_p4);

assign sext_ln151_155_fu_6783_p1 = $signed(tmp_488_fu_6773_p4);

assign sext_ln151_156_fu_6811_p1 = tmp_489_fu_6801_p4;

assign sext_ln151_157_fu_6839_p1 = $signed(tmp_490_fu_6829_p4);

assign sext_ln151_158_fu_6867_p1 = $signed(tmp_491_fu_6857_p4);

assign sext_ln151_159_fu_14950_p1 = $signed(tmp_492_reg_24382);

assign sext_ln151_15_fu_13009_p1 = $signed(tmp_348_reg_23562);

assign sext_ln151_160_fu_6905_p1 = $signed(tmp_493_fu_6895_p4);

assign sext_ln151_161_fu_6933_p1 = $signed(tmp_494_fu_6923_p4);

assign sext_ln151_162_fu_6961_p1 = tmp_495_fu_6951_p4;

assign sext_ln151_163_fu_6989_p1 = $signed(tmp_496_fu_6979_p4);

assign sext_ln151_164_fu_14983_p1 = $signed(tmp_497_reg_24413);

assign sext_ln151_165_fu_15004_p1 = $signed(tmp_498_reg_24418);

assign sext_ln151_166_fu_15025_p1 = $signed(tmp_499_reg_24423);

assign sext_ln151_167_fu_7047_p1 = $signed(tmp_500_fu_7037_p4);

assign sext_ln151_168_fu_7075_p1 = $signed(tmp_501_fu_7065_p4);

assign sext_ln151_169_fu_7103_p1 = $signed(tmp_502_fu_7093_p4);

assign sext_ln151_16_fu_3435_p1 = $signed(tmp_349_fu_3411_p4);

assign sext_ln151_170_fu_15197_p1 = $signed(tmp_503_reg_24443);

assign sext_ln151_171_fu_7141_p1 = $signed(tmp_504_fu_7131_p4);

assign sext_ln151_172_fu_7169_p1 = $signed(tmp_505_fu_7159_p4);

assign sext_ln151_173_fu_15224_p1 = $signed(tmp_506_reg_24458);

assign sext_ln151_174_fu_7207_p1 = $signed(tmp_507_fu_7197_p4);

assign sext_ln151_175_fu_7235_p1 = $signed(tmp_508_fu_7225_p4);

assign sext_ln151_176_fu_7263_p1 = $signed(tmp_509_fu_7253_p4);

assign sext_ln151_177_fu_7291_p1 = $signed(tmp_510_fu_7281_p4);

assign sext_ln151_178_fu_7319_p1 = $signed(tmp_511_fu_7309_p4);

assign sext_ln151_179_fu_7347_p1 = $signed(tmp_512_fu_7337_p4);

assign sext_ln151_17_fu_3477_p1 = $signed(tmp_350_fu_3453_p4);

assign sext_ln151_180_fu_7375_p1 = tmp_513_fu_7365_p4;

assign sext_ln151_181_fu_7403_p1 = $signed(tmp_514_fu_7393_p4);

assign sext_ln151_182_fu_7431_p1 = $signed(tmp_515_fu_7421_p4);

assign sext_ln151_183_fu_15272_p1 = $signed(tmp_516_reg_24514);

assign sext_ln151_184_fu_7469_p1 = $signed(tmp_517_fu_7459_p4);

assign sext_ln151_185_fu_7497_p1 = $signed(tmp_518_fu_7487_p4);

assign sext_ln151_186_fu_7525_p1 = tmp_519_fu_7515_p4;

assign sext_ln151_187_fu_7553_p1 = $signed(tmp_520_fu_7543_p4);

assign sext_ln151_188_fu_15305_p1 = $signed(tmp_521_reg_24545);

assign sext_ln151_189_fu_15326_p1 = $signed(tmp_522_reg_24550);

assign sext_ln151_18_fu_3519_p1 = tmp_351_fu_3495_p4;

assign sext_ln151_190_fu_15347_p1 = $signed(tmp_523_reg_24555);

assign sext_ln151_191_fu_7611_p1 = $signed(tmp_524_fu_7601_p4);

assign sext_ln151_192_fu_7639_p1 = $signed(tmp_525_fu_7629_p4);

assign sext_ln151_193_fu_7667_p1 = $signed(tmp_526_fu_7657_p4);

assign sext_ln151_194_fu_15519_p1 = $signed(tmp_527_reg_24575);

assign sext_ln151_195_fu_7705_p1 = $signed(tmp_528_fu_7695_p4);

assign sext_ln151_196_fu_7733_p1 = $signed(tmp_529_fu_7723_p4);

assign sext_ln151_197_fu_15546_p1 = $signed(tmp_530_reg_24590);

assign sext_ln151_198_fu_7771_p1 = $signed(tmp_531_fu_7761_p4);

assign sext_ln151_199_fu_7799_p1 = $signed(tmp_532_fu_7789_p4);

assign sext_ln151_19_fu_3561_p1 = $signed(tmp_352_fu_3537_p4);

assign sext_ln151_1_fu_2871_p1 = $signed(tmp_s_fu_2861_p4);

assign sext_ln151_200_fu_7827_p1 = $signed(tmp_533_fu_7817_p4);

assign sext_ln151_201_fu_7855_p1 = $signed(tmp_534_fu_7845_p4);

assign sext_ln151_202_fu_7883_p1 = $signed(tmp_535_fu_7873_p4);

assign sext_ln151_203_fu_7911_p1 = $signed(tmp_536_fu_7901_p4);

assign sext_ln151_204_fu_7939_p1 = tmp_537_fu_7929_p4;

assign sext_ln151_205_fu_7967_p1 = $signed(tmp_538_fu_7957_p4);

assign sext_ln151_206_fu_7995_p1 = $signed(tmp_539_fu_7985_p4);

assign sext_ln151_207_fu_15594_p1 = $signed(tmp_540_reg_24646);

assign sext_ln151_208_fu_8033_p1 = $signed(tmp_541_fu_8023_p4);

assign sext_ln151_209_fu_8061_p1 = $signed(tmp_542_fu_8051_p4);

assign sext_ln151_20_fu_13045_p1 = $signed(tmp_353_reg_23606);

assign sext_ln151_210_fu_8089_p1 = tmp_543_fu_8079_p4;

assign sext_ln151_211_fu_8117_p1 = $signed(tmp_544_fu_8107_p4);

assign sext_ln151_212_fu_15627_p1 = $signed(tmp_545_reg_24677);

assign sext_ln151_213_fu_15648_p1 = $signed(tmp_546_reg_24682);

assign sext_ln151_214_fu_15669_p1 = $signed(tmp_547_reg_24687);

assign sext_ln151_215_fu_8175_p1 = $signed(tmp_548_fu_8165_p4);

assign sext_ln151_216_fu_8203_p1 = $signed(tmp_549_fu_8193_p4);

assign sext_ln151_217_fu_8231_p1 = $signed(tmp_550_fu_8221_p4);

assign sext_ln151_218_fu_15841_p1 = $signed(tmp_551_reg_24707);

assign sext_ln151_219_fu_8269_p1 = $signed(tmp_552_fu_8259_p4);

assign sext_ln151_21_fu_13069_p1 = $signed(tmp_354_reg_23616);

assign sext_ln151_220_fu_8297_p1 = $signed(tmp_553_fu_8287_p4);

assign sext_ln151_221_fu_15868_p1 = $signed(tmp_554_reg_24722);

assign sext_ln151_222_fu_8335_p1 = $signed(tmp_555_fu_8325_p4);

assign sext_ln151_223_fu_8363_p1 = $signed(tmp_556_fu_8353_p4);

assign sext_ln151_224_fu_8391_p1 = $signed(tmp_557_fu_8381_p4);

assign sext_ln151_225_fu_8419_p1 = $signed(tmp_558_fu_8409_p4);

assign sext_ln151_226_fu_8447_p1 = $signed(tmp_559_fu_8437_p4);

assign sext_ln151_227_fu_8475_p1 = $signed(tmp_560_fu_8465_p4);

assign sext_ln151_228_fu_8503_p1 = tmp_561_fu_8493_p4;

assign sext_ln151_229_fu_8531_p1 = $signed(tmp_562_fu_8521_p4);

assign sext_ln151_22_fu_13093_p1 = $signed(tmp_355_reg_23626);

assign sext_ln151_230_fu_8559_p1 = $signed(tmp_563_fu_8549_p4);

assign sext_ln151_231_fu_15916_p1 = $signed(tmp_564_reg_24778);

assign sext_ln151_232_fu_8597_p1 = $signed(tmp_565_fu_8587_p4);

assign sext_ln151_233_fu_8625_p1 = $signed(tmp_566_fu_8615_p4);

assign sext_ln151_234_fu_8653_p1 = tmp_567_fu_8643_p4;

assign sext_ln151_235_fu_8681_p1 = $signed(tmp_568_fu_8671_p4);

assign sext_ln151_236_fu_15949_p1 = $signed(tmp_569_reg_24809);

assign sext_ln151_237_fu_15970_p1 = $signed(tmp_570_reg_24814);

assign sext_ln151_238_fu_15991_p1 = $signed(tmp_571_reg_24819);

assign sext_ln151_239_fu_8739_p1 = $signed(tmp_572_fu_8729_p4);

assign sext_ln151_23_fu_3663_p1 = $signed(tmp_356_fu_3639_p4);

assign sext_ln151_240_fu_8767_p1 = $signed(tmp_573_fu_8757_p4);

assign sext_ln151_241_fu_8795_p1 = $signed(tmp_574_fu_8785_p4);

assign sext_ln151_242_fu_16163_p1 = $signed(tmp_575_reg_24839);

assign sext_ln151_243_fu_8833_p1 = $signed(tmp_576_fu_8823_p4);

assign sext_ln151_244_fu_8861_p1 = $signed(tmp_577_fu_8851_p4);

assign sext_ln151_245_fu_16190_p1 = $signed(tmp_578_reg_24854);

assign sext_ln151_246_fu_8899_p1 = $signed(tmp_579_fu_8889_p4);

assign sext_ln151_247_fu_8927_p1 = $signed(tmp_580_fu_8917_p4);

assign sext_ln151_248_fu_8955_p1 = $signed(tmp_581_fu_8945_p4);

assign sext_ln151_249_fu_8983_p1 = $signed(tmp_582_fu_8973_p4);

assign sext_ln151_24_fu_3691_p1 = $signed(tmp_357_fu_3681_p4);

assign sext_ln151_250_fu_9011_p1 = $signed(tmp_583_fu_9001_p4);

assign sext_ln151_251_fu_9039_p1 = $signed(tmp_584_fu_9029_p4);

assign sext_ln151_252_fu_16229_p1 = $signed(tmp_585_reg_24889);

assign sext_ln151_253_fu_9077_p1 = $signed(tmp_586_fu_9067_p4);

assign sext_ln151_254_fu_9105_p1 = $signed(tmp_587_fu_9095_p4);

assign sext_ln151_255_fu_16254_p1 = $signed(tmp_588_reg_24904);

assign sext_ln151_256_fu_9143_p1 = $signed(tmp_589_fu_9133_p4);

assign sext_ln151_257_fu_9171_p1 = $signed(tmp_590_fu_9161_p4);

assign sext_ln151_258_fu_16281_p1 = $signed(tmp_591_reg_24919);

assign sext_ln151_259_fu_9209_p1 = $signed(tmp_592_fu_9199_p4);

assign sext_ln151_25_fu_3719_p1 = $signed(tmp_358_fu_3709_p4);

assign sext_ln151_260_fu_16303_p1 = $signed(tmp_593_reg_24929);

assign sext_ln151_261_fu_16324_p1 = $signed(tmp_594_reg_24934);

assign sext_ln151_262_fu_16345_p1 = $signed(tmp_595_reg_24939);

assign sext_ln151_263_fu_9267_p1 = $signed(tmp_596_fu_9257_p4);

assign sext_ln151_264_fu_9295_p1 = $signed(tmp_597_fu_9285_p4);

assign sext_ln151_265_fu_9323_p1 = $signed(tmp_598_fu_9313_p4);

assign sext_ln151_266_fu_16503_p1 = $signed(tmp_599_reg_24959);

assign sext_ln151_267_fu_9361_p1 = $signed(tmp_600_fu_9351_p4);

assign sext_ln151_268_fu_9389_p1 = $signed(tmp_601_fu_9379_p4);

assign sext_ln151_269_fu_16530_p1 = $signed(tmp_602_reg_24974);

assign sext_ln151_26_fu_13265_p1 = $signed(tmp_359_reg_23651);

assign sext_ln151_270_fu_9427_p1 = $signed(tmp_603_fu_9417_p4);

assign sext_ln151_271_fu_9455_p1 = $signed(tmp_604_fu_9445_p4);

assign sext_ln151_272_fu_9483_p1 = $signed(tmp_605_fu_9473_p4);

assign sext_ln151_273_fu_9511_p1 = $signed(tmp_606_fu_9501_p4);

assign sext_ln151_274_fu_9539_p1 = $signed(tmp_607_fu_9529_p4);

assign sext_ln151_275_fu_9567_p1 = $signed(tmp_608_fu_9557_p4);

assign sext_ln151_276_fu_16569_p1 = $signed(tmp_609_reg_25009);

assign sext_ln151_277_fu_9605_p1 = $signed(tmp_610_fu_9595_p4);

assign sext_ln151_278_fu_9633_p1 = $signed(tmp_611_fu_9623_p4);

assign sext_ln151_279_fu_16594_p1 = $signed(tmp_612_reg_25024);

assign sext_ln151_27_fu_3757_p1 = $signed(tmp_360_fu_3747_p4);

assign sext_ln151_280_fu_9671_p1 = $signed(tmp_613_fu_9661_p4);

assign sext_ln151_281_fu_9699_p1 = $signed(tmp_614_fu_9689_p4);

assign sext_ln151_282_fu_16621_p1 = $signed(tmp_615_reg_25039);

assign sext_ln151_283_fu_9737_p1 = $signed(tmp_616_fu_9727_p4);

assign sext_ln151_284_fu_16643_p1 = $signed(tmp_617_reg_25049);

assign sext_ln151_285_fu_16664_p1 = $signed(tmp_618_reg_25054);

assign sext_ln151_286_fu_16685_p1 = $signed(tmp_619_reg_25059);

assign sext_ln151_287_fu_9795_p1 = $signed(tmp_620_fu_9785_p4);

assign sext_ln151_288_fu_12919_p1 = mul_res_reg_23463;

assign sext_ln151_289_fu_12922_p1 = mul_res_576_reg_23468;

assign sext_ln151_28_fu_3785_p1 = $signed(tmp_361_fu_3775_p4);

assign sext_ln151_290_fu_12945_p1 = mul_res_577_fu_12939_p2;

assign sext_ln151_291_fu_12949_p1 = mul_res_578_reg_23483;

assign sext_ln151_292_fu_12952_p1 = mul_res_579_reg_23488;

assign sext_ln151_293_fu_12975_p1 = mul_res_580_fu_12969_p2;

assign sext_ln151_294_fu_12979_p1 = mul_res_581_reg_23503;

assign sext_ln151_295_fu_12982_p1 = mul_res_582_reg_23508;

assign sext_ln151_296_fu_12985_p1 = mul_res_583_reg_23513;

assign sext_ln151_297_fu_12988_p1 = mul_res_584_reg_23518;

assign sext_ln151_298_fu_12991_p1 = mul_res_585_reg_23523;

assign sext_ln151_299_fu_12994_p1 = mul_res_586_reg_23528;

assign sext_ln151_29_fu_13292_p1 = $signed(tmp_362_reg_23666);

assign sext_ln151_2_fu_12928_p1 = $signed(tmp_335_reg_23473);

assign sext_ln151_300_fu_12997_p1 = mul_res_587_reg_23547;

assign sext_ln151_301_fu_13000_p1 = mul_res_588_reg_23552;

assign sext_ln151_302_fu_13003_p1 = mul_res_589_reg_23557;

assign sext_ln151_303_fu_13026_p1 = mul_res_590_fu_13020_p2;

assign sext_ln151_304_fu_13030_p1 = mul_res_591_reg_23572;

assign sext_ln151_305_fu_13033_p1 = mul_res_592_reg_23577;

assign sext_ln151_306_fu_13036_p1 = mul_res_593_reg_23596;

assign sext_ln151_307_fu_13039_p1 = mul_res_594_reg_23601;

assign sext_ln151_308_fu_13062_p1 = mul_res_595_fu_13056_p2;

assign sext_ln151_309_fu_13086_p1 = mul_res_596_fu_13080_p2;

assign sext_ln151_30_fu_3823_p1 = $signed(tmp_363_fu_3813_p4);

assign sext_ln151_310_fu_13110_p1 = mul_res_597_fu_13104_p2;

assign sext_ln151_311_fu_13259_p1 = mul_res_599_reg_23641;

assign sext_ln151_312_fu_13262_p1 = mul_res_600_reg_23646;

assign sext_ln151_313_fu_13282_p1 = mul_res_601_fu_13276_p2;

assign sext_ln151_314_fu_13286_p1 = mul_res_602_reg_23656;

assign sext_ln151_315_fu_13289_p1 = mul_res_603_reg_23661;

assign sext_ln151_316_fu_13309_p1 = mul_res_604_fu_13303_p2;

assign sext_ln151_317_fu_13313_p1 = mul_res_605_reg_23671;

assign sext_ln151_318_fu_13316_p1 = mul_res_606_reg_23676;

assign sext_ln151_319_fu_13319_p1 = mul_res_607_reg_23681;

assign sext_ln151_31_fu_3851_p1 = $signed(tmp_364_fu_3841_p4);

assign sext_ln151_320_fu_13322_p1 = mul_res_608_reg_23686;

assign sext_ln151_321_fu_13325_p1 = mul_res_609_reg_23691;

assign sext_ln151_322_fu_13328_p1 = mul_res_610_reg_23696;

assign sext_ln151_323_fu_13331_p1 = mul_res_611_reg_23707;

assign sext_ln151_324_fu_13334_p1 = mul_res_612_reg_23712;

assign sext_ln151_325_fu_13337_p1 = mul_res_613_reg_23717;

assign sext_ln151_326_fu_13357_p1 = mul_res_614_fu_13351_p2;

assign sext_ln151_327_fu_13361_p1 = mul_res_615_reg_23727;

assign sext_ln151_328_fu_13364_p1 = mul_res_616_reg_23732;

assign sext_ln151_329_fu_13367_p1 = mul_res_617_reg_23743;

assign sext_ln151_32_fu_3879_p1 = $signed(tmp_365_fu_3869_p4);

assign sext_ln151_330_fu_13370_p1 = mul_res_618_reg_23748;

assign sext_ln151_331_fu_13390_p1 = mul_res_619_fu_13384_p2;

assign sext_ln151_332_fu_13411_p1 = mul_res_620_fu_13405_p2;

assign sext_ln151_333_fu_13432_p1 = mul_res_621_fu_13426_p2;

assign sext_ln151_334_fu_13581_p1 = mul_res_623_reg_23773;

assign sext_ln151_335_fu_13584_p1 = mul_res_624_reg_23778;

assign sext_ln151_336_fu_13604_p1 = mul_res_625_fu_13598_p2;

assign sext_ln151_337_fu_13608_p1 = mul_res_626_reg_23788;

assign sext_ln151_338_fu_13611_p1 = mul_res_627_reg_23793;

assign sext_ln151_339_fu_13631_p1 = mul_res_628_fu_13625_p2;

assign sext_ln151_33_fu_3907_p1 = $signed(tmp_366_fu_3897_p4);

assign sext_ln151_340_fu_13635_p1 = mul_res_629_reg_23803;

assign sext_ln151_341_fu_13638_p1 = mul_res_630_reg_23808;

assign sext_ln151_342_fu_13641_p1 = mul_res_631_reg_23813;

assign sext_ln151_343_fu_13644_p1 = mul_res_632_reg_23818;

assign sext_ln151_344_fu_13647_p1 = mul_res_633_reg_23823;

assign sext_ln151_345_fu_13650_p1 = mul_res_634_reg_23828;

assign sext_ln151_346_fu_13653_p1 = mul_res_635_reg_23839;

assign sext_ln151_347_fu_13656_p1 = mul_res_636_reg_23844;

assign sext_ln151_348_fu_13659_p1 = mul_res_637_reg_23849;

assign sext_ln151_349_fu_13679_p1 = mul_res_638_fu_13673_p2;

assign sext_ln151_34_fu_3935_p1 = $signed(tmp_367_fu_3925_p4);

assign sext_ln151_350_fu_13683_p1 = mul_res_639_reg_23859;

assign sext_ln151_351_fu_13686_p1 = mul_res_640_reg_23864;

assign sext_ln151_352_fu_13689_p1 = mul_res_641_reg_23875;

assign sext_ln151_353_fu_13692_p1 = mul_res_642_reg_23880;

assign sext_ln151_354_fu_13712_p1 = mul_res_643_fu_13706_p2;

assign sext_ln151_355_fu_13733_p1 = mul_res_644_fu_13727_p2;

assign sext_ln151_356_fu_13754_p1 = mul_res_645_fu_13748_p2;

assign sext_ln151_357_fu_13903_p1 = mul_res_647_reg_23905;

assign sext_ln151_358_fu_13906_p1 = mul_res_648_reg_23910;

assign sext_ln151_359_fu_13926_p1 = mul_res_649_fu_13920_p2;

assign sext_ln151_35_fu_3963_p1 = $signed(tmp_368_fu_3953_p4);

assign sext_ln151_360_fu_13930_p1 = mul_res_650_reg_23920;

assign sext_ln151_361_fu_13933_p1 = mul_res_651_reg_23925;

assign sext_ln151_362_fu_13953_p1 = mul_res_652_fu_13947_p2;

assign sext_ln151_363_fu_13957_p1 = mul_res_653_reg_23935;

assign sext_ln151_364_fu_13960_p1 = mul_res_654_reg_23940;

assign sext_ln151_365_fu_13963_p1 = mul_res_655_reg_23945;

assign sext_ln151_366_fu_13966_p1 = mul_res_656_reg_23950;

assign sext_ln151_367_fu_13969_p1 = mul_res_657_reg_23955;

assign sext_ln151_368_fu_13972_p1 = mul_res_658_reg_23960;

assign sext_ln151_369_fu_13975_p1 = mul_res_659_reg_23971;

assign sext_ln151_36_fu_3991_p1 = tmp_369_fu_3981_p4;

assign sext_ln151_370_fu_13978_p1 = mul_res_660_reg_23976;

assign sext_ln151_371_fu_13981_p1 = mul_res_661_reg_23981;

assign sext_ln151_372_fu_14001_p1 = mul_res_662_fu_13995_p2;

assign sext_ln151_373_fu_14005_p1 = mul_res_663_reg_23991;

assign sext_ln151_374_fu_14008_p1 = mul_res_664_reg_23996;

assign sext_ln151_375_fu_14011_p1 = mul_res_665_reg_24007;

assign sext_ln151_376_fu_14014_p1 = mul_res_666_reg_24012;

assign sext_ln151_377_fu_14034_p1 = mul_res_667_fu_14028_p2;

assign sext_ln151_378_fu_14055_p1 = mul_res_668_fu_14049_p2;

assign sext_ln151_379_fu_14076_p1 = mul_res_669_fu_14070_p2;

assign sext_ln151_37_fu_4019_p1 = $signed(tmp_370_fu_4009_p4);

assign sext_ln151_380_fu_14225_p1 = mul_res_671_reg_24037;

assign sext_ln151_381_fu_14228_p1 = mul_res_672_reg_24042;

assign sext_ln151_382_fu_14248_p1 = mul_res_673_fu_14242_p2;

assign sext_ln151_383_fu_14252_p1 = mul_res_674_reg_24052;

assign sext_ln151_384_fu_14255_p1 = mul_res_675_reg_24057;

assign sext_ln151_385_fu_14275_p1 = mul_res_676_fu_14269_p2;

assign sext_ln151_386_fu_14279_p1 = mul_res_677_reg_24067;

assign sext_ln151_387_fu_14282_p1 = mul_res_678_reg_24072;

assign sext_ln151_388_fu_14285_p1 = mul_res_679_reg_24077;

assign sext_ln151_389_fu_14288_p1 = mul_res_680_reg_24082;

assign sext_ln151_38_fu_4047_p1 = $signed(tmp_371_fu_4037_p4);

assign sext_ln151_390_fu_14291_p1 = mul_res_681_reg_24087;

assign sext_ln151_391_fu_14294_p1 = mul_res_682_reg_24092;

assign sext_ln151_392_fu_14297_p1 = mul_res_683_reg_24103;

assign sext_ln151_393_fu_14300_p1 = mul_res_684_reg_24108;

assign sext_ln151_394_fu_14303_p1 = mul_res_685_reg_24113;

assign sext_ln151_395_fu_14323_p1 = mul_res_686_fu_14317_p2;

assign sext_ln151_396_fu_14327_p1 = mul_res_687_reg_24123;

assign sext_ln151_397_fu_14330_p1 = mul_res_688_reg_24128;

assign sext_ln151_398_fu_14333_p1 = mul_res_689_reg_24139;

assign sext_ln151_399_fu_14336_p1 = mul_res_690_reg_24144;

assign sext_ln151_39_fu_13340_p1 = $signed(tmp_372_reg_23722);

assign sext_ln151_3_fu_2933_p1 = $signed(tmp_336_fu_2909_p4);

assign sext_ln151_400_fu_14356_p1 = mul_res_691_fu_14350_p2;

assign sext_ln151_401_fu_14377_p1 = mul_res_692_fu_14371_p2;

assign sext_ln151_402_fu_14398_p1 = mul_res_693_fu_14392_p2;

assign sext_ln151_403_fu_14547_p1 = mul_res_695_reg_24169;

assign sext_ln151_404_fu_14550_p1 = mul_res_696_reg_24174;

assign sext_ln151_405_fu_14570_p1 = mul_res_697_fu_14564_p2;

assign sext_ln151_406_fu_14574_p1 = mul_res_698_reg_24184;

assign sext_ln151_407_fu_14577_p1 = mul_res_699_reg_24189;

assign sext_ln151_408_fu_14597_p1 = mul_res_700_fu_14591_p2;

assign sext_ln151_409_fu_14601_p1 = mul_res_701_reg_24199;

assign sext_ln151_40_fu_4085_p1 = $signed(tmp_373_fu_4075_p4);

assign sext_ln151_410_fu_14604_p1 = mul_res_702_reg_24204;

assign sext_ln151_411_fu_14607_p1 = mul_res_703_reg_24209;

assign sext_ln151_412_fu_14610_p1 = mul_res_704_reg_24214;

assign sext_ln151_413_fu_14613_p1 = mul_res_705_reg_24219;

assign sext_ln151_414_fu_14616_p1 = mul_res_706_reg_24224;

assign sext_ln151_415_fu_14619_p1 = mul_res_707_reg_24235;

assign sext_ln151_416_fu_14622_p1 = mul_res_708_reg_24240;

assign sext_ln151_417_fu_14625_p1 = mul_res_709_reg_24245;

assign sext_ln151_418_fu_14645_p1 = mul_res_710_fu_14639_p2;

assign sext_ln151_419_fu_14649_p1 = mul_res_711_reg_24255;

assign sext_ln151_41_fu_4113_p1 = $signed(tmp_374_fu_4103_p4);

assign sext_ln151_420_fu_14652_p1 = mul_res_712_reg_24260;

assign sext_ln151_421_fu_14655_p1 = mul_res_713_reg_24271;

assign sext_ln151_422_fu_14658_p1 = mul_res_714_reg_24276;

assign sext_ln151_423_fu_14678_p1 = mul_res_715_fu_14672_p2;

assign sext_ln151_424_fu_14699_p1 = mul_res_716_fu_14693_p2;

assign sext_ln151_425_fu_14720_p1 = mul_res_717_fu_14714_p2;

assign sext_ln151_426_fu_14869_p1 = mul_res_719_reg_24301;

assign sext_ln151_427_fu_14872_p1 = mul_res_720_reg_24306;

assign sext_ln151_428_fu_14892_p1 = mul_res_721_fu_14886_p2;

assign sext_ln151_429_fu_14896_p1 = mul_res_722_reg_24316;

assign sext_ln151_42_fu_4141_p1 = tmp_375_fu_4131_p4;

assign sext_ln151_430_fu_14899_p1 = mul_res_723_reg_24321;

assign sext_ln151_431_fu_14919_p1 = mul_res_724_fu_14913_p2;

assign sext_ln151_432_fu_14923_p1 = mul_res_725_reg_24331;

assign sext_ln151_433_fu_14926_p1 = mul_res_726_reg_24336;

assign sext_ln151_434_fu_14929_p1 = mul_res_727_reg_24341;

assign sext_ln151_435_fu_14932_p1 = mul_res_728_reg_24346;

assign sext_ln151_436_fu_14935_p1 = mul_res_729_reg_24351;

assign sext_ln151_437_fu_14938_p1 = mul_res_730_reg_24356;

assign sext_ln151_438_fu_14941_p1 = mul_res_731_reg_24367;

assign sext_ln151_439_fu_14944_p1 = mul_res_732_reg_24372;

assign sext_ln151_43_fu_4169_p1 = $signed(tmp_376_fu_4159_p4);

assign sext_ln151_440_fu_14947_p1 = mul_res_733_reg_24377;

assign sext_ln151_441_fu_14967_p1 = mul_res_734_fu_14961_p2;

assign sext_ln151_442_fu_14971_p1 = mul_res_735_reg_24387;

assign sext_ln151_443_fu_14974_p1 = mul_res_736_reg_24392;

assign sext_ln151_444_fu_14977_p1 = mul_res_737_reg_24403;

assign sext_ln151_445_fu_14980_p1 = mul_res_738_reg_24408;

assign sext_ln151_446_fu_15000_p1 = mul_res_739_fu_14994_p2;

assign sext_ln151_447_fu_15021_p1 = mul_res_740_fu_15015_p2;

assign sext_ln151_448_fu_15042_p1 = mul_res_741_fu_15036_p2;

assign sext_ln151_449_fu_15191_p1 = mul_res_743_reg_24433;

assign sext_ln151_44_fu_13373_p1 = $signed(tmp_377_reg_23753);

assign sext_ln151_450_fu_15194_p1 = mul_res_744_reg_24438;

assign sext_ln151_451_fu_15214_p1 = mul_res_745_fu_15208_p2;

assign sext_ln151_452_fu_15218_p1 = mul_res_746_reg_24448;

assign sext_ln151_453_fu_15221_p1 = mul_res_747_reg_24453;

assign sext_ln151_454_fu_15241_p1 = mul_res_748_fu_15235_p2;

assign sext_ln151_455_fu_15245_p1 = mul_res_749_reg_24463;

assign sext_ln151_456_fu_15248_p1 = mul_res_750_reg_24468;

assign sext_ln151_457_fu_15251_p1 = mul_res_751_reg_24473;

assign sext_ln151_458_fu_15254_p1 = mul_res_752_reg_24478;

assign sext_ln151_459_fu_15257_p1 = mul_res_753_reg_24483;

assign sext_ln151_45_fu_13394_p1 = $signed(tmp_378_reg_23758);

assign sext_ln151_460_fu_15260_p1 = mul_res_754_reg_24488;

assign sext_ln151_461_fu_15263_p1 = mul_res_755_reg_24499;

assign sext_ln151_462_fu_15266_p1 = mul_res_756_reg_24504;

assign sext_ln151_463_fu_15269_p1 = mul_res_757_reg_24509;

assign sext_ln151_464_fu_15289_p1 = mul_res_758_fu_15283_p2;

assign sext_ln151_465_fu_15293_p1 = mul_res_759_reg_24519;

assign sext_ln151_466_fu_15296_p1 = mul_res_760_reg_24524;

assign sext_ln151_467_fu_15299_p1 = mul_res_761_reg_24535;

assign sext_ln151_468_fu_15302_p1 = mul_res_762_reg_24540;

assign sext_ln151_469_fu_15322_p1 = mul_res_763_fu_15316_p2;

assign sext_ln151_46_fu_13415_p1 = $signed(tmp_379_reg_23763);

assign sext_ln151_470_fu_15343_p1 = mul_res_764_fu_15337_p2;

assign sext_ln151_471_fu_15364_p1 = mul_res_765_fu_15358_p2;

assign sext_ln151_472_fu_15513_p1 = mul_res_767_reg_24565;

assign sext_ln151_473_fu_15516_p1 = mul_res_768_reg_24570;

assign sext_ln151_474_fu_15536_p1 = mul_res_769_fu_15530_p2;

assign sext_ln151_475_fu_15540_p1 = mul_res_770_reg_24580;

assign sext_ln151_476_fu_15543_p1 = mul_res_771_reg_24585;

assign sext_ln151_477_fu_15563_p1 = mul_res_772_fu_15557_p2;

assign sext_ln151_478_fu_15567_p1 = mul_res_773_reg_24595;

assign sext_ln151_479_fu_15570_p1 = mul_res_774_reg_24600;

assign sext_ln151_47_fu_4227_p1 = $signed(tmp_380_fu_4217_p4);

assign sext_ln151_480_fu_15573_p1 = mul_res_775_reg_24605;

assign sext_ln151_481_fu_15576_p1 = mul_res_776_reg_24610;

assign sext_ln151_482_fu_15579_p1 = mul_res_777_reg_24615;

assign sext_ln151_483_fu_15582_p1 = mul_res_778_reg_24620;

assign sext_ln151_484_fu_15585_p1 = mul_res_779_reg_24631;

assign sext_ln151_485_fu_15588_p1 = mul_res_780_reg_24636;

assign sext_ln151_486_fu_15591_p1 = mul_res_781_reg_24641;

assign sext_ln151_487_fu_15611_p1 = mul_res_782_fu_15605_p2;

assign sext_ln151_488_fu_15615_p1 = mul_res_783_reg_24651;

assign sext_ln151_489_fu_15618_p1 = mul_res_784_reg_24656;

assign sext_ln151_48_fu_4255_p1 = $signed(tmp_381_fu_4245_p4);

assign sext_ln151_490_fu_15621_p1 = mul_res_785_reg_24667;

assign sext_ln151_491_fu_15624_p1 = mul_res_786_reg_24672;

assign sext_ln151_492_fu_15644_p1 = mul_res_787_fu_15638_p2;

assign sext_ln151_493_fu_15665_p1 = mul_res_788_fu_15659_p2;

assign sext_ln151_494_fu_15686_p1 = mul_res_789_fu_15680_p2;

assign sext_ln151_495_fu_15835_p1 = mul_res_791_reg_24697;

assign sext_ln151_496_fu_15838_p1 = mul_res_792_reg_24702;

assign sext_ln151_497_fu_15858_p1 = mul_res_793_fu_15852_p2;

assign sext_ln151_498_fu_15862_p1 = mul_res_794_reg_24712;

assign sext_ln151_499_fu_15865_p1 = mul_res_795_reg_24717;

assign sext_ln151_49_fu_4283_p1 = $signed(tmp_382_fu_4273_p4);

assign sext_ln151_4_fu_2975_p1 = $signed(tmp_337_fu_2951_p4);

assign sext_ln151_500_fu_15885_p1 = mul_res_796_fu_15879_p2;

assign sext_ln151_501_fu_15889_p1 = mul_res_797_reg_24727;

assign sext_ln151_502_fu_15892_p1 = mul_res_798_reg_24732;

assign sext_ln151_503_fu_15895_p1 = mul_res_799_reg_24737;

assign sext_ln151_504_fu_15898_p1 = mul_res_800_reg_24742;

assign sext_ln151_505_fu_15901_p1 = mul_res_801_reg_24747;

assign sext_ln151_506_fu_15904_p1 = mul_res_802_reg_24752;

assign sext_ln151_507_fu_15907_p1 = mul_res_803_reg_24763;

assign sext_ln151_508_fu_15910_p1 = mul_res_804_reg_24768;

assign sext_ln151_509_fu_15913_p1 = mul_res_805_reg_24773;

assign sext_ln151_50_fu_13587_p1 = $signed(tmp_383_reg_23783);

assign sext_ln151_510_fu_15933_p1 = mul_res_806_fu_15927_p2;

assign sext_ln151_511_fu_15937_p1 = mul_res_807_reg_24783;

assign sext_ln151_512_fu_15940_p1 = mul_res_808_reg_24788;

assign sext_ln151_513_fu_15943_p1 = mul_res_809_reg_24799;

assign sext_ln151_514_fu_15946_p1 = mul_res_810_reg_24804;

assign sext_ln151_515_fu_15966_p1 = mul_res_811_fu_15960_p2;

assign sext_ln151_516_fu_15987_p1 = mul_res_812_fu_15981_p2;

assign sext_ln151_517_fu_16008_p1 = mul_res_813_fu_16002_p2;

assign sext_ln151_518_fu_16157_p1 = mul_res_815_reg_24829;

assign sext_ln151_519_fu_16160_p1 = mul_res_816_reg_24834;

assign sext_ln151_51_fu_4321_p1 = $signed(tmp_384_fu_4311_p4);

assign sext_ln151_520_fu_16180_p1 = mul_res_817_fu_16174_p2;

assign sext_ln151_521_fu_16184_p1 = mul_res_818_reg_24844;

assign sext_ln151_522_fu_16187_p1 = mul_res_819_reg_24849;

assign sext_ln151_523_fu_16207_p1 = mul_res_820_fu_16201_p2;

assign sext_ln151_524_fu_16211_p1 = mul_res_821_reg_24859;

assign sext_ln151_525_fu_16214_p1 = mul_res_822_reg_24864;

assign sext_ln151_526_fu_16217_p1 = mul_res_823_reg_24869;

assign sext_ln151_527_fu_16220_p1 = mul_res_824_reg_24874;

assign sext_ln151_528_fu_16223_p1 = mul_res_825_reg_24879;

assign sext_ln151_529_fu_16226_p1 = mul_res_826_reg_24884;

assign sext_ln151_52_fu_4349_p1 = $signed(tmp_385_fu_4339_p4);

assign sext_ln151_530_fu_16244_p1 = mul_res_827_fu_16239_p2;

assign sext_ln151_531_fu_16248_p1 = mul_res_828_reg_24894;

assign sext_ln151_532_fu_16251_p1 = mul_res_829_reg_24899;

assign sext_ln151_533_fu_16271_p1 = mul_res_830_fu_16265_p2;

assign sext_ln151_534_fu_16275_p1 = mul_res_831_reg_24909;

assign sext_ln151_535_fu_16278_p1 = mul_res_832_reg_24914;

assign sext_ln151_536_fu_16296_p1 = mul_res_833_fu_16291_p2;

assign sext_ln151_537_fu_16300_p1 = mul_res_834_reg_24924;

assign sext_ln151_538_fu_16320_p1 = mul_res_835_fu_16314_p2;

assign sext_ln151_539_fu_16341_p1 = mul_res_836_fu_16335_p2;

assign sext_ln151_53_fu_13614_p1 = $signed(tmp_386_reg_23798);

assign sext_ln151_540_fu_16362_p1 = mul_res_837_fu_16356_p2;

assign sext_ln151_541_fu_16497_p1 = mul_res_839_reg_24949;

assign sext_ln151_542_fu_16500_p1 = mul_res_840_reg_24954;

assign sext_ln151_543_fu_16520_p1 = mul_res_841_fu_16514_p2;

assign sext_ln151_544_fu_16524_p1 = mul_res_842_reg_24964;

assign sext_ln151_545_fu_16527_p1 = mul_res_843_reg_24969;

assign sext_ln151_546_fu_16547_p1 = mul_res_844_fu_16541_p2;

assign sext_ln151_547_fu_16551_p1 = mul_res_845_reg_24979;

assign sext_ln151_548_fu_16554_p1 = mul_res_846_reg_24984;

assign sext_ln151_549_fu_16557_p1 = mul_res_847_reg_24989;

assign sext_ln151_54_fu_4387_p1 = $signed(tmp_387_fu_4377_p4);

assign sext_ln151_550_fu_16560_p1 = mul_res_848_reg_24994;

assign sext_ln151_551_fu_16563_p1 = mul_res_849_reg_24999;

assign sext_ln151_552_fu_16566_p1 = mul_res_850_reg_25004;

assign sext_ln151_553_fu_16584_p1 = mul_res_851_fu_16579_p2;

assign sext_ln151_554_fu_16588_p1 = mul_res_852_reg_25014;

assign sext_ln151_555_fu_16591_p1 = mul_res_853_reg_25019;

assign sext_ln151_556_fu_16611_p1 = mul_res_854_fu_16605_p2;

assign sext_ln151_557_fu_16615_p1 = mul_res_855_reg_25029;

assign sext_ln151_558_fu_16618_p1 = mul_res_856_reg_25034;

assign sext_ln151_559_fu_16636_p1 = mul_res_857_fu_16631_p2;

assign sext_ln151_55_fu_4415_p1 = $signed(tmp_388_fu_4405_p4);

assign sext_ln151_560_fu_16640_p1 = mul_res_858_reg_25044;

assign sext_ln151_561_fu_16660_p1 = mul_res_859_fu_16654_p2;

assign sext_ln151_562_fu_16681_p1 = mul_res_860_fu_16675_p2;

assign sext_ln151_563_fu_16702_p1 = mul_res_861_fu_16696_p2;

assign sext_ln151_564_fu_16837_p1 = mul_res_863_reg_25069;

assign sext_ln151_565_fu_16840_p1 = mul_res_864_reg_25074;

assign sext_ln151_566_fu_16860_p1 = mul_res_865_fu_16854_p2;

assign sext_ln151_567_fu_16864_p1 = mul_res_866_reg_25084;

assign sext_ln151_568_fu_16867_p1 = mul_res_867_reg_25089;

assign sext_ln151_569_fu_16887_p1 = mul_res_868_fu_16881_p2;

assign sext_ln151_56_fu_4443_p1 = $signed(tmp_389_fu_4433_p4);

assign sext_ln151_570_fu_16891_p1 = mul_res_869_reg_25099;

assign sext_ln151_571_fu_16894_p1 = mul_res_870_reg_25104;

assign sext_ln151_572_fu_16897_p1 = mul_res_871_reg_25109;

assign sext_ln151_573_fu_16900_p1 = mul_res_872_reg_25114;

assign sext_ln151_574_fu_16903_p1 = mul_res_873_reg_25119;

assign sext_ln151_575_fu_16906_p1 = mul_res_874_reg_25124;

assign sext_ln151_576_fu_16924_p1 = mul_res_875_fu_16919_p2;

assign sext_ln151_577_fu_16928_p1 = mul_res_876_reg_25134;

assign sext_ln151_578_fu_16931_p1 = mul_res_877_reg_25139;

assign sext_ln151_579_fu_16951_p1 = mul_res_878_fu_16945_p2;

assign sext_ln151_57_fu_4471_p1 = $signed(tmp_390_fu_4461_p4);

assign sext_ln151_580_fu_16955_p1 = mul_res_879_reg_25149;

assign sext_ln151_581_fu_16958_p1 = mul_res_880_reg_25154;

assign sext_ln151_582_fu_16976_p1 = mul_res_881_fu_16971_p2;

assign sext_ln151_583_fu_16980_p1 = mul_res_882_reg_25164;

assign sext_ln151_584_fu_17000_p1 = mul_res_883_fu_16994_p2;

assign sext_ln151_585_fu_17021_p1 = mul_res_884_fu_17015_p2;

assign sext_ln151_586_fu_17042_p1 = mul_res_885_fu_17036_p2;

assign sext_ln151_587_fu_17177_p1 = mul_res_887_reg_25189;

assign sext_ln151_588_fu_17180_p1 = mul_res_888_reg_25194;

assign sext_ln151_589_fu_17197_p1 = mul_res_889_fu_17191_p2;

assign sext_ln151_58_fu_4499_p1 = $signed(tmp_391_fu_4489_p4);

assign sext_ln151_590_fu_17201_p1 = mul_res_890_reg_25199;

assign sext_ln151_591_fu_17204_p1 = mul_res_891_reg_25204;

assign sext_ln151_592_fu_17221_p1 = mul_res_892_fu_17215_p2;

assign sext_ln151_593_fu_17225_p1 = mul_res_893_reg_25209;

assign sext_ln151_594_fu_17228_p1 = mul_res_894_reg_25214;

assign sext_ln151_595_fu_17231_p1 = mul_res_895_reg_25219;

assign sext_ln151_596_fu_17234_p1 = mul_res_896_reg_25224;

assign sext_ln151_597_fu_17237_p1 = mul_res_897_reg_25229;

assign sext_ln151_598_fu_17240_p1 = mul_res_898_reg_25234;

assign sext_ln151_599_fu_17255_p1 = mul_res_899_fu_17250_p2;

assign sext_ln151_59_fu_4527_p1 = $signed(tmp_392_fu_4517_p4);

assign sext_ln151_5_fu_12958_p1 = $signed(tmp_338_reg_23493);

assign sext_ln151_600_fu_17259_p1 = mul_res_900_reg_25239;

assign sext_ln151_601_fu_17262_p1 = mul_res_901_reg_25244;

assign sext_ln151_602_fu_17279_p1 = mul_res_902_fu_17273_p2;

assign sext_ln151_603_fu_17283_p1 = mul_res_903_reg_25249;

assign sext_ln151_604_fu_17286_p1 = mul_res_904_reg_25254;

assign sext_ln151_605_fu_17301_p1 = mul_res_905_fu_17296_p2;

assign sext_ln151_606_fu_17305_p1 = mul_res_906_reg_25259;

assign sext_ln151_607_fu_17322_p1 = mul_res_907_fu_17316_p2;

assign sext_ln151_608_fu_17340_p1 = mul_res_908_fu_17334_p2;

assign sext_ln151_609_fu_17358_p1 = mul_res_909_fu_17352_p2;

assign sext_ln151_60_fu_4555_p1 = tmp_393_fu_4545_p4;

assign sext_ln151_610_fu_17493_p1 = mul_res_911_reg_25269;

assign sext_ln151_611_fu_17496_p1 = mul_res_912_reg_25274;

assign sext_ln151_612_fu_17513_p1 = mul_res_913_fu_17507_p2;

assign sext_ln151_613_fu_17517_p1 = mul_res_914_reg_25279;

assign sext_ln151_614_fu_17520_p1 = mul_res_915_reg_25284;

assign sext_ln151_615_fu_17537_p1 = mul_res_916_fu_17531_p2;

assign sext_ln151_616_fu_17541_p1 = mul_res_917_reg_25289;

assign sext_ln151_617_fu_17544_p1 = mul_res_918_reg_25294;

assign sext_ln151_618_fu_17547_p1 = mul_res_919_reg_25299;

assign sext_ln151_619_fu_17550_p1 = mul_res_920_reg_25304;

assign sext_ln151_61_fu_4583_p1 = $signed(tmp_394_fu_4573_p4);

assign sext_ln151_620_fu_17553_p1 = mul_res_921_reg_25309;

assign sext_ln151_621_fu_17556_p1 = mul_res_922_reg_25314;

assign sext_ln151_622_fu_17571_p1 = mul_res_923_fu_17566_p2;

assign sext_ln151_623_fu_17575_p1 = mul_res_924_reg_25319;

assign sext_ln151_624_fu_17578_p1 = mul_res_925_reg_25324;

assign sext_ln151_625_fu_17595_p1 = mul_res_926_fu_17589_p2;

assign sext_ln151_626_fu_17599_p1 = mul_res_927_reg_25329;

assign sext_ln151_627_fu_17602_p1 = mul_res_928_reg_25334;

assign sext_ln151_628_fu_17617_p1 = mul_res_929_fu_17612_p2;

assign sext_ln151_629_fu_17621_p1 = mul_res_930_reg_25339;

assign sext_ln151_62_fu_4611_p1 = $signed(tmp_395_fu_4601_p4);

assign sext_ln151_630_fu_17638_p1 = mul_res_931_fu_17632_p2;

assign sext_ln151_631_fu_17656_p1 = mul_res_932_fu_17650_p2;

assign sext_ln151_632_fu_17674_p1 = mul_res_933_fu_17668_p2;

assign sext_ln151_633_fu_17809_p1 = mul_res_935_reg_25349;

assign sext_ln151_634_fu_17812_p1 = mul_res_936_reg_25354;

assign sext_ln151_635_fu_17829_p1 = mul_res_937_fu_17823_p2;

assign sext_ln151_636_fu_17833_p1 = mul_res_938_reg_25359;

assign sext_ln151_637_fu_17836_p1 = mul_res_939_reg_25364;

assign sext_ln151_638_fu_17853_p1 = mul_res_940_fu_17847_p2;

assign sext_ln151_639_fu_17857_p1 = mul_res_941_reg_25369;

assign sext_ln151_63_fu_13662_p1 = $signed(tmp_396_reg_23854);

assign sext_ln151_640_fu_17860_p1 = mul_res_942_reg_25374;

assign sext_ln151_641_fu_17863_p1 = mul_res_943_reg_25379;

assign sext_ln151_642_fu_17866_p1 = mul_res_944_reg_25384;

assign sext_ln151_643_fu_17869_p1 = mul_res_945_reg_25389;

assign sext_ln151_644_fu_17872_p1 = mul_res_946_reg_25394;

assign sext_ln151_645_fu_17887_p1 = mul_res_947_fu_17882_p2;

assign sext_ln151_646_fu_17891_p1 = mul_res_948_reg_25399;

assign sext_ln151_647_fu_17894_p1 = mul_res_949_reg_25404;

assign sext_ln151_648_fu_17911_p1 = mul_res_950_fu_17905_p2;

assign sext_ln151_649_fu_17915_p1 = mul_res_951_reg_25409;

assign sext_ln151_64_fu_4649_p1 = $signed(tmp_397_fu_4639_p4);

assign sext_ln151_650_fu_17918_p1 = mul_res_952_reg_25414;

assign sext_ln151_651_fu_17933_p1 = mul_res_953_fu_17928_p2;

assign sext_ln151_652_fu_17937_p1 = mul_res_954_reg_25419;

assign sext_ln151_653_fu_17954_p1 = mul_res_955_fu_17948_p2;

assign sext_ln151_654_fu_17972_p1 = mul_res_956_fu_17966_p2;

assign sext_ln151_655_fu_17990_p1 = mul_res_957_fu_17984_p2;

assign sext_ln151_656_fu_18125_p1 = mul_res_959_reg_25429;

assign sext_ln151_657_fu_18128_p1 = mul_res_960_reg_25434;

assign sext_ln151_658_fu_18145_p1 = mul_res_961_fu_18139_p2;

assign sext_ln151_659_fu_18149_p1 = mul_res_962_reg_25439;

assign sext_ln151_65_fu_4677_p1 = $signed(tmp_398_fu_4667_p4);

assign sext_ln151_660_fu_18152_p1 = mul_res_963_reg_25444;

assign sext_ln151_661_fu_18169_p1 = mul_res_964_fu_18163_p2;

assign sext_ln151_662_fu_18173_p1 = mul_res_965_reg_25449;

assign sext_ln151_663_fu_18176_p1 = mul_res_966_reg_25454;

assign sext_ln151_664_fu_18179_p1 = mul_res_967_reg_25459;

assign sext_ln151_665_fu_18182_p1 = mul_res_968_reg_25464;

assign sext_ln151_666_fu_18185_p1 = mul_res_969_reg_25469;

assign sext_ln151_667_fu_18188_p1 = mul_res_970_reg_25474;

assign sext_ln151_668_fu_18203_p1 = mul_res_971_fu_18198_p2;

assign sext_ln151_669_fu_18207_p1 = mul_res_972_reg_25479;

assign sext_ln151_66_fu_4705_p1 = tmp_399_fu_4695_p4;

assign sext_ln151_670_fu_18210_p1 = mul_res_973_reg_25484;

assign sext_ln151_671_fu_18227_p1 = mul_res_974_fu_18221_p2;

assign sext_ln151_672_fu_18231_p1 = mul_res_975_reg_25489;

assign sext_ln151_673_fu_18234_p1 = mul_res_976_reg_25494;

assign sext_ln151_674_fu_18249_p1 = mul_res_977_fu_18244_p2;

assign sext_ln151_675_fu_18253_p1 = mul_res_978_reg_25499;

assign sext_ln151_676_fu_18270_p1 = mul_res_979_fu_18264_p2;

assign sext_ln151_677_fu_18288_p1 = mul_res_980_fu_18282_p2;

assign sext_ln151_678_fu_18306_p1 = mul_res_981_fu_18300_p2;

assign sext_ln151_679_fu_18441_p1 = mul_res_983_reg_25509;

assign sext_ln151_67_fu_4733_p1 = $signed(tmp_400_fu_4723_p4);

assign sext_ln151_680_fu_18444_p1 = mul_res_984_reg_25514;

assign sext_ln151_681_fu_18461_p1 = mul_res_985_fu_18455_p2;

assign sext_ln151_682_fu_18465_p1 = mul_res_986_reg_25519;

assign sext_ln151_683_fu_18468_p1 = mul_res_987_reg_25524;

assign sext_ln151_684_fu_18485_p1 = mul_res_988_fu_18479_p2;

assign sext_ln151_685_fu_18489_p1 = mul_res_989_reg_25529;

assign sext_ln151_686_fu_18492_p1 = mul_res_990_reg_25534;

assign sext_ln151_687_fu_18495_p1 = mul_res_991_reg_25539;

assign sext_ln151_688_fu_18498_p1 = mul_res_992_reg_25544;

assign sext_ln151_689_fu_18501_p1 = mul_res_993_reg_25549;

assign sext_ln151_68_fu_13695_p1 = $signed(tmp_401_reg_23885);

assign sext_ln151_690_fu_18504_p1 = mul_res_994_reg_25554;

assign sext_ln151_691_fu_18519_p1 = mul_res_995_fu_18514_p2;

assign sext_ln151_692_fu_18523_p1 = mul_res_996_reg_25559;

assign sext_ln151_693_fu_18526_p1 = mul_res_997_reg_25564;

assign sext_ln151_694_fu_18543_p1 = mul_res_998_fu_18537_p2;

assign sext_ln151_695_fu_18547_p1 = mul_res_999_reg_25569;

assign sext_ln151_696_fu_18550_p1 = mul_res_1000_reg_25574;

assign sext_ln151_697_fu_18565_p1 = mul_res_1001_fu_18560_p2;

assign sext_ln151_698_fu_18569_p1 = mul_res_1002_reg_25579;

assign sext_ln151_699_fu_18586_p1 = mul_res_1003_fu_18580_p2;

assign sext_ln151_69_fu_13716_p1 = $signed(tmp_402_reg_23890);

assign sext_ln151_6_fu_3037_p1 = $signed(tmp_339_fu_3013_p4);

assign sext_ln151_700_fu_18604_p1 = mul_res_1004_fu_18598_p2;

assign sext_ln151_701_fu_18622_p1 = mul_res_1005_fu_18616_p2;

assign sext_ln151_702_fu_18757_p1 = mul_res_1007_reg_25589;

assign sext_ln151_703_fu_18760_p1 = mul_res_1008_reg_25594;

assign sext_ln151_704_fu_18777_p1 = mul_res_1009_fu_18771_p2;

assign sext_ln151_705_fu_18781_p1 = mul_res_1010_reg_25599;

assign sext_ln151_706_fu_18784_p1 = mul_res_1011_reg_25604;

assign sext_ln151_707_fu_18801_p1 = mul_res_1012_fu_18795_p2;

assign sext_ln151_708_fu_18805_p1 = mul_res_1013_reg_25609;

assign sext_ln151_709_fu_18808_p1 = mul_res_1014_reg_25614;

assign sext_ln151_70_fu_13737_p1 = $signed(tmp_403_reg_23895);

assign sext_ln151_710_fu_18811_p1 = mul_res_1015_reg_25619;

assign sext_ln151_711_fu_18814_p1 = mul_res_1016_reg_25624;

assign sext_ln151_712_fu_18817_p1 = mul_res_1017_reg_25629;

assign sext_ln151_713_fu_18820_p1 = mul_res_1018_reg_25634;

assign sext_ln151_714_fu_18835_p1 = mul_res_1019_fu_18830_p2;

assign sext_ln151_715_fu_18839_p1 = mul_res_1020_reg_25639;

assign sext_ln151_716_fu_18842_p1 = mul_res_1021_reg_25644;

assign sext_ln151_717_fu_18859_p1 = mul_res_1022_fu_18853_p2;

assign sext_ln151_718_fu_18863_p1 = mul_res_1023_reg_25649;

assign sext_ln151_719_fu_18866_p1 = mul_res_1024_reg_25654;

assign sext_ln151_71_fu_4791_p1 = $signed(tmp_404_fu_4781_p4);

assign sext_ln151_720_fu_18881_p1 = mul_res_1025_fu_18876_p2;

assign sext_ln151_721_fu_18885_p1 = mul_res_1026_reg_25659;

assign sext_ln151_722_fu_18902_p1 = mul_res_1027_fu_18896_p2;

assign sext_ln151_723_fu_18920_p1 = mul_res_1028_fu_18914_p2;

assign sext_ln151_724_fu_18938_p1 = mul_res_1029_fu_18932_p2;

assign sext_ln151_725_fu_19073_p1 = mul_res_1031_reg_25669;

assign sext_ln151_726_fu_19076_p1 = mul_res_1032_reg_25674;

assign sext_ln151_727_fu_19093_p1 = mul_res_1033_fu_19087_p2;

assign sext_ln151_728_fu_19097_p1 = mul_res_1034_reg_25679;

assign sext_ln151_729_fu_19100_p1 = mul_res_1035_reg_25684;

assign sext_ln151_72_fu_4819_p1 = $signed(tmp_405_fu_4809_p4);

assign sext_ln151_730_fu_19117_p1 = mul_res_1036_fu_19111_p2;

assign sext_ln151_731_fu_19121_p1 = mul_res_1037_reg_25689;

assign sext_ln151_732_fu_19124_p1 = mul_res_1038_reg_25694;

assign sext_ln151_733_fu_19127_p1 = mul_res_1039_reg_25699;

assign sext_ln151_734_fu_19130_p1 = mul_res_1040_reg_25704;

assign sext_ln151_735_fu_19133_p1 = mul_res_1041_reg_25709;

assign sext_ln151_736_fu_19136_p1 = mul_res_1042_reg_25714;

assign sext_ln151_737_fu_19151_p1 = mul_res_1043_fu_19146_p2;

assign sext_ln151_738_fu_19155_p1 = mul_res_1044_reg_25719;

assign sext_ln151_739_fu_19158_p1 = mul_res_1045_reg_25724;

assign sext_ln151_73_fu_4847_p1 = $signed(tmp_406_fu_4837_p4);

assign sext_ln151_740_fu_19175_p1 = mul_res_1046_fu_19169_p2;

assign sext_ln151_741_fu_19179_p1 = mul_res_1047_reg_25729;

assign sext_ln151_742_fu_19182_p1 = mul_res_1048_reg_25734;

assign sext_ln151_743_fu_19197_p1 = mul_res_1049_fu_19192_p2;

assign sext_ln151_744_fu_19201_p1 = mul_res_1050_reg_25739;

assign sext_ln151_745_fu_19218_p1 = mul_res_1051_fu_19212_p2;

assign sext_ln151_746_fu_19236_p1 = mul_res_1052_fu_19230_p2;

assign sext_ln151_747_fu_19254_p1 = mul_res_1053_fu_19248_p2;

assign sext_ln151_748_fu_19389_p1 = mul_res_1055_reg_25749;

assign sext_ln151_749_fu_19392_p1 = mul_res_1056_reg_25754;

assign sext_ln151_74_fu_13909_p1 = $signed(tmp_407_reg_23915);

assign sext_ln151_750_fu_19409_p1 = mul_res_1057_fu_19403_p2;

assign sext_ln151_751_fu_19413_p1 = mul_res_1058_reg_25759;

assign sext_ln151_752_fu_19416_p1 = mul_res_1059_reg_25764;

assign sext_ln151_753_fu_19433_p1 = mul_res_1060_fu_19427_p2;

assign sext_ln151_754_fu_19437_p1 = mul_res_1061_reg_25769;

assign sext_ln151_755_fu_19440_p1 = mul_res_1062_reg_25774;

assign sext_ln151_756_fu_19443_p1 = mul_res_1063_reg_25779;

assign sext_ln151_757_fu_19446_p1 = mul_res_1064_reg_25784;

assign sext_ln151_758_fu_19449_p1 = mul_res_1065_reg_25789;

assign sext_ln151_759_fu_19452_p1 = mul_res_1066_reg_25794;

assign sext_ln151_75_fu_4885_p1 = $signed(tmp_408_fu_4875_p4);

assign sext_ln151_760_fu_19467_p1 = mul_res_1067_fu_19462_p2;

assign sext_ln151_761_fu_19471_p1 = mul_res_1068_reg_25799;

assign sext_ln151_762_fu_19474_p1 = mul_res_1069_reg_25804;

assign sext_ln151_763_fu_19491_p1 = mul_res_1070_fu_19485_p2;

assign sext_ln151_764_fu_19495_p1 = mul_res_1071_reg_25809;

assign sext_ln151_765_fu_19498_p1 = mul_res_1072_reg_25814;

assign sext_ln151_766_fu_19513_p1 = mul_res_1073_fu_19508_p2;

assign sext_ln151_767_fu_19517_p1 = mul_res_1074_reg_25819;

assign sext_ln151_768_fu_19534_p1 = mul_res_1075_fu_19528_p2;

assign sext_ln151_769_fu_19552_p1 = mul_res_1076_fu_19546_p2;

assign sext_ln151_76_fu_4913_p1 = $signed(tmp_409_fu_4903_p4);

assign sext_ln151_770_fu_19570_p1 = mul_res_1077_fu_19564_p2;

assign sext_ln151_771_fu_19705_p1 = mul_res_1079_reg_25829;

assign sext_ln151_772_fu_19708_p1 = mul_res_1080_reg_25834;

assign sext_ln151_773_fu_19725_p1 = mul_res_1081_fu_19719_p2;

assign sext_ln151_774_fu_19729_p1 = mul_res_1082_reg_25839;

assign sext_ln151_775_fu_19732_p1 = mul_res_1083_reg_25844;

assign sext_ln151_776_fu_19749_p1 = mul_res_1084_fu_19743_p2;

assign sext_ln151_777_fu_19753_p1 = mul_res_1085_reg_25849;

assign sext_ln151_778_fu_19756_p1 = mul_res_1086_reg_25854;

assign sext_ln151_779_fu_19759_p1 = mul_res_1087_reg_25859;

assign sext_ln151_77_fu_13936_p1 = $signed(tmp_410_reg_23930);

assign sext_ln151_780_fu_19762_p1 = mul_res_1088_reg_25864;

assign sext_ln151_781_fu_19765_p1 = mul_res_1089_reg_25869;

assign sext_ln151_782_fu_19768_p1 = mul_res_1090_reg_25874;

assign sext_ln151_783_fu_19783_p1 = mul_res_1091_fu_19778_p2;

assign sext_ln151_784_fu_19787_p1 = mul_res_1092_reg_25879;

assign sext_ln151_785_fu_19790_p1 = mul_res_1093_reg_25884;

assign sext_ln151_786_fu_19807_p1 = mul_res_1094_fu_19801_p2;

assign sext_ln151_787_fu_19811_p1 = mul_res_1095_reg_25889;

assign sext_ln151_788_fu_19814_p1 = mul_res_1096_reg_25894;

assign sext_ln151_789_fu_19829_p1 = mul_res_1097_fu_19824_p2;

assign sext_ln151_78_fu_4951_p1 = $signed(tmp_411_fu_4941_p4);

assign sext_ln151_790_fu_19833_p1 = mul_res_1098_reg_25899;

assign sext_ln151_791_fu_19850_p1 = mul_res_1099_fu_19844_p2;

assign sext_ln151_792_fu_19868_p1 = mul_res_1100_fu_19862_p2;

assign sext_ln151_793_fu_19886_p1 = mul_res_1101_fu_19880_p2;

assign sext_ln151_794_fu_20021_p1 = mul_res_1103_reg_25909;

assign sext_ln151_795_fu_20024_p1 = mul_res_1104_reg_25914;

assign sext_ln151_796_fu_20041_p1 = mul_res_1105_fu_20035_p2;

assign sext_ln151_797_fu_20045_p1 = mul_res_1106_reg_25919;

assign sext_ln151_798_fu_20048_p1 = mul_res_1107_reg_25924;

assign sext_ln151_799_fu_20065_p1 = mul_res_1108_fu_20059_p2;

assign sext_ln151_79_fu_4979_p1 = $signed(tmp_412_fu_4969_p4);

assign sext_ln151_7_fu_3079_p1 = $signed(tmp_340_fu_3055_p4);

assign sext_ln151_800_fu_20069_p1 = mul_res_1109_reg_25929;

assign sext_ln151_801_fu_20072_p1 = mul_res_1110_reg_25934;

assign sext_ln151_802_fu_20075_p1 = mul_res_1111_reg_25939;

assign sext_ln151_803_fu_20078_p1 = mul_res_1112_reg_25944;

assign sext_ln151_804_fu_20081_p1 = mul_res_1113_reg_25949;

assign sext_ln151_805_fu_20084_p1 = mul_res_1114_reg_25954;

assign sext_ln151_806_fu_20101_p1 = mul_res_1115_fu_20095_p2;

assign sext_ln151_807_fu_20105_p1 = mul_res_1116_reg_25959;

assign sext_ln151_808_fu_20108_p1 = mul_res_1117_reg_25964;

assign sext_ln151_809_fu_20125_p1 = mul_res_1118_fu_20119_p2;

assign sext_ln151_80_fu_5007_p1 = $signed(tmp_413_fu_4997_p4);

assign sext_ln151_810_fu_20129_p1 = mul_res_1119_reg_25969;

assign sext_ln151_811_fu_20132_p1 = mul_res_1120_reg_25974;

assign sext_ln151_812_fu_20149_p1 = mul_res_1121_fu_20143_p2;

assign sext_ln151_813_fu_20153_p1 = mul_res_1122_reg_25979;

assign sext_ln151_814_fu_20170_p1 = mul_res_1123_fu_20164_p2;

assign sext_ln151_815_fu_20188_p1 = mul_res_1124_fu_20182_p2;

assign sext_ln151_816_fu_20206_p1 = mul_res_1125_fu_20200_p2;

assign sext_ln151_817_fu_20341_p1 = mul_res_1127_reg_25989;

assign sext_ln151_818_fu_20344_p1 = mul_res_1128_reg_25994;

assign sext_ln151_819_fu_20361_p1 = mul_res_1129_fu_20355_p2;

assign sext_ln151_81_fu_5035_p1 = $signed(tmp_414_fu_5025_p4);

assign sext_ln151_820_fu_20365_p1 = mul_res_1130_reg_25999;

assign sext_ln151_821_fu_20368_p1 = mul_res_1131_reg_26004;

assign sext_ln151_822_fu_20385_p1 = mul_res_1132_fu_20379_p2;

assign sext_ln151_823_fu_20389_p1 = mul_res_1133_reg_26009;

assign sext_ln151_824_fu_20392_p1 = mul_res_1134_reg_26014;

assign sext_ln151_825_fu_20395_p1 = mul_res_1135_reg_26019;

assign sext_ln151_826_fu_20398_p1 = mul_res_1136_reg_26024;

assign sext_ln151_827_fu_20401_p1 = mul_res_1137_reg_26029;

assign sext_ln151_828_fu_20404_p1 = mul_res_1138_reg_26034;

assign sext_ln151_829_fu_20421_p1 = mul_res_1139_fu_20415_p2;

assign sext_ln151_82_fu_5063_p1 = $signed(tmp_415_fu_5053_p4);

assign sext_ln151_830_fu_20425_p1 = mul_res_1140_reg_26039;

assign sext_ln151_831_fu_20428_p1 = mul_res_1141_reg_26044;

assign sext_ln151_832_fu_20445_p1 = mul_res_1142_fu_20439_p2;

assign sext_ln151_833_fu_20449_p1 = mul_res_1143_reg_26049;

assign sext_ln151_834_fu_20452_p1 = mul_res_1144_reg_26054;

assign sext_ln151_835_fu_20469_p1 = mul_res_1145_fu_20463_p2;

assign sext_ln151_836_fu_20473_p1 = mul_res_1146_reg_26059;

assign sext_ln151_837_fu_20490_p1 = mul_res_1147_fu_20484_p2;

assign sext_ln151_838_fu_20508_p1 = mul_res_1148_fu_20502_p2;

assign sext_ln151_839_fu_20526_p1 = mul_res_1149_fu_20520_p2;

assign sext_ln151_83_fu_5091_p1 = $signed(tmp_416_fu_5081_p4);

assign sext_ln151_84_fu_5119_p1 = tmp_417_fu_5109_p4;

assign sext_ln151_85_fu_5147_p1 = $signed(tmp_418_fu_5137_p4);

assign sext_ln151_86_fu_5175_p1 = $signed(tmp_419_fu_5165_p4);

assign sext_ln151_87_fu_13984_p1 = $signed(tmp_420_reg_23986);

assign sext_ln151_88_fu_5213_p1 = $signed(tmp_421_fu_5203_p4);

assign sext_ln151_89_fu_5241_p1 = $signed(tmp_422_fu_5231_p4);

assign sext_ln151_8_fu_3121_p1 = $signed(tmp_341_fu_3097_p4);

assign sext_ln151_90_fu_5269_p1 = tmp_423_fu_5259_p4;

assign sext_ln151_91_fu_5297_p1 = $signed(tmp_424_fu_5287_p4);

assign sext_ln151_92_fu_14017_p1 = $signed(tmp_425_reg_24017);

assign sext_ln151_93_fu_14038_p1 = $signed(tmp_426_reg_24022);

assign sext_ln151_94_fu_14059_p1 = $signed(tmp_427_reg_24027);

assign sext_ln151_95_fu_5355_p1 = $signed(tmp_428_fu_5345_p4);

assign sext_ln151_96_fu_5383_p1 = $signed(tmp_429_fu_5373_p4);

assign sext_ln151_97_fu_5411_p1 = $signed(tmp_430_fu_5401_p4);

assign sext_ln151_98_fu_14231_p1 = $signed(tmp_431_reg_24047);

assign sext_ln151_99_fu_5449_p1 = $signed(tmp_432_fu_5439_p4);

assign sext_ln151_9_fu_3163_p1 = $signed(tmp_342_fu_3139_p4);

assign sext_ln151_fu_2843_p1 = $signed(trunc_ln151_fu_2835_p1);

assign sext_ln153_100_fu_14724_p1 = mul_res_718_reg_24296;

assign sext_ln153_101_fu_21309_p1 = $signed(add_ln153_120_reg_26315);

assign sext_ln153_102_fu_14739_p1 = $signed(add_ln153_122_fu_14733_p2);

assign sext_ln153_103_fu_21312_p1 = $signed(add_ln153_123_reg_26320);

assign sext_ln153_104_fu_14755_p1 = $signed(add_ln153_125_fu_14749_p2);

assign sext_ln153_105_fu_14765_p1 = $signed(add_ln153_126_fu_14759_p2);

assign sext_ln153_106_fu_14775_p1 = $signed(add_ln153_127_fu_14769_p2);

assign sext_ln153_107_fu_14785_p1 = $signed(add_ln153_128_fu_14779_p2);

assign sext_ln153_108_fu_21321_p1 = $signed(add_ln153_129_reg_26325);

assign sext_ln153_109_fu_14801_p1 = $signed(add_ln153_131_fu_14795_p2);

assign sext_ln153_10_fu_20975_p1 = $signed(add_ln153_12_reg_26155);

assign sext_ln153_110_fu_21330_p1 = $signed(add_ln153_132_reg_26330);

assign sext_ln153_111_fu_14817_p1 = $signed(add_ln153_133_fu_14811_p2);

assign sext_ln153_112_fu_21333_p1 = $signed(add_ln153_134_reg_26335);

assign sext_ln153_113_fu_21342_p1 = $signed(add_ln153_135_fu_21336_p2);

assign sext_ln153_114_fu_14833_p1 = $signed(add_ln153_136_fu_14827_p2);

assign sext_ln153_115_fu_21346_p1 = $signed(add_ln153_137_reg_26340);

assign sext_ln153_116_fu_14849_p1 = $signed(add_ln153_138_fu_14843_p2);

assign sext_ln153_117_fu_14859_p1 = $signed(add_ln153_139_fu_14853_p2);

assign sext_ln153_118_fu_21349_p1 = $signed(add_ln153_140_reg_26345);

assign sext_ln153_119_fu_21358_p1 = $signed(add_ln153_141_fu_21352_p2);

assign sext_ln153_11_fu_13207_p1 = $signed(add_ln153_13_fu_13201_p2);

assign sext_ln153_120_fu_15046_p1 = mul_res_742_reg_24428;

assign sext_ln153_121_fu_21380_p1 = $signed(add_ln153_144_reg_26350);

assign sext_ln153_122_fu_15061_p1 = $signed(add_ln153_146_fu_15055_p2);

assign sext_ln153_123_fu_21383_p1 = $signed(add_ln153_147_reg_26355);

assign sext_ln153_124_fu_15077_p1 = $signed(add_ln153_149_fu_15071_p2);

assign sext_ln153_125_fu_15087_p1 = $signed(add_ln153_150_fu_15081_p2);

assign sext_ln153_126_fu_15097_p1 = $signed(add_ln153_151_fu_15091_p2);

assign sext_ln153_127_fu_15107_p1 = $signed(add_ln153_152_fu_15101_p2);

assign sext_ln153_128_fu_21392_p1 = $signed(add_ln153_153_reg_26360);

assign sext_ln153_129_fu_15123_p1 = $signed(add_ln153_155_fu_15117_p2);

assign sext_ln153_12_fu_20978_p1 = $signed(add_ln153_14_reg_26160);

assign sext_ln153_130_fu_21401_p1 = $signed(add_ln153_156_reg_26365);

assign sext_ln153_131_fu_15139_p1 = $signed(add_ln153_157_fu_15133_p2);

assign sext_ln153_132_fu_21404_p1 = $signed(add_ln153_158_reg_26370);

assign sext_ln153_133_fu_21413_p1 = $signed(add_ln153_159_fu_21407_p2);

assign sext_ln153_134_fu_15155_p1 = $signed(add_ln153_160_fu_15149_p2);

assign sext_ln153_135_fu_21417_p1 = $signed(add_ln153_161_reg_26375);

assign sext_ln153_136_fu_15171_p1 = $signed(add_ln153_162_fu_15165_p2);

assign sext_ln153_137_fu_15181_p1 = $signed(add_ln153_163_fu_15175_p2);

assign sext_ln153_138_fu_21420_p1 = $signed(add_ln153_164_reg_26380);

assign sext_ln153_139_fu_21429_p1 = $signed(add_ln153_165_fu_21423_p2);

assign sext_ln153_13_fu_20987_p1 = $signed(add_ln153_15_fu_20981_p2);

assign sext_ln153_140_fu_15368_p1 = mul_res_766_reg_24560;

assign sext_ln153_141_fu_21451_p1 = $signed(add_ln153_168_reg_26385);

assign sext_ln153_142_fu_15383_p1 = $signed(add_ln153_170_fu_15377_p2);

assign sext_ln153_143_fu_21454_p1 = $signed(add_ln153_171_reg_26390);

assign sext_ln153_144_fu_15399_p1 = $signed(add_ln153_173_fu_15393_p2);

assign sext_ln153_145_fu_15409_p1 = $signed(add_ln153_174_fu_15403_p2);

assign sext_ln153_146_fu_15419_p1 = $signed(add_ln153_175_fu_15413_p2);

assign sext_ln153_147_fu_15429_p1 = $signed(add_ln153_176_fu_15423_p2);

assign sext_ln153_148_fu_21463_p1 = $signed(add_ln153_177_reg_26395);

assign sext_ln153_149_fu_15445_p1 = $signed(add_ln153_179_fu_15439_p2);

assign sext_ln153_14_fu_13223_p1 = $signed(add_ln153_16_fu_13217_p2);

assign sext_ln153_150_fu_21472_p1 = $signed(add_ln153_180_reg_26400);

assign sext_ln153_151_fu_15461_p1 = $signed(add_ln153_181_fu_15455_p2);

assign sext_ln153_152_fu_21475_p1 = $signed(add_ln153_182_reg_26405);

assign sext_ln153_153_fu_21484_p1 = $signed(add_ln153_183_fu_21478_p2);

assign sext_ln153_154_fu_15477_p1 = $signed(add_ln153_184_fu_15471_p2);

assign sext_ln153_155_fu_21488_p1 = $signed(add_ln153_185_reg_26410);

assign sext_ln153_156_fu_15493_p1 = $signed(add_ln153_186_fu_15487_p2);

assign sext_ln153_157_fu_15503_p1 = $signed(add_ln153_187_fu_15497_p2);

assign sext_ln153_158_fu_21491_p1 = $signed(add_ln153_188_reg_26415);

assign sext_ln153_159_fu_21500_p1 = $signed(add_ln153_189_fu_21494_p2);

assign sext_ln153_15_fu_20991_p1 = $signed(add_ln153_17_reg_26165);

assign sext_ln153_160_fu_15690_p1 = mul_res_790_reg_24692;

assign sext_ln153_161_fu_21522_p1 = $signed(add_ln153_192_reg_26420);

assign sext_ln153_162_fu_15705_p1 = $signed(add_ln153_194_fu_15699_p2);

assign sext_ln153_163_fu_21525_p1 = $signed(add_ln153_195_reg_26425);

assign sext_ln153_164_fu_15721_p1 = $signed(add_ln153_197_fu_15715_p2);

assign sext_ln153_165_fu_15731_p1 = $signed(add_ln153_198_fu_15725_p2);

assign sext_ln153_166_fu_15741_p1 = $signed(add_ln153_199_fu_15735_p2);

assign sext_ln153_167_fu_15751_p1 = $signed(add_ln153_200_fu_15745_p2);

assign sext_ln153_168_fu_21534_p1 = $signed(add_ln153_201_reg_26430);

assign sext_ln153_169_fu_15767_p1 = $signed(add_ln153_203_fu_15761_p2);

assign sext_ln153_16_fu_13239_p1 = $signed(add_ln153_18_fu_13233_p2);

assign sext_ln153_170_fu_21543_p1 = $signed(add_ln153_204_reg_26435);

assign sext_ln153_171_fu_15783_p1 = $signed(add_ln153_205_fu_15777_p2);

assign sext_ln153_172_fu_21546_p1 = $signed(add_ln153_206_reg_26440);

assign sext_ln153_173_fu_21555_p1 = $signed(add_ln153_207_fu_21549_p2);

assign sext_ln153_174_fu_15799_p1 = $signed(add_ln153_208_fu_15793_p2);

assign sext_ln153_175_fu_21559_p1 = $signed(add_ln153_209_reg_26445);

assign sext_ln153_176_fu_15815_p1 = $signed(add_ln153_210_fu_15809_p2);

assign sext_ln153_177_fu_15825_p1 = $signed(add_ln153_211_fu_15819_p2);

assign sext_ln153_178_fu_21562_p1 = $signed(add_ln153_212_reg_26450);

assign sext_ln153_179_fu_21571_p1 = $signed(add_ln153_213_fu_21565_p2);

assign sext_ln153_17_fu_13249_p1 = $signed(add_ln153_19_fu_13243_p2);

assign sext_ln153_180_fu_16012_p1 = mul_res_814_reg_24824;

assign sext_ln153_181_fu_21593_p1 = $signed(add_ln153_216_reg_26455);

assign sext_ln153_182_fu_16027_p1 = $signed(add_ln153_218_fu_16021_p2);

assign sext_ln153_183_fu_21596_p1 = $signed(add_ln153_219_reg_26460);

assign sext_ln153_184_fu_16043_p1 = $signed(add_ln153_221_fu_16037_p2);

assign sext_ln153_185_fu_16053_p1 = $signed(add_ln153_222_fu_16047_p2);

assign sext_ln153_186_fu_16063_p1 = $signed(add_ln153_223_fu_16057_p2);

assign sext_ln153_187_fu_16073_p1 = $signed(add_ln153_224_fu_16067_p2);

assign sext_ln153_188_fu_21605_p1 = $signed(add_ln153_225_reg_26465);

assign sext_ln153_189_fu_16089_p1 = $signed(add_ln153_227_fu_16083_p2);

assign sext_ln153_18_fu_20994_p1 = $signed(add_ln153_20_reg_26170);

assign sext_ln153_190_fu_21614_p1 = $signed(add_ln153_228_reg_26470);

assign sext_ln153_191_fu_16105_p1 = $signed(add_ln153_229_fu_16099_p2);

assign sext_ln153_192_fu_21617_p1 = $signed(add_ln153_230_reg_26475);

assign sext_ln153_193_fu_21626_p1 = $signed(add_ln153_231_fu_21620_p2);

assign sext_ln153_194_fu_16121_p1 = $signed(add_ln153_232_fu_16115_p2);

assign sext_ln153_195_fu_21630_p1 = $signed(add_ln153_233_reg_26480);

assign sext_ln153_196_fu_16137_p1 = $signed(add_ln153_234_fu_16131_p2);

assign sext_ln153_197_fu_16147_p1 = $signed(add_ln153_235_fu_16141_p2);

assign sext_ln153_198_fu_21633_p1 = $signed(add_ln153_236_reg_26485);

assign sext_ln153_199_fu_21642_p1 = $signed(add_ln153_237_fu_21636_p2);

assign sext_ln153_19_fu_21003_p1 = $signed(add_ln153_21_fu_20997_p2);

assign sext_ln153_1_fu_20954_p1 = $signed(add_ln153_reg_26140);

assign sext_ln153_200_fu_16366_p1 = mul_res_838_reg_24944;

assign sext_ln153_201_fu_21664_p1 = $signed(add_ln153_240_reg_26490);

assign sext_ln153_202_fu_16381_p1 = $signed(add_ln153_242_fu_16375_p2);

assign sext_ln153_203_fu_21673_p1 = $signed(add_ln153_243_reg_26495);

assign sext_ln153_204_fu_16397_p1 = $signed(add_ln153_245_fu_16391_p2);

assign sext_ln153_205_fu_21682_p1 = $signed(add_ln153_246_reg_26500);

assign sext_ln153_206_fu_16413_p1 = $signed(add_ln153_247_fu_16407_p2);

assign sext_ln153_207_fu_21685_p1 = $signed(add_ln153_248_reg_26505);

assign sext_ln153_208_fu_21694_p1 = $signed(add_ln153_249_fu_21688_p2);

assign sext_ln153_209_fu_16429_p1 = $signed(add_ln153_251_fu_16423_p2);

assign sext_ln153_20_fu_13436_p1 = mul_res_622_reg_23768;

assign sext_ln153_210_fu_21704_p1 = $signed(add_ln153_252_reg_26510);

assign sext_ln153_211_fu_16445_p1 = $signed(add_ln153_253_fu_16439_p2);

assign sext_ln153_212_fu_21707_p1 = $signed(add_ln153_254_reg_26515);

assign sext_ln153_213_fu_21716_p1 = $signed(add_ln153_255_fu_21710_p2);

assign sext_ln153_214_fu_16461_p1 = $signed(add_ln153_256_fu_16455_p2);

assign sext_ln153_215_fu_21720_p1 = $signed(add_ln153_257_reg_26520);

assign sext_ln153_216_fu_16477_p1 = $signed(add_ln153_258_fu_16471_p2);

assign sext_ln153_217_fu_16487_p1 = $signed(add_ln153_259_fu_16481_p2);

assign sext_ln153_218_fu_21723_p1 = $signed(add_ln153_260_reg_26525);

assign sext_ln153_219_fu_21732_p1 = $signed(add_ln153_261_fu_21726_p2);

assign sext_ln153_21_fu_21025_p1 = $signed(add_ln153_24_reg_26175);

assign sext_ln153_220_fu_16706_p1 = mul_res_862_reg_25064;

assign sext_ln153_221_fu_21748_p1 = $signed(add_ln153_264_reg_26530);

assign sext_ln153_222_fu_16721_p1 = $signed(add_ln153_266_fu_16715_p2);

assign sext_ln153_223_fu_21757_p1 = $signed(add_ln153_267_reg_26535);

assign sext_ln153_224_fu_16737_p1 = $signed(add_ln153_269_fu_16731_p2);

assign sext_ln153_225_fu_21766_p1 = $signed(add_ln153_270_reg_26540);

assign sext_ln153_226_fu_16753_p1 = $signed(add_ln153_271_fu_16747_p2);

assign sext_ln153_227_fu_21769_p1 = $signed(add_ln153_272_reg_26545);

assign sext_ln153_228_fu_21778_p1 = $signed(add_ln153_273_fu_21772_p2);

assign sext_ln153_229_fu_16769_p1 = $signed(add_ln153_275_fu_16763_p2);

assign sext_ln153_22_fu_13451_p1 = $signed(add_ln153_26_fu_13445_p2);

assign sext_ln153_230_fu_21788_p1 = $signed(add_ln153_276_reg_26550);

assign sext_ln153_231_fu_16785_p1 = $signed(add_ln153_277_fu_16779_p2);

assign sext_ln153_232_fu_21791_p1 = $signed(add_ln153_278_reg_26555);

assign sext_ln153_233_fu_21800_p1 = $signed(add_ln153_279_fu_21794_p2);

assign sext_ln153_234_fu_16801_p1 = $signed(add_ln153_280_fu_16795_p2);

assign sext_ln153_235_fu_21804_p1 = $signed(add_ln153_281_reg_26560);

assign sext_ln153_236_fu_16817_p1 = $signed(add_ln153_282_fu_16811_p2);

assign sext_ln153_237_fu_16827_p1 = $signed(add_ln153_283_fu_16821_p2);

assign sext_ln153_238_fu_21807_p1 = $signed(add_ln153_284_reg_26565);

assign sext_ln153_239_fu_21816_p1 = $signed(add_ln153_285_fu_21810_p2);

assign sext_ln153_23_fu_21028_p1 = $signed(add_ln153_27_reg_26180);

assign sext_ln153_240_fu_17046_p1 = mul_res_886_reg_25184;

assign sext_ln153_241_fu_21832_p1 = $signed(add_ln153_288_reg_26570);

assign sext_ln153_242_fu_17061_p1 = $signed(add_ln153_290_fu_17055_p2);

assign sext_ln153_243_fu_21841_p1 = $signed(add_ln153_291_reg_26575);

assign sext_ln153_244_fu_17077_p1 = $signed(add_ln153_293_fu_17071_p2);

assign sext_ln153_245_fu_21850_p1 = $signed(add_ln153_294_reg_26580);

assign sext_ln153_246_fu_17093_p1 = $signed(add_ln153_295_fu_17087_p2);

assign sext_ln153_247_fu_21853_p1 = $signed(add_ln153_296_reg_26585);

assign sext_ln153_248_fu_21862_p1 = $signed(add_ln153_297_fu_21856_p2);

assign sext_ln153_249_fu_17109_p1 = $signed(add_ln153_299_fu_17103_p2);

assign sext_ln153_24_fu_13467_p1 = $signed(add_ln153_29_fu_13461_p2);

assign sext_ln153_250_fu_21872_p1 = $signed(add_ln153_300_reg_26590);

assign sext_ln153_251_fu_17125_p1 = $signed(add_ln153_301_fu_17119_p2);

assign sext_ln153_252_fu_21875_p1 = $signed(add_ln153_302_reg_26595);

assign sext_ln153_253_fu_21884_p1 = $signed(add_ln153_303_fu_21878_p2);

assign sext_ln153_254_fu_17141_p1 = $signed(add_ln153_304_fu_17135_p2);

assign sext_ln153_255_fu_21888_p1 = $signed(add_ln153_305_reg_26600);

assign sext_ln153_256_fu_17157_p1 = $signed(add_ln153_306_fu_17151_p2);

assign sext_ln153_257_fu_17167_p1 = $signed(add_ln153_307_fu_17161_p2);

assign sext_ln153_258_fu_21891_p1 = $signed(add_ln153_308_reg_26605);

assign sext_ln153_259_fu_21900_p1 = $signed(add_ln153_309_fu_21894_p2);

assign sext_ln153_25_fu_13477_p1 = $signed(add_ln153_30_fu_13471_p2);

assign sext_ln153_260_fu_17362_p1 = mul_res_910_reg_25264;

assign sext_ln153_261_fu_21916_p1 = $signed(add_ln153_312_reg_26610);

assign sext_ln153_262_fu_17377_p1 = $signed(add_ln153_314_fu_17371_p2);

assign sext_ln153_263_fu_21925_p1 = $signed(add_ln153_315_reg_26615);

assign sext_ln153_264_fu_17393_p1 = $signed(add_ln153_317_fu_17387_p2);

assign sext_ln153_265_fu_21934_p1 = $signed(add_ln153_318_reg_26620);

assign sext_ln153_266_fu_17409_p1 = $signed(add_ln153_319_fu_17403_p2);

assign sext_ln153_267_fu_21937_p1 = $signed(add_ln153_320_reg_26625);

assign sext_ln153_268_fu_21946_p1 = $signed(add_ln153_321_fu_21940_p2);

assign sext_ln153_269_fu_17425_p1 = $signed(add_ln153_323_fu_17419_p2);

assign sext_ln153_26_fu_13487_p1 = $signed(add_ln153_31_fu_13481_p2);

assign sext_ln153_270_fu_21956_p1 = $signed(add_ln153_324_reg_26630);

assign sext_ln153_271_fu_17441_p1 = $signed(add_ln153_325_fu_17435_p2);

assign sext_ln153_272_fu_21959_p1 = $signed(add_ln153_326_reg_26635);

assign sext_ln153_273_fu_21968_p1 = $signed(add_ln153_327_fu_21962_p2);

assign sext_ln153_274_fu_17457_p1 = $signed(add_ln153_328_fu_17451_p2);

assign sext_ln153_275_fu_21972_p1 = $signed(add_ln153_329_reg_26640);

assign sext_ln153_276_fu_17473_p1 = $signed(add_ln153_330_fu_17467_p2);

assign sext_ln153_277_fu_17483_p1 = $signed(add_ln153_331_fu_17477_p2);

assign sext_ln153_278_fu_21975_p1 = $signed(add_ln153_332_reg_26645);

assign sext_ln153_279_fu_21984_p1 = $signed(add_ln153_333_fu_21978_p2);

assign sext_ln153_27_fu_13497_p1 = $signed(add_ln153_32_fu_13491_p2);

assign sext_ln153_280_fu_17678_p1 = mul_res_934_reg_25344;

assign sext_ln153_281_fu_22000_p1 = $signed(add_ln153_336_reg_26650);

assign sext_ln153_282_fu_17693_p1 = $signed(add_ln153_338_fu_17687_p2);

assign sext_ln153_283_fu_22009_p1 = $signed(add_ln153_339_reg_26655);

assign sext_ln153_284_fu_17709_p1 = $signed(add_ln153_341_fu_17703_p2);

assign sext_ln153_285_fu_22018_p1 = $signed(add_ln153_342_reg_26660);

assign sext_ln153_286_fu_17725_p1 = $signed(add_ln153_343_fu_17719_p2);

assign sext_ln153_287_fu_22021_p1 = $signed(add_ln153_344_reg_26665);

assign sext_ln153_288_fu_22030_p1 = $signed(add_ln153_345_fu_22024_p2);

assign sext_ln153_289_fu_17741_p1 = $signed(add_ln153_347_fu_17735_p2);

assign sext_ln153_28_fu_21037_p1 = $signed(add_ln153_33_reg_26185);

assign sext_ln153_290_fu_22040_p1 = $signed(add_ln153_348_reg_26670);

assign sext_ln153_291_fu_17757_p1 = $signed(add_ln153_349_fu_17751_p2);

assign sext_ln153_292_fu_22043_p1 = $signed(add_ln153_350_reg_26675);

assign sext_ln153_293_fu_22052_p1 = $signed(add_ln153_351_fu_22046_p2);

assign sext_ln153_294_fu_17773_p1 = $signed(add_ln153_352_fu_17767_p2);

assign sext_ln153_295_fu_22056_p1 = $signed(add_ln153_353_reg_26680);

assign sext_ln153_296_fu_17789_p1 = $signed(add_ln153_354_fu_17783_p2);

assign sext_ln153_297_fu_17799_p1 = $signed(add_ln153_355_fu_17793_p2);

assign sext_ln153_298_fu_22059_p1 = $signed(add_ln153_356_reg_26685);

assign sext_ln153_299_fu_22068_p1 = $signed(add_ln153_357_fu_22062_p2);

assign sext_ln153_29_fu_13513_p1 = $signed(add_ln153_35_fu_13507_p2);

assign sext_ln153_2_fu_13129_p1 = $signed(add_ln153_2_fu_13123_p2);

assign sext_ln153_300_fu_17994_p1 = mul_res_958_reg_25424;

assign sext_ln153_301_fu_22084_p1 = $signed(add_ln153_360_reg_26690);

assign sext_ln153_302_fu_18009_p1 = $signed(add_ln153_362_fu_18003_p2);

assign sext_ln153_303_fu_22093_p1 = $signed(add_ln153_363_reg_26695);

assign sext_ln153_304_fu_18025_p1 = $signed(add_ln153_365_fu_18019_p2);

assign sext_ln153_305_fu_22102_p1 = $signed(add_ln153_366_reg_26700);

assign sext_ln153_306_fu_18041_p1 = $signed(add_ln153_367_fu_18035_p2);

assign sext_ln153_307_fu_22105_p1 = $signed(add_ln153_368_reg_26705);

assign sext_ln153_308_fu_22114_p1 = $signed(add_ln153_369_fu_22108_p2);

assign sext_ln153_309_fu_18057_p1 = $signed(add_ln153_371_fu_18051_p2);

assign sext_ln153_30_fu_21046_p1 = $signed(add_ln153_36_reg_26190);

assign sext_ln153_310_fu_22124_p1 = $signed(add_ln153_372_reg_26710);

assign sext_ln153_311_fu_18073_p1 = $signed(add_ln153_373_fu_18067_p2);

assign sext_ln153_312_fu_22127_p1 = $signed(add_ln153_374_reg_26715);

assign sext_ln153_313_fu_22136_p1 = $signed(add_ln153_375_fu_22130_p2);

assign sext_ln153_314_fu_18089_p1 = $signed(add_ln153_376_fu_18083_p2);

assign sext_ln153_315_fu_22140_p1 = $signed(add_ln153_377_reg_26720);

assign sext_ln153_316_fu_18105_p1 = $signed(add_ln153_378_fu_18099_p2);

assign sext_ln153_317_fu_18115_p1 = $signed(add_ln153_379_fu_18109_p2);

assign sext_ln153_318_fu_22143_p1 = $signed(add_ln153_380_reg_26725);

assign sext_ln153_319_fu_22152_p1 = $signed(add_ln153_381_fu_22146_p2);

assign sext_ln153_31_fu_13529_p1 = $signed(add_ln153_37_fu_13523_p2);

assign sext_ln153_320_fu_18310_p1 = mul_res_982_reg_25504;

assign sext_ln153_321_fu_22168_p1 = $signed(add_ln153_384_reg_26730);

assign sext_ln153_322_fu_18325_p1 = $signed(add_ln153_386_fu_18319_p2);

assign sext_ln153_323_fu_22177_p1 = $signed(add_ln153_387_reg_26735);

assign sext_ln153_324_fu_18341_p1 = $signed(add_ln153_389_fu_18335_p2);

assign sext_ln153_325_fu_22186_p1 = $signed(add_ln153_390_reg_26740);

assign sext_ln153_326_fu_18357_p1 = $signed(add_ln153_391_fu_18351_p2);

assign sext_ln153_327_fu_22189_p1 = $signed(add_ln153_392_reg_26745);

assign sext_ln153_328_fu_22198_p1 = $signed(add_ln153_393_fu_22192_p2);

assign sext_ln153_329_fu_18373_p1 = $signed(add_ln153_395_fu_18367_p2);

assign sext_ln153_32_fu_21049_p1 = $signed(add_ln153_38_reg_26195);

assign sext_ln153_330_fu_22208_p1 = $signed(add_ln153_396_reg_26750);

assign sext_ln153_331_fu_18389_p1 = $signed(add_ln153_397_fu_18383_p2);

assign sext_ln153_332_fu_22211_p1 = $signed(add_ln153_398_reg_26755);

assign sext_ln153_333_fu_22220_p1 = $signed(add_ln153_399_fu_22214_p2);

assign sext_ln153_334_fu_18405_p1 = $signed(add_ln153_400_fu_18399_p2);

assign sext_ln153_335_fu_22224_p1 = $signed(add_ln153_401_reg_26760);

assign sext_ln153_336_fu_18421_p1 = $signed(add_ln153_402_fu_18415_p2);

assign sext_ln153_337_fu_18431_p1 = $signed(add_ln153_403_fu_18425_p2);

assign sext_ln153_338_fu_22227_p1 = $signed(add_ln153_404_reg_26765);

assign sext_ln153_339_fu_22236_p1 = $signed(add_ln153_405_fu_22230_p2);

assign sext_ln153_33_fu_21058_p1 = $signed(add_ln153_39_fu_21052_p2);

assign sext_ln153_340_fu_18626_p1 = mul_res_1006_reg_25584;

assign sext_ln153_341_fu_22252_p1 = $signed(add_ln153_408_reg_26770);

assign sext_ln153_342_fu_18641_p1 = $signed(add_ln153_410_fu_18635_p2);

assign sext_ln153_343_fu_22261_p1 = $signed(add_ln153_411_reg_26775);

assign sext_ln153_344_fu_18657_p1 = $signed(add_ln153_413_fu_18651_p2);

assign sext_ln153_345_fu_22270_p1 = $signed(add_ln153_414_reg_26780);

assign sext_ln153_346_fu_18673_p1 = $signed(add_ln153_415_fu_18667_p2);

assign sext_ln153_347_fu_22273_p1 = $signed(add_ln153_416_reg_26785);

assign sext_ln153_348_fu_22282_p1 = $signed(add_ln153_417_fu_22276_p2);

assign sext_ln153_349_fu_18689_p1 = $signed(add_ln153_419_fu_18683_p2);

assign sext_ln153_34_fu_13545_p1 = $signed(add_ln153_40_fu_13539_p2);

assign sext_ln153_350_fu_22292_p1 = $signed(add_ln153_420_reg_26790);

assign sext_ln153_351_fu_18705_p1 = $signed(add_ln153_421_fu_18699_p2);

assign sext_ln153_352_fu_22295_p1 = $signed(add_ln153_422_reg_26795);

assign sext_ln153_353_fu_22304_p1 = $signed(add_ln153_423_fu_22298_p2);

assign sext_ln153_354_fu_18721_p1 = $signed(add_ln153_424_fu_18715_p2);

assign sext_ln153_355_fu_22308_p1 = $signed(add_ln153_425_reg_26800);

assign sext_ln153_356_fu_18737_p1 = $signed(add_ln153_426_fu_18731_p2);

assign sext_ln153_357_fu_18747_p1 = $signed(add_ln153_427_fu_18741_p2);

assign sext_ln153_358_fu_22311_p1 = $signed(add_ln153_428_reg_26805);

assign sext_ln153_359_fu_22320_p1 = $signed(add_ln153_429_fu_22314_p2);

assign sext_ln153_35_fu_21062_p1 = $signed(add_ln153_41_reg_26200);

assign sext_ln153_360_fu_18942_p1 = mul_res_1030_reg_25664;

assign sext_ln153_361_fu_22336_p1 = $signed(add_ln153_432_reg_26810);

assign sext_ln153_362_fu_18957_p1 = $signed(add_ln153_434_fu_18951_p2);

assign sext_ln153_363_fu_22345_p1 = $signed(add_ln153_435_reg_26815);

assign sext_ln153_364_fu_18973_p1 = $signed(add_ln153_437_fu_18967_p2);

assign sext_ln153_365_fu_22354_p1 = $signed(add_ln153_438_reg_26820);

assign sext_ln153_366_fu_18989_p1 = $signed(add_ln153_439_fu_18983_p2);

assign sext_ln153_367_fu_22357_p1 = $signed(add_ln153_440_reg_26825);

assign sext_ln153_368_fu_22366_p1 = $signed(add_ln153_441_fu_22360_p2);

assign sext_ln153_369_fu_19005_p1 = $signed(add_ln153_443_fu_18999_p2);

assign sext_ln153_36_fu_13561_p1 = $signed(add_ln153_42_fu_13555_p2);

assign sext_ln153_370_fu_22376_p1 = $signed(add_ln153_444_reg_26830);

assign sext_ln153_371_fu_19021_p1 = $signed(add_ln153_445_fu_19015_p2);

assign sext_ln153_372_fu_22379_p1 = $signed(add_ln153_446_reg_26835);

assign sext_ln153_373_fu_22388_p1 = $signed(add_ln153_447_fu_22382_p2);

assign sext_ln153_374_fu_19037_p1 = $signed(add_ln153_448_fu_19031_p2);

assign sext_ln153_375_fu_22392_p1 = $signed(add_ln153_449_reg_26840);

assign sext_ln153_376_fu_19053_p1 = $signed(add_ln153_450_fu_19047_p2);

assign sext_ln153_377_fu_19063_p1 = $signed(add_ln153_451_fu_19057_p2);

assign sext_ln153_378_fu_22395_p1 = $signed(add_ln153_452_reg_26845);

assign sext_ln153_379_fu_22404_p1 = $signed(add_ln153_453_fu_22398_p2);

assign sext_ln153_37_fu_13571_p1 = $signed(add_ln153_43_fu_13565_p2);

assign sext_ln153_380_fu_19258_p1 = mul_res_1054_reg_25744;

assign sext_ln153_381_fu_22420_p1 = $signed(add_ln153_456_reg_26850);

assign sext_ln153_382_fu_19273_p1 = $signed(add_ln153_458_fu_19267_p2);

assign sext_ln153_383_fu_22429_p1 = $signed(add_ln153_459_reg_26855);

assign sext_ln153_384_fu_19289_p1 = $signed(add_ln153_461_fu_19283_p2);

assign sext_ln153_385_fu_22438_p1 = $signed(add_ln153_462_reg_26860);

assign sext_ln153_386_fu_19305_p1 = $signed(add_ln153_463_fu_19299_p2);

assign sext_ln153_387_fu_22441_p1 = $signed(add_ln153_464_reg_26865);

assign sext_ln153_388_fu_22450_p1 = $signed(add_ln153_465_fu_22444_p2);

assign sext_ln153_389_fu_19321_p1 = $signed(add_ln153_467_fu_19315_p2);

assign sext_ln153_38_fu_21065_p1 = $signed(add_ln153_44_reg_26205);

assign sext_ln153_390_fu_22460_p1 = $signed(add_ln153_468_reg_26870);

assign sext_ln153_391_fu_19337_p1 = $signed(add_ln153_469_fu_19331_p2);

assign sext_ln153_392_fu_22463_p1 = $signed(add_ln153_470_reg_26875);

assign sext_ln153_393_fu_22472_p1 = $signed(add_ln153_471_fu_22466_p2);

assign sext_ln153_394_fu_19353_p1 = $signed(add_ln153_472_fu_19347_p2);

assign sext_ln153_395_fu_22476_p1 = $signed(add_ln153_473_reg_26880);

assign sext_ln153_396_fu_19369_p1 = $signed(add_ln153_474_fu_19363_p2);

assign sext_ln153_397_fu_19379_p1 = $signed(add_ln153_475_fu_19373_p2);

assign sext_ln153_398_fu_22479_p1 = $signed(add_ln153_476_reg_26885);

assign sext_ln153_399_fu_22488_p1 = $signed(add_ln153_477_fu_22482_p2);

assign sext_ln153_39_fu_21074_p1 = $signed(add_ln153_45_fu_21068_p2);

assign sext_ln153_3_fu_20957_p1 = $signed(add_ln153_3_reg_26145);

assign sext_ln153_400_fu_19574_p1 = mul_res_1078_reg_25824;

assign sext_ln153_401_fu_22504_p1 = $signed(add_ln153_480_reg_26890);

assign sext_ln153_402_fu_19589_p1 = $signed(add_ln153_482_fu_19583_p2);

assign sext_ln153_403_fu_22513_p1 = $signed(add_ln153_483_reg_26895);

assign sext_ln153_404_fu_19605_p1 = $signed(add_ln153_485_fu_19599_p2);

assign sext_ln153_405_fu_22522_p1 = $signed(add_ln153_486_reg_26900);

assign sext_ln153_406_fu_19621_p1 = $signed(add_ln153_487_fu_19615_p2);

assign sext_ln153_407_fu_22525_p1 = $signed(add_ln153_488_reg_26905);

assign sext_ln153_408_fu_22534_p1 = $signed(add_ln153_489_fu_22528_p2);

assign sext_ln153_409_fu_19637_p1 = $signed(add_ln153_491_fu_19631_p2);

assign sext_ln153_40_fu_13758_p1 = mul_res_646_reg_23900;

assign sext_ln153_410_fu_22544_p1 = $signed(add_ln153_492_reg_26910);

assign sext_ln153_411_fu_19653_p1 = $signed(add_ln153_493_fu_19647_p2);

assign sext_ln153_412_fu_22547_p1 = $signed(add_ln153_494_reg_26915);

assign sext_ln153_413_fu_22556_p1 = $signed(add_ln153_495_fu_22550_p2);

assign sext_ln153_414_fu_19669_p1 = $signed(add_ln153_496_fu_19663_p2);

assign sext_ln153_415_fu_22560_p1 = $signed(add_ln153_497_reg_26920);

assign sext_ln153_416_fu_19685_p1 = $signed(add_ln153_498_fu_19679_p2);

assign sext_ln153_417_fu_19695_p1 = $signed(add_ln153_499_fu_19689_p2);

assign sext_ln153_418_fu_22563_p1 = $signed(add_ln153_500_reg_26925);

assign sext_ln153_419_fu_22572_p1 = $signed(add_ln153_501_fu_22566_p2);

assign sext_ln153_41_fu_21096_p1 = $signed(add_ln153_48_reg_26210);

assign sext_ln153_420_fu_19890_p1 = mul_res_1102_reg_25904;

assign sext_ln153_421_fu_22588_p1 = $signed(add_ln153_504_reg_26930);

assign sext_ln153_422_fu_19905_p1 = $signed(add_ln153_506_fu_19899_p2);

assign sext_ln153_423_fu_22597_p1 = $signed(add_ln153_507_reg_26935);

assign sext_ln153_424_fu_19921_p1 = $signed(add_ln153_509_fu_19915_p2);

assign sext_ln153_425_fu_22606_p1 = $signed(add_ln153_510_reg_26940);

assign sext_ln153_426_fu_19937_p1 = $signed(add_ln153_511_fu_19931_p2);

assign sext_ln153_427_fu_22609_p1 = $signed(add_ln153_512_reg_26945);

assign sext_ln153_428_fu_22618_p1 = $signed(add_ln153_513_fu_22612_p2);

assign sext_ln153_429_fu_19953_p1 = $signed(add_ln153_515_fu_19947_p2);

assign sext_ln153_42_fu_13773_p1 = $signed(add_ln153_50_fu_13767_p2);

assign sext_ln153_430_fu_22628_p1 = $signed(add_ln153_516_reg_26950);

assign sext_ln153_431_fu_19969_p1 = $signed(add_ln153_517_fu_19963_p2);

assign sext_ln153_432_fu_22631_p1 = $signed(add_ln153_518_reg_26955);

assign sext_ln153_433_fu_22640_p1 = $signed(add_ln153_519_fu_22634_p2);

assign sext_ln153_434_fu_19985_p1 = $signed(add_ln153_520_fu_19979_p2);

assign sext_ln153_435_fu_22644_p1 = $signed(add_ln153_521_reg_26960);

assign sext_ln153_436_fu_20001_p1 = $signed(add_ln153_522_fu_19995_p2);

assign sext_ln153_437_fu_20011_p1 = $signed(add_ln153_523_fu_20005_p2);

assign sext_ln153_438_fu_22647_p1 = $signed(add_ln153_524_reg_26965);

assign sext_ln153_439_fu_22656_p1 = $signed(add_ln153_525_fu_22650_p2);

assign sext_ln153_43_fu_21099_p1 = $signed(add_ln153_51_reg_26215);

assign sext_ln153_440_fu_20210_p1 = mul_res_1126_reg_25984;

assign sext_ln153_441_fu_22672_p1 = $signed(add_ln153_528_reg_26970);

assign sext_ln153_442_fu_20225_p1 = $signed(add_ln153_530_fu_20219_p2);

assign sext_ln153_443_fu_22681_p1 = $signed(add_ln153_531_reg_26975);

assign sext_ln153_444_fu_20241_p1 = $signed(add_ln153_533_fu_20235_p2);

assign sext_ln153_445_fu_22690_p1 = $signed(add_ln153_534_reg_26980);

assign sext_ln153_446_fu_20257_p1 = $signed(add_ln153_535_fu_20251_p2);

assign sext_ln153_447_fu_22693_p1 = $signed(add_ln153_536_reg_26985);

assign sext_ln153_448_fu_22702_p1 = $signed(add_ln153_537_fu_22696_p2);

assign sext_ln153_449_fu_20273_p1 = $signed(add_ln153_539_fu_20267_p2);

assign sext_ln153_44_fu_13789_p1 = $signed(add_ln153_53_fu_13783_p2);

assign sext_ln153_450_fu_22712_p1 = $signed(add_ln153_540_reg_26990);

assign sext_ln153_451_fu_20289_p1 = $signed(add_ln153_541_fu_20283_p2);

assign sext_ln153_452_fu_22715_p1 = $signed(add_ln153_542_reg_26995);

assign sext_ln153_453_fu_22724_p1 = $signed(add_ln153_543_fu_22718_p2);

assign sext_ln153_454_fu_20305_p1 = $signed(add_ln153_544_fu_20299_p2);

assign sext_ln153_455_fu_22728_p1 = $signed(add_ln153_545_reg_27000);

assign sext_ln153_456_fu_20321_p1 = $signed(add_ln153_546_fu_20315_p2);

assign sext_ln153_457_fu_20331_p1 = $signed(add_ln153_547_fu_20325_p2);

assign sext_ln153_458_fu_22731_p1 = $signed(add_ln153_548_reg_27005);

assign sext_ln153_459_fu_22740_p1 = $signed(add_ln153_549_fu_22734_p2);

assign sext_ln153_45_fu_13799_p1 = $signed(add_ln153_54_fu_13793_p2);

assign sext_ln153_460_fu_20530_p1 = mul_res_1150_reg_26064;

assign sext_ln153_461_fu_22756_p1 = $signed(add_ln153_552_reg_27010);

assign sext_ln153_462_fu_20545_p1 = $signed(add_ln153_554_fu_20539_p2);

assign sext_ln153_463_fu_22765_p1 = $signed(add_ln153_555_reg_27015);

assign sext_ln153_464_fu_20561_p1 = $signed(add_ln153_557_fu_20555_p2);

assign sext_ln153_465_fu_22774_p1 = $signed(add_ln153_558_reg_27020);

assign sext_ln153_466_fu_20577_p1 = $signed(add_ln153_559_fu_20571_p2);

assign sext_ln153_467_fu_22777_p1 = $signed(add_ln153_560_reg_27025);

assign sext_ln153_468_fu_22786_p1 = $signed(add_ln153_561_fu_22780_p2);

assign sext_ln153_469_fu_20593_p1 = $signed(add_ln153_563_fu_20587_p2);

assign sext_ln153_46_fu_13809_p1 = $signed(add_ln153_55_fu_13803_p2);

assign sext_ln153_470_fu_22796_p1 = $signed(add_ln153_564_reg_27030);

assign sext_ln153_471_fu_20609_p1 = $signed(add_ln153_565_fu_20603_p2);

assign sext_ln153_472_fu_22799_p1 = $signed(add_ln153_566_reg_27035);

assign sext_ln153_473_fu_22808_p1 = $signed(add_ln153_567_fu_22802_p2);

assign sext_ln153_474_fu_20625_p1 = $signed(add_ln153_568_fu_20619_p2);

assign sext_ln153_475_fu_22812_p1 = $signed(add_ln153_569_reg_27040);

assign sext_ln153_476_fu_20641_p1 = $signed(add_ln153_570_fu_20635_p2);

assign sext_ln153_477_fu_20651_p1 = $signed(add_ln153_571_fu_20645_p2);

assign sext_ln153_478_fu_22815_p1 = $signed(add_ln153_572_reg_27045);

assign sext_ln153_479_fu_22824_p1 = $signed(add_ln153_573_fu_22818_p2);

assign sext_ln153_47_fu_13819_p1 = $signed(add_ln153_56_fu_13813_p2);

assign sext_ln153_48_fu_21108_p1 = $signed(add_ln153_57_reg_26220);

assign sext_ln153_49_fu_13835_p1 = $signed(add_ln153_59_fu_13829_p2);

assign sext_ln153_4_fu_13145_p1 = $signed(add_ln153_5_fu_13139_p2);

assign sext_ln153_50_fu_21117_p1 = $signed(add_ln153_60_reg_26225);

assign sext_ln153_51_fu_13851_p1 = $signed(add_ln153_61_fu_13845_p2);

assign sext_ln153_52_fu_21120_p1 = $signed(add_ln153_62_reg_26230);

assign sext_ln153_53_fu_21129_p1 = $signed(add_ln153_63_fu_21123_p2);

assign sext_ln153_54_fu_13867_p1 = $signed(add_ln153_64_fu_13861_p2);

assign sext_ln153_55_fu_21133_p1 = $signed(add_ln153_65_reg_26235);

assign sext_ln153_56_fu_13883_p1 = $signed(add_ln153_66_fu_13877_p2);

assign sext_ln153_57_fu_13893_p1 = $signed(add_ln153_67_fu_13887_p2);

assign sext_ln153_58_fu_21136_p1 = $signed(add_ln153_68_reg_26240);

assign sext_ln153_59_fu_21145_p1 = $signed(add_ln153_69_fu_21139_p2);

assign sext_ln153_5_fu_13155_p1 = $signed(add_ln153_6_fu_13149_p2);

assign sext_ln153_60_fu_14080_p1 = mul_res_670_reg_24032;

assign sext_ln153_61_fu_21167_p1 = $signed(add_ln153_72_reg_26245);

assign sext_ln153_62_fu_14095_p1 = $signed(add_ln153_74_fu_14089_p2);

assign sext_ln153_63_fu_21170_p1 = $signed(add_ln153_75_reg_26250);

assign sext_ln153_64_fu_14111_p1 = $signed(add_ln153_77_fu_14105_p2);

assign sext_ln153_65_fu_14121_p1 = $signed(add_ln153_78_fu_14115_p2);

assign sext_ln153_66_fu_14131_p1 = $signed(add_ln153_79_fu_14125_p2);

assign sext_ln153_67_fu_14141_p1 = $signed(add_ln153_80_fu_14135_p2);

assign sext_ln153_68_fu_21179_p1 = $signed(add_ln153_81_reg_26255);

assign sext_ln153_69_fu_14157_p1 = $signed(add_ln153_83_fu_14151_p2);

assign sext_ln153_6_fu_13165_p1 = $signed(add_ln153_7_fu_13159_p2);

assign sext_ln153_70_fu_21188_p1 = $signed(add_ln153_84_reg_26260);

assign sext_ln153_71_fu_14173_p1 = $signed(add_ln153_85_fu_14167_p2);

assign sext_ln153_72_fu_21191_p1 = $signed(add_ln153_86_reg_26265);

assign sext_ln153_73_fu_21200_p1 = $signed(add_ln153_87_fu_21194_p2);

assign sext_ln153_74_fu_14189_p1 = $signed(add_ln153_88_fu_14183_p2);

assign sext_ln153_75_fu_21204_p1 = $signed(add_ln153_89_reg_26270);

assign sext_ln153_76_fu_14205_p1 = $signed(add_ln153_90_fu_14199_p2);

assign sext_ln153_77_fu_14215_p1 = $signed(add_ln153_91_fu_14209_p2);

assign sext_ln153_78_fu_21207_p1 = $signed(add_ln153_92_reg_26275);

assign sext_ln153_79_fu_21216_p1 = $signed(add_ln153_93_fu_21210_p2);

assign sext_ln153_7_fu_13175_p1 = $signed(add_ln153_8_fu_13169_p2);

assign sext_ln153_80_fu_14402_p1 = mul_res_694_reg_24164;

assign sext_ln153_81_fu_21238_p1 = $signed(add_ln153_96_reg_26280);

assign sext_ln153_82_fu_14417_p1 = $signed(add_ln153_98_fu_14411_p2);

assign sext_ln153_83_fu_21241_p1 = $signed(add_ln153_99_reg_26285);

assign sext_ln153_84_fu_14433_p1 = $signed(add_ln153_101_fu_14427_p2);

assign sext_ln153_85_fu_14443_p1 = $signed(add_ln153_102_fu_14437_p2);

assign sext_ln153_86_fu_14453_p1 = $signed(add_ln153_103_fu_14447_p2);

assign sext_ln153_87_fu_14463_p1 = $signed(add_ln153_104_fu_14457_p2);

assign sext_ln153_88_fu_21250_p1 = $signed(add_ln153_105_reg_26290);

assign sext_ln153_89_fu_14479_p1 = $signed(add_ln153_107_fu_14473_p2);

assign sext_ln153_8_fu_20966_p1 = $signed(add_ln153_9_reg_26150);

assign sext_ln153_90_fu_21259_p1 = $signed(add_ln153_108_reg_26295);

assign sext_ln153_91_fu_14495_p1 = $signed(add_ln153_109_fu_14489_p2);

assign sext_ln153_92_fu_21262_p1 = $signed(add_ln153_110_reg_26300);

assign sext_ln153_93_fu_21271_p1 = $signed(add_ln153_111_fu_21265_p2);

assign sext_ln153_94_fu_14511_p1 = $signed(add_ln153_112_fu_14505_p2);

assign sext_ln153_95_fu_21275_p1 = $signed(add_ln153_113_reg_26305);

assign sext_ln153_96_fu_14527_p1 = $signed(add_ln153_114_fu_14521_p2);

assign sext_ln153_97_fu_14537_p1 = $signed(add_ln153_115_fu_14531_p2);

assign sext_ln153_98_fu_21278_p1 = $signed(add_ln153_116_reg_26310);

assign sext_ln153_99_fu_21287_p1 = $signed(add_ln153_117_fu_21281_p2);

assign sext_ln153_9_fu_13191_p1 = $signed(add_ln153_11_fu_13185_p2);

assign sext_ln153_fu_13114_p1 = mul_res_598_reg_23636;

assign start_out = real_start;

assign tmp_288_fu_2772_p3 = {{trunc_ln121_reg_23416}, {5'd0}};

assign tmp_290_fu_2919_p4 = {{cache_window_sm_dout[11:9]}};

assign tmp_291_fu_2961_p4 = {{cache_window_sm_dout[14:12]}};

assign tmp_293_fu_3023_p4 = {{cache_window_sm_dout[20:18]}};

assign tmp_294_fu_3065_p4 = {{cache_window_sm_dout[23:21]}};

assign tmp_295_fu_3107_p4 = {{cache_window_sm_dout[26:24]}};

assign tmp_296_fu_3149_p4 = {{cache_window_sm_dout[29:27]}};

assign tmp_297_fu_3191_p4 = {{cache_window_sm_dout[32:30]}};

assign tmp_298_fu_3233_p4 = {{cache_window_sm_dout[35:33]}};

assign tmp_299_fu_3275_p4 = {{cache_window_sm_dout[38:36]}};

assign tmp_300_fu_3317_p4 = {{cache_window_sm_dout[41:39]}};

assign tmp_301_fu_3359_p4 = {{cache_window_sm_dout[44:42]}};

assign tmp_303_fu_3421_p4 = {{cache_window_sm_dout[50:48]}};

assign tmp_304_fu_3463_p4 = {{cache_window_sm_dout[53:51]}};

assign tmp_305_fu_3505_p4 = {{cache_window_sm_dout[56:54]}};

assign tmp_306_fu_3547_p4 = {{cache_window_sm_dout[59:57]}};

assign tmp_310_fu_3649_p4 = {{cache_window_sm_dout[71:69]}};

assign tmp_311_fu_9813_p4 = {{cache_window_sm_dout[74:72]}};

assign tmp_312_fu_9841_p4 = {{cache_window_sm_dout[77:75]}};

assign tmp_314_fu_9879_p4 = {{cache_window_sm_dout[83:81]}};

assign tmp_315_fu_9907_p4 = {{cache_window_sm_dout[86:84]}};

assign tmp_317_fu_9945_p4 = {{cache_window_sm_dout[92:90]}};

assign tmp_318_fu_9973_p4 = {{cache_window_sm_dout[95:93]}};

assign tmp_319_fu_10001_p4 = {{cache_window_sm_dout[98:96]}};

assign tmp_320_fu_10029_p4 = {{cache_window_sm_dout[101:99]}};

assign tmp_321_fu_10057_p4 = {{cache_window_sm_dout[104:102]}};

assign tmp_322_fu_10085_p4 = {{cache_window_sm_dout[107:105]}};

assign tmp_324_fu_10123_p4 = {{cache_window_sm_dout[113:111]}};

assign tmp_325_fu_10151_p4 = {{cache_window_sm_dout[116:114]}};

assign tmp_327_fu_10189_p4 = {{cache_window_sm_dout[122:120]}};

assign tmp_328_fu_10217_p4 = {{cache_window_sm_dout[125:123]}};

assign tmp_330_fu_10255_p4 = {{cache_window_sm_dout[131:129]}};

assign tmp_334_fu_10313_p4 = {{cache_window_sm_dout[143:141]}};

assign tmp_336_fu_2909_p4 = {{mlp_inst_m2_weight_arr_112_q0[11:9]}};

assign tmp_337_fu_2951_p4 = {{mlp_inst_m2_weight_arr_112_q0[14:12]}};

assign tmp_339_fu_3013_p4 = {{mlp_inst_m2_weight_arr_112_q0[20:18]}};

assign tmp_340_fu_3055_p4 = {{mlp_inst_m2_weight_arr_112_q0[23:21]}};

assign tmp_341_fu_3097_p4 = {{mlp_inst_m2_weight_arr_112_q0[26:24]}};

assign tmp_342_fu_3139_p4 = {{mlp_inst_m2_weight_arr_112_q0[29:27]}};

assign tmp_343_fu_3181_p4 = {{mlp_inst_m2_weight_arr_112_q0[32:30]}};

assign tmp_344_fu_3223_p4 = {{mlp_inst_m2_weight_arr_112_q0[35:33]}};

assign tmp_345_fu_3265_p4 = {{mlp_inst_m2_weight_arr_112_q0[38:36]}};

assign tmp_346_fu_3307_p4 = {{mlp_inst_m2_weight_arr_112_q0[41:39]}};

assign tmp_347_fu_3349_p4 = {{mlp_inst_m2_weight_arr_112_q0[44:42]}};

assign tmp_349_fu_3411_p4 = {{mlp_inst_m2_weight_arr_112_q0[50:48]}};

assign tmp_350_fu_3453_p4 = {{mlp_inst_m2_weight_arr_112_q0[53:51]}};

assign tmp_351_fu_3495_p4 = {{mlp_inst_m2_weight_arr_112_q0[56:54]}};

assign tmp_352_fu_3537_p4 = {{mlp_inst_m2_weight_arr_112_q0[59:57]}};

assign tmp_356_fu_3639_p4 = {{mlp_inst_m2_weight_arr_112_q0[71:69]}};

assign tmp_357_fu_3681_p4 = {{mlp_inst_m2_weight_arr_112_q0[74:72]}};

assign tmp_358_fu_3709_p4 = {{mlp_inst_m2_weight_arr_112_q0[77:75]}};

assign tmp_360_fu_3747_p4 = {{mlp_inst_m2_weight_arr_112_q0[83:81]}};

assign tmp_361_fu_3775_p4 = {{mlp_inst_m2_weight_arr_112_q0[86:84]}};

assign tmp_363_fu_3813_p4 = {{mlp_inst_m2_weight_arr_112_q0[92:90]}};

assign tmp_364_fu_3841_p4 = {{mlp_inst_m2_weight_arr_112_q0[95:93]}};

assign tmp_365_fu_3869_p4 = {{mlp_inst_m2_weight_arr_112_q0[98:96]}};

assign tmp_366_fu_3897_p4 = {{mlp_inst_m2_weight_arr_112_q0[101:99]}};

assign tmp_367_fu_3925_p4 = {{mlp_inst_m2_weight_arr_112_q0[104:102]}};

assign tmp_368_fu_3953_p4 = {{mlp_inst_m2_weight_arr_112_q0[107:105]}};

assign tmp_369_fu_3981_p4 = {{mlp_inst_m2_weight_arr_112_q0[110:108]}};

assign tmp_370_fu_4009_p4 = {{mlp_inst_m2_weight_arr_112_q0[113:111]}};

assign tmp_371_fu_4037_p4 = {{mlp_inst_m2_weight_arr_112_q0[116:114]}};

assign tmp_373_fu_4075_p4 = {{mlp_inst_m2_weight_arr_112_q0[122:120]}};

assign tmp_374_fu_4103_p4 = {{mlp_inst_m2_weight_arr_112_q0[125:123]}};

assign tmp_375_fu_4131_p4 = {{mlp_inst_m2_weight_arr_112_q0[128:126]}};

assign tmp_376_fu_4159_p4 = {{mlp_inst_m2_weight_arr_112_q0[131:129]}};

assign tmp_380_fu_4217_p4 = {{mlp_inst_m2_weight_arr_112_q0[143:141]}};

assign tmp_381_fu_4245_p4 = {{mlp_inst_m2_weight_arr_112_q0[146:144]}};

assign tmp_382_fu_4273_p4 = {{mlp_inst_m2_weight_arr_112_q0[149:147]}};

assign tmp_384_fu_4311_p4 = {{mlp_inst_m2_weight_arr_112_q0[155:153]}};

assign tmp_385_fu_4339_p4 = {{mlp_inst_m2_weight_arr_112_q0[158:156]}};

assign tmp_387_fu_4377_p4 = {{mlp_inst_m2_weight_arr_112_q0[164:162]}};

assign tmp_388_fu_4405_p4 = {{mlp_inst_m2_weight_arr_112_q0[167:165]}};

assign tmp_389_fu_4433_p4 = {{mlp_inst_m2_weight_arr_112_q0[170:168]}};

assign tmp_390_fu_4461_p4 = {{mlp_inst_m2_weight_arr_112_q0[173:171]}};

assign tmp_391_fu_4489_p4 = {{mlp_inst_m2_weight_arr_112_q0[176:174]}};

assign tmp_392_fu_4517_p4 = {{mlp_inst_m2_weight_arr_112_q0[179:177]}};

assign tmp_393_fu_4545_p4 = {{mlp_inst_m2_weight_arr_112_q0[182:180]}};

assign tmp_394_fu_4573_p4 = {{mlp_inst_m2_weight_arr_112_q0[185:183]}};

assign tmp_395_fu_4601_p4 = {{mlp_inst_m2_weight_arr_112_q0[188:186]}};

assign tmp_397_fu_4639_p4 = {{mlp_inst_m2_weight_arr_112_q0[194:192]}};

assign tmp_398_fu_4667_p4 = {{mlp_inst_m2_weight_arr_112_q0[197:195]}};

assign tmp_399_fu_4695_p4 = {{mlp_inst_m2_weight_arr_112_q0[200:198]}};

assign tmp_400_fu_4723_p4 = {{mlp_inst_m2_weight_arr_112_q0[203:201]}};

assign tmp_404_fu_4781_p4 = {{mlp_inst_m2_weight_arr_112_q0[215:213]}};

assign tmp_405_fu_4809_p4 = {{mlp_inst_m2_weight_arr_112_q0[218:216]}};

assign tmp_406_fu_4837_p4 = {{mlp_inst_m2_weight_arr_112_q0[221:219]}};

assign tmp_408_fu_4875_p4 = {{mlp_inst_m2_weight_arr_112_q0[227:225]}};

assign tmp_409_fu_4903_p4 = {{mlp_inst_m2_weight_arr_112_q0[230:228]}};

assign tmp_411_fu_4941_p4 = {{mlp_inst_m2_weight_arr_112_q0[236:234]}};

assign tmp_412_fu_4969_p4 = {{mlp_inst_m2_weight_arr_112_q0[239:237]}};

assign tmp_413_fu_4997_p4 = {{mlp_inst_m2_weight_arr_112_q0[242:240]}};

assign tmp_414_fu_5025_p4 = {{mlp_inst_m2_weight_arr_112_q0[245:243]}};

assign tmp_415_fu_5053_p4 = {{mlp_inst_m2_weight_arr_112_q0[248:246]}};

assign tmp_416_fu_5081_p4 = {{mlp_inst_m2_weight_arr_112_q0[251:249]}};

assign tmp_417_fu_5109_p4 = {{mlp_inst_m2_weight_arr_112_q0[254:252]}};

assign tmp_418_fu_5137_p4 = {{mlp_inst_m2_weight_arr_112_q0[257:255]}};

assign tmp_419_fu_5165_p4 = {{mlp_inst_m2_weight_arr_112_q0[260:258]}};

assign tmp_421_fu_5203_p4 = {{mlp_inst_m2_weight_arr_112_q0[266:264]}};

assign tmp_422_fu_5231_p4 = {{mlp_inst_m2_weight_arr_112_q0[269:267]}};

assign tmp_423_fu_5259_p4 = {{mlp_inst_m2_weight_arr_112_q0[272:270]}};

assign tmp_424_fu_5287_p4 = {{mlp_inst_m2_weight_arr_112_q0[275:273]}};

assign tmp_428_fu_5345_p4 = {{mlp_inst_m2_weight_arr_112_q0[287:285]}};

assign tmp_429_fu_5373_p4 = {{mlp_inst_m2_weight_arr_112_q0[290:288]}};

assign tmp_430_fu_5401_p4 = {{mlp_inst_m2_weight_arr_112_q0[293:291]}};

assign tmp_432_fu_5439_p4 = {{mlp_inst_m2_weight_arr_112_q0[299:297]}};

assign tmp_433_fu_5467_p4 = {{mlp_inst_m2_weight_arr_112_q0[302:300]}};

assign tmp_435_fu_5505_p4 = {{mlp_inst_m2_weight_arr_112_q0[308:306]}};

assign tmp_436_fu_5533_p4 = {{mlp_inst_m2_weight_arr_112_q0[311:309]}};

assign tmp_437_fu_5561_p4 = {{mlp_inst_m2_weight_arr_112_q0[314:312]}};

assign tmp_438_fu_5589_p4 = {{mlp_inst_m2_weight_arr_112_q0[317:315]}};

assign tmp_439_fu_5617_p4 = {{mlp_inst_m2_weight_arr_112_q0[320:318]}};

assign tmp_440_fu_5645_p4 = {{mlp_inst_m2_weight_arr_112_q0[323:321]}};

assign tmp_441_fu_5673_p4 = {{mlp_inst_m2_weight_arr_112_q0[326:324]}};

assign tmp_442_fu_5701_p4 = {{mlp_inst_m2_weight_arr_112_q0[329:327]}};

assign tmp_443_fu_5729_p4 = {{mlp_inst_m2_weight_arr_112_q0[332:330]}};

assign tmp_445_fu_5767_p4 = {{mlp_inst_m2_weight_arr_112_q0[338:336]}};

assign tmp_446_fu_5795_p4 = {{mlp_inst_m2_weight_arr_112_q0[341:339]}};

assign tmp_447_fu_5823_p4 = {{mlp_inst_m2_weight_arr_112_q0[344:342]}};

assign tmp_448_fu_5851_p4 = {{mlp_inst_m2_weight_arr_112_q0[347:345]}};

assign tmp_452_fu_5909_p4 = {{mlp_inst_m2_weight_arr_112_q0[359:357]}};

assign tmp_453_fu_5937_p4 = {{mlp_inst_m2_weight_arr_112_q0[362:360]}};

assign tmp_454_fu_5965_p4 = {{mlp_inst_m2_weight_arr_112_q0[365:363]}};

assign tmp_456_fu_6003_p4 = {{mlp_inst_m2_weight_arr_112_q0[371:369]}};

assign tmp_457_fu_6031_p4 = {{mlp_inst_m2_weight_arr_112_q0[374:372]}};

assign tmp_459_fu_6069_p4 = {{mlp_inst_m2_weight_arr_112_q0[380:378]}};

assign tmp_460_fu_6097_p4 = {{mlp_inst_m2_weight_arr_112_q0[383:381]}};

assign tmp_461_fu_6125_p4 = {{mlp_inst_m2_weight_arr_112_q0[386:384]}};

assign tmp_462_fu_6153_p4 = {{mlp_inst_m2_weight_arr_112_q0[389:387]}};

assign tmp_463_fu_6181_p4 = {{mlp_inst_m2_weight_arr_112_q0[392:390]}};

assign tmp_464_fu_6209_p4 = {{mlp_inst_m2_weight_arr_112_q0[395:393]}};

assign tmp_465_fu_6237_p4 = {{mlp_inst_m2_weight_arr_112_q0[398:396]}};

assign tmp_466_fu_6265_p4 = {{mlp_inst_m2_weight_arr_112_q0[401:399]}};

assign tmp_467_fu_6293_p4 = {{mlp_inst_m2_weight_arr_112_q0[404:402]}};

assign tmp_469_fu_6331_p4 = {{mlp_inst_m2_weight_arr_112_q0[410:408]}};

assign tmp_470_fu_6359_p4 = {{mlp_inst_m2_weight_arr_112_q0[413:411]}};

assign tmp_471_fu_6387_p4 = {{mlp_inst_m2_weight_arr_112_q0[416:414]}};

assign tmp_472_fu_6415_p4 = {{mlp_inst_m2_weight_arr_112_q0[419:417]}};

assign tmp_476_fu_6473_p4 = {{mlp_inst_m2_weight_arr_112_q0[431:429]}};

assign tmp_477_fu_6501_p4 = {{mlp_inst_m2_weight_arr_112_q0[434:432]}};

assign tmp_478_fu_6529_p4 = {{mlp_inst_m2_weight_arr_112_q0[437:435]}};

assign tmp_480_fu_6567_p4 = {{mlp_inst_m2_weight_arr_112_q0[443:441]}};

assign tmp_481_fu_6595_p4 = {{mlp_inst_m2_weight_arr_112_q0[446:444]}};

assign tmp_483_fu_6633_p4 = {{mlp_inst_m2_weight_arr_112_q0[452:450]}};

assign tmp_484_fu_6661_p4 = {{mlp_inst_m2_weight_arr_112_q0[455:453]}};

assign tmp_485_fu_6689_p4 = {{mlp_inst_m2_weight_arr_112_q0[458:456]}};

assign tmp_486_fu_6717_p4 = {{mlp_inst_m2_weight_arr_112_q0[461:459]}};

assign tmp_487_fu_6745_p4 = {{mlp_inst_m2_weight_arr_112_q0[464:462]}};

assign tmp_488_fu_6773_p4 = {{mlp_inst_m2_weight_arr_112_q0[467:465]}};

assign tmp_489_fu_6801_p4 = {{mlp_inst_m2_weight_arr_112_q0[470:468]}};

assign tmp_490_fu_6829_p4 = {{mlp_inst_m2_weight_arr_112_q0[473:471]}};

assign tmp_491_fu_6857_p4 = {{mlp_inst_m2_weight_arr_112_q0[476:474]}};

assign tmp_493_fu_6895_p4 = {{mlp_inst_m2_weight_arr_112_q0[482:480]}};

assign tmp_494_fu_6923_p4 = {{mlp_inst_m2_weight_arr_112_q0[485:483]}};

assign tmp_495_fu_6951_p4 = {{mlp_inst_m2_weight_arr_112_q0[488:486]}};

assign tmp_496_fu_6979_p4 = {{mlp_inst_m2_weight_arr_112_q0[491:489]}};

assign tmp_500_fu_7037_p4 = {{mlp_inst_m2_weight_arr_112_q0[503:501]}};

assign tmp_501_fu_7065_p4 = {{mlp_inst_m2_weight_arr_112_q0[506:504]}};

assign tmp_502_fu_7093_p4 = {{mlp_inst_m2_weight_arr_112_q0[509:507]}};

assign tmp_504_fu_7131_p4 = {{mlp_inst_m2_weight_arr_112_q0[515:513]}};

assign tmp_505_fu_7159_p4 = {{mlp_inst_m2_weight_arr_112_q0[518:516]}};

assign tmp_507_fu_7197_p4 = {{mlp_inst_m2_weight_arr_112_q0[524:522]}};

assign tmp_508_fu_7225_p4 = {{mlp_inst_m2_weight_arr_112_q0[527:525]}};

assign tmp_509_fu_7253_p4 = {{mlp_inst_m2_weight_arr_112_q0[530:528]}};

assign tmp_510_fu_7281_p4 = {{mlp_inst_m2_weight_arr_112_q0[533:531]}};

assign tmp_511_fu_7309_p4 = {{mlp_inst_m2_weight_arr_112_q0[536:534]}};

assign tmp_512_fu_7337_p4 = {{mlp_inst_m2_weight_arr_112_q0[539:537]}};

assign tmp_513_fu_7365_p4 = {{mlp_inst_m2_weight_arr_112_q0[542:540]}};

assign tmp_514_fu_7393_p4 = {{mlp_inst_m2_weight_arr_112_q0[545:543]}};

assign tmp_515_fu_7421_p4 = {{mlp_inst_m2_weight_arr_112_q0[548:546]}};

assign tmp_517_fu_7459_p4 = {{mlp_inst_m2_weight_arr_112_q0[554:552]}};

assign tmp_518_fu_7487_p4 = {{mlp_inst_m2_weight_arr_112_q0[557:555]}};

assign tmp_519_fu_7515_p4 = {{mlp_inst_m2_weight_arr_112_q0[560:558]}};

assign tmp_520_fu_7543_p4 = {{mlp_inst_m2_weight_arr_112_q0[563:561]}};

assign tmp_524_fu_7601_p4 = {{mlp_inst_m2_weight_arr_112_q0[575:573]}};

assign tmp_525_fu_7629_p4 = {{mlp_inst_m2_weight_arr_112_q0[578:576]}};

assign tmp_526_fu_7657_p4 = {{mlp_inst_m2_weight_arr_112_q0[581:579]}};

assign tmp_528_fu_7695_p4 = {{mlp_inst_m2_weight_arr_112_q0[587:585]}};

assign tmp_529_fu_7723_p4 = {{mlp_inst_m2_weight_arr_112_q0[590:588]}};

assign tmp_531_fu_7761_p4 = {{mlp_inst_m2_weight_arr_112_q0[596:594]}};

assign tmp_532_fu_7789_p4 = {{mlp_inst_m2_weight_arr_112_q0[599:597]}};

assign tmp_533_fu_7817_p4 = {{mlp_inst_m2_weight_arr_112_q0[602:600]}};

assign tmp_534_fu_7845_p4 = {{mlp_inst_m2_weight_arr_112_q0[605:603]}};

assign tmp_535_fu_7873_p4 = {{mlp_inst_m2_weight_arr_112_q0[608:606]}};

assign tmp_536_fu_7901_p4 = {{mlp_inst_m2_weight_arr_112_q0[611:609]}};

assign tmp_537_fu_7929_p4 = {{mlp_inst_m2_weight_arr_112_q0[614:612]}};

assign tmp_538_fu_7957_p4 = {{mlp_inst_m2_weight_arr_112_q0[617:615]}};

assign tmp_539_fu_7985_p4 = {{mlp_inst_m2_weight_arr_112_q0[620:618]}};

assign tmp_541_fu_8023_p4 = {{mlp_inst_m2_weight_arr_112_q0[626:624]}};

assign tmp_542_fu_8051_p4 = {{mlp_inst_m2_weight_arr_112_q0[629:627]}};

assign tmp_543_fu_8079_p4 = {{mlp_inst_m2_weight_arr_112_q0[632:630]}};

assign tmp_544_fu_8107_p4 = {{mlp_inst_m2_weight_arr_112_q0[635:633]}};

assign tmp_548_fu_8165_p4 = {{mlp_inst_m2_weight_arr_112_q0[647:645]}};

assign tmp_549_fu_8193_p4 = {{mlp_inst_m2_weight_arr_112_q0[650:648]}};

assign tmp_550_fu_8221_p4 = {{mlp_inst_m2_weight_arr_112_q0[653:651]}};

assign tmp_552_fu_8259_p4 = {{mlp_inst_m2_weight_arr_112_q0[659:657]}};

assign tmp_553_fu_8287_p4 = {{mlp_inst_m2_weight_arr_112_q0[662:660]}};

assign tmp_555_fu_8325_p4 = {{mlp_inst_m2_weight_arr_112_q0[668:666]}};

assign tmp_556_fu_8353_p4 = {{mlp_inst_m2_weight_arr_112_q0[671:669]}};

assign tmp_557_fu_8381_p4 = {{mlp_inst_m2_weight_arr_112_q0[674:672]}};

assign tmp_558_fu_8409_p4 = {{mlp_inst_m2_weight_arr_112_q0[677:675]}};

assign tmp_559_fu_8437_p4 = {{mlp_inst_m2_weight_arr_112_q0[680:678]}};

assign tmp_560_fu_8465_p4 = {{mlp_inst_m2_weight_arr_112_q0[683:681]}};

assign tmp_561_fu_8493_p4 = {{mlp_inst_m2_weight_arr_112_q0[686:684]}};

assign tmp_562_fu_8521_p4 = {{mlp_inst_m2_weight_arr_112_q0[689:687]}};

assign tmp_563_fu_8549_p4 = {{mlp_inst_m2_weight_arr_112_q0[692:690]}};

assign tmp_565_fu_8587_p4 = {{mlp_inst_m2_weight_arr_112_q0[698:696]}};

assign tmp_566_fu_8615_p4 = {{mlp_inst_m2_weight_arr_112_q0[701:699]}};

assign tmp_567_fu_8643_p4 = {{mlp_inst_m2_weight_arr_112_q0[704:702]}};

assign tmp_568_fu_8671_p4 = {{mlp_inst_m2_weight_arr_112_q0[707:705]}};

assign tmp_572_fu_8729_p4 = {{mlp_inst_m2_weight_arr_112_q0[719:717]}};

assign tmp_573_fu_8757_p4 = {{mlp_inst_m2_weight_arr_112_q0[722:720]}};

assign tmp_574_fu_8785_p4 = {{mlp_inst_m2_weight_arr_112_q0[725:723]}};

assign tmp_576_fu_8823_p4 = {{mlp_inst_m2_weight_arr_112_q0[731:729]}};

assign tmp_577_fu_8851_p4 = {{mlp_inst_m2_weight_arr_112_q0[734:732]}};

assign tmp_579_fu_8889_p4 = {{mlp_inst_m2_weight_arr_112_q0[740:738]}};

assign tmp_580_fu_8917_p4 = {{mlp_inst_m2_weight_arr_112_q0[743:741]}};

assign tmp_581_fu_8945_p4 = {{mlp_inst_m2_weight_arr_112_q0[746:744]}};

assign tmp_582_fu_8973_p4 = {{mlp_inst_m2_weight_arr_112_q0[749:747]}};

assign tmp_583_fu_9001_p4 = {{mlp_inst_m2_weight_arr_112_q0[752:750]}};

assign tmp_584_fu_9029_p4 = {{mlp_inst_m2_weight_arr_112_q0[755:753]}};

assign tmp_586_fu_9067_p4 = {{mlp_inst_m2_weight_arr_112_q0[761:759]}};

assign tmp_587_fu_9095_p4 = {{mlp_inst_m2_weight_arr_112_q0[764:762]}};

assign tmp_589_fu_9133_p4 = {{mlp_inst_m2_weight_arr_112_q0[770:768]}};

assign tmp_590_fu_9161_p4 = {{mlp_inst_m2_weight_arr_112_q0[773:771]}};

assign tmp_592_fu_9199_p4 = {{mlp_inst_m2_weight_arr_112_q0[779:777]}};

assign tmp_596_fu_9257_p4 = {{mlp_inst_m2_weight_arr_112_q0[791:789]}};

assign tmp_597_fu_9285_p4 = {{mlp_inst_m2_weight_arr_112_q0[794:792]}};

assign tmp_598_fu_9313_p4 = {{mlp_inst_m2_weight_arr_112_q0[797:795]}};

assign tmp_600_fu_9351_p4 = {{mlp_inst_m2_weight_arr_112_q0[803:801]}};

assign tmp_601_fu_9379_p4 = {{mlp_inst_m2_weight_arr_112_q0[806:804]}};

assign tmp_603_fu_9417_p4 = {{mlp_inst_m2_weight_arr_112_q0[812:810]}};

assign tmp_604_fu_9445_p4 = {{mlp_inst_m2_weight_arr_112_q0[815:813]}};

assign tmp_605_fu_9473_p4 = {{mlp_inst_m2_weight_arr_112_q0[818:816]}};

assign tmp_606_fu_9501_p4 = {{mlp_inst_m2_weight_arr_112_q0[821:819]}};

assign tmp_607_fu_9529_p4 = {{mlp_inst_m2_weight_arr_112_q0[824:822]}};

assign tmp_608_fu_9557_p4 = {{mlp_inst_m2_weight_arr_112_q0[827:825]}};

assign tmp_610_fu_9595_p4 = {{mlp_inst_m2_weight_arr_112_q0[833:831]}};

assign tmp_611_fu_9623_p4 = {{mlp_inst_m2_weight_arr_112_q0[836:834]}};

assign tmp_613_fu_9661_p4 = {{mlp_inst_m2_weight_arr_112_q0[842:840]}};

assign tmp_614_fu_9689_p4 = {{mlp_inst_m2_weight_arr_112_q0[845:843]}};

assign tmp_616_fu_9727_p4 = {{mlp_inst_m2_weight_arr_112_q0[851:849]}};

assign tmp_620_fu_9785_p4 = {{mlp_inst_m2_weight_arr_112_q0[863:861]}};

assign tmp_s_fu_2861_p4 = {{mlp_inst_m2_weight_arr_112_q0[5:3]}};

assign trunc_ln121_fu_2738_p1 = select_ln121_3_fu_2730_p3[3:0];

assign trunc_ln131_fu_12805_p1 = mlp_inst_m2_bias_arr_113_q0[9:0];

assign trunc_ln137_fu_2817_p1 = cache_window_sm_dout[2:0];

assign trunc_ln151_fu_2835_p1 = mlp_inst_m2_weight_arr_112_q0[2:0];

assign xor_ln120_fu_2694_p2 = (icmp_ln121_reg_23397 ^ 1'd1);

assign zext_ln121_fu_2807_p1 = select_ln121_3_reg_23411_pp0_iter2_reg;

assign zext_ln137_fu_2831_p1 = lshr_ln_fu_2821_p4;

assign zext_ln151_10_fu_3201_p1 = tmp_297_fu_3191_p4;

assign zext_ln151_11_fu_3243_p1 = tmp_298_fu_3233_p4;

assign zext_ln151_12_fu_3285_p1 = tmp_299_fu_3275_p4;

assign zext_ln151_13_fu_3327_p1 = tmp_300_fu_3317_p4;

assign zext_ln151_14_fu_3369_p1 = tmp_301_fu_3359_p4;

assign zext_ln151_15_fu_13006_p1 = tmp_302_reg_23567;

assign zext_ln151_16_fu_3431_p1 = tmp_303_fu_3421_p4;

assign zext_ln151_17_fu_3473_p1 = tmp_304_fu_3463_p4;

assign zext_ln151_18_fu_3515_p1 = tmp_305_fu_3505_p4;

assign zext_ln151_19_fu_3557_p1 = tmp_306_fu_3547_p4;

assign zext_ln151_20_fu_13042_p1 = tmp_307_reg_23611;

assign zext_ln151_21_fu_13066_p1 = tmp_308_reg_23621;

assign zext_ln151_22_fu_13090_p1 = tmp_309_reg_23631;

assign zext_ln151_23_fu_3659_p1 = tmp_310_fu_3649_p4;

assign zext_ln151_24_fu_9823_p1 = tmp_311_fu_9813_p4;

assign zext_ln151_25_fu_9851_p1 = tmp_312_fu_9841_p4;

assign zext_ln151_26_fu_16843_p1 = tmp_313_reg_25079;

assign zext_ln151_27_fu_9889_p1 = tmp_314_fu_9879_p4;

assign zext_ln151_28_fu_9917_p1 = tmp_315_fu_9907_p4;

assign zext_ln151_29_fu_16870_p1 = tmp_316_reg_25094;

assign zext_ln151_2_fu_12925_p1 = tmp_289_reg_23478;

assign zext_ln151_30_fu_9955_p1 = tmp_317_fu_9945_p4;

assign zext_ln151_31_fu_9983_p1 = tmp_318_fu_9973_p4;

assign zext_ln151_32_fu_10011_p1 = tmp_319_fu_10001_p4;

assign zext_ln151_33_fu_10039_p1 = tmp_320_fu_10029_p4;

assign zext_ln151_34_fu_10067_p1 = tmp_321_fu_10057_p4;

assign zext_ln151_35_fu_10095_p1 = tmp_322_fu_10085_p4;

assign zext_ln151_36_fu_16909_p1 = tmp_323_reg_25129;

assign zext_ln151_37_fu_10133_p1 = tmp_324_fu_10123_p4;

assign zext_ln151_38_fu_10161_p1 = tmp_325_fu_10151_p4;

assign zext_ln151_39_fu_16934_p1 = tmp_326_reg_25144;

assign zext_ln151_3_fu_2929_p1 = tmp_290_fu_2919_p4;

assign zext_ln151_40_fu_10199_p1 = tmp_327_fu_10189_p4;

assign zext_ln151_41_fu_10227_p1 = tmp_328_fu_10217_p4;

assign zext_ln151_42_fu_16961_p1 = tmp_329_reg_25159;

assign zext_ln151_43_fu_10265_p1 = tmp_330_fu_10255_p4;

assign zext_ln151_44_fu_16983_p1 = tmp_331_reg_25169;

assign zext_ln151_45_fu_17004_p1 = tmp_332_reg_25174;

assign zext_ln151_46_fu_17025_p1 = tmp_333_reg_25179;

assign zext_ln151_47_fu_10323_p1 = tmp_334_fu_10313_p4;

assign zext_ln151_48_fu_2779_p1 = select_ln121_reg_23404;

assign zext_ln151_49_fu_2788_p1 = add_ln151_fu_2782_p2;

assign zext_ln151_4_fu_2971_p1 = tmp_291_fu_2961_p4;

assign zext_ln151_5_fu_12955_p1 = tmp_292_reg_23498;

assign zext_ln151_6_fu_3033_p1 = tmp_293_fu_3023_p4;

assign zext_ln151_7_fu_3075_p1 = tmp_294_fu_3065_p4;

assign zext_ln151_8_fu_3117_p1 = tmp_295_fu_3107_p4;

assign zext_ln151_9_fu_3159_p1 = tmp_296_fu_3149_p4;

assign zext_ln151_fu_2839_p1 = trunc_ln137_fu_2817_p1;

always @ (posedge ap_clk) begin
    zext_ln151_12_reg_23533[5:3] <= 3'b000;
    zext_ln151_18_reg_23582[5:3] <= 3'b000;
end

endmodule //MLP8_matmul_step2_mac
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_matmul_step2_mac_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        cache_window_sm_dout,
        cache_window_sm_num_data_valid,
        cache_window_sm_fifo_cap,
        cache_window_sm_empty_n,
        cache_window_sm_read,
        mac_sm_din,
        mac_sm_num_data_valid,
        mac_sm_fifo_cap,
        mac_sm_full_n,
        mac_sm_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [71:0] cache_window_sm_dout;
input  [2:0] cache_window_sm_num_data_valid;
input  [2:0] cache_window_sm_fifo_cap;
input   cache_window_sm_empty_n;
output   cache_window_sm_read;
output  [479:0] mac_sm_din;
input  [2:0] mac_sm_num_data_valid;
input  [2:0] mac_sm_fifo_cap;
input   mac_sm_full_n;
output   mac_sm_write;
output   start_out;
output   start_write;

reg ap_idle;
reg cache_window_sm_read;
reg mac_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln161_reg_24005;
reg   [0:0] icmp_ln161_reg_24005_pp0_iter4_reg;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln120_fu_2739_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [4:0] mlp_inst_m1_bias_arr_111_address0;
reg    mlp_inst_m1_bias_arr_111_ce0;
wire   [237:0] mlp_inst_m1_bias_arr_111_q0;
wire   [8:0] mlp_inst_m1_weight_arr_110_address0;
reg    mlp_inst_m1_weight_arr_110_ce0;
wire   [863:0] mlp_inst_m1_weight_arr_110_q0;
reg    cache_window_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    mac_sm_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln121_fu_2745_p2;
reg   [0:0] icmp_ln121_reg_23799;
wire   [4:0] select_ln121_fu_2836_p3;
reg   [4:0] select_ln121_reg_23806;
wire   [5:0] select_ln121_1_fu_2844_p3;
reg   [5:0] select_ln121_1_reg_23813;
wire   [4:0] trunc_ln121_fu_2852_p1;
reg   [4:0] trunc_ln121_reg_23818;
wire   [0:0] icmp_ln126_fu_2915_p2;
reg   [0:0] icmp_ln126_reg_23833;
reg   [0:0] icmp_ln126_reg_23833_pp0_iter3_reg;
wire   [2:0] trunc_ln137_fu_2922_p1;
reg   [2:0] trunc_ln137_reg_23885;
reg   [2:0] trunc_ln137_s_reg_23890;
reg   [2:0] trunc_ln137_1_reg_23895;
reg   [2:0] trunc_ln137_2_reg_23900;
reg   [2:0] trunc_ln137_3_reg_23905;
reg   [2:0] trunc_ln137_4_reg_23910;
reg   [2:0] trunc_ln137_5_reg_23915;
reg   [2:0] trunc_ln137_6_reg_23920;
reg   [2:0] trunc_ln137_7_reg_23925;
reg   [2:0] trunc_ln137_8_reg_23930;
reg   [2:0] trunc_ln137_9_reg_23935;
reg   [2:0] trunc_ln137_10_reg_23940;
reg   [2:0] trunc_ln137_11_reg_23945;
reg   [2:0] trunc_ln137_12_reg_23950;
reg   [2:0] trunc_ln137_13_reg_23955;
reg   [2:0] trunc_ln137_14_reg_23960;
reg   [2:0] trunc_ln137_15_reg_23965;
reg   [2:0] trunc_ln137_16_reg_23970;
reg   [2:0] trunc_ln137_17_reg_23975;
reg   [2:0] trunc_ln137_18_reg_23980;
reg   [2:0] trunc_ln137_19_reg_23985;
reg   [2:0] trunc_ln137_20_reg_23990;
reg   [2:0] trunc_ln137_21_reg_23995;
reg   [2:0] trunc_ln137_22_reg_24000;
wire   [0:0] icmp_ln161_fu_3160_p2;
reg   [0:0] icmp_ln161_reg_24005_pp0_iter3_reg;
wire   [9:0] trunc_ln131_fu_3165_p1;
reg   [9:0] trunc_ln131_reg_24009;
reg   [9:0] tmp_s_reg_24015;
reg   [9:0] tmp_2_reg_24021;
reg   [9:0] tmp_3_reg_24027;
reg   [9:0] tmp_4_reg_24033;
reg   [9:0] tmp_5_reg_24039;
reg   [9:0] tmp_6_reg_24045;
reg   [9:0] tmp_7_reg_24051;
reg   [9:0] tmp_8_reg_24057;
reg   [9:0] tmp_9_reg_24063;
reg   [9:0] tmp_10_reg_24069;
reg   [9:0] tmp_11_reg_24075;
reg   [9:0] tmp_12_reg_24081;
reg   [9:0] tmp_13_reg_24087;
reg   [9:0] tmp_14_reg_24093;
reg   [9:0] tmp_15_reg_24099;
reg   [9:0] tmp_16_reg_24105;
reg   [9:0] tmp_17_reg_24111;
reg   [9:0] tmp_18_reg_24117;
reg   [9:0] tmp_19_reg_24123;
reg   [9:0] tmp_20_reg_24129;
reg   [9:0] tmp_21_reg_24135;
reg   [9:0] tmp_22_reg_24141;
reg   [7:0] tmp_23_reg_24147;
wire   [6:0] add_ln153_fu_3813_p2;
reg   [6:0] add_ln153_reg_24152;
wire   [6:0] add_ln153_3_fu_3825_p2;
reg   [6:0] add_ln153_3_reg_24157;
wire   [6:0] add_ln153_6_fu_3837_p2;
reg   [6:0] add_ln153_6_reg_24162;
wire   [6:0] add_ln153_7_fu_3843_p2;
reg   [6:0] add_ln153_7_reg_24167;
wire   [6:0] add_ln153_8_fu_3849_p2;
reg   [6:0] add_ln153_8_reg_24172;
wire   [6:0] add_ln153_12_fu_4239_p2;
reg   [6:0] add_ln153_12_reg_24177;
wire   [6:0] add_ln153_15_fu_4251_p2;
reg   [6:0] add_ln153_15_reg_24182;
wire   [6:0] add_ln153_18_fu_4263_p2;
reg   [6:0] add_ln153_18_reg_24187;
wire   [6:0] add_ln153_19_fu_4269_p2;
reg   [6:0] add_ln153_19_reg_24192;
wire   [6:0] add_ln153_20_fu_4275_p2;
reg   [6:0] add_ln153_20_reg_24197;
wire   [6:0] add_ln153_24_fu_4665_p2;
reg   [6:0] add_ln153_24_reg_24202;
wire   [6:0] add_ln153_27_fu_4677_p2;
reg   [6:0] add_ln153_27_reg_24207;
wire   [6:0] add_ln153_30_fu_4689_p2;
reg   [6:0] add_ln153_30_reg_24212;
wire   [6:0] add_ln153_31_fu_4695_p2;
reg   [6:0] add_ln153_31_reg_24217;
wire   [6:0] add_ln153_32_fu_4701_p2;
reg   [6:0] add_ln153_32_reg_24222;
wire   [6:0] add_ln153_36_fu_5091_p2;
reg   [6:0] add_ln153_36_reg_24227;
wire   [6:0] add_ln153_39_fu_5103_p2;
reg   [6:0] add_ln153_39_reg_24232;
wire   [6:0] add_ln153_42_fu_5115_p2;
reg   [6:0] add_ln153_42_reg_24237;
wire   [6:0] add_ln153_43_fu_5121_p2;
reg   [6:0] add_ln153_43_reg_24242;
wire   [6:0] add_ln153_44_fu_5127_p2;
reg   [6:0] add_ln153_44_reg_24247;
wire   [6:0] add_ln153_48_fu_5517_p2;
reg   [6:0] add_ln153_48_reg_24252;
wire   [6:0] add_ln153_51_fu_5529_p2;
reg   [6:0] add_ln153_51_reg_24257;
wire   [6:0] add_ln153_54_fu_5541_p2;
reg   [6:0] add_ln153_54_reg_24262;
wire   [6:0] add_ln153_55_fu_5547_p2;
reg   [6:0] add_ln153_55_reg_24267;
wire   [6:0] add_ln153_56_fu_5553_p2;
reg   [6:0] add_ln153_56_reg_24272;
wire   [6:0] add_ln153_60_fu_5943_p2;
reg   [6:0] add_ln153_60_reg_24277;
wire   [6:0] add_ln153_63_fu_5955_p2;
reg   [6:0] add_ln153_63_reg_24282;
wire   [6:0] add_ln153_66_fu_5967_p2;
reg   [6:0] add_ln153_66_reg_24287;
wire   [6:0] add_ln153_67_fu_5973_p2;
reg   [6:0] add_ln153_67_reg_24292;
wire   [6:0] add_ln153_68_fu_5979_p2;
reg   [6:0] add_ln153_68_reg_24297;
wire   [6:0] add_ln153_72_fu_6369_p2;
reg   [6:0] add_ln153_72_reg_24302;
wire   [6:0] add_ln153_75_fu_6381_p2;
reg   [6:0] add_ln153_75_reg_24307;
wire   [6:0] add_ln153_78_fu_6393_p2;
reg   [6:0] add_ln153_78_reg_24312;
wire   [6:0] add_ln153_79_fu_6399_p2;
reg   [6:0] add_ln153_79_reg_24317;
wire   [6:0] add_ln153_80_fu_6405_p2;
reg   [6:0] add_ln153_80_reg_24322;
wire   [6:0] add_ln153_84_fu_6795_p2;
reg   [6:0] add_ln153_84_reg_24327;
wire   [6:0] add_ln153_87_fu_6807_p2;
reg   [6:0] add_ln153_87_reg_24332;
wire   [6:0] add_ln153_90_fu_6819_p2;
reg   [6:0] add_ln153_90_reg_24337;
wire   [6:0] add_ln153_91_fu_6825_p2;
reg   [6:0] add_ln153_91_reg_24342;
wire   [6:0] add_ln153_92_fu_6831_p2;
reg   [6:0] add_ln153_92_reg_24347;
wire   [6:0] add_ln153_96_fu_7221_p2;
reg   [6:0] add_ln153_96_reg_24352;
wire   [6:0] add_ln153_99_fu_7233_p2;
reg   [6:0] add_ln153_99_reg_24357;
wire   [6:0] add_ln153_102_fu_7245_p2;
reg   [6:0] add_ln153_102_reg_24362;
wire   [6:0] add_ln153_103_fu_7251_p2;
reg   [6:0] add_ln153_103_reg_24367;
wire   [6:0] add_ln153_104_fu_7257_p2;
reg   [6:0] add_ln153_104_reg_24372;
wire   [6:0] add_ln153_108_fu_7647_p2;
reg   [6:0] add_ln153_108_reg_24377;
wire   [6:0] add_ln153_111_fu_7659_p2;
reg   [6:0] add_ln153_111_reg_24382;
wire   [6:0] add_ln153_114_fu_7671_p2;
reg   [6:0] add_ln153_114_reg_24387;
wire   [6:0] add_ln153_115_fu_7677_p2;
reg   [6:0] add_ln153_115_reg_24392;
wire   [6:0] add_ln153_116_fu_7683_p2;
reg   [6:0] add_ln153_116_reg_24397;
wire  signed [5:0] mul_res_125_fu_7871_p2;
reg  signed [5:0] mul_res_125_reg_24402;
wire  signed [5:0] mul_res_127_fu_7931_p2;
reg  signed [5:0] mul_res_127_reg_24407;
wire  signed [5:0] mul_res_128_fu_7959_p2;
reg  signed [5:0] mul_res_128_reg_24412;
wire   [6:0] add_ln153_120_fu_8061_p2;
reg   [6:0] add_ln153_120_reg_24417;
wire   [6:0] add_ln153_126_fu_8073_p2;
reg   [6:0] add_ln153_126_reg_24422;
wire   [6:0] add_ln153_127_fu_8079_p2;
reg   [6:0] add_ln153_127_reg_24427;
wire   [6:0] add_ln153_128_fu_8085_p2;
reg   [6:0] add_ln153_128_reg_24432;
wire  signed [5:0] mul_res_137_fu_8273_p2;
reg  signed [5:0] mul_res_137_reg_24437;
wire  signed [5:0] mul_res_139_fu_8333_p2;
reg  signed [5:0] mul_res_139_reg_24442;
wire  signed [5:0] mul_res_140_fu_8361_p2;
reg  signed [5:0] mul_res_140_reg_24447;
wire   [6:0] add_ln153_132_fu_8463_p2;
reg   [6:0] add_ln153_132_reg_24452;
wire   [6:0] add_ln153_138_fu_8475_p2;
reg   [6:0] add_ln153_138_reg_24457;
wire   [6:0] add_ln153_139_fu_8481_p2;
reg   [6:0] add_ln153_139_reg_24462;
wire   [6:0] add_ln153_140_fu_8487_p2;
reg   [6:0] add_ln153_140_reg_24467;
wire  signed [5:0] mul_res_149_fu_8675_p2;
reg  signed [5:0] mul_res_149_reg_24472;
wire  signed [5:0] mul_res_151_fu_8735_p2;
reg  signed [5:0] mul_res_151_reg_24477;
wire  signed [5:0] mul_res_152_fu_8763_p2;
reg  signed [5:0] mul_res_152_reg_24482;
wire   [6:0] add_ln153_144_fu_8865_p2;
reg   [6:0] add_ln153_144_reg_24487;
wire   [6:0] add_ln153_150_fu_8877_p2;
reg   [6:0] add_ln153_150_reg_24492;
wire   [6:0] add_ln153_151_fu_8883_p2;
reg   [6:0] add_ln153_151_reg_24497;
wire   [6:0] add_ln153_152_fu_8889_p2;
reg   [6:0] add_ln153_152_reg_24502;
wire  signed [5:0] mul_res_161_fu_9077_p2;
reg  signed [5:0] mul_res_161_reg_24507;
wire  signed [5:0] mul_res_163_fu_9137_p2;
reg  signed [5:0] mul_res_163_reg_24512;
wire  signed [5:0] mul_res_164_fu_9165_p2;
reg  signed [5:0] mul_res_164_reg_24517;
wire   [6:0] add_ln153_156_fu_9267_p2;
reg   [6:0] add_ln153_156_reg_24522;
wire   [6:0] add_ln153_162_fu_9279_p2;
reg   [6:0] add_ln153_162_reg_24527;
wire   [6:0] add_ln153_163_fu_9285_p2;
reg   [6:0] add_ln153_163_reg_24532;
wire   [6:0] add_ln153_164_fu_9291_p2;
reg   [6:0] add_ln153_164_reg_24537;
wire  signed [5:0] mul_res_173_fu_9479_p2;
reg  signed [5:0] mul_res_173_reg_24542;
wire  signed [5:0] mul_res_175_fu_9539_p2;
reg  signed [5:0] mul_res_175_reg_24547;
wire  signed [5:0] mul_res_176_fu_9567_p2;
reg  signed [5:0] mul_res_176_reg_24552;
wire   [6:0] add_ln153_168_fu_9669_p2;
reg   [6:0] add_ln153_168_reg_24557;
wire   [6:0] add_ln153_174_fu_9681_p2;
reg   [6:0] add_ln153_174_reg_24562;
wire   [6:0] add_ln153_175_fu_9687_p2;
reg   [6:0] add_ln153_175_reg_24567;
wire   [6:0] add_ln153_176_fu_9693_p2;
reg   [6:0] add_ln153_176_reg_24572;
wire  signed [5:0] mul_res_185_fu_9881_p2;
reg  signed [5:0] mul_res_185_reg_24577;
wire  signed [5:0] mul_res_187_fu_9941_p2;
reg  signed [5:0] mul_res_187_reg_24582;
wire  signed [5:0] mul_res_188_fu_9969_p2;
reg  signed [5:0] mul_res_188_reg_24587;
wire   [6:0] add_ln153_180_fu_10071_p2;
reg   [6:0] add_ln153_180_reg_24592;
wire   [6:0] add_ln153_186_fu_10083_p2;
reg   [6:0] add_ln153_186_reg_24597;
wire   [6:0] add_ln153_187_fu_10089_p2;
reg   [6:0] add_ln153_187_reg_24602;
wire   [6:0] add_ln153_188_fu_10095_p2;
reg   [6:0] add_ln153_188_reg_24607;
wire  signed [5:0] mul_res_197_fu_10283_p2;
reg  signed [5:0] mul_res_197_reg_24612;
wire  signed [5:0] mul_res_199_fu_10343_p2;
reg  signed [5:0] mul_res_199_reg_24617;
wire  signed [5:0] mul_res_200_fu_10371_p2;
reg  signed [5:0] mul_res_200_reg_24622;
wire   [6:0] add_ln153_192_fu_10473_p2;
reg   [6:0] add_ln153_192_reg_24627;
wire   [6:0] add_ln153_198_fu_10485_p2;
reg   [6:0] add_ln153_198_reg_24632;
wire   [6:0] add_ln153_199_fu_10491_p2;
reg   [6:0] add_ln153_199_reg_24637;
wire   [6:0] add_ln153_200_fu_10497_p2;
reg   [6:0] add_ln153_200_reg_24642;
wire  signed [5:0] mul_res_209_fu_10685_p2;
reg  signed [5:0] mul_res_209_reg_24647;
wire  signed [5:0] mul_res_211_fu_10745_p2;
reg  signed [5:0] mul_res_211_reg_24652;
wire  signed [5:0] mul_res_212_fu_10773_p2;
reg  signed [5:0] mul_res_212_reg_24657;
wire   [6:0] add_ln153_204_fu_10875_p2;
reg   [6:0] add_ln153_204_reg_24662;
wire   [6:0] add_ln153_210_fu_10887_p2;
reg   [6:0] add_ln153_210_reg_24667;
wire   [6:0] add_ln153_211_fu_10893_p2;
reg   [6:0] add_ln153_211_reg_24672;
wire   [6:0] add_ln153_212_fu_10899_p2;
reg   [6:0] add_ln153_212_reg_24677;
wire  signed [5:0] mul_res_221_fu_11087_p2;
reg  signed [5:0] mul_res_221_reg_24682;
wire  signed [5:0] mul_res_223_fu_11147_p2;
reg  signed [5:0] mul_res_223_reg_24687;
wire  signed [5:0] mul_res_224_fu_11175_p2;
reg  signed [5:0] mul_res_224_reg_24692;
wire   [6:0] add_ln153_216_fu_11277_p2;
reg   [6:0] add_ln153_216_reg_24697;
wire   [6:0] add_ln153_222_fu_11289_p2;
reg   [6:0] add_ln153_222_reg_24702;
wire   [6:0] add_ln153_223_fu_11295_p2;
reg   [6:0] add_ln153_223_reg_24707;
wire   [6:0] add_ln153_224_fu_11301_p2;
reg   [6:0] add_ln153_224_reg_24712;
wire  signed [5:0] mul_res_233_fu_11489_p2;
reg  signed [5:0] mul_res_233_reg_24717;
wire  signed [5:0] mul_res_235_fu_11549_p2;
reg  signed [5:0] mul_res_235_reg_24722;
wire  signed [5:0] mul_res_236_fu_11577_p2;
reg  signed [5:0] mul_res_236_reg_24727;
wire   [6:0] add_ln153_228_fu_11679_p2;
reg   [6:0] add_ln153_228_reg_24732;
wire   [6:0] add_ln153_234_fu_11691_p2;
reg   [6:0] add_ln153_234_reg_24737;
wire   [6:0] add_ln153_235_fu_11697_p2;
reg   [6:0] add_ln153_235_reg_24742;
wire   [6:0] add_ln153_236_fu_11703_p2;
reg   [6:0] add_ln153_236_reg_24747;
wire  signed [5:0] mul_res_245_fu_11891_p2;
reg  signed [5:0] mul_res_245_reg_24752;
wire  signed [5:0] mul_res_247_fu_11951_p2;
reg  signed [5:0] mul_res_247_reg_24757;
wire  signed [5:0] mul_res_248_fu_11979_p2;
reg  signed [5:0] mul_res_248_reg_24762;
wire   [6:0] add_ln153_240_fu_12081_p2;
reg   [6:0] add_ln153_240_reg_24767;
wire   [6:0] add_ln153_246_fu_12093_p2;
reg   [6:0] add_ln153_246_reg_24772;
wire   [6:0] add_ln153_247_fu_12099_p2;
reg   [6:0] add_ln153_247_reg_24777;
wire   [6:0] add_ln153_248_fu_12105_p2;
reg   [6:0] add_ln153_248_reg_24782;
wire  signed [5:0] mul_res_257_fu_12293_p2;
reg  signed [5:0] mul_res_257_reg_24787;
wire  signed [5:0] mul_res_259_fu_12353_p2;
reg  signed [5:0] mul_res_259_reg_24792;
wire  signed [5:0] mul_res_260_fu_12381_p2;
reg  signed [5:0] mul_res_260_reg_24797;
wire   [6:0] add_ln153_252_fu_12483_p2;
reg   [6:0] add_ln153_252_reg_24802;
wire   [6:0] add_ln153_258_fu_12495_p2;
reg   [6:0] add_ln153_258_reg_24807;
wire   [6:0] add_ln153_259_fu_12501_p2;
reg   [6:0] add_ln153_259_reg_24812;
wire   [6:0] add_ln153_260_fu_12507_p2;
reg   [6:0] add_ln153_260_reg_24817;
wire  signed [5:0] mul_res_269_fu_12695_p2;
reg  signed [5:0] mul_res_269_reg_24822;
wire  signed [5:0] mul_res_271_fu_12755_p2;
reg  signed [5:0] mul_res_271_reg_24827;
wire  signed [5:0] mul_res_272_fu_12783_p2;
reg  signed [5:0] mul_res_272_reg_24832;
wire   [6:0] add_ln153_264_fu_12885_p2;
reg   [6:0] add_ln153_264_reg_24837;
wire   [6:0] add_ln153_270_fu_12897_p2;
reg   [6:0] add_ln153_270_reg_24842;
wire   [6:0] add_ln153_271_fu_12903_p2;
reg   [6:0] add_ln153_271_reg_24847;
wire   [6:0] add_ln153_272_fu_12909_p2;
reg   [6:0] add_ln153_272_reg_24852;
wire  signed [5:0] mul_res_281_fu_13097_p2;
reg  signed [5:0] mul_res_281_reg_24857;
wire  signed [5:0] mul_res_283_fu_13157_p2;
reg  signed [5:0] mul_res_283_reg_24862;
wire  signed [5:0] mul_res_284_fu_13185_p2;
reg  signed [5:0] mul_res_284_reg_24867;
wire   [6:0] add_ln153_276_fu_13287_p2;
reg   [6:0] add_ln153_276_reg_24872;
wire   [6:0] add_ln153_282_fu_13299_p2;
reg   [6:0] add_ln153_282_reg_24877;
wire   [6:0] add_ln153_283_fu_13305_p2;
reg   [6:0] add_ln153_283_reg_24882;
wire   [6:0] add_ln153_284_fu_13311_p2;
reg   [6:0] add_ln153_284_reg_24887;
wire  signed [5:0] mul_res_293_fu_13433_p2;
reg  signed [5:0] mul_res_293_reg_24892;
wire  signed [5:0] mul_res_295_fu_13471_p2;
reg  signed [5:0] mul_res_295_reg_24897;
wire  signed [5:0] mul_res_296_fu_13488_p2;
reg  signed [5:0] mul_res_296_reg_24902;
wire   [6:0] add_ln153_288_fu_13557_p2;
reg   [6:0] add_ln153_288_reg_24907;
wire   [6:0] add_ln153_294_fu_13569_p2;
reg   [6:0] add_ln153_294_reg_24912;
wire   [6:0] add_ln153_295_fu_13575_p2;
reg   [6:0] add_ln153_295_reg_24917;
wire   [6:0] add_ln153_296_fu_13581_p2;
reg   [6:0] add_ln153_296_reg_24922;
wire  signed [5:0] mul_res_305_fu_13685_p2;
reg  signed [5:0] mul_res_305_reg_24927;
wire  signed [5:0] mul_res_307_fu_13717_p2;
reg  signed [5:0] mul_res_307_reg_24932;
wire  signed [5:0] mul_res_308_fu_13731_p2;
reg  signed [5:0] mul_res_308_reg_24937;
wire   [6:0] add_ln153_300_fu_13791_p2;
reg   [6:0] add_ln153_300_reg_24942;
wire   [6:0] add_ln153_306_fu_13803_p2;
reg   [6:0] add_ln153_306_reg_24947;
wire   [6:0] add_ln153_307_fu_13809_p2;
reg   [6:0] add_ln153_307_reg_24952;
wire   [6:0] add_ln153_308_fu_13815_p2;
reg   [6:0] add_ln153_308_reg_24957;
wire  signed [5:0] mul_res_317_fu_13919_p2;
reg  signed [5:0] mul_res_317_reg_24962;
wire  signed [5:0] mul_res_319_fu_13951_p2;
reg  signed [5:0] mul_res_319_reg_24967;
wire  signed [5:0] mul_res_320_fu_13965_p2;
reg  signed [5:0] mul_res_320_reg_24972;
wire   [6:0] add_ln153_312_fu_14025_p2;
reg   [6:0] add_ln153_312_reg_24977;
wire   [6:0] add_ln153_318_fu_14037_p2;
reg   [6:0] add_ln153_318_reg_24982;
wire   [6:0] add_ln153_319_fu_14043_p2;
reg   [6:0] add_ln153_319_reg_24987;
wire   [6:0] add_ln153_320_fu_14049_p2;
reg   [6:0] add_ln153_320_reg_24992;
wire  signed [5:0] mul_res_329_fu_14153_p2;
reg  signed [5:0] mul_res_329_reg_24997;
wire  signed [5:0] mul_res_331_fu_14185_p2;
reg  signed [5:0] mul_res_331_reg_25002;
wire  signed [5:0] mul_res_332_fu_14199_p2;
reg  signed [5:0] mul_res_332_reg_25007;
wire   [6:0] add_ln153_324_fu_14259_p2;
reg   [6:0] add_ln153_324_reg_25012;
wire   [6:0] add_ln153_330_fu_14271_p2;
reg   [6:0] add_ln153_330_reg_25017;
wire   [6:0] add_ln153_331_fu_14277_p2;
reg   [6:0] add_ln153_331_reg_25022;
wire   [6:0] add_ln153_332_fu_14283_p2;
reg   [6:0] add_ln153_332_reg_25027;
wire  signed [5:0] mul_res_341_fu_14387_p2;
reg  signed [5:0] mul_res_341_reg_25032;
wire  signed [5:0] mul_res_343_fu_14419_p2;
reg  signed [5:0] mul_res_343_reg_25037;
wire  signed [5:0] mul_res_344_fu_14433_p2;
reg  signed [5:0] mul_res_344_reg_25042;
wire   [6:0] add_ln153_336_fu_14493_p2;
reg   [6:0] add_ln153_336_reg_25047;
wire   [6:0] add_ln153_342_fu_14505_p2;
reg   [6:0] add_ln153_342_reg_25052;
wire   [6:0] add_ln153_343_fu_14511_p2;
reg   [6:0] add_ln153_343_reg_25057;
wire   [6:0] add_ln153_344_fu_14517_p2;
reg   [6:0] add_ln153_344_reg_25062;
wire  signed [5:0] mul_res_353_fu_14621_p2;
reg  signed [5:0] mul_res_353_reg_25067;
wire  signed [5:0] mul_res_355_fu_14653_p2;
reg  signed [5:0] mul_res_355_reg_25072;
wire  signed [5:0] mul_res_356_fu_14667_p2;
reg  signed [5:0] mul_res_356_reg_25077;
wire   [6:0] add_ln153_348_fu_14727_p2;
reg   [6:0] add_ln153_348_reg_25082;
wire   [6:0] add_ln153_354_fu_14739_p2;
reg   [6:0] add_ln153_354_reg_25087;
wire   [6:0] add_ln153_355_fu_14745_p2;
reg   [6:0] add_ln153_355_reg_25092;
wire   [6:0] add_ln153_356_fu_14751_p2;
reg   [6:0] add_ln153_356_reg_25097;
wire  signed [5:0] mul_res_365_fu_14855_p2;
reg  signed [5:0] mul_res_365_reg_25102;
wire  signed [5:0] mul_res_367_fu_14887_p2;
reg  signed [5:0] mul_res_367_reg_25107;
wire  signed [5:0] mul_res_368_fu_14901_p2;
reg  signed [5:0] mul_res_368_reg_25112;
wire   [6:0] add_ln153_360_fu_14961_p2;
reg   [6:0] add_ln153_360_reg_25117;
wire   [6:0] add_ln153_366_fu_14973_p2;
reg   [6:0] add_ln153_366_reg_25122;
wire   [6:0] add_ln153_367_fu_14979_p2;
reg   [6:0] add_ln153_367_reg_25127;
wire   [6:0] add_ln153_368_fu_14985_p2;
reg   [6:0] add_ln153_368_reg_25132;
wire  signed [5:0] mul_res_377_fu_15089_p2;
reg  signed [5:0] mul_res_377_reg_25137;
wire  signed [5:0] mul_res_379_fu_15121_p2;
reg  signed [5:0] mul_res_379_reg_25142;
wire  signed [5:0] mul_res_380_fu_15135_p2;
reg  signed [5:0] mul_res_380_reg_25147;
wire   [6:0] add_ln153_372_fu_15195_p2;
reg   [6:0] add_ln153_372_reg_25152;
wire   [6:0] add_ln153_378_fu_15207_p2;
reg   [6:0] add_ln153_378_reg_25157;
wire   [6:0] add_ln153_379_fu_15213_p2;
reg   [6:0] add_ln153_379_reg_25162;
wire   [6:0] add_ln153_380_fu_15219_p2;
reg   [6:0] add_ln153_380_reg_25167;
wire  signed [5:0] mul_res_389_fu_15323_p2;
reg  signed [5:0] mul_res_389_reg_25172;
wire  signed [5:0] mul_res_391_fu_15355_p2;
reg  signed [5:0] mul_res_391_reg_25177;
wire  signed [5:0] mul_res_392_fu_15369_p2;
reg  signed [5:0] mul_res_392_reg_25182;
wire   [6:0] add_ln153_384_fu_15429_p2;
reg   [6:0] add_ln153_384_reg_25187;
wire   [6:0] add_ln153_390_fu_15441_p2;
reg   [6:0] add_ln153_390_reg_25192;
wire   [6:0] add_ln153_391_fu_15447_p2;
reg   [6:0] add_ln153_391_reg_25197;
wire   [6:0] add_ln153_392_fu_15453_p2;
reg   [6:0] add_ln153_392_reg_25202;
wire  signed [5:0] mul_res_401_fu_15557_p2;
reg  signed [5:0] mul_res_401_reg_25207;
wire  signed [5:0] mul_res_403_fu_15589_p2;
reg  signed [5:0] mul_res_403_reg_25212;
wire  signed [5:0] mul_res_404_fu_15603_p2;
reg  signed [5:0] mul_res_404_reg_25217;
wire   [6:0] add_ln153_396_fu_15663_p2;
reg   [6:0] add_ln153_396_reg_25222;
wire   [6:0] add_ln153_402_fu_15675_p2;
reg   [6:0] add_ln153_402_reg_25227;
wire   [6:0] add_ln153_403_fu_15681_p2;
reg   [6:0] add_ln153_403_reg_25232;
wire   [6:0] add_ln153_404_fu_15687_p2;
reg   [6:0] add_ln153_404_reg_25237;
wire  signed [5:0] mul_res_413_fu_15791_p2;
reg  signed [5:0] mul_res_413_reg_25242;
wire  signed [5:0] mul_res_415_fu_15823_p2;
reg  signed [5:0] mul_res_415_reg_25247;
wire  signed [5:0] mul_res_416_fu_15837_p2;
reg  signed [5:0] mul_res_416_reg_25252;
wire   [6:0] add_ln153_408_fu_15897_p2;
reg   [6:0] add_ln153_408_reg_25257;
wire   [6:0] add_ln153_414_fu_15909_p2;
reg   [6:0] add_ln153_414_reg_25262;
wire   [6:0] add_ln153_415_fu_15915_p2;
reg   [6:0] add_ln153_415_reg_25267;
wire   [6:0] add_ln153_416_fu_15921_p2;
reg   [6:0] add_ln153_416_reg_25272;
wire  signed [5:0] mul_res_425_fu_16025_p2;
reg  signed [5:0] mul_res_425_reg_25277;
wire  signed [5:0] mul_res_427_fu_16057_p2;
reg  signed [5:0] mul_res_427_reg_25282;
wire  signed [5:0] mul_res_428_fu_16071_p2;
reg  signed [5:0] mul_res_428_reg_25287;
wire   [6:0] add_ln153_420_fu_16131_p2;
reg   [6:0] add_ln153_420_reg_25292;
wire   [6:0] add_ln153_426_fu_16143_p2;
reg   [6:0] add_ln153_426_reg_25297;
wire   [6:0] add_ln153_427_fu_16149_p2;
reg   [6:0] add_ln153_427_reg_25302;
wire   [6:0] add_ln153_428_fu_16155_p2;
reg   [6:0] add_ln153_428_reg_25307;
wire  signed [5:0] mul_res_437_fu_16259_p2;
reg  signed [5:0] mul_res_437_reg_25312;
wire  signed [5:0] mul_res_439_fu_16291_p2;
reg  signed [5:0] mul_res_439_reg_25317;
wire  signed [5:0] mul_res_440_fu_16305_p2;
reg  signed [5:0] mul_res_440_reg_25322;
wire   [6:0] add_ln153_432_fu_16365_p2;
reg   [6:0] add_ln153_432_reg_25327;
wire   [6:0] add_ln153_438_fu_16377_p2;
reg   [6:0] add_ln153_438_reg_25332;
wire   [6:0] add_ln153_439_fu_16383_p2;
reg   [6:0] add_ln153_439_reg_25337;
wire   [6:0] add_ln153_440_fu_16389_p2;
reg   [6:0] add_ln153_440_reg_25342;
wire  signed [5:0] mul_res_449_fu_16493_p2;
reg  signed [5:0] mul_res_449_reg_25347;
wire  signed [5:0] mul_res_451_fu_16525_p2;
reg  signed [5:0] mul_res_451_reg_25352;
wire  signed [5:0] mul_res_452_fu_16539_p2;
reg  signed [5:0] mul_res_452_reg_25357;
wire   [6:0] add_ln153_444_fu_16599_p2;
reg   [6:0] add_ln153_444_reg_25362;
wire   [6:0] add_ln153_450_fu_16611_p2;
reg   [6:0] add_ln153_450_reg_25367;
wire   [6:0] add_ln153_451_fu_16617_p2;
reg   [6:0] add_ln153_451_reg_25372;
wire   [6:0] add_ln153_452_fu_16623_p2;
reg   [6:0] add_ln153_452_reg_25377;
wire  signed [5:0] mul_res_461_fu_16727_p2;
reg  signed [5:0] mul_res_461_reg_25382;
wire  signed [5:0] mul_res_463_fu_16759_p2;
reg  signed [5:0] mul_res_463_reg_25387;
wire  signed [5:0] mul_res_464_fu_16773_p2;
reg  signed [5:0] mul_res_464_reg_25392;
wire   [6:0] add_ln153_456_fu_16833_p2;
reg   [6:0] add_ln153_456_reg_25397;
wire   [6:0] add_ln153_462_fu_16845_p2;
reg   [6:0] add_ln153_462_reg_25402;
wire   [6:0] add_ln153_463_fu_16851_p2;
reg   [6:0] add_ln153_463_reg_25407;
wire   [6:0] add_ln153_464_fu_16857_p2;
reg   [6:0] add_ln153_464_reg_25412;
wire  signed [5:0] mul_res_473_fu_16961_p2;
reg  signed [5:0] mul_res_473_reg_25417;
wire  signed [5:0] mul_res_475_fu_16993_p2;
reg  signed [5:0] mul_res_475_reg_25422;
wire  signed [5:0] mul_res_476_fu_17007_p2;
reg  signed [5:0] mul_res_476_reg_25427;
wire   [6:0] add_ln153_468_fu_17067_p2;
reg   [6:0] add_ln153_468_reg_25432;
wire   [6:0] add_ln153_474_fu_17079_p2;
reg   [6:0] add_ln153_474_reg_25437;
wire   [6:0] add_ln153_475_fu_17085_p2;
reg   [6:0] add_ln153_475_reg_25442;
wire   [6:0] add_ln153_476_fu_17091_p2;
reg   [6:0] add_ln153_476_reg_25447;
wire  signed [5:0] mul_res_485_fu_17195_p2;
reg  signed [5:0] mul_res_485_reg_25452;
wire  signed [5:0] mul_res_487_fu_17227_p2;
reg  signed [5:0] mul_res_487_reg_25457;
wire  signed [5:0] mul_res_488_fu_17241_p2;
reg  signed [5:0] mul_res_488_reg_25462;
wire   [6:0] add_ln153_480_fu_17301_p2;
reg   [6:0] add_ln153_480_reg_25467;
wire   [6:0] add_ln153_486_fu_17313_p2;
reg   [6:0] add_ln153_486_reg_25472;
wire   [6:0] add_ln153_487_fu_17319_p2;
reg   [6:0] add_ln153_487_reg_25477;
wire   [6:0] add_ln153_488_fu_17325_p2;
reg   [6:0] add_ln153_488_reg_25482;
wire  signed [5:0] mul_res_497_fu_17429_p2;
reg  signed [5:0] mul_res_497_reg_25487;
wire  signed [5:0] mul_res_499_fu_17461_p2;
reg  signed [5:0] mul_res_499_reg_25492;
wire  signed [5:0] mul_res_500_fu_17475_p2;
reg  signed [5:0] mul_res_500_reg_25497;
wire   [6:0] add_ln153_492_fu_17535_p2;
reg   [6:0] add_ln153_492_reg_25502;
wire   [6:0] add_ln153_498_fu_17547_p2;
reg   [6:0] add_ln153_498_reg_25507;
wire   [6:0] add_ln153_499_fu_17553_p2;
reg   [6:0] add_ln153_499_reg_25512;
wire   [6:0] add_ln153_500_fu_17559_p2;
reg   [6:0] add_ln153_500_reg_25517;
wire  signed [5:0] mul_res_509_fu_17663_p2;
reg  signed [5:0] mul_res_509_reg_25522;
wire  signed [5:0] mul_res_511_fu_17695_p2;
reg  signed [5:0] mul_res_511_reg_25527;
wire  signed [5:0] mul_res_512_fu_17709_p2;
reg  signed [5:0] mul_res_512_reg_25532;
wire   [6:0] add_ln153_504_fu_17769_p2;
reg   [6:0] add_ln153_504_reg_25537;
wire   [6:0] add_ln153_510_fu_17781_p2;
reg   [6:0] add_ln153_510_reg_25542;
wire   [6:0] add_ln153_511_fu_17787_p2;
reg   [6:0] add_ln153_511_reg_25547;
wire   [6:0] add_ln153_512_fu_17793_p2;
reg   [6:0] add_ln153_512_reg_25552;
wire  signed [5:0] mul_res_521_fu_17897_p2;
reg  signed [5:0] mul_res_521_reg_25557;
wire  signed [5:0] mul_res_523_fu_17929_p2;
reg  signed [5:0] mul_res_523_reg_25562;
wire  signed [5:0] mul_res_524_fu_17943_p2;
reg  signed [5:0] mul_res_524_reg_25567;
wire   [6:0] add_ln153_516_fu_18003_p2;
reg   [6:0] add_ln153_516_reg_25572;
wire   [6:0] add_ln153_522_fu_18015_p2;
reg   [6:0] add_ln153_522_reg_25577;
wire   [6:0] add_ln153_523_fu_18021_p2;
reg   [6:0] add_ln153_523_reg_25582;
wire   [6:0] add_ln153_524_fu_18027_p2;
reg   [6:0] add_ln153_524_reg_25587;
wire  signed [5:0] mul_res_533_fu_18131_p2;
reg  signed [5:0] mul_res_533_reg_25592;
wire  signed [5:0] mul_res_535_fu_18163_p2;
reg  signed [5:0] mul_res_535_reg_25597;
wire  signed [5:0] mul_res_536_fu_18177_p2;
reg  signed [5:0] mul_res_536_reg_25602;
wire   [6:0] add_ln153_528_fu_18237_p2;
reg   [6:0] add_ln153_528_reg_25607;
wire   [6:0] add_ln153_534_fu_18249_p2;
reg   [6:0] add_ln153_534_reg_25612;
wire   [6:0] add_ln153_535_fu_18255_p2;
reg   [6:0] add_ln153_535_reg_25617;
wire   [6:0] add_ln153_536_fu_18261_p2;
reg   [6:0] add_ln153_536_reg_25622;
wire  signed [5:0] mul_res_545_fu_18365_p2;
reg  signed [5:0] mul_res_545_reg_25627;
wire  signed [5:0] mul_res_547_fu_18397_p2;
reg  signed [5:0] mul_res_547_reg_25632;
wire  signed [5:0] mul_res_548_fu_18411_p2;
reg  signed [5:0] mul_res_548_reg_25637;
wire   [6:0] add_ln153_540_fu_18471_p2;
reg   [6:0] add_ln153_540_reg_25642;
wire   [6:0] add_ln153_546_fu_18483_p2;
reg   [6:0] add_ln153_546_reg_25647;
wire   [6:0] add_ln153_547_fu_18489_p2;
reg   [6:0] add_ln153_547_reg_25652;
wire   [6:0] add_ln153_548_fu_18495_p2;
reg   [6:0] add_ln153_548_reg_25657;
wire  signed [5:0] mul_res_557_fu_18599_p2;
reg  signed [5:0] mul_res_557_reg_25662;
wire  signed [5:0] mul_res_559_fu_18631_p2;
reg  signed [5:0] mul_res_559_reg_25667;
wire  signed [5:0] mul_res_560_fu_18645_p2;
reg  signed [5:0] mul_res_560_reg_25672;
wire   [6:0] add_ln153_552_fu_18705_p2;
reg   [6:0] add_ln153_552_reg_25677;
wire   [6:0] add_ln153_558_fu_18717_p2;
reg   [6:0] add_ln153_558_reg_25682;
wire   [6:0] add_ln153_559_fu_18723_p2;
reg   [6:0] add_ln153_559_reg_25687;
wire   [6:0] add_ln153_560_fu_18729_p2;
reg   [6:0] add_ln153_560_reg_25692;
wire  signed [5:0] mul_res_569_fu_18833_p2;
reg  signed [5:0] mul_res_569_reg_25697;
wire  signed [5:0] mul_res_571_fu_18865_p2;
reg  signed [5:0] mul_res_571_reg_25702;
wire  signed [5:0] mul_res_572_fu_18879_p2;
reg  signed [5:0] mul_res_572_reg_25707;
wire   [6:0] add_ln153_564_fu_18939_p2;
reg   [6:0] add_ln153_564_reg_25712;
wire   [6:0] add_ln153_570_fu_18951_p2;
reg   [6:0] add_ln153_570_reg_25717;
wire   [6:0] add_ln153_571_fu_18957_p2;
reg   [6:0] add_ln153_571_reg_25722;
wire   [6:0] add_ln153_572_fu_18963_p2;
reg   [6:0] add_ln153_572_reg_25727;
wire   [9:0] add_ln153_11_fu_19593_p2;
reg   [9:0] add_ln153_11_reg_25732;
wire   [9:0] add_ln153_23_fu_19642_p2;
reg   [9:0] add_ln153_23_reg_25737;
wire   [9:0] add_ln153_35_fu_19691_p2;
reg   [9:0] add_ln153_35_reg_25742;
wire   [9:0] add_ln153_47_fu_19740_p2;
reg   [9:0] add_ln153_47_reg_25747;
wire   [9:0] add_ln153_59_fu_19789_p2;
reg   [9:0] add_ln153_59_reg_25752;
wire   [9:0] add_ln153_71_fu_19838_p2;
reg   [9:0] add_ln153_71_reg_25757;
wire   [9:0] add_ln153_83_fu_19887_p2;
reg   [9:0] add_ln153_83_reg_25762;
wire   [9:0] add_ln153_95_fu_19936_p2;
reg   [9:0] add_ln153_95_reg_25767;
wire   [9:0] add_ln153_107_fu_19985_p2;
reg   [9:0] add_ln153_107_reg_25772;
wire   [9:0] add_ln153_119_fu_20034_p2;
reg   [9:0] add_ln153_119_reg_25777;
wire   [9:0] add_ln153_131_fu_20105_p2;
reg   [9:0] add_ln153_131_reg_25782;
wire   [9:0] add_ln153_143_fu_20176_p2;
reg   [9:0] add_ln153_143_reg_25787;
wire   [9:0] add_ln153_155_fu_20247_p2;
reg   [9:0] add_ln153_155_reg_25792;
wire   [9:0] add_ln153_167_fu_20318_p2;
reg   [9:0] add_ln153_167_reg_25797;
wire   [9:0] add_ln153_179_fu_20389_p2;
reg   [9:0] add_ln153_179_reg_25802;
wire   [9:0] add_ln153_191_fu_20460_p2;
reg   [9:0] add_ln153_191_reg_25807;
wire   [9:0] add_ln153_203_fu_20531_p2;
reg   [9:0] add_ln153_203_reg_25812;
wire   [9:0] add_ln153_215_fu_20602_p2;
reg   [9:0] add_ln153_215_reg_25817;
wire   [9:0] add_ln153_227_fu_20673_p2;
reg   [9:0] add_ln153_227_reg_25822;
wire   [9:0] add_ln153_239_fu_20744_p2;
reg   [9:0] add_ln153_239_reg_25827;
wire   [9:0] add_ln153_251_fu_20815_p2;
reg   [9:0] add_ln153_251_reg_25832;
wire   [9:0] add_ln153_263_fu_20886_p2;
reg   [9:0] add_ln153_263_reg_25837;
wire   [9:0] add_ln153_275_fu_20957_p2;
reg   [9:0] add_ln153_275_reg_25842;
wire   [9:0] add_ln153_287_fu_21028_p2;
reg   [9:0] add_ln153_287_reg_25847;
wire   [9:0] add_ln153_299_fu_21099_p2;
reg   [9:0] add_ln153_299_reg_25852;
wire   [9:0] add_ln153_311_fu_21170_p2;
reg   [9:0] add_ln153_311_reg_25857;
wire   [9:0] add_ln153_323_fu_21241_p2;
reg   [9:0] add_ln153_323_reg_25862;
wire   [9:0] add_ln153_335_fu_21312_p2;
reg   [9:0] add_ln153_335_reg_25867;
wire   [9:0] add_ln153_347_fu_21383_p2;
reg   [9:0] add_ln153_347_reg_25872;
wire   [9:0] add_ln153_359_fu_21454_p2;
reg   [9:0] add_ln153_359_reg_25877;
wire   [9:0] add_ln153_371_fu_21525_p2;
reg   [9:0] add_ln153_371_reg_25882;
wire   [9:0] add_ln153_383_fu_21596_p2;
reg   [9:0] add_ln153_383_reg_25887;
wire   [9:0] add_ln153_395_fu_21667_p2;
reg   [9:0] add_ln153_395_reg_25892;
wire   [9:0] add_ln153_407_fu_21738_p2;
reg   [9:0] add_ln153_407_reg_25897;
wire   [9:0] add_ln153_419_fu_21809_p2;
reg   [9:0] add_ln153_419_reg_25902;
wire   [9:0] add_ln153_431_fu_21880_p2;
reg   [9:0] add_ln153_431_reg_25907;
wire   [9:0] add_ln153_443_fu_21951_p2;
reg   [9:0] add_ln153_443_reg_25912;
wire   [9:0] add_ln153_455_fu_22022_p2;
reg   [9:0] add_ln153_455_reg_25917;
wire   [9:0] add_ln153_467_fu_22093_p2;
reg   [9:0] add_ln153_467_reg_25922;
wire   [9:0] add_ln153_479_fu_22164_p2;
reg   [9:0] add_ln153_479_reg_25927;
wire   [9:0] add_ln153_491_fu_22235_p2;
reg   [9:0] add_ln153_491_reg_25932;
wire   [9:0] add_ln153_503_fu_22306_p2;
reg   [9:0] add_ln153_503_reg_25937;
wire   [9:0] add_ln153_515_fu_22377_p2;
reg   [9:0] add_ln153_515_reg_25942;
wire   [9:0] add_ln153_527_fu_22448_p2;
reg   [9:0] add_ln153_527_reg_25947;
wire   [9:0] add_ln153_539_fu_22519_p2;
reg   [9:0] add_ln153_539_reg_25952;
wire   [9:0] add_ln153_551_fu_22590_p2;
reg   [9:0] add_ln153_551_reg_25957;
wire   [9:0] add_ln153_563_fu_22661_p2;
reg   [9:0] add_ln153_563_reg_25962;
wire   [9:0] add_ln153_575_fu_22732_p2;
reg   [9:0] add_ln153_575_reg_25967;
wire   [63:0] zext_ln121_fu_2886_p1;
wire   [63:0] zext_ln151_1_fu_2910_p1;
reg   [4:0] cit_fu_2426;
wire   [4:0] add_ln122_fu_2856_p2;
wire    ap_loop_init;
reg    ap_loop_init_pp0_iter1_reg;
reg   [4:0] ap_sig_allocacmp_cit_load;
reg   [9:0] p_0_0_0725_fu_2430;
reg   [9:0] p_0_0_0_112727_fu_2434;
reg   [9:0] p_0_0_0_2729_fu_2438;
reg   [9:0] p_0_0_0_3731_fu_2442;
reg   [9:0] p_0_0_0_4733_fu_2446;
reg   [9:0] p_0_0_0_5735_fu_2450;
reg   [9:0] p_0_0_0_6737_fu_2454;
reg   [9:0] p_0_0_0_7739_fu_2458;
reg   [9:0] p_0_0_0_8741_fu_2462;
reg   [9:0] p_0_0_0_9743_fu_2466;
reg   [9:0] p_0_0_0_10745_fu_2470;
reg   [9:0] p_0_0_0_11747_fu_2474;
reg   [9:0] p_0_0_0_12749_fu_2478;
reg   [9:0] p_0_0_0_13751_fu_2482;
reg   [9:0] p_0_0_0_14753_fu_2486;
reg   [9:0] p_0_0_0_15755_fu_2490;
reg   [9:0] p_0_0_0_16757_fu_2494;
reg   [9:0] p_0_0_0_17759_fu_2498;
reg   [9:0] p_0_0_0_18761_fu_2502;
reg   [9:0] p_0_0_0_19763_fu_2506;
reg   [9:0] p_0_0_0_20765_fu_2510;
reg   [9:0] p_0_0_0_21767_fu_2514;
reg   [9:0] p_0_0_0_22769_fu_2518;
reg   [9:0] p_0_0_0_23771_fu_2522;
reg   [9:0] p_0_0_0773_fu_2526;
reg   [9:0] p_0_0_0_112775_fu_2530;
reg   [9:0] p_0_0_0_2777_fu_2534;
reg   [9:0] p_0_0_0_3779_fu_2538;
reg   [9:0] p_0_0_0_4781_fu_2542;
reg   [9:0] p_0_0_0_5783_fu_2546;
reg   [9:0] p_0_0_0_6785_fu_2550;
reg   [9:0] p_0_0_0_7787_fu_2554;
reg   [9:0] p_0_0_0_8789_fu_2558;
reg   [9:0] p_0_0_0_9791_fu_2562;
reg   [9:0] p_0_0_0_10793_fu_2566;
reg   [9:0] p_0_0_0_11795_fu_2570;
reg   [9:0] p_0_0_0_12797_fu_2574;
reg   [9:0] p_0_0_0_13799_fu_2578;
reg   [9:0] p_0_0_0_14801_fu_2582;
reg   [9:0] p_0_0_0_15803_fu_2586;
reg   [9:0] p_0_0_0_16805_fu_2590;
reg   [9:0] p_0_0_0_17807_fu_2594;
reg   [9:0] p_0_0_0_18809_fu_2598;
reg   [9:0] p_0_0_0_19811_fu_2602;
reg   [9:0] p_0_0_0_20813_fu_2606;
reg   [9:0] p_0_0_0_21815_fu_2610;
reg   [9:0] p_0_0_0_22817_fu_2614;
reg   [9:0] p_0_0_0_23819_fu_2618;
reg   [5:0] cot_fu_2622;
reg   [5:0] ap_sig_allocacmp_cot_load;
reg   [10:0] indvar_flatten_fu_2626;
wire   [10:0] select_ln121_2_fu_2757_p3;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] indvar_flatten107_fu_2630;
wire   [15:0] add_ln120_fu_2733_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten107_load;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] add_ln121_1_fu_2751_p2;
wire   [0:0] icmp_ln122_fu_2813_p2;
wire   [0:0] xor_ln120_fu_2808_p2;
wire   [5:0] select_ln120_fu_2801_p3;
wire   [0:0] and_ln120_fu_2819_p2;
wire   [0:0] or_ln121_fu_2831_p2;
wire   [5:0] add_ln121_fu_2825_p2;
wire   [8:0] tmp_1_fu_2890_p3;
wire   [8:0] zext_ln151_fu_2901_p1;
wire   [8:0] add_ln151_fu_2904_p2;
wire   [2:0] trunc_ln151_fu_3399_p1;
wire  signed [2:0] mul_res_fu_3418_p0;
wire  signed [5:0] sext_ln151_1_fu_3406_p1;
wire  signed [2:0] mul_res_fu_3418_p1;
wire  signed [5:0] sext_ln151_fu_3403_p1;
wire  signed [5:0] mul_res_fu_3418_p2;
wire   [2:0] tmp_24_fu_3428_p4;
wire  signed [2:0] mul_res_1_fu_3453_p0;
wire  signed [5:0] sext_ln151_4_fu_3441_p1;
wire  signed [2:0] mul_res_1_fu_3453_p1;
wire  signed [5:0] sext_ln151_3_fu_3438_p1;
wire  signed [5:0] mul_res_1_fu_3453_p2;
wire   [2:0] tmp_25_fu_3463_p4;
wire  signed [2:0] mul_res_2_fu_3488_p0;
wire  signed [5:0] sext_ln151_7_fu_3476_p1;
wire  signed [2:0] mul_res_2_fu_3488_p1;
wire  signed [5:0] sext_ln151_6_fu_3473_p1;
wire  signed [5:0] mul_res_2_fu_3488_p2;
wire   [2:0] tmp_26_fu_3498_p4;
wire  signed [2:0] mul_res_3_fu_3523_p0;
wire  signed [5:0] sext_ln151_10_fu_3511_p1;
wire  signed [2:0] mul_res_3_fu_3523_p1;
wire  signed [5:0] sext_ln151_9_fu_3508_p1;
wire  signed [5:0] mul_res_3_fu_3523_p2;
wire   [2:0] tmp_27_fu_3533_p4;
wire  signed [2:0] mul_res_4_fu_3558_p0;
wire  signed [5:0] sext_ln151_13_fu_3546_p1;
wire  signed [2:0] mul_res_4_fu_3558_p1;
wire  signed [5:0] sext_ln151_12_fu_3543_p1;
wire  signed [5:0] mul_res_4_fu_3558_p2;
wire   [2:0] tmp_28_fu_3568_p4;
wire  signed [2:0] mul_res_5_fu_3593_p0;
wire  signed [5:0] sext_ln151_16_fu_3581_p1;
wire  signed [2:0] mul_res_5_fu_3593_p1;
wire  signed [5:0] sext_ln151_15_fu_3578_p1;
wire  signed [5:0] mul_res_5_fu_3593_p2;
wire   [2:0] tmp_29_fu_3603_p4;
wire  signed [2:0] mul_res_6_fu_3628_p0;
wire  signed [5:0] sext_ln151_19_fu_3616_p1;
wire  signed [2:0] mul_res_6_fu_3628_p1;
wire  signed [5:0] sext_ln151_18_fu_3613_p1;
wire  signed [5:0] mul_res_6_fu_3628_p2;
wire   [2:0] tmp_30_fu_3638_p4;
wire  signed [2:0] mul_res_7_fu_3663_p0;
wire  signed [5:0] sext_ln151_22_fu_3651_p1;
wire  signed [2:0] mul_res_7_fu_3663_p1;
wire  signed [5:0] sext_ln151_21_fu_3648_p1;
wire  signed [5:0] mul_res_7_fu_3663_p2;
wire   [2:0] tmp_31_fu_3673_p4;
wire  signed [2:0] mul_res_8_fu_3698_p0;
wire  signed [5:0] sext_ln151_25_fu_3686_p1;
wire  signed [2:0] mul_res_8_fu_3698_p1;
wire  signed [5:0] sext_ln151_24_fu_3683_p1;
wire  signed [5:0] mul_res_8_fu_3698_p2;
wire   [2:0] tmp_32_fu_3708_p4;
wire  signed [2:0] mul_res_9_fu_3733_p0;
wire  signed [5:0] sext_ln151_28_fu_3721_p1;
wire  signed [2:0] mul_res_9_fu_3733_p1;
wire  signed [5:0] sext_ln151_27_fu_3718_p1;
wire  signed [5:0] mul_res_9_fu_3733_p2;
wire   [2:0] tmp_33_fu_3743_p4;
wire  signed [2:0] mul_res_10_fu_3768_p0;
wire  signed [5:0] sext_ln151_31_fu_3756_p1;
wire  signed [2:0] mul_res_10_fu_3768_p1;
wire  signed [5:0] sext_ln151_30_fu_3753_p1;
wire  signed [5:0] mul_res_10_fu_3768_p2;
wire   [2:0] tmp_34_fu_3778_p4;
wire  signed [2:0] mul_res_11_fu_3803_p0;
wire  signed [5:0] sext_ln151_34_fu_3791_p1;
wire  signed [2:0] mul_res_11_fu_3803_p1;
wire  signed [5:0] sext_ln151_33_fu_3788_p1;
wire  signed [5:0] mul_res_11_fu_3803_p2;
wire  signed [6:0] sext_ln151_29_fu_3739_p1;
wire  signed [6:0] sext_ln151_32_fu_3774_p1;
wire  signed [6:0] sext_ln151_17_fu_3599_p1;
wire  signed [6:0] sext_ln151_23_fu_3669_p1;
wire   [6:0] add_ln153_2_fu_3819_p2;
wire  signed [6:0] sext_ln151_26_fu_3704_p1;
wire  signed [6:0] sext_ln151_5_fu_3459_p1;
wire  signed [6:0] sext_ln151_2_fu_3424_p1;
wire   [6:0] add_ln153_5_fu_3831_p2;
wire  signed [6:0] sext_ln151_20_fu_3634_p1;
wire  signed [6:0] sext_ln151_8_fu_3494_p1;
wire  signed [6:0] sext_ln151_14_fu_3564_p1;
wire  signed [6:0] sext_ln151_11_fu_3529_p1;
wire  signed [6:0] sext_ln153_fu_3809_p1;
wire   [2:0] tmp_35_fu_3855_p4;
wire  signed [2:0] mul_res_12_fu_3877_p0;
wire  signed [5:0] sext_ln151_35_fu_3865_p1;
wire  signed [2:0] mul_res_12_fu_3877_p1;
wire  signed [5:0] mul_res_12_fu_3877_p2;
wire   [2:0] tmp_36_fu_3887_p4;
wire  signed [2:0] mul_res_13_fu_3909_p0;
wire  signed [5:0] sext_ln151_37_fu_3897_p1;
wire  signed [2:0] mul_res_13_fu_3909_p1;
wire  signed [5:0] mul_res_13_fu_3909_p2;
wire   [2:0] tmp_37_fu_3919_p4;
wire  signed [2:0] mul_res_14_fu_3941_p0;
wire  signed [5:0] sext_ln151_39_fu_3929_p1;
wire  signed [2:0] mul_res_14_fu_3941_p1;
wire  signed [5:0] mul_res_14_fu_3941_p2;
wire   [2:0] tmp_38_fu_3951_p4;
wire  signed [2:0] mul_res_15_fu_3973_p0;
wire  signed [5:0] sext_ln151_41_fu_3961_p1;
wire  signed [2:0] mul_res_15_fu_3973_p1;
wire  signed [5:0] mul_res_15_fu_3973_p2;
wire   [2:0] tmp_39_fu_3983_p4;
wire  signed [2:0] mul_res_16_fu_4005_p0;
wire  signed [5:0] sext_ln151_43_fu_3993_p1;
wire  signed [2:0] mul_res_16_fu_4005_p1;
wire  signed [5:0] mul_res_16_fu_4005_p2;
wire   [2:0] tmp_40_fu_4015_p4;
wire  signed [2:0] mul_res_17_fu_4037_p0;
wire  signed [5:0] sext_ln151_45_fu_4025_p1;
wire  signed [2:0] mul_res_17_fu_4037_p1;
wire  signed [5:0] mul_res_17_fu_4037_p2;
wire   [2:0] tmp_41_fu_4047_p4;
wire  signed [2:0] mul_res_18_fu_4069_p0;
wire  signed [5:0] sext_ln151_47_fu_4057_p1;
wire  signed [2:0] mul_res_18_fu_4069_p1;
wire  signed [5:0] mul_res_18_fu_4069_p2;
wire   [2:0] tmp_42_fu_4079_p4;
wire  signed [2:0] mul_res_19_fu_4101_p0;
wire  signed [5:0] sext_ln151_49_fu_4089_p1;
wire  signed [2:0] mul_res_19_fu_4101_p1;
wire  signed [5:0] mul_res_19_fu_4101_p2;
wire   [2:0] tmp_43_fu_4111_p4;
wire  signed [2:0] mul_res_20_fu_4133_p0;
wire  signed [5:0] sext_ln151_51_fu_4121_p1;
wire  signed [2:0] mul_res_20_fu_4133_p1;
wire  signed [5:0] mul_res_20_fu_4133_p2;
wire   [2:0] tmp_44_fu_4143_p4;
wire  signed [2:0] mul_res_21_fu_4165_p0;
wire  signed [5:0] sext_ln151_53_fu_4153_p1;
wire  signed [2:0] mul_res_21_fu_4165_p1;
wire  signed [5:0] mul_res_21_fu_4165_p2;
wire   [2:0] tmp_45_fu_4175_p4;
wire  signed [2:0] mul_res_22_fu_4197_p0;
wire  signed [5:0] sext_ln151_55_fu_4185_p1;
wire  signed [2:0] mul_res_22_fu_4197_p1;
wire  signed [5:0] mul_res_22_fu_4197_p2;
wire   [2:0] tmp_46_fu_4207_p4;
wire  signed [2:0] mul_res_23_fu_4229_p0;
wire  signed [5:0] sext_ln151_57_fu_4217_p1;
wire  signed [2:0] mul_res_23_fu_4229_p1;
wire  signed [5:0] mul_res_23_fu_4229_p2;
wire  signed [6:0] sext_ln151_54_fu_4171_p1;
wire  signed [6:0] sext_ln151_56_fu_4203_p1;
wire  signed [6:0] sext_ln151_46_fu_4043_p1;
wire  signed [6:0] sext_ln151_50_fu_4107_p1;
wire   [6:0] add_ln153_14_fu_4245_p2;
wire  signed [6:0] sext_ln151_52_fu_4139_p1;
wire  signed [6:0] sext_ln151_38_fu_3915_p1;
wire  signed [6:0] sext_ln151_36_fu_3883_p1;
wire   [6:0] add_ln153_17_fu_4257_p2;
wire  signed [6:0] sext_ln151_48_fu_4075_p1;
wire  signed [6:0] sext_ln151_40_fu_3947_p1;
wire  signed [6:0] sext_ln151_44_fu_4011_p1;
wire  signed [6:0] sext_ln151_42_fu_3979_p1;
wire  signed [6:0] sext_ln153_7_fu_4235_p1;
wire   [2:0] tmp_47_fu_4281_p4;
wire  signed [2:0] mul_res_24_fu_4303_p0;
wire  signed [5:0] sext_ln151_58_fu_4291_p1;
wire  signed [2:0] mul_res_24_fu_4303_p1;
wire  signed [5:0] mul_res_24_fu_4303_p2;
wire   [2:0] tmp_48_fu_4313_p4;
wire  signed [2:0] mul_res_25_fu_4335_p0;
wire  signed [5:0] sext_ln151_60_fu_4323_p1;
wire  signed [2:0] mul_res_25_fu_4335_p1;
wire  signed [5:0] mul_res_25_fu_4335_p2;
wire   [2:0] tmp_49_fu_4345_p4;
wire  signed [2:0] mul_res_26_fu_4367_p0;
wire  signed [5:0] sext_ln151_62_fu_4355_p1;
wire  signed [2:0] mul_res_26_fu_4367_p1;
wire  signed [5:0] mul_res_26_fu_4367_p2;
wire   [2:0] tmp_50_fu_4377_p4;
wire  signed [2:0] mul_res_27_fu_4399_p0;
wire  signed [5:0] sext_ln151_64_fu_4387_p1;
wire  signed [2:0] mul_res_27_fu_4399_p1;
wire  signed [5:0] mul_res_27_fu_4399_p2;
wire   [2:0] tmp_51_fu_4409_p4;
wire  signed [2:0] mul_res_28_fu_4431_p0;
wire  signed [5:0] sext_ln151_66_fu_4419_p1;
wire  signed [2:0] mul_res_28_fu_4431_p1;
wire  signed [5:0] mul_res_28_fu_4431_p2;
wire   [2:0] tmp_52_fu_4441_p4;
wire  signed [2:0] mul_res_29_fu_4463_p0;
wire  signed [5:0] sext_ln151_68_fu_4451_p1;
wire  signed [2:0] mul_res_29_fu_4463_p1;
wire  signed [5:0] mul_res_29_fu_4463_p2;
wire   [2:0] tmp_53_fu_4473_p4;
wire  signed [2:0] mul_res_30_fu_4495_p0;
wire  signed [5:0] sext_ln151_70_fu_4483_p1;
wire  signed [2:0] mul_res_30_fu_4495_p1;
wire  signed [5:0] mul_res_30_fu_4495_p2;
wire   [2:0] tmp_54_fu_4505_p4;
wire  signed [2:0] mul_res_31_fu_4527_p0;
wire  signed [5:0] sext_ln151_72_fu_4515_p1;
wire  signed [2:0] mul_res_31_fu_4527_p1;
wire  signed [5:0] mul_res_31_fu_4527_p2;
wire   [2:0] tmp_55_fu_4537_p4;
wire  signed [2:0] mul_res_32_fu_4559_p0;
wire  signed [5:0] sext_ln151_74_fu_4547_p1;
wire  signed [2:0] mul_res_32_fu_4559_p1;
wire  signed [5:0] mul_res_32_fu_4559_p2;
wire   [2:0] tmp_56_fu_4569_p4;
wire  signed [2:0] mul_res_33_fu_4591_p0;
wire  signed [5:0] sext_ln151_76_fu_4579_p1;
wire  signed [2:0] mul_res_33_fu_4591_p1;
wire  signed [5:0] mul_res_33_fu_4591_p2;
wire   [2:0] tmp_57_fu_4601_p4;
wire  signed [2:0] mul_res_34_fu_4623_p0;
wire  signed [5:0] sext_ln151_78_fu_4611_p1;
wire  signed [2:0] mul_res_34_fu_4623_p1;
wire  signed [5:0] mul_res_34_fu_4623_p2;
wire   [2:0] tmp_58_fu_4633_p4;
wire  signed [2:0] mul_res_35_fu_4655_p0;
wire  signed [5:0] sext_ln151_80_fu_4643_p1;
wire  signed [2:0] mul_res_35_fu_4655_p1;
wire  signed [5:0] mul_res_35_fu_4655_p2;
wire  signed [6:0] sext_ln151_77_fu_4597_p1;
wire  signed [6:0] sext_ln151_79_fu_4629_p1;
wire  signed [6:0] sext_ln151_69_fu_4469_p1;
wire  signed [6:0] sext_ln151_73_fu_4533_p1;
wire   [6:0] add_ln153_26_fu_4671_p2;
wire  signed [6:0] sext_ln151_75_fu_4565_p1;
wire  signed [6:0] sext_ln151_61_fu_4341_p1;
wire  signed [6:0] sext_ln151_59_fu_4309_p1;
wire   [6:0] add_ln153_29_fu_4683_p2;
wire  signed [6:0] sext_ln151_71_fu_4501_p1;
wire  signed [6:0] sext_ln151_63_fu_4373_p1;
wire  signed [6:0] sext_ln151_67_fu_4437_p1;
wire  signed [6:0] sext_ln151_65_fu_4405_p1;
wire  signed [6:0] sext_ln153_14_fu_4661_p1;
wire   [2:0] tmp_59_fu_4707_p4;
wire  signed [2:0] mul_res_36_fu_4729_p0;
wire  signed [5:0] sext_ln151_81_fu_4717_p1;
wire  signed [2:0] mul_res_36_fu_4729_p1;
wire  signed [5:0] mul_res_36_fu_4729_p2;
wire   [2:0] tmp_60_fu_4739_p4;
wire  signed [2:0] mul_res_37_fu_4761_p0;
wire  signed [5:0] sext_ln151_83_fu_4749_p1;
wire  signed [2:0] mul_res_37_fu_4761_p1;
wire  signed [5:0] mul_res_37_fu_4761_p2;
wire   [2:0] tmp_61_fu_4771_p4;
wire  signed [2:0] mul_res_38_fu_4793_p0;
wire  signed [5:0] sext_ln151_85_fu_4781_p1;
wire  signed [2:0] mul_res_38_fu_4793_p1;
wire  signed [5:0] mul_res_38_fu_4793_p2;
wire   [2:0] tmp_62_fu_4803_p4;
wire  signed [2:0] mul_res_39_fu_4825_p0;
wire  signed [5:0] sext_ln151_87_fu_4813_p1;
wire  signed [2:0] mul_res_39_fu_4825_p1;
wire  signed [5:0] mul_res_39_fu_4825_p2;
wire   [2:0] tmp_63_fu_4835_p4;
wire  signed [2:0] mul_res_40_fu_4857_p0;
wire  signed [5:0] sext_ln151_89_fu_4845_p1;
wire  signed [2:0] mul_res_40_fu_4857_p1;
wire  signed [5:0] mul_res_40_fu_4857_p2;
wire   [2:0] tmp_64_fu_4867_p4;
wire  signed [2:0] mul_res_41_fu_4889_p0;
wire  signed [5:0] sext_ln151_91_fu_4877_p1;
wire  signed [2:0] mul_res_41_fu_4889_p1;
wire  signed [5:0] mul_res_41_fu_4889_p2;
wire   [2:0] tmp_65_fu_4899_p4;
wire  signed [2:0] mul_res_42_fu_4921_p0;
wire  signed [5:0] sext_ln151_93_fu_4909_p1;
wire  signed [2:0] mul_res_42_fu_4921_p1;
wire  signed [5:0] mul_res_42_fu_4921_p2;
wire   [2:0] tmp_66_fu_4931_p4;
wire  signed [2:0] mul_res_43_fu_4953_p0;
wire  signed [5:0] sext_ln151_95_fu_4941_p1;
wire  signed [2:0] mul_res_43_fu_4953_p1;
wire  signed [5:0] mul_res_43_fu_4953_p2;
wire   [2:0] tmp_67_fu_4963_p4;
wire  signed [2:0] mul_res_44_fu_4985_p0;
wire  signed [5:0] sext_ln151_97_fu_4973_p1;
wire  signed [2:0] mul_res_44_fu_4985_p1;
wire  signed [5:0] mul_res_44_fu_4985_p2;
wire   [2:0] tmp_68_fu_4995_p4;
wire  signed [2:0] mul_res_45_fu_5017_p0;
wire  signed [5:0] sext_ln151_99_fu_5005_p1;
wire  signed [2:0] mul_res_45_fu_5017_p1;
wire  signed [5:0] mul_res_45_fu_5017_p2;
wire   [2:0] tmp_69_fu_5027_p4;
wire  signed [2:0] mul_res_46_fu_5049_p0;
wire  signed [5:0] sext_ln151_101_fu_5037_p1;
wire  signed [2:0] mul_res_46_fu_5049_p1;
wire  signed [5:0] mul_res_46_fu_5049_p2;
wire   [2:0] tmp_70_fu_5059_p4;
wire  signed [2:0] mul_res_47_fu_5081_p0;
wire  signed [5:0] sext_ln151_103_fu_5069_p1;
wire  signed [2:0] mul_res_47_fu_5081_p1;
wire  signed [5:0] mul_res_47_fu_5081_p2;
wire  signed [6:0] sext_ln151_100_fu_5023_p1;
wire  signed [6:0] sext_ln151_102_fu_5055_p1;
wire  signed [6:0] sext_ln151_92_fu_4895_p1;
wire  signed [6:0] sext_ln151_96_fu_4959_p1;
wire   [6:0] add_ln153_38_fu_5097_p2;
wire  signed [6:0] sext_ln151_98_fu_4991_p1;
wire  signed [6:0] sext_ln151_84_fu_4767_p1;
wire  signed [6:0] sext_ln151_82_fu_4735_p1;
wire   [6:0] add_ln153_41_fu_5109_p2;
wire  signed [6:0] sext_ln151_94_fu_4927_p1;
wire  signed [6:0] sext_ln151_86_fu_4799_p1;
wire  signed [6:0] sext_ln151_90_fu_4863_p1;
wire  signed [6:0] sext_ln151_88_fu_4831_p1;
wire  signed [6:0] sext_ln153_21_fu_5087_p1;
wire   [2:0] tmp_71_fu_5133_p4;
wire  signed [2:0] mul_res_48_fu_5155_p0;
wire  signed [5:0] sext_ln151_104_fu_5143_p1;
wire  signed [2:0] mul_res_48_fu_5155_p1;
wire  signed [5:0] mul_res_48_fu_5155_p2;
wire   [2:0] tmp_72_fu_5165_p4;
wire  signed [2:0] mul_res_49_fu_5187_p0;
wire  signed [5:0] sext_ln151_106_fu_5175_p1;
wire  signed [2:0] mul_res_49_fu_5187_p1;
wire  signed [5:0] mul_res_49_fu_5187_p2;
wire   [2:0] tmp_73_fu_5197_p4;
wire  signed [2:0] mul_res_50_fu_5219_p0;
wire  signed [5:0] sext_ln151_108_fu_5207_p1;
wire  signed [2:0] mul_res_50_fu_5219_p1;
wire  signed [5:0] mul_res_50_fu_5219_p2;
wire   [2:0] tmp_74_fu_5229_p4;
wire  signed [2:0] mul_res_51_fu_5251_p0;
wire  signed [5:0] sext_ln151_110_fu_5239_p1;
wire  signed [2:0] mul_res_51_fu_5251_p1;
wire  signed [5:0] mul_res_51_fu_5251_p2;
wire   [2:0] tmp_75_fu_5261_p4;
wire  signed [2:0] mul_res_52_fu_5283_p0;
wire  signed [5:0] sext_ln151_112_fu_5271_p1;
wire  signed [2:0] mul_res_52_fu_5283_p1;
wire  signed [5:0] mul_res_52_fu_5283_p2;
wire   [2:0] tmp_76_fu_5293_p4;
wire  signed [2:0] mul_res_53_fu_5315_p0;
wire  signed [5:0] sext_ln151_114_fu_5303_p1;
wire  signed [2:0] mul_res_53_fu_5315_p1;
wire  signed [5:0] mul_res_53_fu_5315_p2;
wire   [2:0] tmp_77_fu_5325_p4;
wire  signed [2:0] mul_res_54_fu_5347_p0;
wire  signed [5:0] sext_ln151_116_fu_5335_p1;
wire  signed [2:0] mul_res_54_fu_5347_p1;
wire  signed [5:0] mul_res_54_fu_5347_p2;
wire   [2:0] tmp_78_fu_5357_p4;
wire  signed [2:0] mul_res_55_fu_5379_p0;
wire  signed [5:0] sext_ln151_118_fu_5367_p1;
wire  signed [2:0] mul_res_55_fu_5379_p1;
wire  signed [5:0] mul_res_55_fu_5379_p2;
wire   [2:0] tmp_79_fu_5389_p4;
wire  signed [2:0] mul_res_56_fu_5411_p0;
wire  signed [5:0] sext_ln151_120_fu_5399_p1;
wire  signed [2:0] mul_res_56_fu_5411_p1;
wire  signed [5:0] mul_res_56_fu_5411_p2;
wire   [2:0] tmp_80_fu_5421_p4;
wire  signed [2:0] mul_res_57_fu_5443_p0;
wire  signed [5:0] sext_ln151_122_fu_5431_p1;
wire  signed [2:0] mul_res_57_fu_5443_p1;
wire  signed [5:0] mul_res_57_fu_5443_p2;
wire   [2:0] tmp_81_fu_5453_p4;
wire  signed [2:0] mul_res_58_fu_5475_p0;
wire  signed [5:0] sext_ln151_124_fu_5463_p1;
wire  signed [2:0] mul_res_58_fu_5475_p1;
wire  signed [5:0] mul_res_58_fu_5475_p2;
wire   [2:0] tmp_82_fu_5485_p4;
wire  signed [2:0] mul_res_59_fu_5507_p0;
wire  signed [5:0] sext_ln151_126_fu_5495_p1;
wire  signed [2:0] mul_res_59_fu_5507_p1;
wire  signed [5:0] mul_res_59_fu_5507_p2;
wire  signed [6:0] sext_ln151_123_fu_5449_p1;
wire  signed [6:0] sext_ln151_125_fu_5481_p1;
wire  signed [6:0] sext_ln151_115_fu_5321_p1;
wire  signed [6:0] sext_ln151_119_fu_5385_p1;
wire   [6:0] add_ln153_50_fu_5523_p2;
wire  signed [6:0] sext_ln151_121_fu_5417_p1;
wire  signed [6:0] sext_ln151_107_fu_5193_p1;
wire  signed [6:0] sext_ln151_105_fu_5161_p1;
wire   [6:0] add_ln153_53_fu_5535_p2;
wire  signed [6:0] sext_ln151_117_fu_5353_p1;
wire  signed [6:0] sext_ln151_109_fu_5225_p1;
wire  signed [6:0] sext_ln151_113_fu_5289_p1;
wire  signed [6:0] sext_ln151_111_fu_5257_p1;
wire  signed [6:0] sext_ln153_28_fu_5513_p1;
wire   [2:0] tmp_83_fu_5559_p4;
wire  signed [2:0] mul_res_60_fu_5581_p0;
wire  signed [5:0] sext_ln151_127_fu_5569_p1;
wire  signed [2:0] mul_res_60_fu_5581_p1;
wire  signed [5:0] mul_res_60_fu_5581_p2;
wire   [2:0] tmp_84_fu_5591_p4;
wire  signed [2:0] mul_res_61_fu_5613_p0;
wire  signed [5:0] sext_ln151_129_fu_5601_p1;
wire  signed [2:0] mul_res_61_fu_5613_p1;
wire  signed [5:0] mul_res_61_fu_5613_p2;
wire   [2:0] tmp_85_fu_5623_p4;
wire  signed [2:0] mul_res_62_fu_5645_p0;
wire  signed [5:0] sext_ln151_131_fu_5633_p1;
wire  signed [2:0] mul_res_62_fu_5645_p1;
wire  signed [5:0] mul_res_62_fu_5645_p2;
wire   [2:0] tmp_86_fu_5655_p4;
wire  signed [2:0] mul_res_63_fu_5677_p0;
wire  signed [5:0] sext_ln151_133_fu_5665_p1;
wire  signed [2:0] mul_res_63_fu_5677_p1;
wire  signed [5:0] mul_res_63_fu_5677_p2;
wire   [2:0] tmp_87_fu_5687_p4;
wire  signed [2:0] mul_res_64_fu_5709_p0;
wire  signed [5:0] sext_ln151_135_fu_5697_p1;
wire  signed [2:0] mul_res_64_fu_5709_p1;
wire  signed [5:0] mul_res_64_fu_5709_p2;
wire   [2:0] tmp_88_fu_5719_p4;
wire  signed [2:0] mul_res_65_fu_5741_p0;
wire  signed [5:0] sext_ln151_137_fu_5729_p1;
wire  signed [2:0] mul_res_65_fu_5741_p1;
wire  signed [5:0] mul_res_65_fu_5741_p2;
wire   [2:0] tmp_89_fu_5751_p4;
wire  signed [2:0] mul_res_66_fu_5773_p0;
wire  signed [5:0] sext_ln151_139_fu_5761_p1;
wire  signed [2:0] mul_res_66_fu_5773_p1;
wire  signed [5:0] mul_res_66_fu_5773_p2;
wire   [2:0] tmp_90_fu_5783_p4;
wire  signed [2:0] mul_res_67_fu_5805_p0;
wire  signed [5:0] sext_ln151_141_fu_5793_p1;
wire  signed [2:0] mul_res_67_fu_5805_p1;
wire  signed [5:0] mul_res_67_fu_5805_p2;
wire   [2:0] tmp_91_fu_5815_p4;
wire  signed [2:0] mul_res_68_fu_5837_p0;
wire  signed [5:0] sext_ln151_143_fu_5825_p1;
wire  signed [2:0] mul_res_68_fu_5837_p1;
wire  signed [5:0] mul_res_68_fu_5837_p2;
wire   [2:0] tmp_92_fu_5847_p4;
wire  signed [2:0] mul_res_69_fu_5869_p0;
wire  signed [5:0] sext_ln151_145_fu_5857_p1;
wire  signed [2:0] mul_res_69_fu_5869_p1;
wire  signed [5:0] mul_res_69_fu_5869_p2;
wire   [2:0] tmp_93_fu_5879_p4;
wire  signed [2:0] mul_res_70_fu_5901_p0;
wire  signed [5:0] sext_ln151_147_fu_5889_p1;
wire  signed [2:0] mul_res_70_fu_5901_p1;
wire  signed [5:0] mul_res_70_fu_5901_p2;
wire   [2:0] tmp_94_fu_5911_p4;
wire  signed [2:0] mul_res_71_fu_5933_p0;
wire  signed [5:0] sext_ln151_149_fu_5921_p1;
wire  signed [2:0] mul_res_71_fu_5933_p1;
wire  signed [5:0] mul_res_71_fu_5933_p2;
wire  signed [6:0] sext_ln151_146_fu_5875_p1;
wire  signed [6:0] sext_ln151_148_fu_5907_p1;
wire  signed [6:0] sext_ln151_138_fu_5747_p1;
wire  signed [6:0] sext_ln151_142_fu_5811_p1;
wire   [6:0] add_ln153_62_fu_5949_p2;
wire  signed [6:0] sext_ln151_144_fu_5843_p1;
wire  signed [6:0] sext_ln151_130_fu_5619_p1;
wire  signed [6:0] sext_ln151_128_fu_5587_p1;
wire   [6:0] add_ln153_65_fu_5961_p2;
wire  signed [6:0] sext_ln151_140_fu_5779_p1;
wire  signed [6:0] sext_ln151_132_fu_5651_p1;
wire  signed [6:0] sext_ln151_136_fu_5715_p1;
wire  signed [6:0] sext_ln151_134_fu_5683_p1;
wire  signed [6:0] sext_ln153_35_fu_5939_p1;
wire   [2:0] tmp_95_fu_5985_p4;
wire  signed [2:0] mul_res_72_fu_6007_p0;
wire  signed [5:0] sext_ln151_150_fu_5995_p1;
wire  signed [2:0] mul_res_72_fu_6007_p1;
wire  signed [5:0] mul_res_72_fu_6007_p2;
wire   [2:0] tmp_96_fu_6017_p4;
wire  signed [2:0] mul_res_73_fu_6039_p0;
wire  signed [5:0] sext_ln151_152_fu_6027_p1;
wire  signed [2:0] mul_res_73_fu_6039_p1;
wire  signed [5:0] mul_res_73_fu_6039_p2;
wire   [2:0] tmp_97_fu_6049_p4;
wire  signed [2:0] mul_res_74_fu_6071_p0;
wire  signed [5:0] sext_ln151_154_fu_6059_p1;
wire  signed [2:0] mul_res_74_fu_6071_p1;
wire  signed [5:0] mul_res_74_fu_6071_p2;
wire   [2:0] tmp_98_fu_6081_p4;
wire  signed [2:0] mul_res_75_fu_6103_p0;
wire  signed [5:0] sext_ln151_156_fu_6091_p1;
wire  signed [2:0] mul_res_75_fu_6103_p1;
wire  signed [5:0] mul_res_75_fu_6103_p2;
wire   [2:0] tmp_99_fu_6113_p4;
wire  signed [2:0] mul_res_76_fu_6135_p0;
wire  signed [5:0] sext_ln151_158_fu_6123_p1;
wire  signed [2:0] mul_res_76_fu_6135_p1;
wire  signed [5:0] mul_res_76_fu_6135_p2;
wire   [2:0] tmp_100_fu_6145_p4;
wire  signed [2:0] mul_res_77_fu_6167_p0;
wire  signed [5:0] sext_ln151_160_fu_6155_p1;
wire  signed [2:0] mul_res_77_fu_6167_p1;
wire  signed [5:0] mul_res_77_fu_6167_p2;
wire   [2:0] tmp_101_fu_6177_p4;
wire  signed [2:0] mul_res_78_fu_6199_p0;
wire  signed [5:0] sext_ln151_162_fu_6187_p1;
wire  signed [2:0] mul_res_78_fu_6199_p1;
wire  signed [5:0] mul_res_78_fu_6199_p2;
wire   [2:0] tmp_102_fu_6209_p4;
wire  signed [2:0] mul_res_79_fu_6231_p0;
wire  signed [5:0] sext_ln151_164_fu_6219_p1;
wire  signed [2:0] mul_res_79_fu_6231_p1;
wire  signed [5:0] mul_res_79_fu_6231_p2;
wire   [2:0] tmp_103_fu_6241_p4;
wire  signed [2:0] mul_res_80_fu_6263_p0;
wire  signed [5:0] sext_ln151_166_fu_6251_p1;
wire  signed [2:0] mul_res_80_fu_6263_p1;
wire  signed [5:0] mul_res_80_fu_6263_p2;
wire   [2:0] tmp_104_fu_6273_p4;
wire  signed [2:0] mul_res_81_fu_6295_p0;
wire  signed [5:0] sext_ln151_168_fu_6283_p1;
wire  signed [2:0] mul_res_81_fu_6295_p1;
wire  signed [5:0] mul_res_81_fu_6295_p2;
wire   [2:0] tmp_105_fu_6305_p4;
wire  signed [2:0] mul_res_82_fu_6327_p0;
wire  signed [5:0] sext_ln151_170_fu_6315_p1;
wire  signed [2:0] mul_res_82_fu_6327_p1;
wire  signed [5:0] mul_res_82_fu_6327_p2;
wire   [2:0] tmp_106_fu_6337_p4;
wire  signed [2:0] mul_res_83_fu_6359_p0;
wire  signed [5:0] sext_ln151_172_fu_6347_p1;
wire  signed [2:0] mul_res_83_fu_6359_p1;
wire  signed [5:0] mul_res_83_fu_6359_p2;
wire  signed [6:0] sext_ln151_169_fu_6301_p1;
wire  signed [6:0] sext_ln151_171_fu_6333_p1;
wire  signed [6:0] sext_ln151_161_fu_6173_p1;
wire  signed [6:0] sext_ln151_165_fu_6237_p1;
wire   [6:0] add_ln153_74_fu_6375_p2;
wire  signed [6:0] sext_ln151_167_fu_6269_p1;
wire  signed [6:0] sext_ln151_153_fu_6045_p1;
wire  signed [6:0] sext_ln151_151_fu_6013_p1;
wire   [6:0] add_ln153_77_fu_6387_p2;
wire  signed [6:0] sext_ln151_163_fu_6205_p1;
wire  signed [6:0] sext_ln151_155_fu_6077_p1;
wire  signed [6:0] sext_ln151_159_fu_6141_p1;
wire  signed [6:0] sext_ln151_157_fu_6109_p1;
wire  signed [6:0] sext_ln153_42_fu_6365_p1;
wire   [2:0] tmp_107_fu_6411_p4;
wire  signed [2:0] mul_res_84_fu_6433_p0;
wire  signed [5:0] sext_ln151_173_fu_6421_p1;
wire  signed [2:0] mul_res_84_fu_6433_p1;
wire  signed [5:0] mul_res_84_fu_6433_p2;
wire   [2:0] tmp_108_fu_6443_p4;
wire  signed [2:0] mul_res_85_fu_6465_p0;
wire  signed [5:0] sext_ln151_175_fu_6453_p1;
wire  signed [2:0] mul_res_85_fu_6465_p1;
wire  signed [5:0] mul_res_85_fu_6465_p2;
wire   [2:0] tmp_109_fu_6475_p4;
wire  signed [2:0] mul_res_86_fu_6497_p0;
wire  signed [5:0] sext_ln151_177_fu_6485_p1;
wire  signed [2:0] mul_res_86_fu_6497_p1;
wire  signed [5:0] mul_res_86_fu_6497_p2;
wire   [2:0] tmp_110_fu_6507_p4;
wire  signed [2:0] mul_res_87_fu_6529_p0;
wire  signed [5:0] sext_ln151_179_fu_6517_p1;
wire  signed [2:0] mul_res_87_fu_6529_p1;
wire  signed [5:0] mul_res_87_fu_6529_p2;
wire   [2:0] tmp_111_fu_6539_p4;
wire  signed [2:0] mul_res_88_fu_6561_p0;
wire  signed [5:0] sext_ln151_181_fu_6549_p1;
wire  signed [2:0] mul_res_88_fu_6561_p1;
wire  signed [5:0] mul_res_88_fu_6561_p2;
wire   [2:0] tmp_112_fu_6571_p4;
wire  signed [2:0] mul_res_89_fu_6593_p0;
wire  signed [5:0] sext_ln151_183_fu_6581_p1;
wire  signed [2:0] mul_res_89_fu_6593_p1;
wire  signed [5:0] mul_res_89_fu_6593_p2;
wire   [2:0] tmp_113_fu_6603_p4;
wire  signed [2:0] mul_res_90_fu_6625_p0;
wire  signed [5:0] sext_ln151_185_fu_6613_p1;
wire  signed [2:0] mul_res_90_fu_6625_p1;
wire  signed [5:0] mul_res_90_fu_6625_p2;
wire   [2:0] tmp_114_fu_6635_p4;
wire  signed [2:0] mul_res_91_fu_6657_p0;
wire  signed [5:0] sext_ln151_187_fu_6645_p1;
wire  signed [2:0] mul_res_91_fu_6657_p1;
wire  signed [5:0] mul_res_91_fu_6657_p2;
wire   [2:0] tmp_115_fu_6667_p4;
wire  signed [2:0] mul_res_92_fu_6689_p0;
wire  signed [5:0] sext_ln151_189_fu_6677_p1;
wire  signed [2:0] mul_res_92_fu_6689_p1;
wire  signed [5:0] mul_res_92_fu_6689_p2;
wire   [2:0] tmp_116_fu_6699_p4;
wire  signed [2:0] mul_res_93_fu_6721_p0;
wire  signed [5:0] sext_ln151_191_fu_6709_p1;
wire  signed [2:0] mul_res_93_fu_6721_p1;
wire  signed [5:0] mul_res_93_fu_6721_p2;
wire   [2:0] tmp_117_fu_6731_p4;
wire  signed [2:0] mul_res_94_fu_6753_p0;
wire  signed [5:0] sext_ln151_193_fu_6741_p1;
wire  signed [2:0] mul_res_94_fu_6753_p1;
wire  signed [5:0] mul_res_94_fu_6753_p2;
wire   [2:0] tmp_118_fu_6763_p4;
wire  signed [2:0] mul_res_95_fu_6785_p0;
wire  signed [5:0] sext_ln151_195_fu_6773_p1;
wire  signed [2:0] mul_res_95_fu_6785_p1;
wire  signed [5:0] mul_res_95_fu_6785_p2;
wire  signed [6:0] sext_ln151_192_fu_6727_p1;
wire  signed [6:0] sext_ln151_194_fu_6759_p1;
wire  signed [6:0] sext_ln151_184_fu_6599_p1;
wire  signed [6:0] sext_ln151_188_fu_6663_p1;
wire   [6:0] add_ln153_86_fu_6801_p2;
wire  signed [6:0] sext_ln151_190_fu_6695_p1;
wire  signed [6:0] sext_ln151_176_fu_6471_p1;
wire  signed [6:0] sext_ln151_174_fu_6439_p1;
wire   [6:0] add_ln153_89_fu_6813_p2;
wire  signed [6:0] sext_ln151_186_fu_6631_p1;
wire  signed [6:0] sext_ln151_178_fu_6503_p1;
wire  signed [6:0] sext_ln151_182_fu_6567_p1;
wire  signed [6:0] sext_ln151_180_fu_6535_p1;
wire  signed [6:0] sext_ln153_49_fu_6791_p1;
wire   [2:0] tmp_119_fu_6837_p4;
wire  signed [2:0] mul_res_96_fu_6859_p0;
wire  signed [5:0] sext_ln151_196_fu_6847_p1;
wire  signed [2:0] mul_res_96_fu_6859_p1;
wire  signed [5:0] mul_res_96_fu_6859_p2;
wire   [2:0] tmp_120_fu_6869_p4;
wire  signed [2:0] mul_res_97_fu_6891_p0;
wire  signed [5:0] sext_ln151_198_fu_6879_p1;
wire  signed [2:0] mul_res_97_fu_6891_p1;
wire  signed [5:0] mul_res_97_fu_6891_p2;
wire   [2:0] tmp_121_fu_6901_p4;
wire  signed [2:0] mul_res_98_fu_6923_p0;
wire  signed [5:0] sext_ln151_200_fu_6911_p1;
wire  signed [2:0] mul_res_98_fu_6923_p1;
wire  signed [5:0] mul_res_98_fu_6923_p2;
wire   [2:0] tmp_122_fu_6933_p4;
wire  signed [2:0] mul_res_99_fu_6955_p0;
wire  signed [5:0] sext_ln151_202_fu_6943_p1;
wire  signed [2:0] mul_res_99_fu_6955_p1;
wire  signed [5:0] mul_res_99_fu_6955_p2;
wire   [2:0] tmp_123_fu_6965_p4;
wire  signed [2:0] mul_res_100_fu_6987_p0;
wire  signed [5:0] sext_ln151_204_fu_6975_p1;
wire  signed [2:0] mul_res_100_fu_6987_p1;
wire  signed [5:0] mul_res_100_fu_6987_p2;
wire   [2:0] tmp_124_fu_6997_p4;
wire  signed [2:0] mul_res_101_fu_7019_p0;
wire  signed [5:0] sext_ln151_206_fu_7007_p1;
wire  signed [2:0] mul_res_101_fu_7019_p1;
wire  signed [5:0] mul_res_101_fu_7019_p2;
wire   [2:0] tmp_125_fu_7029_p4;
wire  signed [2:0] mul_res_102_fu_7051_p0;
wire  signed [5:0] sext_ln151_208_fu_7039_p1;
wire  signed [2:0] mul_res_102_fu_7051_p1;
wire  signed [5:0] mul_res_102_fu_7051_p2;
wire   [2:0] tmp_126_fu_7061_p4;
wire  signed [2:0] mul_res_103_fu_7083_p0;
wire  signed [5:0] sext_ln151_210_fu_7071_p1;
wire  signed [2:0] mul_res_103_fu_7083_p1;
wire  signed [5:0] mul_res_103_fu_7083_p2;
wire   [2:0] tmp_127_fu_7093_p4;
wire  signed [2:0] mul_res_104_fu_7115_p0;
wire  signed [5:0] sext_ln151_212_fu_7103_p1;
wire  signed [2:0] mul_res_104_fu_7115_p1;
wire  signed [5:0] mul_res_104_fu_7115_p2;
wire   [2:0] tmp_128_fu_7125_p4;
wire  signed [2:0] mul_res_105_fu_7147_p0;
wire  signed [5:0] sext_ln151_214_fu_7135_p1;
wire  signed [2:0] mul_res_105_fu_7147_p1;
wire  signed [5:0] mul_res_105_fu_7147_p2;
wire   [2:0] tmp_129_fu_7157_p4;
wire  signed [2:0] mul_res_106_fu_7179_p0;
wire  signed [5:0] sext_ln151_216_fu_7167_p1;
wire  signed [2:0] mul_res_106_fu_7179_p1;
wire  signed [5:0] mul_res_106_fu_7179_p2;
wire   [2:0] tmp_130_fu_7189_p4;
wire  signed [2:0] mul_res_107_fu_7211_p0;
wire  signed [5:0] sext_ln151_218_fu_7199_p1;
wire  signed [2:0] mul_res_107_fu_7211_p1;
wire  signed [5:0] mul_res_107_fu_7211_p2;
wire  signed [6:0] sext_ln151_215_fu_7153_p1;
wire  signed [6:0] sext_ln151_217_fu_7185_p1;
wire  signed [6:0] sext_ln151_207_fu_7025_p1;
wire  signed [6:0] sext_ln151_211_fu_7089_p1;
wire   [6:0] add_ln153_98_fu_7227_p2;
wire  signed [6:0] sext_ln151_213_fu_7121_p1;
wire  signed [6:0] sext_ln151_199_fu_6897_p1;
wire  signed [6:0] sext_ln151_197_fu_6865_p1;
wire   [6:0] add_ln153_101_fu_7239_p2;
wire  signed [6:0] sext_ln151_209_fu_7057_p1;
wire  signed [6:0] sext_ln151_201_fu_6929_p1;
wire  signed [6:0] sext_ln151_205_fu_6993_p1;
wire  signed [6:0] sext_ln151_203_fu_6961_p1;
wire  signed [6:0] sext_ln153_56_fu_7217_p1;
wire   [2:0] tmp_131_fu_7263_p4;
wire  signed [2:0] mul_res_108_fu_7285_p0;
wire  signed [5:0] sext_ln151_219_fu_7273_p1;
wire  signed [2:0] mul_res_108_fu_7285_p1;
wire  signed [5:0] mul_res_108_fu_7285_p2;
wire   [2:0] tmp_132_fu_7295_p4;
wire  signed [2:0] mul_res_109_fu_7317_p0;
wire  signed [5:0] sext_ln151_221_fu_7305_p1;
wire  signed [2:0] mul_res_109_fu_7317_p1;
wire  signed [5:0] mul_res_109_fu_7317_p2;
wire   [2:0] tmp_133_fu_7327_p4;
wire  signed [2:0] mul_res_110_fu_7349_p0;
wire  signed [5:0] sext_ln151_223_fu_7337_p1;
wire  signed [2:0] mul_res_110_fu_7349_p1;
wire  signed [5:0] mul_res_110_fu_7349_p2;
wire   [2:0] tmp_134_fu_7359_p4;
wire  signed [2:0] mul_res_111_fu_7381_p0;
wire  signed [5:0] sext_ln151_225_fu_7369_p1;
wire  signed [2:0] mul_res_111_fu_7381_p1;
wire  signed [5:0] mul_res_111_fu_7381_p2;
wire   [2:0] tmp_135_fu_7391_p4;
wire  signed [2:0] mul_res_112_fu_7413_p0;
wire  signed [5:0] sext_ln151_227_fu_7401_p1;
wire  signed [2:0] mul_res_112_fu_7413_p1;
wire  signed [5:0] mul_res_112_fu_7413_p2;
wire   [2:0] tmp_136_fu_7423_p4;
wire  signed [2:0] mul_res_113_fu_7445_p0;
wire  signed [5:0] sext_ln151_229_fu_7433_p1;
wire  signed [2:0] mul_res_113_fu_7445_p1;
wire  signed [5:0] mul_res_113_fu_7445_p2;
wire   [2:0] tmp_137_fu_7455_p4;
wire  signed [2:0] mul_res_114_fu_7477_p0;
wire  signed [5:0] sext_ln151_231_fu_7465_p1;
wire  signed [2:0] mul_res_114_fu_7477_p1;
wire  signed [5:0] mul_res_114_fu_7477_p2;
wire   [2:0] tmp_138_fu_7487_p4;
wire  signed [2:0] mul_res_115_fu_7509_p0;
wire  signed [5:0] sext_ln151_233_fu_7497_p1;
wire  signed [2:0] mul_res_115_fu_7509_p1;
wire  signed [5:0] mul_res_115_fu_7509_p2;
wire   [2:0] tmp_139_fu_7519_p4;
wire  signed [2:0] mul_res_116_fu_7541_p0;
wire  signed [5:0] sext_ln151_235_fu_7529_p1;
wire  signed [2:0] mul_res_116_fu_7541_p1;
wire  signed [5:0] mul_res_116_fu_7541_p2;
wire   [2:0] tmp_140_fu_7551_p4;
wire  signed [2:0] mul_res_117_fu_7573_p0;
wire  signed [5:0] sext_ln151_237_fu_7561_p1;
wire  signed [2:0] mul_res_117_fu_7573_p1;
wire  signed [5:0] mul_res_117_fu_7573_p2;
wire   [2:0] tmp_141_fu_7583_p4;
wire  signed [2:0] mul_res_118_fu_7605_p0;
wire  signed [5:0] sext_ln151_239_fu_7593_p1;
wire  signed [2:0] mul_res_118_fu_7605_p1;
wire  signed [5:0] mul_res_118_fu_7605_p2;
wire   [2:0] tmp_142_fu_7615_p4;
wire  signed [2:0] mul_res_119_fu_7637_p0;
wire  signed [5:0] sext_ln151_241_fu_7625_p1;
wire  signed [2:0] mul_res_119_fu_7637_p1;
wire  signed [5:0] mul_res_119_fu_7637_p2;
wire  signed [6:0] sext_ln151_238_fu_7579_p1;
wire  signed [6:0] sext_ln151_240_fu_7611_p1;
wire  signed [6:0] sext_ln151_230_fu_7451_p1;
wire  signed [6:0] sext_ln151_234_fu_7515_p1;
wire   [6:0] add_ln153_110_fu_7653_p2;
wire  signed [6:0] sext_ln151_236_fu_7547_p1;
wire  signed [6:0] sext_ln151_222_fu_7323_p1;
wire  signed [6:0] sext_ln151_220_fu_7291_p1;
wire   [6:0] add_ln153_113_fu_7665_p2;
wire  signed [6:0] sext_ln151_232_fu_7483_p1;
wire  signed [6:0] sext_ln151_224_fu_7355_p1;
wire  signed [6:0] sext_ln151_228_fu_7419_p1;
wire  signed [6:0] sext_ln151_226_fu_7387_p1;
wire  signed [6:0] sext_ln153_63_fu_7643_p1;
wire   [2:0] tmp_143_fu_7689_p4;
wire  signed [2:0] mul_res_120_fu_7711_p0;
wire  signed [5:0] sext_ln151_242_fu_7699_p1;
wire  signed [2:0] mul_res_120_fu_7711_p1;
wire  signed [5:0] mul_res_120_fu_7711_p2;
wire   [2:0] tmp_144_fu_7721_p4;
wire  signed [2:0] mul_res_121_fu_7743_p0;
wire  signed [5:0] sext_ln151_244_fu_7731_p1;
wire  signed [2:0] mul_res_121_fu_7743_p1;
wire  signed [5:0] mul_res_121_fu_7743_p2;
wire   [2:0] tmp_145_fu_7753_p4;
wire  signed [2:0] mul_res_122_fu_7775_p0;
wire  signed [5:0] sext_ln151_246_fu_7763_p1;
wire  signed [2:0] mul_res_122_fu_7775_p1;
wire  signed [5:0] mul_res_122_fu_7775_p2;
wire   [2:0] tmp_146_fu_7785_p4;
wire  signed [2:0] mul_res_123_fu_7807_p0;
wire  signed [5:0] sext_ln151_248_fu_7795_p1;
wire  signed [2:0] mul_res_123_fu_7807_p1;
wire  signed [5:0] mul_res_123_fu_7807_p2;
wire   [2:0] tmp_147_fu_7817_p4;
wire  signed [2:0] mul_res_124_fu_7839_p0;
wire  signed [5:0] sext_ln151_250_fu_7827_p1;
wire  signed [2:0] mul_res_124_fu_7839_p1;
wire  signed [5:0] mul_res_124_fu_7839_p2;
wire   [2:0] tmp_148_fu_7849_p4;
wire  signed [2:0] mul_res_125_fu_7871_p0;
wire  signed [5:0] sext_ln151_252_fu_7859_p1;
wire  signed [2:0] mul_res_125_fu_7871_p1;
wire   [2:0] tmp_149_fu_7877_p4;
wire  signed [2:0] mul_res_126_fu_7899_p0;
wire  signed [5:0] sext_ln151_254_fu_7887_p1;
wire  signed [2:0] mul_res_126_fu_7899_p1;
wire  signed [5:0] mul_res_126_fu_7899_p2;
wire   [2:0] tmp_150_fu_7909_p4;
wire  signed [2:0] mul_res_127_fu_7931_p0;
wire  signed [5:0] sext_ln151_256_fu_7919_p1;
wire  signed [2:0] mul_res_127_fu_7931_p1;
wire   [2:0] tmp_151_fu_7937_p4;
wire  signed [2:0] mul_res_128_fu_7959_p0;
wire  signed [5:0] sext_ln151_258_fu_7947_p1;
wire  signed [2:0] mul_res_128_fu_7959_p1;
wire   [2:0] tmp_152_fu_7965_p4;
wire  signed [2:0] mul_res_129_fu_7987_p0;
wire  signed [5:0] sext_ln151_260_fu_7975_p1;
wire  signed [2:0] mul_res_129_fu_7987_p1;
wire  signed [5:0] mul_res_129_fu_7987_p2;
wire   [2:0] tmp_153_fu_7997_p4;
wire  signed [2:0] mul_res_130_fu_8019_p0;
wire  signed [5:0] sext_ln151_262_fu_8007_p1;
wire  signed [2:0] mul_res_130_fu_8019_p1;
wire  signed [5:0] mul_res_130_fu_8019_p2;
wire   [2:0] tmp_154_fu_8029_p4;
wire  signed [2:0] mul_res_131_fu_8051_p0;
wire  signed [5:0] sext_ln151_264_fu_8039_p1;
wire  signed [2:0] mul_res_131_fu_8051_p1;
wire  signed [5:0] mul_res_131_fu_8051_p2;
wire  signed [6:0] sext_ln151_261_fu_7993_p1;
wire  signed [6:0] sext_ln151_263_fu_8025_p1;
wire  signed [6:0] sext_ln151_245_fu_7749_p1;
wire  signed [6:0] sext_ln151_243_fu_7717_p1;
wire   [6:0] add_ln153_125_fu_8067_p2;
wire  signed [6:0] sext_ln151_255_fu_7905_p1;
wire  signed [6:0] sext_ln151_247_fu_7781_p1;
wire  signed [6:0] sext_ln151_251_fu_7845_p1;
wire  signed [6:0] sext_ln151_249_fu_7813_p1;
wire  signed [6:0] sext_ln153_70_fu_8057_p1;
wire   [2:0] tmp_155_fu_8091_p4;
wire  signed [2:0] mul_res_132_fu_8113_p0;
wire  signed [5:0] sext_ln151_265_fu_8101_p1;
wire  signed [2:0] mul_res_132_fu_8113_p1;
wire  signed [5:0] mul_res_132_fu_8113_p2;
wire   [2:0] tmp_156_fu_8123_p4;
wire  signed [2:0] mul_res_133_fu_8145_p0;
wire  signed [5:0] sext_ln151_267_fu_8133_p1;
wire  signed [2:0] mul_res_133_fu_8145_p1;
wire  signed [5:0] mul_res_133_fu_8145_p2;
wire   [2:0] tmp_157_fu_8155_p4;
wire  signed [2:0] mul_res_134_fu_8177_p0;
wire  signed [5:0] sext_ln151_269_fu_8165_p1;
wire  signed [2:0] mul_res_134_fu_8177_p1;
wire  signed [5:0] mul_res_134_fu_8177_p2;
wire   [2:0] tmp_158_fu_8187_p4;
wire  signed [2:0] mul_res_135_fu_8209_p0;
wire  signed [5:0] sext_ln151_271_fu_8197_p1;
wire  signed [2:0] mul_res_135_fu_8209_p1;
wire  signed [5:0] mul_res_135_fu_8209_p2;
wire   [2:0] tmp_159_fu_8219_p4;
wire  signed [2:0] mul_res_136_fu_8241_p0;
wire  signed [5:0] sext_ln151_273_fu_8229_p1;
wire  signed [2:0] mul_res_136_fu_8241_p1;
wire  signed [5:0] mul_res_136_fu_8241_p2;
wire   [2:0] tmp_160_fu_8251_p4;
wire  signed [2:0] mul_res_137_fu_8273_p0;
wire  signed [5:0] sext_ln151_275_fu_8261_p1;
wire  signed [2:0] mul_res_137_fu_8273_p1;
wire   [2:0] tmp_161_fu_8279_p4;
wire  signed [2:0] mul_res_138_fu_8301_p0;
wire  signed [5:0] sext_ln151_277_fu_8289_p1;
wire  signed [2:0] mul_res_138_fu_8301_p1;
wire  signed [5:0] mul_res_138_fu_8301_p2;
wire   [2:0] tmp_162_fu_8311_p4;
wire  signed [2:0] mul_res_139_fu_8333_p0;
wire  signed [5:0] sext_ln151_279_fu_8321_p1;
wire  signed [2:0] mul_res_139_fu_8333_p1;
wire   [2:0] tmp_163_fu_8339_p4;
wire  signed [2:0] mul_res_140_fu_8361_p0;
wire  signed [5:0] sext_ln151_281_fu_8349_p1;
wire  signed [2:0] mul_res_140_fu_8361_p1;
wire   [2:0] tmp_164_fu_8367_p4;
wire  signed [2:0] mul_res_141_fu_8389_p0;
wire  signed [5:0] sext_ln151_283_fu_8377_p1;
wire  signed [2:0] mul_res_141_fu_8389_p1;
wire  signed [5:0] mul_res_141_fu_8389_p2;
wire   [2:0] tmp_165_fu_8399_p4;
wire  signed [2:0] mul_res_142_fu_8421_p0;
wire  signed [5:0] sext_ln151_285_fu_8409_p1;
wire  signed [2:0] mul_res_142_fu_8421_p1;
wire  signed [5:0] mul_res_142_fu_8421_p2;
wire   [2:0] tmp_166_fu_8431_p4;
wire  signed [2:0] mul_res_143_fu_8453_p0;
wire  signed [5:0] sext_ln151_287_fu_8441_p1;
wire  signed [2:0] mul_res_143_fu_8453_p1;
wire  signed [5:0] mul_res_143_fu_8453_p2;
wire  signed [6:0] sext_ln151_284_fu_8395_p1;
wire  signed [6:0] sext_ln151_286_fu_8427_p1;
wire  signed [6:0] sext_ln151_268_fu_8151_p1;
wire  signed [6:0] sext_ln151_266_fu_8119_p1;
wire   [6:0] add_ln153_137_fu_8469_p2;
wire  signed [6:0] sext_ln151_278_fu_8307_p1;
wire  signed [6:0] sext_ln151_270_fu_8183_p1;
wire  signed [6:0] sext_ln151_274_fu_8247_p1;
wire  signed [6:0] sext_ln151_272_fu_8215_p1;
wire  signed [6:0] sext_ln153_77_fu_8459_p1;
wire   [2:0] tmp_167_fu_8493_p4;
wire  signed [2:0] mul_res_144_fu_8515_p0;
wire  signed [5:0] sext_ln151_288_fu_8503_p1;
wire  signed [2:0] mul_res_144_fu_8515_p1;
wire  signed [5:0] mul_res_144_fu_8515_p2;
wire   [2:0] tmp_168_fu_8525_p4;
wire  signed [2:0] mul_res_145_fu_8547_p0;
wire  signed [5:0] sext_ln151_290_fu_8535_p1;
wire  signed [2:0] mul_res_145_fu_8547_p1;
wire  signed [5:0] mul_res_145_fu_8547_p2;
wire   [2:0] tmp_169_fu_8557_p4;
wire  signed [2:0] mul_res_146_fu_8579_p0;
wire  signed [5:0] sext_ln151_292_fu_8567_p1;
wire  signed [2:0] mul_res_146_fu_8579_p1;
wire  signed [5:0] mul_res_146_fu_8579_p2;
wire   [2:0] tmp_170_fu_8589_p4;
wire  signed [2:0] mul_res_147_fu_8611_p0;
wire  signed [5:0] sext_ln151_294_fu_8599_p1;
wire  signed [2:0] mul_res_147_fu_8611_p1;
wire  signed [5:0] mul_res_147_fu_8611_p2;
wire   [2:0] tmp_171_fu_8621_p4;
wire  signed [2:0] mul_res_148_fu_8643_p0;
wire  signed [5:0] sext_ln151_296_fu_8631_p1;
wire  signed [2:0] mul_res_148_fu_8643_p1;
wire  signed [5:0] mul_res_148_fu_8643_p2;
wire   [2:0] tmp_172_fu_8653_p4;
wire  signed [2:0] mul_res_149_fu_8675_p0;
wire  signed [5:0] sext_ln151_298_fu_8663_p1;
wire  signed [2:0] mul_res_149_fu_8675_p1;
wire   [2:0] tmp_173_fu_8681_p4;
wire  signed [2:0] mul_res_150_fu_8703_p0;
wire  signed [5:0] sext_ln151_300_fu_8691_p1;
wire  signed [2:0] mul_res_150_fu_8703_p1;
wire  signed [5:0] mul_res_150_fu_8703_p2;
wire   [2:0] tmp_174_fu_8713_p4;
wire  signed [2:0] mul_res_151_fu_8735_p0;
wire  signed [5:0] sext_ln151_302_fu_8723_p1;
wire  signed [2:0] mul_res_151_fu_8735_p1;
wire   [2:0] tmp_175_fu_8741_p4;
wire  signed [2:0] mul_res_152_fu_8763_p0;
wire  signed [5:0] sext_ln151_304_fu_8751_p1;
wire  signed [2:0] mul_res_152_fu_8763_p1;
wire   [2:0] tmp_176_fu_8769_p4;
wire  signed [2:0] mul_res_153_fu_8791_p0;
wire  signed [5:0] sext_ln151_306_fu_8779_p1;
wire  signed [2:0] mul_res_153_fu_8791_p1;
wire  signed [5:0] mul_res_153_fu_8791_p2;
wire   [2:0] tmp_177_fu_8801_p4;
wire  signed [2:0] mul_res_154_fu_8823_p0;
wire  signed [5:0] sext_ln151_308_fu_8811_p1;
wire  signed [2:0] mul_res_154_fu_8823_p1;
wire  signed [5:0] mul_res_154_fu_8823_p2;
wire   [2:0] tmp_178_fu_8833_p4;
wire  signed [2:0] mul_res_155_fu_8855_p0;
wire  signed [5:0] sext_ln151_310_fu_8843_p1;
wire  signed [2:0] mul_res_155_fu_8855_p1;
wire  signed [5:0] mul_res_155_fu_8855_p2;
wire  signed [6:0] sext_ln151_307_fu_8797_p1;
wire  signed [6:0] sext_ln151_309_fu_8829_p1;
wire  signed [6:0] sext_ln151_291_fu_8553_p1;
wire  signed [6:0] sext_ln151_289_fu_8521_p1;
wire   [6:0] add_ln153_149_fu_8871_p2;
wire  signed [6:0] sext_ln151_301_fu_8709_p1;
wire  signed [6:0] sext_ln151_293_fu_8585_p1;
wire  signed [6:0] sext_ln151_297_fu_8649_p1;
wire  signed [6:0] sext_ln151_295_fu_8617_p1;
wire  signed [6:0] sext_ln153_84_fu_8861_p1;
wire   [2:0] tmp_179_fu_8895_p4;
wire  signed [2:0] mul_res_156_fu_8917_p0;
wire  signed [5:0] sext_ln151_311_fu_8905_p1;
wire  signed [2:0] mul_res_156_fu_8917_p1;
wire  signed [5:0] mul_res_156_fu_8917_p2;
wire   [2:0] tmp_180_fu_8927_p4;
wire  signed [2:0] mul_res_157_fu_8949_p0;
wire  signed [5:0] sext_ln151_313_fu_8937_p1;
wire  signed [2:0] mul_res_157_fu_8949_p1;
wire  signed [5:0] mul_res_157_fu_8949_p2;
wire   [2:0] tmp_181_fu_8959_p4;
wire  signed [2:0] mul_res_158_fu_8981_p0;
wire  signed [5:0] sext_ln151_315_fu_8969_p1;
wire  signed [2:0] mul_res_158_fu_8981_p1;
wire  signed [5:0] mul_res_158_fu_8981_p2;
wire   [2:0] tmp_182_fu_8991_p4;
wire  signed [2:0] mul_res_159_fu_9013_p0;
wire  signed [5:0] sext_ln151_317_fu_9001_p1;
wire  signed [2:0] mul_res_159_fu_9013_p1;
wire  signed [5:0] mul_res_159_fu_9013_p2;
wire   [2:0] tmp_183_fu_9023_p4;
wire  signed [2:0] mul_res_160_fu_9045_p0;
wire  signed [5:0] sext_ln151_319_fu_9033_p1;
wire  signed [2:0] mul_res_160_fu_9045_p1;
wire  signed [5:0] mul_res_160_fu_9045_p2;
wire   [2:0] tmp_184_fu_9055_p4;
wire  signed [2:0] mul_res_161_fu_9077_p0;
wire  signed [5:0] sext_ln151_321_fu_9065_p1;
wire  signed [2:0] mul_res_161_fu_9077_p1;
wire   [2:0] tmp_185_fu_9083_p4;
wire  signed [2:0] mul_res_162_fu_9105_p0;
wire  signed [5:0] sext_ln151_323_fu_9093_p1;
wire  signed [2:0] mul_res_162_fu_9105_p1;
wire  signed [5:0] mul_res_162_fu_9105_p2;
wire   [2:0] tmp_186_fu_9115_p4;
wire  signed [2:0] mul_res_163_fu_9137_p0;
wire  signed [5:0] sext_ln151_325_fu_9125_p1;
wire  signed [2:0] mul_res_163_fu_9137_p1;
wire   [2:0] tmp_187_fu_9143_p4;
wire  signed [2:0] mul_res_164_fu_9165_p0;
wire  signed [5:0] sext_ln151_327_fu_9153_p1;
wire  signed [2:0] mul_res_164_fu_9165_p1;
wire   [2:0] tmp_188_fu_9171_p4;
wire  signed [2:0] mul_res_165_fu_9193_p0;
wire  signed [5:0] sext_ln151_329_fu_9181_p1;
wire  signed [2:0] mul_res_165_fu_9193_p1;
wire  signed [5:0] mul_res_165_fu_9193_p2;
wire   [2:0] tmp_189_fu_9203_p4;
wire  signed [2:0] mul_res_166_fu_9225_p0;
wire  signed [5:0] sext_ln151_331_fu_9213_p1;
wire  signed [2:0] mul_res_166_fu_9225_p1;
wire  signed [5:0] mul_res_166_fu_9225_p2;
wire   [2:0] tmp_190_fu_9235_p4;
wire  signed [2:0] mul_res_167_fu_9257_p0;
wire  signed [5:0] sext_ln151_333_fu_9245_p1;
wire  signed [2:0] mul_res_167_fu_9257_p1;
wire  signed [5:0] mul_res_167_fu_9257_p2;
wire  signed [6:0] sext_ln151_330_fu_9199_p1;
wire  signed [6:0] sext_ln151_332_fu_9231_p1;
wire  signed [6:0] sext_ln151_314_fu_8955_p1;
wire  signed [6:0] sext_ln151_312_fu_8923_p1;
wire   [6:0] add_ln153_161_fu_9273_p2;
wire  signed [6:0] sext_ln151_324_fu_9111_p1;
wire  signed [6:0] sext_ln151_316_fu_8987_p1;
wire  signed [6:0] sext_ln151_320_fu_9051_p1;
wire  signed [6:0] sext_ln151_318_fu_9019_p1;
wire  signed [6:0] sext_ln153_91_fu_9263_p1;
wire   [2:0] tmp_191_fu_9297_p4;
wire  signed [2:0] mul_res_168_fu_9319_p0;
wire  signed [5:0] sext_ln151_334_fu_9307_p1;
wire  signed [2:0] mul_res_168_fu_9319_p1;
wire  signed [5:0] mul_res_168_fu_9319_p2;
wire   [2:0] tmp_192_fu_9329_p4;
wire  signed [2:0] mul_res_169_fu_9351_p0;
wire  signed [5:0] sext_ln151_336_fu_9339_p1;
wire  signed [2:0] mul_res_169_fu_9351_p1;
wire  signed [5:0] mul_res_169_fu_9351_p2;
wire   [2:0] tmp_193_fu_9361_p4;
wire  signed [2:0] mul_res_170_fu_9383_p0;
wire  signed [5:0] sext_ln151_338_fu_9371_p1;
wire  signed [2:0] mul_res_170_fu_9383_p1;
wire  signed [5:0] mul_res_170_fu_9383_p2;
wire   [2:0] tmp_194_fu_9393_p4;
wire  signed [2:0] mul_res_171_fu_9415_p0;
wire  signed [5:0] sext_ln151_340_fu_9403_p1;
wire  signed [2:0] mul_res_171_fu_9415_p1;
wire  signed [5:0] mul_res_171_fu_9415_p2;
wire   [2:0] tmp_195_fu_9425_p4;
wire  signed [2:0] mul_res_172_fu_9447_p0;
wire  signed [5:0] sext_ln151_342_fu_9435_p1;
wire  signed [2:0] mul_res_172_fu_9447_p1;
wire  signed [5:0] mul_res_172_fu_9447_p2;
wire   [2:0] tmp_196_fu_9457_p4;
wire  signed [2:0] mul_res_173_fu_9479_p0;
wire  signed [5:0] sext_ln151_344_fu_9467_p1;
wire  signed [2:0] mul_res_173_fu_9479_p1;
wire   [2:0] tmp_197_fu_9485_p4;
wire  signed [2:0] mul_res_174_fu_9507_p0;
wire  signed [5:0] sext_ln151_346_fu_9495_p1;
wire  signed [2:0] mul_res_174_fu_9507_p1;
wire  signed [5:0] mul_res_174_fu_9507_p2;
wire   [2:0] tmp_198_fu_9517_p4;
wire  signed [2:0] mul_res_175_fu_9539_p0;
wire  signed [5:0] sext_ln151_348_fu_9527_p1;
wire  signed [2:0] mul_res_175_fu_9539_p1;
wire   [2:0] tmp_199_fu_9545_p4;
wire  signed [2:0] mul_res_176_fu_9567_p0;
wire  signed [5:0] sext_ln151_350_fu_9555_p1;
wire  signed [2:0] mul_res_176_fu_9567_p1;
wire   [2:0] tmp_200_fu_9573_p4;
wire  signed [2:0] mul_res_177_fu_9595_p0;
wire  signed [5:0] sext_ln151_352_fu_9583_p1;
wire  signed [2:0] mul_res_177_fu_9595_p1;
wire  signed [5:0] mul_res_177_fu_9595_p2;
wire   [2:0] tmp_201_fu_9605_p4;
wire  signed [2:0] mul_res_178_fu_9627_p0;
wire  signed [5:0] sext_ln151_354_fu_9615_p1;
wire  signed [2:0] mul_res_178_fu_9627_p1;
wire  signed [5:0] mul_res_178_fu_9627_p2;
wire   [2:0] tmp_202_fu_9637_p4;
wire  signed [2:0] mul_res_179_fu_9659_p0;
wire  signed [5:0] sext_ln151_356_fu_9647_p1;
wire  signed [2:0] mul_res_179_fu_9659_p1;
wire  signed [5:0] mul_res_179_fu_9659_p2;
wire  signed [6:0] sext_ln151_353_fu_9601_p1;
wire  signed [6:0] sext_ln151_355_fu_9633_p1;
wire  signed [6:0] sext_ln151_337_fu_9357_p1;
wire  signed [6:0] sext_ln151_335_fu_9325_p1;
wire   [6:0] add_ln153_173_fu_9675_p2;
wire  signed [6:0] sext_ln151_347_fu_9513_p1;
wire  signed [6:0] sext_ln151_339_fu_9389_p1;
wire  signed [6:0] sext_ln151_343_fu_9453_p1;
wire  signed [6:0] sext_ln151_341_fu_9421_p1;
wire  signed [6:0] sext_ln153_98_fu_9665_p1;
wire   [2:0] tmp_203_fu_9699_p4;
wire  signed [2:0] mul_res_180_fu_9721_p0;
wire  signed [5:0] sext_ln151_357_fu_9709_p1;
wire  signed [2:0] mul_res_180_fu_9721_p1;
wire  signed [5:0] mul_res_180_fu_9721_p2;
wire   [2:0] tmp_204_fu_9731_p4;
wire  signed [2:0] mul_res_181_fu_9753_p0;
wire  signed [5:0] sext_ln151_359_fu_9741_p1;
wire  signed [2:0] mul_res_181_fu_9753_p1;
wire  signed [5:0] mul_res_181_fu_9753_p2;
wire   [2:0] tmp_205_fu_9763_p4;
wire  signed [2:0] mul_res_182_fu_9785_p0;
wire  signed [5:0] sext_ln151_361_fu_9773_p1;
wire  signed [2:0] mul_res_182_fu_9785_p1;
wire  signed [5:0] mul_res_182_fu_9785_p2;
wire   [2:0] tmp_206_fu_9795_p4;
wire  signed [2:0] mul_res_183_fu_9817_p0;
wire  signed [5:0] sext_ln151_363_fu_9805_p1;
wire  signed [2:0] mul_res_183_fu_9817_p1;
wire  signed [5:0] mul_res_183_fu_9817_p2;
wire   [2:0] tmp_207_fu_9827_p4;
wire  signed [2:0] mul_res_184_fu_9849_p0;
wire  signed [5:0] sext_ln151_365_fu_9837_p1;
wire  signed [2:0] mul_res_184_fu_9849_p1;
wire  signed [5:0] mul_res_184_fu_9849_p2;
wire   [2:0] tmp_208_fu_9859_p4;
wire  signed [2:0] mul_res_185_fu_9881_p0;
wire  signed [5:0] sext_ln151_367_fu_9869_p1;
wire  signed [2:0] mul_res_185_fu_9881_p1;
wire   [2:0] tmp_209_fu_9887_p4;
wire  signed [2:0] mul_res_186_fu_9909_p0;
wire  signed [5:0] sext_ln151_369_fu_9897_p1;
wire  signed [2:0] mul_res_186_fu_9909_p1;
wire  signed [5:0] mul_res_186_fu_9909_p2;
wire   [2:0] tmp_210_fu_9919_p4;
wire  signed [2:0] mul_res_187_fu_9941_p0;
wire  signed [5:0] sext_ln151_371_fu_9929_p1;
wire  signed [2:0] mul_res_187_fu_9941_p1;
wire   [2:0] tmp_211_fu_9947_p4;
wire  signed [2:0] mul_res_188_fu_9969_p0;
wire  signed [5:0] sext_ln151_373_fu_9957_p1;
wire  signed [2:0] mul_res_188_fu_9969_p1;
wire   [2:0] tmp_212_fu_9975_p4;
wire  signed [2:0] mul_res_189_fu_9997_p0;
wire  signed [5:0] sext_ln151_375_fu_9985_p1;
wire  signed [2:0] mul_res_189_fu_9997_p1;
wire  signed [5:0] mul_res_189_fu_9997_p2;
wire   [2:0] tmp_213_fu_10007_p4;
wire  signed [2:0] mul_res_190_fu_10029_p0;
wire  signed [5:0] sext_ln151_377_fu_10017_p1;
wire  signed [2:0] mul_res_190_fu_10029_p1;
wire  signed [5:0] mul_res_190_fu_10029_p2;
wire   [2:0] tmp_214_fu_10039_p4;
wire  signed [2:0] mul_res_191_fu_10061_p0;
wire  signed [5:0] sext_ln151_379_fu_10049_p1;
wire  signed [2:0] mul_res_191_fu_10061_p1;
wire  signed [5:0] mul_res_191_fu_10061_p2;
wire  signed [6:0] sext_ln151_376_fu_10003_p1;
wire  signed [6:0] sext_ln151_378_fu_10035_p1;
wire  signed [6:0] sext_ln151_360_fu_9759_p1;
wire  signed [6:0] sext_ln151_358_fu_9727_p1;
wire   [6:0] add_ln153_185_fu_10077_p2;
wire  signed [6:0] sext_ln151_370_fu_9915_p1;
wire  signed [6:0] sext_ln151_362_fu_9791_p1;
wire  signed [6:0] sext_ln151_366_fu_9855_p1;
wire  signed [6:0] sext_ln151_364_fu_9823_p1;
wire  signed [6:0] sext_ln153_105_fu_10067_p1;
wire   [2:0] tmp_215_fu_10101_p4;
wire  signed [2:0] mul_res_192_fu_10123_p0;
wire  signed [5:0] sext_ln151_380_fu_10111_p1;
wire  signed [2:0] mul_res_192_fu_10123_p1;
wire  signed [5:0] mul_res_192_fu_10123_p2;
wire   [2:0] tmp_216_fu_10133_p4;
wire  signed [2:0] mul_res_193_fu_10155_p0;
wire  signed [5:0] sext_ln151_382_fu_10143_p1;
wire  signed [2:0] mul_res_193_fu_10155_p1;
wire  signed [5:0] mul_res_193_fu_10155_p2;
wire   [2:0] tmp_217_fu_10165_p4;
wire  signed [2:0] mul_res_194_fu_10187_p0;
wire  signed [5:0] sext_ln151_384_fu_10175_p1;
wire  signed [2:0] mul_res_194_fu_10187_p1;
wire  signed [5:0] mul_res_194_fu_10187_p2;
wire   [2:0] tmp_218_fu_10197_p4;
wire  signed [2:0] mul_res_195_fu_10219_p0;
wire  signed [5:0] sext_ln151_386_fu_10207_p1;
wire  signed [2:0] mul_res_195_fu_10219_p1;
wire  signed [5:0] mul_res_195_fu_10219_p2;
wire   [2:0] tmp_219_fu_10229_p4;
wire  signed [2:0] mul_res_196_fu_10251_p0;
wire  signed [5:0] sext_ln151_388_fu_10239_p1;
wire  signed [2:0] mul_res_196_fu_10251_p1;
wire  signed [5:0] mul_res_196_fu_10251_p2;
wire   [2:0] tmp_220_fu_10261_p4;
wire  signed [2:0] mul_res_197_fu_10283_p0;
wire  signed [5:0] sext_ln151_390_fu_10271_p1;
wire  signed [2:0] mul_res_197_fu_10283_p1;
wire   [2:0] tmp_221_fu_10289_p4;
wire  signed [2:0] mul_res_198_fu_10311_p0;
wire  signed [5:0] sext_ln151_392_fu_10299_p1;
wire  signed [2:0] mul_res_198_fu_10311_p1;
wire  signed [5:0] mul_res_198_fu_10311_p2;
wire   [2:0] tmp_222_fu_10321_p4;
wire  signed [2:0] mul_res_199_fu_10343_p0;
wire  signed [5:0] sext_ln151_394_fu_10331_p1;
wire  signed [2:0] mul_res_199_fu_10343_p1;
wire   [2:0] tmp_223_fu_10349_p4;
wire  signed [2:0] mul_res_200_fu_10371_p0;
wire  signed [5:0] sext_ln151_396_fu_10359_p1;
wire  signed [2:0] mul_res_200_fu_10371_p1;
wire   [2:0] tmp_224_fu_10377_p4;
wire  signed [2:0] mul_res_201_fu_10399_p0;
wire  signed [5:0] sext_ln151_398_fu_10387_p1;
wire  signed [2:0] mul_res_201_fu_10399_p1;
wire  signed [5:0] mul_res_201_fu_10399_p2;
wire   [2:0] tmp_225_fu_10409_p4;
wire  signed [2:0] mul_res_202_fu_10431_p0;
wire  signed [5:0] sext_ln151_400_fu_10419_p1;
wire  signed [2:0] mul_res_202_fu_10431_p1;
wire  signed [5:0] mul_res_202_fu_10431_p2;
wire   [2:0] tmp_226_fu_10441_p4;
wire  signed [2:0] mul_res_203_fu_10463_p0;
wire  signed [5:0] sext_ln151_402_fu_10451_p1;
wire  signed [2:0] mul_res_203_fu_10463_p1;
wire  signed [5:0] mul_res_203_fu_10463_p2;
wire  signed [6:0] sext_ln151_399_fu_10405_p1;
wire  signed [6:0] sext_ln151_401_fu_10437_p1;
wire  signed [6:0] sext_ln151_383_fu_10161_p1;
wire  signed [6:0] sext_ln151_381_fu_10129_p1;
wire   [6:0] add_ln153_197_fu_10479_p2;
wire  signed [6:0] sext_ln151_393_fu_10317_p1;
wire  signed [6:0] sext_ln151_385_fu_10193_p1;
wire  signed [6:0] sext_ln151_389_fu_10257_p1;
wire  signed [6:0] sext_ln151_387_fu_10225_p1;
wire  signed [6:0] sext_ln153_112_fu_10469_p1;
wire   [2:0] tmp_227_fu_10503_p4;
wire  signed [2:0] mul_res_204_fu_10525_p0;
wire  signed [5:0] sext_ln151_403_fu_10513_p1;
wire  signed [2:0] mul_res_204_fu_10525_p1;
wire  signed [5:0] mul_res_204_fu_10525_p2;
wire   [2:0] tmp_228_fu_10535_p4;
wire  signed [2:0] mul_res_205_fu_10557_p0;
wire  signed [5:0] sext_ln151_405_fu_10545_p1;
wire  signed [2:0] mul_res_205_fu_10557_p1;
wire  signed [5:0] mul_res_205_fu_10557_p2;
wire   [2:0] tmp_229_fu_10567_p4;
wire  signed [2:0] mul_res_206_fu_10589_p0;
wire  signed [5:0] sext_ln151_407_fu_10577_p1;
wire  signed [2:0] mul_res_206_fu_10589_p1;
wire  signed [5:0] mul_res_206_fu_10589_p2;
wire   [2:0] tmp_230_fu_10599_p4;
wire  signed [2:0] mul_res_207_fu_10621_p0;
wire  signed [5:0] sext_ln151_409_fu_10609_p1;
wire  signed [2:0] mul_res_207_fu_10621_p1;
wire  signed [5:0] mul_res_207_fu_10621_p2;
wire   [2:0] tmp_231_fu_10631_p4;
wire  signed [2:0] mul_res_208_fu_10653_p0;
wire  signed [5:0] sext_ln151_411_fu_10641_p1;
wire  signed [2:0] mul_res_208_fu_10653_p1;
wire  signed [5:0] mul_res_208_fu_10653_p2;
wire   [2:0] tmp_232_fu_10663_p4;
wire  signed [2:0] mul_res_209_fu_10685_p0;
wire  signed [5:0] sext_ln151_413_fu_10673_p1;
wire  signed [2:0] mul_res_209_fu_10685_p1;
wire   [2:0] tmp_233_fu_10691_p4;
wire  signed [2:0] mul_res_210_fu_10713_p0;
wire  signed [5:0] sext_ln151_415_fu_10701_p1;
wire  signed [2:0] mul_res_210_fu_10713_p1;
wire  signed [5:0] mul_res_210_fu_10713_p2;
wire   [2:0] tmp_234_fu_10723_p4;
wire  signed [2:0] mul_res_211_fu_10745_p0;
wire  signed [5:0] sext_ln151_417_fu_10733_p1;
wire  signed [2:0] mul_res_211_fu_10745_p1;
wire   [2:0] tmp_235_fu_10751_p4;
wire  signed [2:0] mul_res_212_fu_10773_p0;
wire  signed [5:0] sext_ln151_419_fu_10761_p1;
wire  signed [2:0] mul_res_212_fu_10773_p1;
wire   [2:0] tmp_236_fu_10779_p4;
wire  signed [2:0] mul_res_213_fu_10801_p0;
wire  signed [5:0] sext_ln151_421_fu_10789_p1;
wire  signed [2:0] mul_res_213_fu_10801_p1;
wire  signed [5:0] mul_res_213_fu_10801_p2;
wire   [2:0] tmp_237_fu_10811_p4;
wire  signed [2:0] mul_res_214_fu_10833_p0;
wire  signed [5:0] sext_ln151_423_fu_10821_p1;
wire  signed [2:0] mul_res_214_fu_10833_p1;
wire  signed [5:0] mul_res_214_fu_10833_p2;
wire   [2:0] tmp_238_fu_10843_p4;
wire  signed [2:0] mul_res_215_fu_10865_p0;
wire  signed [5:0] sext_ln151_425_fu_10853_p1;
wire  signed [2:0] mul_res_215_fu_10865_p1;
wire  signed [5:0] mul_res_215_fu_10865_p2;
wire  signed [6:0] sext_ln151_422_fu_10807_p1;
wire  signed [6:0] sext_ln151_424_fu_10839_p1;
wire  signed [6:0] sext_ln151_406_fu_10563_p1;
wire  signed [6:0] sext_ln151_404_fu_10531_p1;
wire   [6:0] add_ln153_209_fu_10881_p2;
wire  signed [6:0] sext_ln151_416_fu_10719_p1;
wire  signed [6:0] sext_ln151_408_fu_10595_p1;
wire  signed [6:0] sext_ln151_412_fu_10659_p1;
wire  signed [6:0] sext_ln151_410_fu_10627_p1;
wire  signed [6:0] sext_ln153_119_fu_10871_p1;
wire   [2:0] tmp_239_fu_10905_p4;
wire  signed [2:0] mul_res_216_fu_10927_p0;
wire  signed [5:0] sext_ln151_426_fu_10915_p1;
wire  signed [2:0] mul_res_216_fu_10927_p1;
wire  signed [5:0] mul_res_216_fu_10927_p2;
wire   [2:0] tmp_240_fu_10937_p4;
wire  signed [2:0] mul_res_217_fu_10959_p0;
wire  signed [5:0] sext_ln151_428_fu_10947_p1;
wire  signed [2:0] mul_res_217_fu_10959_p1;
wire  signed [5:0] mul_res_217_fu_10959_p2;
wire   [2:0] tmp_241_fu_10969_p4;
wire  signed [2:0] mul_res_218_fu_10991_p0;
wire  signed [5:0] sext_ln151_430_fu_10979_p1;
wire  signed [2:0] mul_res_218_fu_10991_p1;
wire  signed [5:0] mul_res_218_fu_10991_p2;
wire   [2:0] tmp_242_fu_11001_p4;
wire  signed [2:0] mul_res_219_fu_11023_p0;
wire  signed [5:0] sext_ln151_432_fu_11011_p1;
wire  signed [2:0] mul_res_219_fu_11023_p1;
wire  signed [5:0] mul_res_219_fu_11023_p2;
wire   [2:0] tmp_243_fu_11033_p4;
wire  signed [2:0] mul_res_220_fu_11055_p0;
wire  signed [5:0] sext_ln151_434_fu_11043_p1;
wire  signed [2:0] mul_res_220_fu_11055_p1;
wire  signed [5:0] mul_res_220_fu_11055_p2;
wire   [2:0] tmp_244_fu_11065_p4;
wire  signed [2:0] mul_res_221_fu_11087_p0;
wire  signed [5:0] sext_ln151_436_fu_11075_p1;
wire  signed [2:0] mul_res_221_fu_11087_p1;
wire   [2:0] tmp_245_fu_11093_p4;
wire  signed [2:0] mul_res_222_fu_11115_p0;
wire  signed [5:0] sext_ln151_438_fu_11103_p1;
wire  signed [2:0] mul_res_222_fu_11115_p1;
wire  signed [5:0] mul_res_222_fu_11115_p2;
wire   [2:0] tmp_246_fu_11125_p4;
wire  signed [2:0] mul_res_223_fu_11147_p0;
wire  signed [5:0] sext_ln151_440_fu_11135_p1;
wire  signed [2:0] mul_res_223_fu_11147_p1;
wire   [2:0] tmp_247_fu_11153_p4;
wire  signed [2:0] mul_res_224_fu_11175_p0;
wire  signed [5:0] sext_ln151_442_fu_11163_p1;
wire  signed [2:0] mul_res_224_fu_11175_p1;
wire   [2:0] tmp_248_fu_11181_p4;
wire  signed [2:0] mul_res_225_fu_11203_p0;
wire  signed [5:0] sext_ln151_444_fu_11191_p1;
wire  signed [2:0] mul_res_225_fu_11203_p1;
wire  signed [5:0] mul_res_225_fu_11203_p2;
wire   [2:0] tmp_249_fu_11213_p4;
wire  signed [2:0] mul_res_226_fu_11235_p0;
wire  signed [5:0] sext_ln151_446_fu_11223_p1;
wire  signed [2:0] mul_res_226_fu_11235_p1;
wire  signed [5:0] mul_res_226_fu_11235_p2;
wire   [2:0] tmp_250_fu_11245_p4;
wire  signed [2:0] mul_res_227_fu_11267_p0;
wire  signed [5:0] sext_ln151_448_fu_11255_p1;
wire  signed [2:0] mul_res_227_fu_11267_p1;
wire  signed [5:0] mul_res_227_fu_11267_p2;
wire  signed [6:0] sext_ln151_445_fu_11209_p1;
wire  signed [6:0] sext_ln151_447_fu_11241_p1;
wire  signed [6:0] sext_ln151_429_fu_10965_p1;
wire  signed [6:0] sext_ln151_427_fu_10933_p1;
wire   [6:0] add_ln153_221_fu_11283_p2;
wire  signed [6:0] sext_ln151_439_fu_11121_p1;
wire  signed [6:0] sext_ln151_431_fu_10997_p1;
wire  signed [6:0] sext_ln151_435_fu_11061_p1;
wire  signed [6:0] sext_ln151_433_fu_11029_p1;
wire  signed [6:0] sext_ln153_126_fu_11273_p1;
wire   [2:0] tmp_251_fu_11307_p4;
wire  signed [2:0] mul_res_228_fu_11329_p0;
wire  signed [5:0] sext_ln151_449_fu_11317_p1;
wire  signed [2:0] mul_res_228_fu_11329_p1;
wire  signed [5:0] mul_res_228_fu_11329_p2;
wire   [2:0] tmp_252_fu_11339_p4;
wire  signed [2:0] mul_res_229_fu_11361_p0;
wire  signed [5:0] sext_ln151_451_fu_11349_p1;
wire  signed [2:0] mul_res_229_fu_11361_p1;
wire  signed [5:0] mul_res_229_fu_11361_p2;
wire   [2:0] tmp_253_fu_11371_p4;
wire  signed [2:0] mul_res_230_fu_11393_p0;
wire  signed [5:0] sext_ln151_453_fu_11381_p1;
wire  signed [2:0] mul_res_230_fu_11393_p1;
wire  signed [5:0] mul_res_230_fu_11393_p2;
wire   [2:0] tmp_254_fu_11403_p4;
wire  signed [2:0] mul_res_231_fu_11425_p0;
wire  signed [5:0] sext_ln151_455_fu_11413_p1;
wire  signed [2:0] mul_res_231_fu_11425_p1;
wire  signed [5:0] mul_res_231_fu_11425_p2;
wire   [2:0] tmp_255_fu_11435_p4;
wire  signed [2:0] mul_res_232_fu_11457_p0;
wire  signed [5:0] sext_ln151_457_fu_11445_p1;
wire  signed [2:0] mul_res_232_fu_11457_p1;
wire  signed [5:0] mul_res_232_fu_11457_p2;
wire   [2:0] tmp_256_fu_11467_p4;
wire  signed [2:0] mul_res_233_fu_11489_p0;
wire  signed [5:0] sext_ln151_459_fu_11477_p1;
wire  signed [2:0] mul_res_233_fu_11489_p1;
wire   [2:0] tmp_257_fu_11495_p4;
wire  signed [2:0] mul_res_234_fu_11517_p0;
wire  signed [5:0] sext_ln151_461_fu_11505_p1;
wire  signed [2:0] mul_res_234_fu_11517_p1;
wire  signed [5:0] mul_res_234_fu_11517_p2;
wire   [2:0] tmp_258_fu_11527_p4;
wire  signed [2:0] mul_res_235_fu_11549_p0;
wire  signed [5:0] sext_ln151_463_fu_11537_p1;
wire  signed [2:0] mul_res_235_fu_11549_p1;
wire   [2:0] tmp_259_fu_11555_p4;
wire  signed [2:0] mul_res_236_fu_11577_p0;
wire  signed [5:0] sext_ln151_465_fu_11565_p1;
wire  signed [2:0] mul_res_236_fu_11577_p1;
wire   [2:0] tmp_260_fu_11583_p4;
wire  signed [2:0] mul_res_237_fu_11605_p0;
wire  signed [5:0] sext_ln151_467_fu_11593_p1;
wire  signed [2:0] mul_res_237_fu_11605_p1;
wire  signed [5:0] mul_res_237_fu_11605_p2;
wire   [2:0] tmp_261_fu_11615_p4;
wire  signed [2:0] mul_res_238_fu_11637_p0;
wire  signed [5:0] sext_ln151_469_fu_11625_p1;
wire  signed [2:0] mul_res_238_fu_11637_p1;
wire  signed [5:0] mul_res_238_fu_11637_p2;
wire   [2:0] tmp_262_fu_11647_p4;
wire  signed [2:0] mul_res_239_fu_11669_p0;
wire  signed [5:0] sext_ln151_471_fu_11657_p1;
wire  signed [2:0] mul_res_239_fu_11669_p1;
wire  signed [5:0] mul_res_239_fu_11669_p2;
wire  signed [6:0] sext_ln151_468_fu_11611_p1;
wire  signed [6:0] sext_ln151_470_fu_11643_p1;
wire  signed [6:0] sext_ln151_452_fu_11367_p1;
wire  signed [6:0] sext_ln151_450_fu_11335_p1;
wire   [6:0] add_ln153_233_fu_11685_p2;
wire  signed [6:0] sext_ln151_462_fu_11523_p1;
wire  signed [6:0] sext_ln151_454_fu_11399_p1;
wire  signed [6:0] sext_ln151_458_fu_11463_p1;
wire  signed [6:0] sext_ln151_456_fu_11431_p1;
wire  signed [6:0] sext_ln153_133_fu_11675_p1;
wire   [2:0] tmp_263_fu_11709_p4;
wire  signed [2:0] mul_res_240_fu_11731_p0;
wire  signed [5:0] sext_ln151_472_fu_11719_p1;
wire  signed [2:0] mul_res_240_fu_11731_p1;
wire  signed [5:0] mul_res_240_fu_11731_p2;
wire   [2:0] tmp_264_fu_11741_p4;
wire  signed [2:0] mul_res_241_fu_11763_p0;
wire  signed [5:0] sext_ln151_474_fu_11751_p1;
wire  signed [2:0] mul_res_241_fu_11763_p1;
wire  signed [5:0] mul_res_241_fu_11763_p2;
wire   [2:0] tmp_265_fu_11773_p4;
wire  signed [2:0] mul_res_242_fu_11795_p0;
wire  signed [5:0] sext_ln151_476_fu_11783_p1;
wire  signed [2:0] mul_res_242_fu_11795_p1;
wire  signed [5:0] mul_res_242_fu_11795_p2;
wire   [2:0] tmp_266_fu_11805_p4;
wire  signed [2:0] mul_res_243_fu_11827_p0;
wire  signed [5:0] sext_ln151_478_fu_11815_p1;
wire  signed [2:0] mul_res_243_fu_11827_p1;
wire  signed [5:0] mul_res_243_fu_11827_p2;
wire   [2:0] tmp_267_fu_11837_p4;
wire  signed [2:0] mul_res_244_fu_11859_p0;
wire  signed [5:0] sext_ln151_480_fu_11847_p1;
wire  signed [2:0] mul_res_244_fu_11859_p1;
wire  signed [5:0] mul_res_244_fu_11859_p2;
wire   [2:0] tmp_268_fu_11869_p4;
wire  signed [2:0] mul_res_245_fu_11891_p0;
wire  signed [5:0] sext_ln151_482_fu_11879_p1;
wire  signed [2:0] mul_res_245_fu_11891_p1;
wire   [2:0] tmp_269_fu_11897_p4;
wire  signed [2:0] mul_res_246_fu_11919_p0;
wire  signed [5:0] sext_ln151_484_fu_11907_p1;
wire  signed [2:0] mul_res_246_fu_11919_p1;
wire  signed [5:0] mul_res_246_fu_11919_p2;
wire   [2:0] tmp_270_fu_11929_p4;
wire  signed [2:0] mul_res_247_fu_11951_p0;
wire  signed [5:0] sext_ln151_486_fu_11939_p1;
wire  signed [2:0] mul_res_247_fu_11951_p1;
wire   [2:0] tmp_271_fu_11957_p4;
wire  signed [2:0] mul_res_248_fu_11979_p0;
wire  signed [5:0] sext_ln151_488_fu_11967_p1;
wire  signed [2:0] mul_res_248_fu_11979_p1;
wire   [2:0] tmp_272_fu_11985_p4;
wire  signed [2:0] mul_res_249_fu_12007_p0;
wire  signed [5:0] sext_ln151_490_fu_11995_p1;
wire  signed [2:0] mul_res_249_fu_12007_p1;
wire  signed [5:0] mul_res_249_fu_12007_p2;
wire   [2:0] tmp_273_fu_12017_p4;
wire  signed [2:0] mul_res_250_fu_12039_p0;
wire  signed [5:0] sext_ln151_492_fu_12027_p1;
wire  signed [2:0] mul_res_250_fu_12039_p1;
wire  signed [5:0] mul_res_250_fu_12039_p2;
wire   [2:0] tmp_274_fu_12049_p4;
wire  signed [2:0] mul_res_251_fu_12071_p0;
wire  signed [5:0] sext_ln151_494_fu_12059_p1;
wire  signed [2:0] mul_res_251_fu_12071_p1;
wire  signed [5:0] mul_res_251_fu_12071_p2;
wire  signed [6:0] sext_ln151_491_fu_12013_p1;
wire  signed [6:0] sext_ln151_493_fu_12045_p1;
wire  signed [6:0] sext_ln151_475_fu_11769_p1;
wire  signed [6:0] sext_ln151_473_fu_11737_p1;
wire   [6:0] add_ln153_245_fu_12087_p2;
wire  signed [6:0] sext_ln151_485_fu_11925_p1;
wire  signed [6:0] sext_ln151_477_fu_11801_p1;
wire  signed [6:0] sext_ln151_481_fu_11865_p1;
wire  signed [6:0] sext_ln151_479_fu_11833_p1;
wire  signed [6:0] sext_ln153_140_fu_12077_p1;
wire   [2:0] tmp_275_fu_12111_p4;
wire  signed [2:0] mul_res_252_fu_12133_p0;
wire  signed [5:0] sext_ln151_495_fu_12121_p1;
wire  signed [2:0] mul_res_252_fu_12133_p1;
wire  signed [5:0] mul_res_252_fu_12133_p2;
wire   [2:0] tmp_276_fu_12143_p4;
wire  signed [2:0] mul_res_253_fu_12165_p0;
wire  signed [5:0] sext_ln151_497_fu_12153_p1;
wire  signed [2:0] mul_res_253_fu_12165_p1;
wire  signed [5:0] mul_res_253_fu_12165_p2;
wire   [2:0] tmp_277_fu_12175_p4;
wire  signed [2:0] mul_res_254_fu_12197_p0;
wire  signed [5:0] sext_ln151_499_fu_12185_p1;
wire  signed [2:0] mul_res_254_fu_12197_p1;
wire  signed [5:0] mul_res_254_fu_12197_p2;
wire   [2:0] tmp_278_fu_12207_p4;
wire  signed [2:0] mul_res_255_fu_12229_p0;
wire  signed [5:0] sext_ln151_501_fu_12217_p1;
wire  signed [2:0] mul_res_255_fu_12229_p1;
wire  signed [5:0] mul_res_255_fu_12229_p2;
wire   [2:0] tmp_279_fu_12239_p4;
wire  signed [2:0] mul_res_256_fu_12261_p0;
wire  signed [5:0] sext_ln151_503_fu_12249_p1;
wire  signed [2:0] mul_res_256_fu_12261_p1;
wire  signed [5:0] mul_res_256_fu_12261_p2;
wire   [2:0] tmp_280_fu_12271_p4;
wire  signed [2:0] mul_res_257_fu_12293_p0;
wire  signed [5:0] sext_ln151_505_fu_12281_p1;
wire  signed [2:0] mul_res_257_fu_12293_p1;
wire   [2:0] tmp_281_fu_12299_p4;
wire  signed [2:0] mul_res_258_fu_12321_p0;
wire  signed [5:0] sext_ln151_507_fu_12309_p1;
wire  signed [2:0] mul_res_258_fu_12321_p1;
wire  signed [5:0] mul_res_258_fu_12321_p2;
wire   [2:0] tmp_282_fu_12331_p4;
wire  signed [2:0] mul_res_259_fu_12353_p0;
wire  signed [5:0] sext_ln151_509_fu_12341_p1;
wire  signed [2:0] mul_res_259_fu_12353_p1;
wire   [2:0] tmp_283_fu_12359_p4;
wire  signed [2:0] mul_res_260_fu_12381_p0;
wire  signed [5:0] sext_ln151_511_fu_12369_p1;
wire  signed [2:0] mul_res_260_fu_12381_p1;
wire   [2:0] tmp_284_fu_12387_p4;
wire  signed [2:0] mul_res_261_fu_12409_p0;
wire  signed [5:0] sext_ln151_513_fu_12397_p1;
wire  signed [2:0] mul_res_261_fu_12409_p1;
wire  signed [5:0] mul_res_261_fu_12409_p2;
wire   [2:0] tmp_285_fu_12419_p4;
wire  signed [2:0] mul_res_262_fu_12441_p0;
wire  signed [5:0] sext_ln151_515_fu_12429_p1;
wire  signed [2:0] mul_res_262_fu_12441_p1;
wire  signed [5:0] mul_res_262_fu_12441_p2;
wire   [2:0] tmp_286_fu_12451_p4;
wire  signed [2:0] mul_res_263_fu_12473_p0;
wire  signed [5:0] sext_ln151_517_fu_12461_p1;
wire  signed [2:0] mul_res_263_fu_12473_p1;
wire  signed [5:0] mul_res_263_fu_12473_p2;
wire  signed [6:0] sext_ln151_514_fu_12415_p1;
wire  signed [6:0] sext_ln151_516_fu_12447_p1;
wire  signed [6:0] sext_ln151_498_fu_12171_p1;
wire  signed [6:0] sext_ln151_496_fu_12139_p1;
wire   [6:0] add_ln153_257_fu_12489_p2;
wire  signed [6:0] sext_ln151_508_fu_12327_p1;
wire  signed [6:0] sext_ln151_500_fu_12203_p1;
wire  signed [6:0] sext_ln151_504_fu_12267_p1;
wire  signed [6:0] sext_ln151_502_fu_12235_p1;
wire  signed [6:0] sext_ln153_147_fu_12479_p1;
wire   [2:0] tmp_287_fu_12513_p4;
wire  signed [2:0] mul_res_264_fu_12535_p0;
wire  signed [5:0] sext_ln151_518_fu_12523_p1;
wire  signed [2:0] mul_res_264_fu_12535_p1;
wire  signed [5:0] mul_res_264_fu_12535_p2;
wire   [2:0] tmp_288_fu_12545_p4;
wire  signed [2:0] mul_res_265_fu_12567_p0;
wire  signed [5:0] sext_ln151_520_fu_12555_p1;
wire  signed [2:0] mul_res_265_fu_12567_p1;
wire  signed [5:0] mul_res_265_fu_12567_p2;
wire   [2:0] tmp_289_fu_12577_p4;
wire  signed [2:0] mul_res_266_fu_12599_p0;
wire  signed [5:0] sext_ln151_522_fu_12587_p1;
wire  signed [2:0] mul_res_266_fu_12599_p1;
wire  signed [5:0] mul_res_266_fu_12599_p2;
wire   [2:0] tmp_290_fu_12609_p4;
wire  signed [2:0] mul_res_267_fu_12631_p0;
wire  signed [5:0] sext_ln151_524_fu_12619_p1;
wire  signed [2:0] mul_res_267_fu_12631_p1;
wire  signed [5:0] mul_res_267_fu_12631_p2;
wire   [2:0] tmp_291_fu_12641_p4;
wire  signed [2:0] mul_res_268_fu_12663_p0;
wire  signed [5:0] sext_ln151_526_fu_12651_p1;
wire  signed [2:0] mul_res_268_fu_12663_p1;
wire  signed [5:0] mul_res_268_fu_12663_p2;
wire   [2:0] tmp_292_fu_12673_p4;
wire  signed [2:0] mul_res_269_fu_12695_p0;
wire  signed [5:0] sext_ln151_528_fu_12683_p1;
wire  signed [2:0] mul_res_269_fu_12695_p1;
wire   [2:0] tmp_293_fu_12701_p4;
wire  signed [2:0] mul_res_270_fu_12723_p0;
wire  signed [5:0] sext_ln151_530_fu_12711_p1;
wire  signed [2:0] mul_res_270_fu_12723_p1;
wire  signed [5:0] mul_res_270_fu_12723_p2;
wire   [2:0] tmp_294_fu_12733_p4;
wire  signed [2:0] mul_res_271_fu_12755_p0;
wire  signed [5:0] sext_ln151_532_fu_12743_p1;
wire  signed [2:0] mul_res_271_fu_12755_p1;
wire   [2:0] tmp_295_fu_12761_p4;
wire  signed [2:0] mul_res_272_fu_12783_p0;
wire  signed [5:0] sext_ln151_534_fu_12771_p1;
wire  signed [2:0] mul_res_272_fu_12783_p1;
wire   [2:0] tmp_296_fu_12789_p4;
wire  signed [2:0] mul_res_273_fu_12811_p0;
wire  signed [5:0] sext_ln151_536_fu_12799_p1;
wire  signed [2:0] mul_res_273_fu_12811_p1;
wire  signed [5:0] mul_res_273_fu_12811_p2;
wire   [2:0] tmp_297_fu_12821_p4;
wire  signed [2:0] mul_res_274_fu_12843_p0;
wire  signed [5:0] sext_ln151_538_fu_12831_p1;
wire  signed [2:0] mul_res_274_fu_12843_p1;
wire  signed [5:0] mul_res_274_fu_12843_p2;
wire   [2:0] tmp_298_fu_12853_p4;
wire  signed [2:0] mul_res_275_fu_12875_p0;
wire  signed [5:0] sext_ln151_540_fu_12863_p1;
wire  signed [2:0] mul_res_275_fu_12875_p1;
wire  signed [5:0] mul_res_275_fu_12875_p2;
wire  signed [6:0] sext_ln151_537_fu_12817_p1;
wire  signed [6:0] sext_ln151_539_fu_12849_p1;
wire  signed [6:0] sext_ln151_521_fu_12573_p1;
wire  signed [6:0] sext_ln151_519_fu_12541_p1;
wire   [6:0] add_ln153_269_fu_12891_p2;
wire  signed [6:0] sext_ln151_531_fu_12729_p1;
wire  signed [6:0] sext_ln151_523_fu_12605_p1;
wire  signed [6:0] sext_ln151_527_fu_12669_p1;
wire  signed [6:0] sext_ln151_525_fu_12637_p1;
wire  signed [6:0] sext_ln153_154_fu_12881_p1;
wire   [2:0] tmp_299_fu_12915_p4;
wire  signed [2:0] mul_res_276_fu_12937_p0;
wire  signed [5:0] sext_ln151_541_fu_12925_p1;
wire  signed [2:0] mul_res_276_fu_12937_p1;
wire  signed [5:0] mul_res_276_fu_12937_p2;
wire   [2:0] tmp_300_fu_12947_p4;
wire  signed [2:0] mul_res_277_fu_12969_p0;
wire  signed [5:0] sext_ln151_543_fu_12957_p1;
wire  signed [2:0] mul_res_277_fu_12969_p1;
wire  signed [5:0] mul_res_277_fu_12969_p2;
wire   [2:0] tmp_301_fu_12979_p4;
wire  signed [2:0] mul_res_278_fu_13001_p0;
wire  signed [5:0] sext_ln151_545_fu_12989_p1;
wire  signed [2:0] mul_res_278_fu_13001_p1;
wire  signed [5:0] mul_res_278_fu_13001_p2;
wire   [2:0] tmp_302_fu_13011_p4;
wire  signed [2:0] mul_res_279_fu_13033_p0;
wire  signed [5:0] sext_ln151_547_fu_13021_p1;
wire  signed [2:0] mul_res_279_fu_13033_p1;
wire  signed [5:0] mul_res_279_fu_13033_p2;
wire   [2:0] tmp_303_fu_13043_p4;
wire  signed [2:0] mul_res_280_fu_13065_p0;
wire  signed [5:0] sext_ln151_549_fu_13053_p1;
wire  signed [2:0] mul_res_280_fu_13065_p1;
wire  signed [5:0] mul_res_280_fu_13065_p2;
wire   [2:0] tmp_304_fu_13075_p4;
wire  signed [2:0] mul_res_281_fu_13097_p0;
wire  signed [5:0] sext_ln151_551_fu_13085_p1;
wire  signed [2:0] mul_res_281_fu_13097_p1;
wire   [2:0] tmp_305_fu_13103_p4;
wire  signed [2:0] mul_res_282_fu_13125_p0;
wire  signed [5:0] sext_ln151_553_fu_13113_p1;
wire  signed [2:0] mul_res_282_fu_13125_p1;
wire  signed [5:0] mul_res_282_fu_13125_p2;
wire   [2:0] tmp_306_fu_13135_p4;
wire  signed [2:0] mul_res_283_fu_13157_p0;
wire  signed [5:0] sext_ln151_555_fu_13145_p1;
wire  signed [2:0] mul_res_283_fu_13157_p1;
wire   [2:0] tmp_307_fu_13163_p4;
wire  signed [2:0] mul_res_284_fu_13185_p0;
wire  signed [5:0] sext_ln151_557_fu_13173_p1;
wire  signed [2:0] mul_res_284_fu_13185_p1;
wire   [2:0] tmp_308_fu_13191_p4;
wire  signed [2:0] mul_res_285_fu_13213_p0;
wire  signed [5:0] sext_ln151_559_fu_13201_p1;
wire  signed [2:0] mul_res_285_fu_13213_p1;
wire  signed [5:0] mul_res_285_fu_13213_p2;
wire   [2:0] tmp_309_fu_13223_p4;
wire  signed [2:0] mul_res_286_fu_13245_p0;
wire  signed [5:0] sext_ln151_561_fu_13233_p1;
wire  signed [2:0] mul_res_286_fu_13245_p1;
wire  signed [5:0] mul_res_286_fu_13245_p2;
wire   [2:0] tmp_310_fu_13255_p4;
wire  signed [2:0] mul_res_287_fu_13277_p0;
wire  signed [5:0] sext_ln151_563_fu_13265_p1;
wire  signed [2:0] mul_res_287_fu_13277_p1;
wire  signed [5:0] mul_res_287_fu_13277_p2;
wire  signed [6:0] sext_ln151_560_fu_13219_p1;
wire  signed [6:0] sext_ln151_562_fu_13251_p1;
wire  signed [6:0] sext_ln151_544_fu_12975_p1;
wire  signed [6:0] sext_ln151_542_fu_12943_p1;
wire   [6:0] add_ln153_281_fu_13293_p2;
wire  signed [6:0] sext_ln151_554_fu_13131_p1;
wire  signed [6:0] sext_ln151_546_fu_13007_p1;
wire  signed [6:0] sext_ln151_550_fu_13071_p1;
wire  signed [6:0] sext_ln151_548_fu_13039_p1;
wire  signed [6:0] sext_ln153_161_fu_13283_p1;
wire  signed [2:0] mul_res_288_fu_13328_p0;
wire  signed [2:0] mul_res_288_fu_13328_p1;
wire  signed [5:0] sext_ln151_564_fu_13317_p1;
wire  signed [5:0] mul_res_288_fu_13328_p2;
wire  signed [2:0] mul_res_289_fu_13349_p0;
wire  signed [2:0] mul_res_289_fu_13349_p1;
wire  signed [5:0] sext_ln151_566_fu_13338_p1;
wire  signed [5:0] mul_res_289_fu_13349_p2;
wire  signed [2:0] mul_res_290_fu_13370_p0;
wire  signed [2:0] mul_res_290_fu_13370_p1;
wire  signed [5:0] sext_ln151_568_fu_13359_p1;
wire  signed [5:0] mul_res_290_fu_13370_p2;
wire  signed [2:0] mul_res_291_fu_13391_p0;
wire  signed [2:0] mul_res_291_fu_13391_p1;
wire  signed [5:0] sext_ln151_570_fu_13380_p1;
wire  signed [5:0] mul_res_291_fu_13391_p2;
wire  signed [2:0] mul_res_292_fu_13412_p0;
wire  signed [2:0] mul_res_292_fu_13412_p1;
wire  signed [5:0] sext_ln151_572_fu_13401_p1;
wire  signed [5:0] mul_res_292_fu_13412_p2;
wire  signed [2:0] mul_res_293_fu_13433_p0;
wire  signed [2:0] mul_res_293_fu_13433_p1;
wire  signed [5:0] sext_ln151_574_fu_13422_p1;
wire  signed [2:0] mul_res_294_fu_13450_p0;
wire  signed [2:0] mul_res_294_fu_13450_p1;
wire  signed [5:0] sext_ln151_576_fu_13439_p1;
wire  signed [5:0] mul_res_294_fu_13450_p2;
wire  signed [2:0] mul_res_295_fu_13471_p0;
wire  signed [2:0] mul_res_295_fu_13471_p1;
wire  signed [5:0] sext_ln151_578_fu_13460_p1;
wire  signed [2:0] mul_res_296_fu_13488_p0;
wire  signed [2:0] mul_res_296_fu_13488_p1;
wire  signed [5:0] sext_ln151_580_fu_13477_p1;
wire  signed [2:0] mul_res_297_fu_13505_p0;
wire  signed [2:0] mul_res_297_fu_13505_p1;
wire  signed [5:0] sext_ln151_582_fu_13494_p1;
wire  signed [5:0] mul_res_297_fu_13505_p2;
wire  signed [2:0] mul_res_298_fu_13526_p0;
wire  signed [2:0] mul_res_298_fu_13526_p1;
wire  signed [5:0] sext_ln151_584_fu_13515_p1;
wire  signed [5:0] mul_res_298_fu_13526_p2;
wire  signed [2:0] mul_res_299_fu_13547_p0;
wire  signed [2:0] mul_res_299_fu_13547_p1;
wire  signed [5:0] sext_ln151_586_fu_13536_p1;
wire  signed [5:0] mul_res_299_fu_13547_p2;
wire  signed [6:0] sext_ln151_583_fu_13511_p1;
wire  signed [6:0] sext_ln151_585_fu_13532_p1;
wire  signed [6:0] sext_ln151_567_fu_13355_p1;
wire  signed [6:0] sext_ln151_565_fu_13334_p1;
wire   [6:0] add_ln153_293_fu_13563_p2;
wire  signed [6:0] sext_ln151_577_fu_13456_p1;
wire  signed [6:0] sext_ln151_569_fu_13376_p1;
wire  signed [6:0] sext_ln151_573_fu_13418_p1;
wire  signed [6:0] sext_ln151_571_fu_13397_p1;
wire  signed [6:0] sext_ln153_168_fu_13553_p1;
wire  signed [2:0] mul_res_300_fu_13595_p0;
wire  signed [2:0] mul_res_300_fu_13595_p1;
wire  signed [5:0] mul_res_300_fu_13595_p2;
wire  signed [2:0] mul_res_301_fu_13613_p0;
wire  signed [2:0] mul_res_301_fu_13613_p1;
wire  signed [5:0] mul_res_301_fu_13613_p2;
wire  signed [2:0] mul_res_302_fu_13631_p0;
wire  signed [2:0] mul_res_302_fu_13631_p1;
wire  signed [5:0] mul_res_302_fu_13631_p2;
wire  signed [2:0] mul_res_303_fu_13649_p0;
wire  signed [2:0] mul_res_303_fu_13649_p1;
wire  signed [5:0] mul_res_303_fu_13649_p2;
wire  signed [2:0] mul_res_304_fu_13667_p0;
wire  signed [2:0] mul_res_304_fu_13667_p1;
wire  signed [5:0] mul_res_304_fu_13667_p2;
wire  signed [2:0] mul_res_305_fu_13685_p0;
wire  signed [2:0] mul_res_305_fu_13685_p1;
wire  signed [2:0] mul_res_306_fu_13699_p0;
wire  signed [2:0] mul_res_306_fu_13699_p1;
wire  signed [5:0] mul_res_306_fu_13699_p2;
wire  signed [2:0] mul_res_307_fu_13717_p0;
wire  signed [2:0] mul_res_307_fu_13717_p1;
wire  signed [2:0] mul_res_308_fu_13731_p0;
wire  signed [2:0] mul_res_308_fu_13731_p1;
wire  signed [2:0] mul_res_309_fu_13745_p0;
wire  signed [2:0] mul_res_309_fu_13745_p1;
wire  signed [5:0] mul_res_309_fu_13745_p2;
wire  signed [2:0] mul_res_310_fu_13763_p0;
wire  signed [2:0] mul_res_310_fu_13763_p1;
wire  signed [5:0] mul_res_310_fu_13763_p2;
wire  signed [2:0] mul_res_311_fu_13781_p0;
wire  signed [2:0] mul_res_311_fu_13781_p1;
wire  signed [5:0] mul_res_311_fu_13781_p2;
wire  signed [6:0] sext_ln151_596_fu_13751_p1;
wire  signed [6:0] sext_ln151_597_fu_13769_p1;
wire  signed [6:0] sext_ln151_588_fu_13619_p1;
wire  signed [6:0] sext_ln151_587_fu_13601_p1;
wire   [6:0] add_ln153_305_fu_13797_p2;
wire  signed [6:0] sext_ln151_593_fu_13705_p1;
wire  signed [6:0] sext_ln151_589_fu_13637_p1;
wire  signed [6:0] sext_ln151_591_fu_13673_p1;
wire  signed [6:0] sext_ln151_590_fu_13655_p1;
wire  signed [6:0] sext_ln153_175_fu_13787_p1;
wire  signed [2:0] mul_res_312_fu_13829_p0;
wire  signed [2:0] mul_res_312_fu_13829_p1;
wire  signed [5:0] mul_res_312_fu_13829_p2;
wire  signed [2:0] mul_res_313_fu_13847_p0;
wire  signed [2:0] mul_res_313_fu_13847_p1;
wire  signed [5:0] mul_res_313_fu_13847_p2;
wire  signed [2:0] mul_res_314_fu_13865_p0;
wire  signed [2:0] mul_res_314_fu_13865_p1;
wire  signed [5:0] mul_res_314_fu_13865_p2;
wire  signed [2:0] mul_res_315_fu_13883_p0;
wire  signed [2:0] mul_res_315_fu_13883_p1;
wire  signed [5:0] mul_res_315_fu_13883_p2;
wire  signed [2:0] mul_res_316_fu_13901_p0;
wire  signed [2:0] mul_res_316_fu_13901_p1;
wire  signed [5:0] mul_res_316_fu_13901_p2;
wire  signed [2:0] mul_res_317_fu_13919_p0;
wire  signed [2:0] mul_res_317_fu_13919_p1;
wire  signed [2:0] mul_res_318_fu_13933_p0;
wire  signed [2:0] mul_res_318_fu_13933_p1;
wire  signed [5:0] mul_res_318_fu_13933_p2;
wire  signed [2:0] mul_res_319_fu_13951_p0;
wire  signed [2:0] mul_res_319_fu_13951_p1;
wire  signed [2:0] mul_res_320_fu_13965_p0;
wire  signed [2:0] mul_res_320_fu_13965_p1;
wire  signed [2:0] mul_res_321_fu_13979_p0;
wire  signed [2:0] mul_res_321_fu_13979_p1;
wire  signed [5:0] mul_res_321_fu_13979_p2;
wire  signed [2:0] mul_res_322_fu_13997_p0;
wire  signed [2:0] mul_res_322_fu_13997_p1;
wire  signed [5:0] mul_res_322_fu_13997_p2;
wire  signed [2:0] mul_res_323_fu_14015_p0;
wire  signed [2:0] mul_res_323_fu_14015_p1;
wire  signed [5:0] mul_res_323_fu_14015_p2;
wire  signed [6:0] sext_ln151_607_fu_13985_p1;
wire  signed [6:0] sext_ln151_608_fu_14003_p1;
wire  signed [6:0] sext_ln151_599_fu_13853_p1;
wire  signed [6:0] sext_ln151_598_fu_13835_p1;
wire   [6:0] add_ln153_317_fu_14031_p2;
wire  signed [6:0] sext_ln151_604_fu_13939_p1;
wire  signed [6:0] sext_ln151_600_fu_13871_p1;
wire  signed [6:0] sext_ln151_602_fu_13907_p1;
wire  signed [6:0] sext_ln151_601_fu_13889_p1;
wire  signed [6:0] sext_ln153_182_fu_14021_p1;
wire  signed [2:0] mul_res_324_fu_14063_p0;
wire  signed [2:0] mul_res_324_fu_14063_p1;
wire  signed [5:0] mul_res_324_fu_14063_p2;
wire  signed [2:0] mul_res_325_fu_14081_p0;
wire  signed [2:0] mul_res_325_fu_14081_p1;
wire  signed [5:0] mul_res_325_fu_14081_p2;
wire  signed [2:0] mul_res_326_fu_14099_p0;
wire  signed [2:0] mul_res_326_fu_14099_p1;
wire  signed [5:0] mul_res_326_fu_14099_p2;
wire  signed [2:0] mul_res_327_fu_14117_p0;
wire  signed [2:0] mul_res_327_fu_14117_p1;
wire  signed [5:0] mul_res_327_fu_14117_p2;
wire  signed [2:0] mul_res_328_fu_14135_p0;
wire  signed [2:0] mul_res_328_fu_14135_p1;
wire  signed [5:0] mul_res_328_fu_14135_p2;
wire  signed [2:0] mul_res_329_fu_14153_p0;
wire  signed [2:0] mul_res_329_fu_14153_p1;
wire  signed [2:0] mul_res_330_fu_14167_p0;
wire  signed [2:0] mul_res_330_fu_14167_p1;
wire  signed [5:0] mul_res_330_fu_14167_p2;
wire  signed [2:0] mul_res_331_fu_14185_p0;
wire  signed [2:0] mul_res_331_fu_14185_p1;
wire  signed [2:0] mul_res_332_fu_14199_p0;
wire  signed [2:0] mul_res_332_fu_14199_p1;
wire  signed [2:0] mul_res_333_fu_14213_p0;
wire  signed [2:0] mul_res_333_fu_14213_p1;
wire  signed [5:0] mul_res_333_fu_14213_p2;
wire  signed [2:0] mul_res_334_fu_14231_p0;
wire  signed [2:0] mul_res_334_fu_14231_p1;
wire  signed [5:0] mul_res_334_fu_14231_p2;
wire  signed [2:0] mul_res_335_fu_14249_p0;
wire  signed [2:0] mul_res_335_fu_14249_p1;
wire  signed [5:0] mul_res_335_fu_14249_p2;
wire  signed [6:0] sext_ln151_618_fu_14219_p1;
wire  signed [6:0] sext_ln151_619_fu_14237_p1;
wire  signed [6:0] sext_ln151_610_fu_14087_p1;
wire  signed [6:0] sext_ln151_609_fu_14069_p1;
wire   [6:0] add_ln153_329_fu_14265_p2;
wire  signed [6:0] sext_ln151_615_fu_14173_p1;
wire  signed [6:0] sext_ln151_611_fu_14105_p1;
wire  signed [6:0] sext_ln151_613_fu_14141_p1;
wire  signed [6:0] sext_ln151_612_fu_14123_p1;
wire  signed [6:0] sext_ln153_189_fu_14255_p1;
wire  signed [2:0] mul_res_336_fu_14297_p0;
wire  signed [2:0] mul_res_336_fu_14297_p1;
wire  signed [5:0] mul_res_336_fu_14297_p2;
wire  signed [2:0] mul_res_337_fu_14315_p0;
wire  signed [2:0] mul_res_337_fu_14315_p1;
wire  signed [5:0] mul_res_337_fu_14315_p2;
wire  signed [2:0] mul_res_338_fu_14333_p0;
wire  signed [2:0] mul_res_338_fu_14333_p1;
wire  signed [5:0] mul_res_338_fu_14333_p2;
wire  signed [2:0] mul_res_339_fu_14351_p0;
wire  signed [2:0] mul_res_339_fu_14351_p1;
wire  signed [5:0] mul_res_339_fu_14351_p2;
wire  signed [2:0] mul_res_340_fu_14369_p0;
wire  signed [2:0] mul_res_340_fu_14369_p1;
wire  signed [5:0] mul_res_340_fu_14369_p2;
wire  signed [2:0] mul_res_341_fu_14387_p0;
wire  signed [2:0] mul_res_341_fu_14387_p1;
wire  signed [2:0] mul_res_342_fu_14401_p0;
wire  signed [2:0] mul_res_342_fu_14401_p1;
wire  signed [5:0] mul_res_342_fu_14401_p2;
wire  signed [2:0] mul_res_343_fu_14419_p0;
wire  signed [2:0] mul_res_343_fu_14419_p1;
wire  signed [2:0] mul_res_344_fu_14433_p0;
wire  signed [2:0] mul_res_344_fu_14433_p1;
wire  signed [2:0] mul_res_345_fu_14447_p0;
wire  signed [2:0] mul_res_345_fu_14447_p1;
wire  signed [5:0] mul_res_345_fu_14447_p2;
wire  signed [2:0] mul_res_346_fu_14465_p0;
wire  signed [2:0] mul_res_346_fu_14465_p1;
wire  signed [5:0] mul_res_346_fu_14465_p2;
wire  signed [2:0] mul_res_347_fu_14483_p0;
wire  signed [2:0] mul_res_347_fu_14483_p1;
wire  signed [5:0] mul_res_347_fu_14483_p2;
wire  signed [6:0] sext_ln151_629_fu_14453_p1;
wire  signed [6:0] sext_ln151_630_fu_14471_p1;
wire  signed [6:0] sext_ln151_621_fu_14321_p1;
wire  signed [6:0] sext_ln151_620_fu_14303_p1;
wire   [6:0] add_ln153_341_fu_14499_p2;
wire  signed [6:0] sext_ln151_626_fu_14407_p1;
wire  signed [6:0] sext_ln151_622_fu_14339_p1;
wire  signed [6:0] sext_ln151_624_fu_14375_p1;
wire  signed [6:0] sext_ln151_623_fu_14357_p1;
wire  signed [6:0] sext_ln153_196_fu_14489_p1;
wire  signed [2:0] mul_res_348_fu_14531_p0;
wire  signed [2:0] mul_res_348_fu_14531_p1;
wire  signed [5:0] mul_res_348_fu_14531_p2;
wire  signed [2:0] mul_res_349_fu_14549_p0;
wire  signed [2:0] mul_res_349_fu_14549_p1;
wire  signed [5:0] mul_res_349_fu_14549_p2;
wire  signed [2:0] mul_res_350_fu_14567_p0;
wire  signed [2:0] mul_res_350_fu_14567_p1;
wire  signed [5:0] mul_res_350_fu_14567_p2;
wire  signed [2:0] mul_res_351_fu_14585_p0;
wire  signed [2:0] mul_res_351_fu_14585_p1;
wire  signed [5:0] mul_res_351_fu_14585_p2;
wire  signed [2:0] mul_res_352_fu_14603_p0;
wire  signed [2:0] mul_res_352_fu_14603_p1;
wire  signed [5:0] mul_res_352_fu_14603_p2;
wire  signed [2:0] mul_res_353_fu_14621_p0;
wire  signed [2:0] mul_res_353_fu_14621_p1;
wire  signed [2:0] mul_res_354_fu_14635_p0;
wire  signed [2:0] mul_res_354_fu_14635_p1;
wire  signed [5:0] mul_res_354_fu_14635_p2;
wire  signed [2:0] mul_res_355_fu_14653_p0;
wire  signed [2:0] mul_res_355_fu_14653_p1;
wire  signed [2:0] mul_res_356_fu_14667_p0;
wire  signed [2:0] mul_res_356_fu_14667_p1;
wire  signed [2:0] mul_res_357_fu_14681_p0;
wire  signed [2:0] mul_res_357_fu_14681_p1;
wire  signed [5:0] mul_res_357_fu_14681_p2;
wire  signed [2:0] mul_res_358_fu_14699_p0;
wire  signed [2:0] mul_res_358_fu_14699_p1;
wire  signed [5:0] mul_res_358_fu_14699_p2;
wire  signed [2:0] mul_res_359_fu_14717_p0;
wire  signed [2:0] mul_res_359_fu_14717_p1;
wire  signed [5:0] mul_res_359_fu_14717_p2;
wire  signed [6:0] sext_ln151_640_fu_14687_p1;
wire  signed [6:0] sext_ln151_641_fu_14705_p1;
wire  signed [6:0] sext_ln151_632_fu_14555_p1;
wire  signed [6:0] sext_ln151_631_fu_14537_p1;
wire   [6:0] add_ln153_353_fu_14733_p2;
wire  signed [6:0] sext_ln151_637_fu_14641_p1;
wire  signed [6:0] sext_ln151_633_fu_14573_p1;
wire  signed [6:0] sext_ln151_635_fu_14609_p1;
wire  signed [6:0] sext_ln151_634_fu_14591_p1;
wire  signed [6:0] sext_ln153_203_fu_14723_p1;
wire  signed [2:0] mul_res_360_fu_14765_p0;
wire  signed [2:0] mul_res_360_fu_14765_p1;
wire  signed [5:0] mul_res_360_fu_14765_p2;
wire  signed [2:0] mul_res_361_fu_14783_p0;
wire  signed [2:0] mul_res_361_fu_14783_p1;
wire  signed [5:0] mul_res_361_fu_14783_p2;
wire  signed [2:0] mul_res_362_fu_14801_p0;
wire  signed [2:0] mul_res_362_fu_14801_p1;
wire  signed [5:0] mul_res_362_fu_14801_p2;
wire  signed [2:0] mul_res_363_fu_14819_p0;
wire  signed [2:0] mul_res_363_fu_14819_p1;
wire  signed [5:0] mul_res_363_fu_14819_p2;
wire  signed [2:0] mul_res_364_fu_14837_p0;
wire  signed [2:0] mul_res_364_fu_14837_p1;
wire  signed [5:0] mul_res_364_fu_14837_p2;
wire  signed [2:0] mul_res_365_fu_14855_p0;
wire  signed [2:0] mul_res_365_fu_14855_p1;
wire  signed [2:0] mul_res_366_fu_14869_p0;
wire  signed [2:0] mul_res_366_fu_14869_p1;
wire  signed [5:0] mul_res_366_fu_14869_p2;
wire  signed [2:0] mul_res_367_fu_14887_p0;
wire  signed [2:0] mul_res_367_fu_14887_p1;
wire  signed [2:0] mul_res_368_fu_14901_p0;
wire  signed [2:0] mul_res_368_fu_14901_p1;
wire  signed [2:0] mul_res_369_fu_14915_p0;
wire  signed [2:0] mul_res_369_fu_14915_p1;
wire  signed [5:0] mul_res_369_fu_14915_p2;
wire  signed [2:0] mul_res_370_fu_14933_p0;
wire  signed [2:0] mul_res_370_fu_14933_p1;
wire  signed [5:0] mul_res_370_fu_14933_p2;
wire  signed [2:0] mul_res_371_fu_14951_p0;
wire  signed [2:0] mul_res_371_fu_14951_p1;
wire  signed [5:0] mul_res_371_fu_14951_p2;
wire  signed [6:0] sext_ln151_651_fu_14921_p1;
wire  signed [6:0] sext_ln151_652_fu_14939_p1;
wire  signed [6:0] sext_ln151_643_fu_14789_p1;
wire  signed [6:0] sext_ln151_642_fu_14771_p1;
wire   [6:0] add_ln153_365_fu_14967_p2;
wire  signed [6:0] sext_ln151_648_fu_14875_p1;
wire  signed [6:0] sext_ln151_644_fu_14807_p1;
wire  signed [6:0] sext_ln151_646_fu_14843_p1;
wire  signed [6:0] sext_ln151_645_fu_14825_p1;
wire  signed [6:0] sext_ln153_210_fu_14957_p1;
wire  signed [2:0] mul_res_372_fu_14999_p0;
wire  signed [2:0] mul_res_372_fu_14999_p1;
wire  signed [5:0] mul_res_372_fu_14999_p2;
wire  signed [2:0] mul_res_373_fu_15017_p0;
wire  signed [2:0] mul_res_373_fu_15017_p1;
wire  signed [5:0] mul_res_373_fu_15017_p2;
wire  signed [2:0] mul_res_374_fu_15035_p0;
wire  signed [2:0] mul_res_374_fu_15035_p1;
wire  signed [5:0] mul_res_374_fu_15035_p2;
wire  signed [2:0] mul_res_375_fu_15053_p0;
wire  signed [2:0] mul_res_375_fu_15053_p1;
wire  signed [5:0] mul_res_375_fu_15053_p2;
wire  signed [2:0] mul_res_376_fu_15071_p0;
wire  signed [2:0] mul_res_376_fu_15071_p1;
wire  signed [5:0] mul_res_376_fu_15071_p2;
wire  signed [2:0] mul_res_377_fu_15089_p0;
wire  signed [2:0] mul_res_377_fu_15089_p1;
wire  signed [2:0] mul_res_378_fu_15103_p0;
wire  signed [2:0] mul_res_378_fu_15103_p1;
wire  signed [5:0] mul_res_378_fu_15103_p2;
wire  signed [2:0] mul_res_379_fu_15121_p0;
wire  signed [2:0] mul_res_379_fu_15121_p1;
wire  signed [2:0] mul_res_380_fu_15135_p0;
wire  signed [2:0] mul_res_380_fu_15135_p1;
wire  signed [2:0] mul_res_381_fu_15149_p0;
wire  signed [2:0] mul_res_381_fu_15149_p1;
wire  signed [5:0] mul_res_381_fu_15149_p2;
wire  signed [2:0] mul_res_382_fu_15167_p0;
wire  signed [2:0] mul_res_382_fu_15167_p1;
wire  signed [5:0] mul_res_382_fu_15167_p2;
wire  signed [2:0] mul_res_383_fu_15185_p0;
wire  signed [2:0] mul_res_383_fu_15185_p1;
wire  signed [5:0] mul_res_383_fu_15185_p2;
wire  signed [6:0] sext_ln151_662_fu_15155_p1;
wire  signed [6:0] sext_ln151_663_fu_15173_p1;
wire  signed [6:0] sext_ln151_654_fu_15023_p1;
wire  signed [6:0] sext_ln151_653_fu_15005_p1;
wire   [6:0] add_ln153_377_fu_15201_p2;
wire  signed [6:0] sext_ln151_659_fu_15109_p1;
wire  signed [6:0] sext_ln151_655_fu_15041_p1;
wire  signed [6:0] sext_ln151_657_fu_15077_p1;
wire  signed [6:0] sext_ln151_656_fu_15059_p1;
wire  signed [6:0] sext_ln153_217_fu_15191_p1;
wire  signed [2:0] mul_res_384_fu_15233_p0;
wire  signed [2:0] mul_res_384_fu_15233_p1;
wire  signed [5:0] mul_res_384_fu_15233_p2;
wire  signed [2:0] mul_res_385_fu_15251_p0;
wire  signed [2:0] mul_res_385_fu_15251_p1;
wire  signed [5:0] mul_res_385_fu_15251_p2;
wire  signed [2:0] mul_res_386_fu_15269_p0;
wire  signed [2:0] mul_res_386_fu_15269_p1;
wire  signed [5:0] mul_res_386_fu_15269_p2;
wire  signed [2:0] mul_res_387_fu_15287_p0;
wire  signed [2:0] mul_res_387_fu_15287_p1;
wire  signed [5:0] mul_res_387_fu_15287_p2;
wire  signed [2:0] mul_res_388_fu_15305_p0;
wire  signed [2:0] mul_res_388_fu_15305_p1;
wire  signed [5:0] mul_res_388_fu_15305_p2;
wire  signed [2:0] mul_res_389_fu_15323_p0;
wire  signed [2:0] mul_res_389_fu_15323_p1;
wire  signed [2:0] mul_res_390_fu_15337_p0;
wire  signed [2:0] mul_res_390_fu_15337_p1;
wire  signed [5:0] mul_res_390_fu_15337_p2;
wire  signed [2:0] mul_res_391_fu_15355_p0;
wire  signed [2:0] mul_res_391_fu_15355_p1;
wire  signed [2:0] mul_res_392_fu_15369_p0;
wire  signed [2:0] mul_res_392_fu_15369_p1;
wire  signed [2:0] mul_res_393_fu_15383_p0;
wire  signed [2:0] mul_res_393_fu_15383_p1;
wire  signed [5:0] mul_res_393_fu_15383_p2;
wire  signed [2:0] mul_res_394_fu_15401_p0;
wire  signed [2:0] mul_res_394_fu_15401_p1;
wire  signed [5:0] mul_res_394_fu_15401_p2;
wire  signed [2:0] mul_res_395_fu_15419_p0;
wire  signed [2:0] mul_res_395_fu_15419_p1;
wire  signed [5:0] mul_res_395_fu_15419_p2;
wire  signed [6:0] sext_ln151_673_fu_15389_p1;
wire  signed [6:0] sext_ln151_674_fu_15407_p1;
wire  signed [6:0] sext_ln151_665_fu_15257_p1;
wire  signed [6:0] sext_ln151_664_fu_15239_p1;
wire   [6:0] add_ln153_389_fu_15435_p2;
wire  signed [6:0] sext_ln151_670_fu_15343_p1;
wire  signed [6:0] sext_ln151_666_fu_15275_p1;
wire  signed [6:0] sext_ln151_668_fu_15311_p1;
wire  signed [6:0] sext_ln151_667_fu_15293_p1;
wire  signed [6:0] sext_ln153_224_fu_15425_p1;
wire  signed [2:0] mul_res_396_fu_15467_p0;
wire  signed [2:0] mul_res_396_fu_15467_p1;
wire  signed [5:0] mul_res_396_fu_15467_p2;
wire  signed [2:0] mul_res_397_fu_15485_p0;
wire  signed [2:0] mul_res_397_fu_15485_p1;
wire  signed [5:0] mul_res_397_fu_15485_p2;
wire  signed [2:0] mul_res_398_fu_15503_p0;
wire  signed [2:0] mul_res_398_fu_15503_p1;
wire  signed [5:0] mul_res_398_fu_15503_p2;
wire  signed [2:0] mul_res_399_fu_15521_p0;
wire  signed [2:0] mul_res_399_fu_15521_p1;
wire  signed [5:0] mul_res_399_fu_15521_p2;
wire  signed [2:0] mul_res_400_fu_15539_p0;
wire  signed [2:0] mul_res_400_fu_15539_p1;
wire  signed [5:0] mul_res_400_fu_15539_p2;
wire  signed [2:0] mul_res_401_fu_15557_p0;
wire  signed [2:0] mul_res_401_fu_15557_p1;
wire  signed [2:0] mul_res_402_fu_15571_p0;
wire  signed [2:0] mul_res_402_fu_15571_p1;
wire  signed [5:0] mul_res_402_fu_15571_p2;
wire  signed [2:0] mul_res_403_fu_15589_p0;
wire  signed [2:0] mul_res_403_fu_15589_p1;
wire  signed [2:0] mul_res_404_fu_15603_p0;
wire  signed [2:0] mul_res_404_fu_15603_p1;
wire  signed [2:0] mul_res_405_fu_15617_p0;
wire  signed [2:0] mul_res_405_fu_15617_p1;
wire  signed [5:0] mul_res_405_fu_15617_p2;
wire  signed [2:0] mul_res_406_fu_15635_p0;
wire  signed [2:0] mul_res_406_fu_15635_p1;
wire  signed [5:0] mul_res_406_fu_15635_p2;
wire  signed [2:0] mul_res_407_fu_15653_p0;
wire  signed [2:0] mul_res_407_fu_15653_p1;
wire  signed [5:0] mul_res_407_fu_15653_p2;
wire  signed [6:0] sext_ln151_684_fu_15623_p1;
wire  signed [6:0] sext_ln151_685_fu_15641_p1;
wire  signed [6:0] sext_ln151_676_fu_15491_p1;
wire  signed [6:0] sext_ln151_675_fu_15473_p1;
wire   [6:0] add_ln153_401_fu_15669_p2;
wire  signed [6:0] sext_ln151_681_fu_15577_p1;
wire  signed [6:0] sext_ln151_677_fu_15509_p1;
wire  signed [6:0] sext_ln151_679_fu_15545_p1;
wire  signed [6:0] sext_ln151_678_fu_15527_p1;
wire  signed [6:0] sext_ln153_231_fu_15659_p1;
wire  signed [2:0] mul_res_408_fu_15701_p0;
wire  signed [2:0] mul_res_408_fu_15701_p1;
wire  signed [5:0] mul_res_408_fu_15701_p2;
wire  signed [2:0] mul_res_409_fu_15719_p0;
wire  signed [2:0] mul_res_409_fu_15719_p1;
wire  signed [5:0] mul_res_409_fu_15719_p2;
wire  signed [2:0] mul_res_410_fu_15737_p0;
wire  signed [2:0] mul_res_410_fu_15737_p1;
wire  signed [5:0] mul_res_410_fu_15737_p2;
wire  signed [2:0] mul_res_411_fu_15755_p0;
wire  signed [2:0] mul_res_411_fu_15755_p1;
wire  signed [5:0] mul_res_411_fu_15755_p2;
wire  signed [2:0] mul_res_412_fu_15773_p0;
wire  signed [2:0] mul_res_412_fu_15773_p1;
wire  signed [5:0] mul_res_412_fu_15773_p2;
wire  signed [2:0] mul_res_413_fu_15791_p0;
wire  signed [2:0] mul_res_413_fu_15791_p1;
wire  signed [2:0] mul_res_414_fu_15805_p0;
wire  signed [2:0] mul_res_414_fu_15805_p1;
wire  signed [5:0] mul_res_414_fu_15805_p2;
wire  signed [2:0] mul_res_415_fu_15823_p0;
wire  signed [2:0] mul_res_415_fu_15823_p1;
wire  signed [2:0] mul_res_416_fu_15837_p0;
wire  signed [2:0] mul_res_416_fu_15837_p1;
wire  signed [2:0] mul_res_417_fu_15851_p0;
wire  signed [2:0] mul_res_417_fu_15851_p1;
wire  signed [5:0] mul_res_417_fu_15851_p2;
wire  signed [2:0] mul_res_418_fu_15869_p0;
wire  signed [2:0] mul_res_418_fu_15869_p1;
wire  signed [5:0] mul_res_418_fu_15869_p2;
wire  signed [2:0] mul_res_419_fu_15887_p0;
wire  signed [2:0] mul_res_419_fu_15887_p1;
wire  signed [5:0] mul_res_419_fu_15887_p2;
wire  signed [6:0] sext_ln151_695_fu_15857_p1;
wire  signed [6:0] sext_ln151_696_fu_15875_p1;
wire  signed [6:0] sext_ln151_687_fu_15725_p1;
wire  signed [6:0] sext_ln151_686_fu_15707_p1;
wire   [6:0] add_ln153_413_fu_15903_p2;
wire  signed [6:0] sext_ln151_692_fu_15811_p1;
wire  signed [6:0] sext_ln151_688_fu_15743_p1;
wire  signed [6:0] sext_ln151_690_fu_15779_p1;
wire  signed [6:0] sext_ln151_689_fu_15761_p1;
wire  signed [6:0] sext_ln153_238_fu_15893_p1;
wire  signed [2:0] mul_res_420_fu_15935_p0;
wire  signed [2:0] mul_res_420_fu_15935_p1;
wire  signed [5:0] mul_res_420_fu_15935_p2;
wire  signed [2:0] mul_res_421_fu_15953_p0;
wire  signed [2:0] mul_res_421_fu_15953_p1;
wire  signed [5:0] mul_res_421_fu_15953_p2;
wire  signed [2:0] mul_res_422_fu_15971_p0;
wire  signed [2:0] mul_res_422_fu_15971_p1;
wire  signed [5:0] mul_res_422_fu_15971_p2;
wire  signed [2:0] mul_res_423_fu_15989_p0;
wire  signed [2:0] mul_res_423_fu_15989_p1;
wire  signed [5:0] mul_res_423_fu_15989_p2;
wire  signed [2:0] mul_res_424_fu_16007_p0;
wire  signed [2:0] mul_res_424_fu_16007_p1;
wire  signed [5:0] mul_res_424_fu_16007_p2;
wire  signed [2:0] mul_res_425_fu_16025_p0;
wire  signed [2:0] mul_res_425_fu_16025_p1;
wire  signed [2:0] mul_res_426_fu_16039_p0;
wire  signed [2:0] mul_res_426_fu_16039_p1;
wire  signed [5:0] mul_res_426_fu_16039_p2;
wire  signed [2:0] mul_res_427_fu_16057_p0;
wire  signed [2:0] mul_res_427_fu_16057_p1;
wire  signed [2:0] mul_res_428_fu_16071_p0;
wire  signed [2:0] mul_res_428_fu_16071_p1;
wire  signed [2:0] mul_res_429_fu_16085_p0;
wire  signed [2:0] mul_res_429_fu_16085_p1;
wire  signed [5:0] mul_res_429_fu_16085_p2;
wire  signed [2:0] mul_res_430_fu_16103_p0;
wire  signed [2:0] mul_res_430_fu_16103_p1;
wire  signed [5:0] mul_res_430_fu_16103_p2;
wire  signed [2:0] mul_res_431_fu_16121_p0;
wire  signed [2:0] mul_res_431_fu_16121_p1;
wire  signed [5:0] mul_res_431_fu_16121_p2;
wire  signed [6:0] sext_ln151_706_fu_16091_p1;
wire  signed [6:0] sext_ln151_707_fu_16109_p1;
wire  signed [6:0] sext_ln151_698_fu_15959_p1;
wire  signed [6:0] sext_ln151_697_fu_15941_p1;
wire   [6:0] add_ln153_425_fu_16137_p2;
wire  signed [6:0] sext_ln151_703_fu_16045_p1;
wire  signed [6:0] sext_ln151_699_fu_15977_p1;
wire  signed [6:0] sext_ln151_701_fu_16013_p1;
wire  signed [6:0] sext_ln151_700_fu_15995_p1;
wire  signed [6:0] sext_ln153_245_fu_16127_p1;
wire  signed [2:0] mul_res_432_fu_16169_p0;
wire  signed [2:0] mul_res_432_fu_16169_p1;
wire  signed [5:0] mul_res_432_fu_16169_p2;
wire  signed [2:0] mul_res_433_fu_16187_p0;
wire  signed [2:0] mul_res_433_fu_16187_p1;
wire  signed [5:0] mul_res_433_fu_16187_p2;
wire  signed [2:0] mul_res_434_fu_16205_p0;
wire  signed [2:0] mul_res_434_fu_16205_p1;
wire  signed [5:0] mul_res_434_fu_16205_p2;
wire  signed [2:0] mul_res_435_fu_16223_p0;
wire  signed [2:0] mul_res_435_fu_16223_p1;
wire  signed [5:0] mul_res_435_fu_16223_p2;
wire  signed [2:0] mul_res_436_fu_16241_p0;
wire  signed [2:0] mul_res_436_fu_16241_p1;
wire  signed [5:0] mul_res_436_fu_16241_p2;
wire  signed [2:0] mul_res_437_fu_16259_p0;
wire  signed [2:0] mul_res_437_fu_16259_p1;
wire  signed [2:0] mul_res_438_fu_16273_p0;
wire  signed [2:0] mul_res_438_fu_16273_p1;
wire  signed [5:0] mul_res_438_fu_16273_p2;
wire  signed [2:0] mul_res_439_fu_16291_p0;
wire  signed [2:0] mul_res_439_fu_16291_p1;
wire  signed [2:0] mul_res_440_fu_16305_p0;
wire  signed [2:0] mul_res_440_fu_16305_p1;
wire  signed [2:0] mul_res_441_fu_16319_p0;
wire  signed [2:0] mul_res_441_fu_16319_p1;
wire  signed [5:0] mul_res_441_fu_16319_p2;
wire  signed [2:0] mul_res_442_fu_16337_p0;
wire  signed [2:0] mul_res_442_fu_16337_p1;
wire  signed [5:0] mul_res_442_fu_16337_p2;
wire  signed [2:0] mul_res_443_fu_16355_p0;
wire  signed [2:0] mul_res_443_fu_16355_p1;
wire  signed [5:0] mul_res_443_fu_16355_p2;
wire  signed [6:0] sext_ln151_717_fu_16325_p1;
wire  signed [6:0] sext_ln151_718_fu_16343_p1;
wire  signed [6:0] sext_ln151_709_fu_16193_p1;
wire  signed [6:0] sext_ln151_708_fu_16175_p1;
wire   [6:0] add_ln153_437_fu_16371_p2;
wire  signed [6:0] sext_ln151_714_fu_16279_p1;
wire  signed [6:0] sext_ln151_710_fu_16211_p1;
wire  signed [6:0] sext_ln151_712_fu_16247_p1;
wire  signed [6:0] sext_ln151_711_fu_16229_p1;
wire  signed [6:0] sext_ln153_252_fu_16361_p1;
wire  signed [2:0] mul_res_444_fu_16403_p0;
wire  signed [2:0] mul_res_444_fu_16403_p1;
wire  signed [5:0] mul_res_444_fu_16403_p2;
wire  signed [2:0] mul_res_445_fu_16421_p0;
wire  signed [2:0] mul_res_445_fu_16421_p1;
wire  signed [5:0] mul_res_445_fu_16421_p2;
wire  signed [2:0] mul_res_446_fu_16439_p0;
wire  signed [2:0] mul_res_446_fu_16439_p1;
wire  signed [5:0] mul_res_446_fu_16439_p2;
wire  signed [2:0] mul_res_447_fu_16457_p0;
wire  signed [2:0] mul_res_447_fu_16457_p1;
wire  signed [5:0] mul_res_447_fu_16457_p2;
wire  signed [2:0] mul_res_448_fu_16475_p0;
wire  signed [2:0] mul_res_448_fu_16475_p1;
wire  signed [5:0] mul_res_448_fu_16475_p2;
wire  signed [2:0] mul_res_449_fu_16493_p0;
wire  signed [2:0] mul_res_449_fu_16493_p1;
wire  signed [2:0] mul_res_450_fu_16507_p0;
wire  signed [2:0] mul_res_450_fu_16507_p1;
wire  signed [5:0] mul_res_450_fu_16507_p2;
wire  signed [2:0] mul_res_451_fu_16525_p0;
wire  signed [2:0] mul_res_451_fu_16525_p1;
wire  signed [2:0] mul_res_452_fu_16539_p0;
wire  signed [2:0] mul_res_452_fu_16539_p1;
wire  signed [2:0] mul_res_453_fu_16553_p0;
wire  signed [2:0] mul_res_453_fu_16553_p1;
wire  signed [5:0] mul_res_453_fu_16553_p2;
wire  signed [2:0] mul_res_454_fu_16571_p0;
wire  signed [2:0] mul_res_454_fu_16571_p1;
wire  signed [5:0] mul_res_454_fu_16571_p2;
wire  signed [2:0] mul_res_455_fu_16589_p0;
wire  signed [2:0] mul_res_455_fu_16589_p1;
wire  signed [5:0] mul_res_455_fu_16589_p2;
wire  signed [6:0] sext_ln151_728_fu_16559_p1;
wire  signed [6:0] sext_ln151_729_fu_16577_p1;
wire  signed [6:0] sext_ln151_720_fu_16427_p1;
wire  signed [6:0] sext_ln151_719_fu_16409_p1;
wire   [6:0] add_ln153_449_fu_16605_p2;
wire  signed [6:0] sext_ln151_725_fu_16513_p1;
wire  signed [6:0] sext_ln151_721_fu_16445_p1;
wire  signed [6:0] sext_ln151_723_fu_16481_p1;
wire  signed [6:0] sext_ln151_722_fu_16463_p1;
wire  signed [6:0] sext_ln153_259_fu_16595_p1;
wire  signed [2:0] mul_res_456_fu_16637_p0;
wire  signed [2:0] mul_res_456_fu_16637_p1;
wire  signed [5:0] mul_res_456_fu_16637_p2;
wire  signed [2:0] mul_res_457_fu_16655_p0;
wire  signed [2:0] mul_res_457_fu_16655_p1;
wire  signed [5:0] mul_res_457_fu_16655_p2;
wire  signed [2:0] mul_res_458_fu_16673_p0;
wire  signed [2:0] mul_res_458_fu_16673_p1;
wire  signed [5:0] mul_res_458_fu_16673_p2;
wire  signed [2:0] mul_res_459_fu_16691_p0;
wire  signed [2:0] mul_res_459_fu_16691_p1;
wire  signed [5:0] mul_res_459_fu_16691_p2;
wire  signed [2:0] mul_res_460_fu_16709_p0;
wire  signed [2:0] mul_res_460_fu_16709_p1;
wire  signed [5:0] mul_res_460_fu_16709_p2;
wire  signed [2:0] mul_res_461_fu_16727_p0;
wire  signed [2:0] mul_res_461_fu_16727_p1;
wire  signed [2:0] mul_res_462_fu_16741_p0;
wire  signed [2:0] mul_res_462_fu_16741_p1;
wire  signed [5:0] mul_res_462_fu_16741_p2;
wire  signed [2:0] mul_res_463_fu_16759_p0;
wire  signed [2:0] mul_res_463_fu_16759_p1;
wire  signed [2:0] mul_res_464_fu_16773_p0;
wire  signed [2:0] mul_res_464_fu_16773_p1;
wire  signed [2:0] mul_res_465_fu_16787_p0;
wire  signed [2:0] mul_res_465_fu_16787_p1;
wire  signed [5:0] mul_res_465_fu_16787_p2;
wire  signed [2:0] mul_res_466_fu_16805_p0;
wire  signed [2:0] mul_res_466_fu_16805_p1;
wire  signed [5:0] mul_res_466_fu_16805_p2;
wire  signed [2:0] mul_res_467_fu_16823_p0;
wire  signed [2:0] mul_res_467_fu_16823_p1;
wire  signed [5:0] mul_res_467_fu_16823_p2;
wire  signed [6:0] sext_ln151_739_fu_16793_p1;
wire  signed [6:0] sext_ln151_740_fu_16811_p1;
wire  signed [6:0] sext_ln151_731_fu_16661_p1;
wire  signed [6:0] sext_ln151_730_fu_16643_p1;
wire   [6:0] add_ln153_461_fu_16839_p2;
wire  signed [6:0] sext_ln151_736_fu_16747_p1;
wire  signed [6:0] sext_ln151_732_fu_16679_p1;
wire  signed [6:0] sext_ln151_734_fu_16715_p1;
wire  signed [6:0] sext_ln151_733_fu_16697_p1;
wire  signed [6:0] sext_ln153_266_fu_16829_p1;
wire  signed [2:0] mul_res_468_fu_16871_p0;
wire  signed [2:0] mul_res_468_fu_16871_p1;
wire  signed [5:0] mul_res_468_fu_16871_p2;
wire  signed [2:0] mul_res_469_fu_16889_p0;
wire  signed [2:0] mul_res_469_fu_16889_p1;
wire  signed [5:0] mul_res_469_fu_16889_p2;
wire  signed [2:0] mul_res_470_fu_16907_p0;
wire  signed [2:0] mul_res_470_fu_16907_p1;
wire  signed [5:0] mul_res_470_fu_16907_p2;
wire  signed [2:0] mul_res_471_fu_16925_p0;
wire  signed [2:0] mul_res_471_fu_16925_p1;
wire  signed [5:0] mul_res_471_fu_16925_p2;
wire  signed [2:0] mul_res_472_fu_16943_p0;
wire  signed [2:0] mul_res_472_fu_16943_p1;
wire  signed [5:0] mul_res_472_fu_16943_p2;
wire  signed [2:0] mul_res_473_fu_16961_p0;
wire  signed [2:0] mul_res_473_fu_16961_p1;
wire  signed [2:0] mul_res_474_fu_16975_p0;
wire  signed [2:0] mul_res_474_fu_16975_p1;
wire  signed [5:0] mul_res_474_fu_16975_p2;
wire  signed [2:0] mul_res_475_fu_16993_p0;
wire  signed [2:0] mul_res_475_fu_16993_p1;
wire  signed [2:0] mul_res_476_fu_17007_p0;
wire  signed [2:0] mul_res_476_fu_17007_p1;
wire  signed [2:0] mul_res_477_fu_17021_p0;
wire  signed [2:0] mul_res_477_fu_17021_p1;
wire  signed [5:0] mul_res_477_fu_17021_p2;
wire  signed [2:0] mul_res_478_fu_17039_p0;
wire  signed [2:0] mul_res_478_fu_17039_p1;
wire  signed [5:0] mul_res_478_fu_17039_p2;
wire  signed [2:0] mul_res_479_fu_17057_p0;
wire  signed [2:0] mul_res_479_fu_17057_p1;
wire  signed [5:0] mul_res_479_fu_17057_p2;
wire  signed [6:0] sext_ln151_750_fu_17027_p1;
wire  signed [6:0] sext_ln151_751_fu_17045_p1;
wire  signed [6:0] sext_ln151_742_fu_16895_p1;
wire  signed [6:0] sext_ln151_741_fu_16877_p1;
wire   [6:0] add_ln153_473_fu_17073_p2;
wire  signed [6:0] sext_ln151_747_fu_16981_p1;
wire  signed [6:0] sext_ln151_743_fu_16913_p1;
wire  signed [6:0] sext_ln151_745_fu_16949_p1;
wire  signed [6:0] sext_ln151_744_fu_16931_p1;
wire  signed [6:0] sext_ln153_273_fu_17063_p1;
wire  signed [2:0] mul_res_480_fu_17105_p0;
wire  signed [2:0] mul_res_480_fu_17105_p1;
wire  signed [5:0] mul_res_480_fu_17105_p2;
wire  signed [2:0] mul_res_481_fu_17123_p0;
wire  signed [2:0] mul_res_481_fu_17123_p1;
wire  signed [5:0] mul_res_481_fu_17123_p2;
wire  signed [2:0] mul_res_482_fu_17141_p0;
wire  signed [2:0] mul_res_482_fu_17141_p1;
wire  signed [5:0] mul_res_482_fu_17141_p2;
wire  signed [2:0] mul_res_483_fu_17159_p0;
wire  signed [2:0] mul_res_483_fu_17159_p1;
wire  signed [5:0] mul_res_483_fu_17159_p2;
wire  signed [2:0] mul_res_484_fu_17177_p0;
wire  signed [2:0] mul_res_484_fu_17177_p1;
wire  signed [5:0] mul_res_484_fu_17177_p2;
wire  signed [2:0] mul_res_485_fu_17195_p0;
wire  signed [2:0] mul_res_485_fu_17195_p1;
wire  signed [2:0] mul_res_486_fu_17209_p0;
wire  signed [2:0] mul_res_486_fu_17209_p1;
wire  signed [5:0] mul_res_486_fu_17209_p2;
wire  signed [2:0] mul_res_487_fu_17227_p0;
wire  signed [2:0] mul_res_487_fu_17227_p1;
wire  signed [2:0] mul_res_488_fu_17241_p0;
wire  signed [2:0] mul_res_488_fu_17241_p1;
wire  signed [2:0] mul_res_489_fu_17255_p0;
wire  signed [2:0] mul_res_489_fu_17255_p1;
wire  signed [5:0] mul_res_489_fu_17255_p2;
wire  signed [2:0] mul_res_490_fu_17273_p0;
wire  signed [2:0] mul_res_490_fu_17273_p1;
wire  signed [5:0] mul_res_490_fu_17273_p2;
wire  signed [2:0] mul_res_491_fu_17291_p0;
wire  signed [2:0] mul_res_491_fu_17291_p1;
wire  signed [5:0] mul_res_491_fu_17291_p2;
wire  signed [6:0] sext_ln151_761_fu_17261_p1;
wire  signed [6:0] sext_ln151_762_fu_17279_p1;
wire  signed [6:0] sext_ln151_753_fu_17129_p1;
wire  signed [6:0] sext_ln151_752_fu_17111_p1;
wire   [6:0] add_ln153_485_fu_17307_p2;
wire  signed [6:0] sext_ln151_758_fu_17215_p1;
wire  signed [6:0] sext_ln151_754_fu_17147_p1;
wire  signed [6:0] sext_ln151_756_fu_17183_p1;
wire  signed [6:0] sext_ln151_755_fu_17165_p1;
wire  signed [6:0] sext_ln153_280_fu_17297_p1;
wire  signed [2:0] mul_res_492_fu_17339_p0;
wire  signed [2:0] mul_res_492_fu_17339_p1;
wire  signed [5:0] mul_res_492_fu_17339_p2;
wire  signed [2:0] mul_res_493_fu_17357_p0;
wire  signed [2:0] mul_res_493_fu_17357_p1;
wire  signed [5:0] mul_res_493_fu_17357_p2;
wire  signed [2:0] mul_res_494_fu_17375_p0;
wire  signed [2:0] mul_res_494_fu_17375_p1;
wire  signed [5:0] mul_res_494_fu_17375_p2;
wire  signed [2:0] mul_res_495_fu_17393_p0;
wire  signed [2:0] mul_res_495_fu_17393_p1;
wire  signed [5:0] mul_res_495_fu_17393_p2;
wire  signed [2:0] mul_res_496_fu_17411_p0;
wire  signed [2:0] mul_res_496_fu_17411_p1;
wire  signed [5:0] mul_res_496_fu_17411_p2;
wire  signed [2:0] mul_res_497_fu_17429_p0;
wire  signed [2:0] mul_res_497_fu_17429_p1;
wire  signed [2:0] mul_res_498_fu_17443_p0;
wire  signed [2:0] mul_res_498_fu_17443_p1;
wire  signed [5:0] mul_res_498_fu_17443_p2;
wire  signed [2:0] mul_res_499_fu_17461_p0;
wire  signed [2:0] mul_res_499_fu_17461_p1;
wire  signed [2:0] mul_res_500_fu_17475_p0;
wire  signed [2:0] mul_res_500_fu_17475_p1;
wire  signed [2:0] mul_res_501_fu_17489_p0;
wire  signed [2:0] mul_res_501_fu_17489_p1;
wire  signed [5:0] mul_res_501_fu_17489_p2;
wire  signed [2:0] mul_res_502_fu_17507_p0;
wire  signed [2:0] mul_res_502_fu_17507_p1;
wire  signed [5:0] mul_res_502_fu_17507_p2;
wire  signed [2:0] mul_res_503_fu_17525_p0;
wire  signed [2:0] mul_res_503_fu_17525_p1;
wire  signed [5:0] mul_res_503_fu_17525_p2;
wire  signed [6:0] sext_ln151_772_fu_17495_p1;
wire  signed [6:0] sext_ln151_773_fu_17513_p1;
wire  signed [6:0] sext_ln151_764_fu_17363_p1;
wire  signed [6:0] sext_ln151_763_fu_17345_p1;
wire   [6:0] add_ln153_497_fu_17541_p2;
wire  signed [6:0] sext_ln151_769_fu_17449_p1;
wire  signed [6:0] sext_ln151_765_fu_17381_p1;
wire  signed [6:0] sext_ln151_767_fu_17417_p1;
wire  signed [6:0] sext_ln151_766_fu_17399_p1;
wire  signed [6:0] sext_ln153_287_fu_17531_p1;
wire  signed [2:0] mul_res_504_fu_17573_p0;
wire  signed [2:0] mul_res_504_fu_17573_p1;
wire  signed [5:0] mul_res_504_fu_17573_p2;
wire  signed [2:0] mul_res_505_fu_17591_p0;
wire  signed [2:0] mul_res_505_fu_17591_p1;
wire  signed [5:0] mul_res_505_fu_17591_p2;
wire  signed [2:0] mul_res_506_fu_17609_p0;
wire  signed [2:0] mul_res_506_fu_17609_p1;
wire  signed [5:0] mul_res_506_fu_17609_p2;
wire  signed [2:0] mul_res_507_fu_17627_p0;
wire  signed [2:0] mul_res_507_fu_17627_p1;
wire  signed [5:0] mul_res_507_fu_17627_p2;
wire  signed [2:0] mul_res_508_fu_17645_p0;
wire  signed [2:0] mul_res_508_fu_17645_p1;
wire  signed [5:0] mul_res_508_fu_17645_p2;
wire  signed [2:0] mul_res_509_fu_17663_p0;
wire  signed [2:0] mul_res_509_fu_17663_p1;
wire  signed [2:0] mul_res_510_fu_17677_p0;
wire  signed [2:0] mul_res_510_fu_17677_p1;
wire  signed [5:0] mul_res_510_fu_17677_p2;
wire  signed [2:0] mul_res_511_fu_17695_p0;
wire  signed [2:0] mul_res_511_fu_17695_p1;
wire  signed [2:0] mul_res_512_fu_17709_p0;
wire  signed [2:0] mul_res_512_fu_17709_p1;
wire  signed [2:0] mul_res_513_fu_17723_p0;
wire  signed [2:0] mul_res_513_fu_17723_p1;
wire  signed [5:0] mul_res_513_fu_17723_p2;
wire  signed [2:0] mul_res_514_fu_17741_p0;
wire  signed [2:0] mul_res_514_fu_17741_p1;
wire  signed [5:0] mul_res_514_fu_17741_p2;
wire  signed [2:0] mul_res_515_fu_17759_p0;
wire  signed [2:0] mul_res_515_fu_17759_p1;
wire  signed [5:0] mul_res_515_fu_17759_p2;
wire  signed [6:0] sext_ln151_783_fu_17729_p1;
wire  signed [6:0] sext_ln151_784_fu_17747_p1;
wire  signed [6:0] sext_ln151_775_fu_17597_p1;
wire  signed [6:0] sext_ln151_774_fu_17579_p1;
wire   [6:0] add_ln153_509_fu_17775_p2;
wire  signed [6:0] sext_ln151_780_fu_17683_p1;
wire  signed [6:0] sext_ln151_776_fu_17615_p1;
wire  signed [6:0] sext_ln151_778_fu_17651_p1;
wire  signed [6:0] sext_ln151_777_fu_17633_p1;
wire  signed [6:0] sext_ln153_294_fu_17765_p1;
wire  signed [2:0] mul_res_516_fu_17807_p0;
wire  signed [2:0] mul_res_516_fu_17807_p1;
wire  signed [5:0] mul_res_516_fu_17807_p2;
wire  signed [2:0] mul_res_517_fu_17825_p0;
wire  signed [2:0] mul_res_517_fu_17825_p1;
wire  signed [5:0] mul_res_517_fu_17825_p2;
wire  signed [2:0] mul_res_518_fu_17843_p0;
wire  signed [2:0] mul_res_518_fu_17843_p1;
wire  signed [5:0] mul_res_518_fu_17843_p2;
wire  signed [2:0] mul_res_519_fu_17861_p0;
wire  signed [2:0] mul_res_519_fu_17861_p1;
wire  signed [5:0] mul_res_519_fu_17861_p2;
wire  signed [2:0] mul_res_520_fu_17879_p0;
wire  signed [2:0] mul_res_520_fu_17879_p1;
wire  signed [5:0] mul_res_520_fu_17879_p2;
wire  signed [2:0] mul_res_521_fu_17897_p0;
wire  signed [2:0] mul_res_521_fu_17897_p1;
wire  signed [2:0] mul_res_522_fu_17911_p0;
wire  signed [2:0] mul_res_522_fu_17911_p1;
wire  signed [5:0] mul_res_522_fu_17911_p2;
wire  signed [2:0] mul_res_523_fu_17929_p0;
wire  signed [2:0] mul_res_523_fu_17929_p1;
wire  signed [2:0] mul_res_524_fu_17943_p0;
wire  signed [2:0] mul_res_524_fu_17943_p1;
wire  signed [2:0] mul_res_525_fu_17957_p0;
wire  signed [2:0] mul_res_525_fu_17957_p1;
wire  signed [5:0] mul_res_525_fu_17957_p2;
wire  signed [2:0] mul_res_526_fu_17975_p0;
wire  signed [2:0] mul_res_526_fu_17975_p1;
wire  signed [5:0] mul_res_526_fu_17975_p2;
wire  signed [2:0] mul_res_527_fu_17993_p0;
wire  signed [2:0] mul_res_527_fu_17993_p1;
wire  signed [5:0] mul_res_527_fu_17993_p2;
wire  signed [6:0] sext_ln151_794_fu_17963_p1;
wire  signed [6:0] sext_ln151_795_fu_17981_p1;
wire  signed [6:0] sext_ln151_786_fu_17831_p1;
wire  signed [6:0] sext_ln151_785_fu_17813_p1;
wire   [6:0] add_ln153_521_fu_18009_p2;
wire  signed [6:0] sext_ln151_791_fu_17917_p1;
wire  signed [6:0] sext_ln151_787_fu_17849_p1;
wire  signed [6:0] sext_ln151_789_fu_17885_p1;
wire  signed [6:0] sext_ln151_788_fu_17867_p1;
wire  signed [6:0] sext_ln153_301_fu_17999_p1;
wire  signed [2:0] mul_res_528_fu_18041_p0;
wire  signed [2:0] mul_res_528_fu_18041_p1;
wire  signed [5:0] mul_res_528_fu_18041_p2;
wire  signed [2:0] mul_res_529_fu_18059_p0;
wire  signed [2:0] mul_res_529_fu_18059_p1;
wire  signed [5:0] mul_res_529_fu_18059_p2;
wire  signed [2:0] mul_res_530_fu_18077_p0;
wire  signed [2:0] mul_res_530_fu_18077_p1;
wire  signed [5:0] mul_res_530_fu_18077_p2;
wire  signed [2:0] mul_res_531_fu_18095_p0;
wire  signed [2:0] mul_res_531_fu_18095_p1;
wire  signed [5:0] mul_res_531_fu_18095_p2;
wire  signed [2:0] mul_res_532_fu_18113_p0;
wire  signed [2:0] mul_res_532_fu_18113_p1;
wire  signed [5:0] mul_res_532_fu_18113_p2;
wire  signed [2:0] mul_res_533_fu_18131_p0;
wire  signed [2:0] mul_res_533_fu_18131_p1;
wire  signed [2:0] mul_res_534_fu_18145_p0;
wire  signed [2:0] mul_res_534_fu_18145_p1;
wire  signed [5:0] mul_res_534_fu_18145_p2;
wire  signed [2:0] mul_res_535_fu_18163_p0;
wire  signed [2:0] mul_res_535_fu_18163_p1;
wire  signed [2:0] mul_res_536_fu_18177_p0;
wire  signed [2:0] mul_res_536_fu_18177_p1;
wire  signed [2:0] mul_res_537_fu_18191_p0;
wire  signed [2:0] mul_res_537_fu_18191_p1;
wire  signed [5:0] mul_res_537_fu_18191_p2;
wire  signed [2:0] mul_res_538_fu_18209_p0;
wire  signed [2:0] mul_res_538_fu_18209_p1;
wire  signed [5:0] mul_res_538_fu_18209_p2;
wire  signed [2:0] mul_res_539_fu_18227_p0;
wire  signed [2:0] mul_res_539_fu_18227_p1;
wire  signed [5:0] mul_res_539_fu_18227_p2;
wire  signed [6:0] sext_ln151_805_fu_18197_p1;
wire  signed [6:0] sext_ln151_806_fu_18215_p1;
wire  signed [6:0] sext_ln151_797_fu_18065_p1;
wire  signed [6:0] sext_ln151_796_fu_18047_p1;
wire   [6:0] add_ln153_533_fu_18243_p2;
wire  signed [6:0] sext_ln151_802_fu_18151_p1;
wire  signed [6:0] sext_ln151_798_fu_18083_p1;
wire  signed [6:0] sext_ln151_800_fu_18119_p1;
wire  signed [6:0] sext_ln151_799_fu_18101_p1;
wire  signed [6:0] sext_ln153_308_fu_18233_p1;
wire  signed [2:0] mul_res_540_fu_18275_p0;
wire  signed [2:0] mul_res_540_fu_18275_p1;
wire  signed [5:0] mul_res_540_fu_18275_p2;
wire  signed [2:0] mul_res_541_fu_18293_p0;
wire  signed [2:0] mul_res_541_fu_18293_p1;
wire  signed [5:0] mul_res_541_fu_18293_p2;
wire  signed [2:0] mul_res_542_fu_18311_p0;
wire  signed [2:0] mul_res_542_fu_18311_p1;
wire  signed [5:0] mul_res_542_fu_18311_p2;
wire  signed [2:0] mul_res_543_fu_18329_p0;
wire  signed [2:0] mul_res_543_fu_18329_p1;
wire  signed [5:0] mul_res_543_fu_18329_p2;
wire  signed [2:0] mul_res_544_fu_18347_p0;
wire  signed [2:0] mul_res_544_fu_18347_p1;
wire  signed [5:0] mul_res_544_fu_18347_p2;
wire  signed [2:0] mul_res_545_fu_18365_p0;
wire  signed [2:0] mul_res_545_fu_18365_p1;
wire  signed [2:0] mul_res_546_fu_18379_p0;
wire  signed [2:0] mul_res_546_fu_18379_p1;
wire  signed [5:0] mul_res_546_fu_18379_p2;
wire  signed [2:0] mul_res_547_fu_18397_p0;
wire  signed [2:0] mul_res_547_fu_18397_p1;
wire  signed [2:0] mul_res_548_fu_18411_p0;
wire  signed [2:0] mul_res_548_fu_18411_p1;
wire  signed [2:0] mul_res_549_fu_18425_p0;
wire  signed [2:0] mul_res_549_fu_18425_p1;
wire  signed [5:0] mul_res_549_fu_18425_p2;
wire  signed [2:0] mul_res_550_fu_18443_p0;
wire  signed [2:0] mul_res_550_fu_18443_p1;
wire  signed [5:0] mul_res_550_fu_18443_p2;
wire  signed [2:0] mul_res_551_fu_18461_p0;
wire  signed [2:0] mul_res_551_fu_18461_p1;
wire  signed [5:0] mul_res_551_fu_18461_p2;
wire  signed [6:0] sext_ln151_816_fu_18431_p1;
wire  signed [6:0] sext_ln151_817_fu_18449_p1;
wire  signed [6:0] sext_ln151_808_fu_18299_p1;
wire  signed [6:0] sext_ln151_807_fu_18281_p1;
wire   [6:0] add_ln153_545_fu_18477_p2;
wire  signed [6:0] sext_ln151_813_fu_18385_p1;
wire  signed [6:0] sext_ln151_809_fu_18317_p1;
wire  signed [6:0] sext_ln151_811_fu_18353_p1;
wire  signed [6:0] sext_ln151_810_fu_18335_p1;
wire  signed [6:0] sext_ln153_315_fu_18467_p1;
wire  signed [2:0] mul_res_552_fu_18509_p0;
wire  signed [2:0] mul_res_552_fu_18509_p1;
wire  signed [5:0] mul_res_552_fu_18509_p2;
wire  signed [2:0] mul_res_553_fu_18527_p0;
wire  signed [2:0] mul_res_553_fu_18527_p1;
wire  signed [5:0] mul_res_553_fu_18527_p2;
wire  signed [2:0] mul_res_554_fu_18545_p0;
wire  signed [2:0] mul_res_554_fu_18545_p1;
wire  signed [5:0] mul_res_554_fu_18545_p2;
wire  signed [2:0] mul_res_555_fu_18563_p0;
wire  signed [2:0] mul_res_555_fu_18563_p1;
wire  signed [5:0] mul_res_555_fu_18563_p2;
wire  signed [2:0] mul_res_556_fu_18581_p0;
wire  signed [2:0] mul_res_556_fu_18581_p1;
wire  signed [5:0] mul_res_556_fu_18581_p2;
wire  signed [2:0] mul_res_557_fu_18599_p0;
wire  signed [2:0] mul_res_557_fu_18599_p1;
wire  signed [2:0] mul_res_558_fu_18613_p0;
wire  signed [2:0] mul_res_558_fu_18613_p1;
wire  signed [5:0] mul_res_558_fu_18613_p2;
wire  signed [2:0] mul_res_559_fu_18631_p0;
wire  signed [2:0] mul_res_559_fu_18631_p1;
wire  signed [2:0] mul_res_560_fu_18645_p0;
wire  signed [2:0] mul_res_560_fu_18645_p1;
wire  signed [2:0] mul_res_561_fu_18659_p0;
wire  signed [2:0] mul_res_561_fu_18659_p1;
wire  signed [5:0] mul_res_561_fu_18659_p2;
wire  signed [2:0] mul_res_562_fu_18677_p0;
wire  signed [2:0] mul_res_562_fu_18677_p1;
wire  signed [5:0] mul_res_562_fu_18677_p2;
wire  signed [2:0] mul_res_563_fu_18695_p0;
wire  signed [2:0] mul_res_563_fu_18695_p1;
wire  signed [5:0] mul_res_563_fu_18695_p2;
wire  signed [6:0] sext_ln151_827_fu_18665_p1;
wire  signed [6:0] sext_ln151_828_fu_18683_p1;
wire  signed [6:0] sext_ln151_819_fu_18533_p1;
wire  signed [6:0] sext_ln151_818_fu_18515_p1;
wire   [6:0] add_ln153_557_fu_18711_p2;
wire  signed [6:0] sext_ln151_824_fu_18619_p1;
wire  signed [6:0] sext_ln151_820_fu_18551_p1;
wire  signed [6:0] sext_ln151_822_fu_18587_p1;
wire  signed [6:0] sext_ln151_821_fu_18569_p1;
wire  signed [6:0] sext_ln153_322_fu_18701_p1;
wire  signed [2:0] mul_res_564_fu_18743_p0;
wire  signed [2:0] mul_res_564_fu_18743_p1;
wire  signed [5:0] mul_res_564_fu_18743_p2;
wire  signed [2:0] mul_res_565_fu_18761_p0;
wire  signed [2:0] mul_res_565_fu_18761_p1;
wire  signed [5:0] mul_res_565_fu_18761_p2;
wire  signed [2:0] mul_res_566_fu_18779_p0;
wire  signed [2:0] mul_res_566_fu_18779_p1;
wire  signed [5:0] mul_res_566_fu_18779_p2;
wire  signed [2:0] mul_res_567_fu_18797_p0;
wire  signed [2:0] mul_res_567_fu_18797_p1;
wire  signed [5:0] mul_res_567_fu_18797_p2;
wire  signed [2:0] mul_res_568_fu_18815_p0;
wire  signed [2:0] mul_res_568_fu_18815_p1;
wire  signed [5:0] mul_res_568_fu_18815_p2;
wire  signed [2:0] mul_res_569_fu_18833_p0;
wire  signed [2:0] mul_res_569_fu_18833_p1;
wire  signed [2:0] mul_res_570_fu_18847_p0;
wire  signed [2:0] mul_res_570_fu_18847_p1;
wire  signed [5:0] mul_res_570_fu_18847_p2;
wire  signed [2:0] mul_res_571_fu_18865_p0;
wire  signed [2:0] mul_res_571_fu_18865_p1;
wire  signed [2:0] mul_res_572_fu_18879_p0;
wire  signed [2:0] mul_res_572_fu_18879_p1;
wire  signed [2:0] mul_res_573_fu_18893_p0;
wire  signed [2:0] mul_res_573_fu_18893_p1;
wire  signed [5:0] mul_res_573_fu_18893_p2;
wire  signed [2:0] mul_res_574_fu_18911_p0;
wire  signed [2:0] mul_res_574_fu_18911_p1;
wire  signed [5:0] mul_res_574_fu_18911_p2;
wire  signed [2:0] mul_res_575_fu_18929_p0;
wire  signed [2:0] mul_res_575_fu_18929_p1;
wire  signed [5:0] mul_res_575_fu_18929_p2;
wire  signed [6:0] sext_ln151_838_fu_18899_p1;
wire  signed [6:0] sext_ln151_839_fu_18917_p1;
wire  signed [6:0] sext_ln151_830_fu_18767_p1;
wire  signed [6:0] sext_ln151_829_fu_18749_p1;
wire   [6:0] add_ln153_569_fu_18945_p2;
wire  signed [6:0] sext_ln151_835_fu_18853_p1;
wire  signed [6:0] sext_ln151_831_fu_18785_p1;
wire  signed [6:0] sext_ln151_833_fu_18821_p1;
wire  signed [6:0] sext_ln151_832_fu_18803_p1;
wire  signed [6:0] sext_ln153_329_fu_18935_p1;
wire  signed [9:0] sext_ln131_fu_19257_p1;
wire  signed [9:0] sext_ln153_2_fu_19553_p1;
wire  signed [9:0] sext_ln153_1_fu_19550_p1;
wire  signed [7:0] sext_ln153_5_fu_19568_p1;
wire  signed [7:0] sext_ln153_4_fu_19565_p1;
wire   [7:0] add_ln153_9_fu_19571_p2;
wire  signed [7:0] sext_ln153_3_fu_19562_p1;
wire   [7:0] add_ln153_10_fu_19577_p2;
wire  signed [9:0] sext_ln153_6_fu_19583_p1;
wire   [9:0] add_ln153_1_fu_19556_p2;
wire   [9:0] add_ln153_4_fu_19587_p2;
wire   [9:0] select_ln126_47_fu_19544_p3;
wire  signed [9:0] sext_ln153_9_fu_19602_p1;
wire  signed [9:0] sext_ln153_8_fu_19599_p1;
wire  signed [7:0] sext_ln153_12_fu_19617_p1;
wire  signed [7:0] sext_ln153_11_fu_19614_p1;
wire   [7:0] add_ln153_21_fu_19620_p2;
wire  signed [7:0] sext_ln153_10_fu_19611_p1;
wire   [7:0] add_ln153_22_fu_19626_p2;
wire  signed [9:0] sext_ln153_13_fu_19632_p1;
wire   [9:0] add_ln153_13_fu_19605_p2;
wire   [9:0] add_ln153_16_fu_19636_p2;
wire   [9:0] select_ln126_46_fu_19538_p3;
wire  signed [9:0] sext_ln153_16_fu_19651_p1;
wire  signed [9:0] sext_ln153_15_fu_19648_p1;
wire  signed [7:0] sext_ln153_19_fu_19666_p1;
wire  signed [7:0] sext_ln153_18_fu_19663_p1;
wire   [7:0] add_ln153_33_fu_19669_p2;
wire  signed [7:0] sext_ln153_17_fu_19660_p1;
wire   [7:0] add_ln153_34_fu_19675_p2;
wire  signed [9:0] sext_ln153_20_fu_19681_p1;
wire   [9:0] add_ln153_25_fu_19654_p2;
wire   [9:0] add_ln153_28_fu_19685_p2;
wire   [9:0] select_ln126_45_fu_19532_p3;
wire  signed [9:0] sext_ln153_23_fu_19700_p1;
wire  signed [9:0] sext_ln153_22_fu_19697_p1;
wire  signed [7:0] sext_ln153_26_fu_19715_p1;
wire  signed [7:0] sext_ln153_25_fu_19712_p1;
wire   [7:0] add_ln153_45_fu_19718_p2;
wire  signed [7:0] sext_ln153_24_fu_19709_p1;
wire   [7:0] add_ln153_46_fu_19724_p2;
wire  signed [9:0] sext_ln153_27_fu_19730_p1;
wire   [9:0] add_ln153_37_fu_19703_p2;
wire   [9:0] add_ln153_40_fu_19734_p2;
wire   [9:0] select_ln126_44_fu_19526_p3;
wire  signed [9:0] sext_ln153_30_fu_19749_p1;
wire  signed [9:0] sext_ln153_29_fu_19746_p1;
wire  signed [7:0] sext_ln153_33_fu_19764_p1;
wire  signed [7:0] sext_ln153_32_fu_19761_p1;
wire   [7:0] add_ln153_57_fu_19767_p2;
wire  signed [7:0] sext_ln153_31_fu_19758_p1;
wire   [7:0] add_ln153_58_fu_19773_p2;
wire  signed [9:0] sext_ln153_34_fu_19779_p1;
wire   [9:0] add_ln153_49_fu_19752_p2;
wire   [9:0] add_ln153_52_fu_19783_p2;
wire   [9:0] select_ln126_43_fu_19520_p3;
wire  signed [9:0] sext_ln153_37_fu_19798_p1;
wire  signed [9:0] sext_ln153_36_fu_19795_p1;
wire  signed [7:0] sext_ln153_40_fu_19813_p1;
wire  signed [7:0] sext_ln153_39_fu_19810_p1;
wire   [7:0] add_ln153_69_fu_19816_p2;
wire  signed [7:0] sext_ln153_38_fu_19807_p1;
wire   [7:0] add_ln153_70_fu_19822_p2;
wire  signed [9:0] sext_ln153_41_fu_19828_p1;
wire   [9:0] add_ln153_61_fu_19801_p2;
wire   [9:0] add_ln153_64_fu_19832_p2;
wire   [9:0] select_ln126_42_fu_19514_p3;
wire  signed [9:0] sext_ln153_44_fu_19847_p1;
wire  signed [9:0] sext_ln153_43_fu_19844_p1;
wire  signed [7:0] sext_ln153_47_fu_19862_p1;
wire  signed [7:0] sext_ln153_46_fu_19859_p1;
wire   [7:0] add_ln153_81_fu_19865_p2;
wire  signed [7:0] sext_ln153_45_fu_19856_p1;
wire   [7:0] add_ln153_82_fu_19871_p2;
wire  signed [9:0] sext_ln153_48_fu_19877_p1;
wire   [9:0] add_ln153_73_fu_19850_p2;
wire   [9:0] add_ln153_76_fu_19881_p2;
wire   [9:0] select_ln126_41_fu_19508_p3;
wire  signed [9:0] sext_ln153_51_fu_19896_p1;
wire  signed [9:0] sext_ln153_50_fu_19893_p1;
wire  signed [7:0] sext_ln153_54_fu_19911_p1;
wire  signed [7:0] sext_ln153_53_fu_19908_p1;
wire   [7:0] add_ln153_93_fu_19914_p2;
wire  signed [7:0] sext_ln153_52_fu_19905_p1;
wire   [7:0] add_ln153_94_fu_19920_p2;
wire  signed [9:0] sext_ln153_55_fu_19926_p1;
wire   [9:0] add_ln153_85_fu_19899_p2;
wire   [9:0] add_ln153_88_fu_19930_p2;
wire   [9:0] select_ln126_40_fu_19502_p3;
wire  signed [9:0] sext_ln153_58_fu_19945_p1;
wire  signed [9:0] sext_ln153_57_fu_19942_p1;
wire  signed [7:0] sext_ln153_61_fu_19960_p1;
wire  signed [7:0] sext_ln153_60_fu_19957_p1;
wire   [7:0] add_ln153_105_fu_19963_p2;
wire  signed [7:0] sext_ln153_59_fu_19954_p1;
wire   [7:0] add_ln153_106_fu_19969_p2;
wire  signed [9:0] sext_ln153_62_fu_19975_p1;
wire   [9:0] add_ln153_97_fu_19948_p2;
wire   [9:0] add_ln153_100_fu_19979_p2;
wire   [9:0] select_ln126_39_fu_19496_p3;
wire  signed [9:0] sext_ln153_65_fu_19994_p1;
wire  signed [9:0] sext_ln153_64_fu_19991_p1;
wire  signed [7:0] sext_ln153_68_fu_20009_p1;
wire  signed [7:0] sext_ln153_67_fu_20006_p1;
wire   [7:0] add_ln153_117_fu_20012_p2;
wire  signed [7:0] sext_ln153_66_fu_20003_p1;
wire   [7:0] add_ln153_118_fu_20018_p2;
wire  signed [9:0] sext_ln153_69_fu_20024_p1;
wire   [9:0] add_ln153_109_fu_19997_p2;
wire   [9:0] add_ln153_112_fu_20028_p2;
wire   [9:0] select_ln126_38_fu_19490_p3;
wire  signed [9:0] sext_ln153_71_fu_20049_p1;
wire   [9:0] select_ln126_37_fu_19484_p3;
wire  signed [6:0] sext_ln151_253_fu_20040_p1;
wire  signed [6:0] sext_ln151_257_fu_20043_p1;
wire   [6:0] add_ln153_122_fu_20058_p2;
wire  signed [6:0] sext_ln151_259_fu_20046_p1;
wire   [6:0] add_ln153_123_fu_20064_p2;
wire  signed [9:0] sext_ln153_72_fu_20070_p1;
wire   [9:0] add_ln153_121_fu_20052_p2;
wire  signed [7:0] sext_ln153_75_fu_20086_p1;
wire  signed [7:0] sext_ln153_74_fu_20083_p1;
wire   [7:0] add_ln153_129_fu_20089_p2;
wire  signed [7:0] sext_ln153_73_fu_20080_p1;
wire   [7:0] add_ln153_130_fu_20095_p2;
wire  signed [9:0] sext_ln153_76_fu_20101_p1;
wire   [9:0] add_ln153_124_fu_20074_p2;
wire  signed [9:0] sext_ln153_78_fu_20120_p1;
wire   [9:0] select_ln126_36_fu_19478_p3;
wire  signed [6:0] sext_ln151_276_fu_20111_p1;
wire  signed [6:0] sext_ln151_280_fu_20114_p1;
wire   [6:0] add_ln153_134_fu_20129_p2;
wire  signed [6:0] sext_ln151_282_fu_20117_p1;
wire   [6:0] add_ln153_135_fu_20135_p2;
wire  signed [9:0] sext_ln153_79_fu_20141_p1;
wire   [9:0] add_ln153_133_fu_20123_p2;
wire  signed [7:0] sext_ln153_82_fu_20157_p1;
wire  signed [7:0] sext_ln153_81_fu_20154_p1;
wire   [7:0] add_ln153_141_fu_20160_p2;
wire  signed [7:0] sext_ln153_80_fu_20151_p1;
wire   [7:0] add_ln153_142_fu_20166_p2;
wire  signed [9:0] sext_ln153_83_fu_20172_p1;
wire   [9:0] add_ln153_136_fu_20145_p2;
wire  signed [9:0] sext_ln153_85_fu_20191_p1;
wire   [9:0] select_ln126_35_fu_19472_p3;
wire  signed [6:0] sext_ln151_299_fu_20182_p1;
wire  signed [6:0] sext_ln151_303_fu_20185_p1;
wire   [6:0] add_ln153_146_fu_20200_p2;
wire  signed [6:0] sext_ln151_305_fu_20188_p1;
wire   [6:0] add_ln153_147_fu_20206_p2;
wire  signed [9:0] sext_ln153_86_fu_20212_p1;
wire   [9:0] add_ln153_145_fu_20194_p2;
wire  signed [7:0] sext_ln153_89_fu_20228_p1;
wire  signed [7:0] sext_ln153_88_fu_20225_p1;
wire   [7:0] add_ln153_153_fu_20231_p2;
wire  signed [7:0] sext_ln153_87_fu_20222_p1;
wire   [7:0] add_ln153_154_fu_20237_p2;
wire  signed [9:0] sext_ln153_90_fu_20243_p1;
wire   [9:0] add_ln153_148_fu_20216_p2;
wire  signed [9:0] sext_ln153_92_fu_20262_p1;
wire   [9:0] select_ln126_34_fu_19466_p3;
wire  signed [6:0] sext_ln151_322_fu_20253_p1;
wire  signed [6:0] sext_ln151_326_fu_20256_p1;
wire   [6:0] add_ln153_158_fu_20271_p2;
wire  signed [6:0] sext_ln151_328_fu_20259_p1;
wire   [6:0] add_ln153_159_fu_20277_p2;
wire  signed [9:0] sext_ln153_93_fu_20283_p1;
wire   [9:0] add_ln153_157_fu_20265_p2;
wire  signed [7:0] sext_ln153_96_fu_20299_p1;
wire  signed [7:0] sext_ln153_95_fu_20296_p1;
wire   [7:0] add_ln153_165_fu_20302_p2;
wire  signed [7:0] sext_ln153_94_fu_20293_p1;
wire   [7:0] add_ln153_166_fu_20308_p2;
wire  signed [9:0] sext_ln153_97_fu_20314_p1;
wire   [9:0] add_ln153_160_fu_20287_p2;
wire  signed [9:0] sext_ln153_99_fu_20333_p1;
wire   [9:0] select_ln126_33_fu_19460_p3;
wire  signed [6:0] sext_ln151_345_fu_20324_p1;
wire  signed [6:0] sext_ln151_349_fu_20327_p1;
wire   [6:0] add_ln153_170_fu_20342_p2;
wire  signed [6:0] sext_ln151_351_fu_20330_p1;
wire   [6:0] add_ln153_171_fu_20348_p2;
wire  signed [9:0] sext_ln153_100_fu_20354_p1;
wire   [9:0] add_ln153_169_fu_20336_p2;
wire  signed [7:0] sext_ln153_103_fu_20370_p1;
wire  signed [7:0] sext_ln153_102_fu_20367_p1;
wire   [7:0] add_ln153_177_fu_20373_p2;
wire  signed [7:0] sext_ln153_101_fu_20364_p1;
wire   [7:0] add_ln153_178_fu_20379_p2;
wire  signed [9:0] sext_ln153_104_fu_20385_p1;
wire   [9:0] add_ln153_172_fu_20358_p2;
wire  signed [9:0] sext_ln153_106_fu_20404_p1;
wire   [9:0] select_ln126_32_fu_19454_p3;
wire  signed [6:0] sext_ln151_368_fu_20395_p1;
wire  signed [6:0] sext_ln151_372_fu_20398_p1;
wire   [6:0] add_ln153_182_fu_20413_p2;
wire  signed [6:0] sext_ln151_374_fu_20401_p1;
wire   [6:0] add_ln153_183_fu_20419_p2;
wire  signed [9:0] sext_ln153_107_fu_20425_p1;
wire   [9:0] add_ln153_181_fu_20407_p2;
wire  signed [7:0] sext_ln153_110_fu_20441_p1;
wire  signed [7:0] sext_ln153_109_fu_20438_p1;
wire   [7:0] add_ln153_189_fu_20444_p2;
wire  signed [7:0] sext_ln153_108_fu_20435_p1;
wire   [7:0] add_ln153_190_fu_20450_p2;
wire  signed [9:0] sext_ln153_111_fu_20456_p1;
wire   [9:0] add_ln153_184_fu_20429_p2;
wire  signed [9:0] sext_ln153_113_fu_20475_p1;
wire   [9:0] select_ln126_31_fu_19448_p3;
wire  signed [6:0] sext_ln151_391_fu_20466_p1;
wire  signed [6:0] sext_ln151_395_fu_20469_p1;
wire   [6:0] add_ln153_194_fu_20484_p2;
wire  signed [6:0] sext_ln151_397_fu_20472_p1;
wire   [6:0] add_ln153_195_fu_20490_p2;
wire  signed [9:0] sext_ln153_114_fu_20496_p1;
wire   [9:0] add_ln153_193_fu_20478_p2;
wire  signed [7:0] sext_ln153_117_fu_20512_p1;
wire  signed [7:0] sext_ln153_116_fu_20509_p1;
wire   [7:0] add_ln153_201_fu_20515_p2;
wire  signed [7:0] sext_ln153_115_fu_20506_p1;
wire   [7:0] add_ln153_202_fu_20521_p2;
wire  signed [9:0] sext_ln153_118_fu_20527_p1;
wire   [9:0] add_ln153_196_fu_20500_p2;
wire  signed [9:0] sext_ln153_120_fu_20546_p1;
wire   [9:0] select_ln126_30_fu_19442_p3;
wire  signed [6:0] sext_ln151_414_fu_20537_p1;
wire  signed [6:0] sext_ln151_418_fu_20540_p1;
wire   [6:0] add_ln153_206_fu_20555_p2;
wire  signed [6:0] sext_ln151_420_fu_20543_p1;
wire   [6:0] add_ln153_207_fu_20561_p2;
wire  signed [9:0] sext_ln153_121_fu_20567_p1;
wire   [9:0] add_ln153_205_fu_20549_p2;
wire  signed [7:0] sext_ln153_124_fu_20583_p1;
wire  signed [7:0] sext_ln153_123_fu_20580_p1;
wire   [7:0] add_ln153_213_fu_20586_p2;
wire  signed [7:0] sext_ln153_122_fu_20577_p1;
wire   [7:0] add_ln153_214_fu_20592_p2;
wire  signed [9:0] sext_ln153_125_fu_20598_p1;
wire   [9:0] add_ln153_208_fu_20571_p2;
wire  signed [9:0] sext_ln153_127_fu_20617_p1;
wire   [9:0] select_ln126_29_fu_19436_p3;
wire  signed [6:0] sext_ln151_437_fu_20608_p1;
wire  signed [6:0] sext_ln151_441_fu_20611_p1;
wire   [6:0] add_ln153_218_fu_20626_p2;
wire  signed [6:0] sext_ln151_443_fu_20614_p1;
wire   [6:0] add_ln153_219_fu_20632_p2;
wire  signed [9:0] sext_ln153_128_fu_20638_p1;
wire   [9:0] add_ln153_217_fu_20620_p2;
wire  signed [7:0] sext_ln153_131_fu_20654_p1;
wire  signed [7:0] sext_ln153_130_fu_20651_p1;
wire   [7:0] add_ln153_225_fu_20657_p2;
wire  signed [7:0] sext_ln153_129_fu_20648_p1;
wire   [7:0] add_ln153_226_fu_20663_p2;
wire  signed [9:0] sext_ln153_132_fu_20669_p1;
wire   [9:0] add_ln153_220_fu_20642_p2;
wire  signed [9:0] sext_ln153_134_fu_20688_p1;
wire   [9:0] select_ln126_28_fu_19430_p3;
wire  signed [6:0] sext_ln151_460_fu_20679_p1;
wire  signed [6:0] sext_ln151_464_fu_20682_p1;
wire   [6:0] add_ln153_230_fu_20697_p2;
wire  signed [6:0] sext_ln151_466_fu_20685_p1;
wire   [6:0] add_ln153_231_fu_20703_p2;
wire  signed [9:0] sext_ln153_135_fu_20709_p1;
wire   [9:0] add_ln153_229_fu_20691_p2;
wire  signed [7:0] sext_ln153_138_fu_20725_p1;
wire  signed [7:0] sext_ln153_137_fu_20722_p1;
wire   [7:0] add_ln153_237_fu_20728_p2;
wire  signed [7:0] sext_ln153_136_fu_20719_p1;
wire   [7:0] add_ln153_238_fu_20734_p2;
wire  signed [9:0] sext_ln153_139_fu_20740_p1;
wire   [9:0] add_ln153_232_fu_20713_p2;
wire  signed [9:0] sext_ln153_141_fu_20759_p1;
wire   [9:0] select_ln126_27_fu_19424_p3;
wire  signed [6:0] sext_ln151_483_fu_20750_p1;
wire  signed [6:0] sext_ln151_487_fu_20753_p1;
wire   [6:0] add_ln153_242_fu_20768_p2;
wire  signed [6:0] sext_ln151_489_fu_20756_p1;
wire   [6:0] add_ln153_243_fu_20774_p2;
wire  signed [9:0] sext_ln153_142_fu_20780_p1;
wire   [9:0] add_ln153_241_fu_20762_p2;
wire  signed [7:0] sext_ln153_145_fu_20796_p1;
wire  signed [7:0] sext_ln153_144_fu_20793_p1;
wire   [7:0] add_ln153_249_fu_20799_p2;
wire  signed [7:0] sext_ln153_143_fu_20790_p1;
wire   [7:0] add_ln153_250_fu_20805_p2;
wire  signed [9:0] sext_ln153_146_fu_20811_p1;
wire   [9:0] add_ln153_244_fu_20784_p2;
wire  signed [9:0] sext_ln153_148_fu_20830_p1;
wire   [9:0] select_ln126_26_fu_19418_p3;
wire  signed [6:0] sext_ln151_506_fu_20821_p1;
wire  signed [6:0] sext_ln151_510_fu_20824_p1;
wire   [6:0] add_ln153_254_fu_20839_p2;
wire  signed [6:0] sext_ln151_512_fu_20827_p1;
wire   [6:0] add_ln153_255_fu_20845_p2;
wire  signed [9:0] sext_ln153_149_fu_20851_p1;
wire   [9:0] add_ln153_253_fu_20833_p2;
wire  signed [7:0] sext_ln153_152_fu_20867_p1;
wire  signed [7:0] sext_ln153_151_fu_20864_p1;
wire   [7:0] add_ln153_261_fu_20870_p2;
wire  signed [7:0] sext_ln153_150_fu_20861_p1;
wire   [7:0] add_ln153_262_fu_20876_p2;
wire  signed [9:0] sext_ln153_153_fu_20882_p1;
wire   [9:0] add_ln153_256_fu_20855_p2;
wire  signed [9:0] sext_ln153_155_fu_20901_p1;
wire   [9:0] select_ln126_25_fu_19412_p3;
wire  signed [6:0] sext_ln151_529_fu_20892_p1;
wire  signed [6:0] sext_ln151_533_fu_20895_p1;
wire   [6:0] add_ln153_266_fu_20910_p2;
wire  signed [6:0] sext_ln151_535_fu_20898_p1;
wire   [6:0] add_ln153_267_fu_20916_p2;
wire  signed [9:0] sext_ln153_156_fu_20922_p1;
wire   [9:0] add_ln153_265_fu_20904_p2;
wire  signed [7:0] sext_ln153_159_fu_20938_p1;
wire  signed [7:0] sext_ln153_158_fu_20935_p1;
wire   [7:0] add_ln153_273_fu_20941_p2;
wire  signed [7:0] sext_ln153_157_fu_20932_p1;
wire   [7:0] add_ln153_274_fu_20947_p2;
wire  signed [9:0] sext_ln153_160_fu_20953_p1;
wire   [9:0] add_ln153_268_fu_20926_p2;
wire  signed [9:0] sext_ln153_162_fu_20972_p1;
wire   [9:0] select_ln126_24_fu_19405_p3;
wire  signed [6:0] sext_ln151_552_fu_20963_p1;
wire  signed [6:0] sext_ln151_556_fu_20966_p1;
wire   [6:0] add_ln153_278_fu_20981_p2;
wire  signed [6:0] sext_ln151_558_fu_20969_p1;
wire   [6:0] add_ln153_279_fu_20987_p2;
wire  signed [9:0] sext_ln153_163_fu_20993_p1;
wire   [9:0] add_ln153_277_fu_20975_p2;
wire  signed [7:0] sext_ln153_166_fu_21009_p1;
wire  signed [7:0] sext_ln153_165_fu_21006_p1;
wire   [7:0] add_ln153_285_fu_21012_p2;
wire  signed [7:0] sext_ln153_164_fu_21003_p1;
wire   [7:0] add_ln153_286_fu_21018_p2;
wire  signed [9:0] sext_ln153_167_fu_21024_p1;
wire   [9:0] add_ln153_280_fu_20997_p2;
wire  signed [9:0] sext_ln153_169_fu_21043_p1;
wire   [9:0] select_ln126_23_fu_19399_p3;
wire  signed [6:0] sext_ln151_575_fu_21034_p1;
wire  signed [6:0] sext_ln151_579_fu_21037_p1;
wire   [6:0] add_ln153_290_fu_21052_p2;
wire  signed [6:0] sext_ln151_581_fu_21040_p1;
wire   [6:0] add_ln153_291_fu_21058_p2;
wire  signed [9:0] sext_ln153_170_fu_21064_p1;
wire   [9:0] add_ln153_289_fu_21046_p2;
wire  signed [7:0] sext_ln153_173_fu_21080_p1;
wire  signed [7:0] sext_ln153_172_fu_21077_p1;
wire   [7:0] add_ln153_297_fu_21083_p2;
wire  signed [7:0] sext_ln153_171_fu_21074_p1;
wire   [7:0] add_ln153_298_fu_21089_p2;
wire  signed [9:0] sext_ln153_174_fu_21095_p1;
wire   [9:0] add_ln153_292_fu_21068_p2;
wire  signed [9:0] sext_ln153_176_fu_21114_p1;
wire   [9:0] select_ln126_22_fu_19393_p3;
wire  signed [6:0] sext_ln151_592_fu_21105_p1;
wire  signed [6:0] sext_ln151_594_fu_21108_p1;
wire   [6:0] add_ln153_302_fu_21123_p2;
wire  signed [6:0] sext_ln151_595_fu_21111_p1;
wire   [6:0] add_ln153_303_fu_21129_p2;
wire  signed [9:0] sext_ln153_177_fu_21135_p1;
wire   [9:0] add_ln153_301_fu_21117_p2;
wire  signed [7:0] sext_ln153_180_fu_21151_p1;
wire  signed [7:0] sext_ln153_179_fu_21148_p1;
wire   [7:0] add_ln153_309_fu_21154_p2;
wire  signed [7:0] sext_ln153_178_fu_21145_p1;
wire   [7:0] add_ln153_310_fu_21160_p2;
wire  signed [9:0] sext_ln153_181_fu_21166_p1;
wire   [9:0] add_ln153_304_fu_21139_p2;
wire  signed [9:0] sext_ln153_183_fu_21185_p1;
wire   [9:0] select_ln126_21_fu_19387_p3;
wire  signed [6:0] sext_ln151_603_fu_21176_p1;
wire  signed [6:0] sext_ln151_605_fu_21179_p1;
wire   [6:0] add_ln153_314_fu_21194_p2;
wire  signed [6:0] sext_ln151_606_fu_21182_p1;
wire   [6:0] add_ln153_315_fu_21200_p2;
wire  signed [9:0] sext_ln153_184_fu_21206_p1;
wire   [9:0] add_ln153_313_fu_21188_p2;
wire  signed [7:0] sext_ln153_187_fu_21222_p1;
wire  signed [7:0] sext_ln153_186_fu_21219_p1;
wire   [7:0] add_ln153_321_fu_21225_p2;
wire  signed [7:0] sext_ln153_185_fu_21216_p1;
wire   [7:0] add_ln153_322_fu_21231_p2;
wire  signed [9:0] sext_ln153_188_fu_21237_p1;
wire   [9:0] add_ln153_316_fu_21210_p2;
wire  signed [9:0] sext_ln153_190_fu_21256_p1;
wire   [9:0] select_ln126_20_fu_19381_p3;
wire  signed [6:0] sext_ln151_614_fu_21247_p1;
wire  signed [6:0] sext_ln151_616_fu_21250_p1;
wire   [6:0] add_ln153_326_fu_21265_p2;
wire  signed [6:0] sext_ln151_617_fu_21253_p1;
wire   [6:0] add_ln153_327_fu_21271_p2;
wire  signed [9:0] sext_ln153_191_fu_21277_p1;
wire   [9:0] add_ln153_325_fu_21259_p2;
wire  signed [7:0] sext_ln153_194_fu_21293_p1;
wire  signed [7:0] sext_ln153_193_fu_21290_p1;
wire   [7:0] add_ln153_333_fu_21296_p2;
wire  signed [7:0] sext_ln153_192_fu_21287_p1;
wire   [7:0] add_ln153_334_fu_21302_p2;
wire  signed [9:0] sext_ln153_195_fu_21308_p1;
wire   [9:0] add_ln153_328_fu_21281_p2;
wire  signed [9:0] sext_ln153_197_fu_21327_p1;
wire   [9:0] select_ln126_19_fu_19375_p3;
wire  signed [6:0] sext_ln151_625_fu_21318_p1;
wire  signed [6:0] sext_ln151_627_fu_21321_p1;
wire   [6:0] add_ln153_338_fu_21336_p2;
wire  signed [6:0] sext_ln151_628_fu_21324_p1;
wire   [6:0] add_ln153_339_fu_21342_p2;
wire  signed [9:0] sext_ln153_198_fu_21348_p1;
wire   [9:0] add_ln153_337_fu_21330_p2;
wire  signed [7:0] sext_ln153_201_fu_21364_p1;
wire  signed [7:0] sext_ln153_200_fu_21361_p1;
wire   [7:0] add_ln153_345_fu_21367_p2;
wire  signed [7:0] sext_ln153_199_fu_21358_p1;
wire   [7:0] add_ln153_346_fu_21373_p2;
wire  signed [9:0] sext_ln153_202_fu_21379_p1;
wire   [9:0] add_ln153_340_fu_21352_p2;
wire  signed [9:0] sext_ln153_204_fu_21398_p1;
wire   [9:0] select_ln126_18_fu_19369_p3;
wire  signed [6:0] sext_ln151_636_fu_21389_p1;
wire  signed [6:0] sext_ln151_638_fu_21392_p1;
wire   [6:0] add_ln153_350_fu_21407_p2;
wire  signed [6:0] sext_ln151_639_fu_21395_p1;
wire   [6:0] add_ln153_351_fu_21413_p2;
wire  signed [9:0] sext_ln153_205_fu_21419_p1;
wire   [9:0] add_ln153_349_fu_21401_p2;
wire  signed [7:0] sext_ln153_208_fu_21435_p1;
wire  signed [7:0] sext_ln153_207_fu_21432_p1;
wire   [7:0] add_ln153_357_fu_21438_p2;
wire  signed [7:0] sext_ln153_206_fu_21429_p1;
wire   [7:0] add_ln153_358_fu_21444_p2;
wire  signed [9:0] sext_ln153_209_fu_21450_p1;
wire   [9:0] add_ln153_352_fu_21423_p2;
wire  signed [9:0] sext_ln153_211_fu_21469_p1;
wire   [9:0] select_ln126_17_fu_19363_p3;
wire  signed [6:0] sext_ln151_647_fu_21460_p1;
wire  signed [6:0] sext_ln151_649_fu_21463_p1;
wire   [6:0] add_ln153_362_fu_21478_p2;
wire  signed [6:0] sext_ln151_650_fu_21466_p1;
wire   [6:0] add_ln153_363_fu_21484_p2;
wire  signed [9:0] sext_ln153_212_fu_21490_p1;
wire   [9:0] add_ln153_361_fu_21472_p2;
wire  signed [7:0] sext_ln153_215_fu_21506_p1;
wire  signed [7:0] sext_ln153_214_fu_21503_p1;
wire   [7:0] add_ln153_369_fu_21509_p2;
wire  signed [7:0] sext_ln153_213_fu_21500_p1;
wire   [7:0] add_ln153_370_fu_21515_p2;
wire  signed [9:0] sext_ln153_216_fu_21521_p1;
wire   [9:0] add_ln153_364_fu_21494_p2;
wire  signed [9:0] sext_ln153_218_fu_21540_p1;
wire   [9:0] select_ln126_16_fu_19357_p3;
wire  signed [6:0] sext_ln151_658_fu_21531_p1;
wire  signed [6:0] sext_ln151_660_fu_21534_p1;
wire   [6:0] add_ln153_374_fu_21549_p2;
wire  signed [6:0] sext_ln151_661_fu_21537_p1;
wire   [6:0] add_ln153_375_fu_21555_p2;
wire  signed [9:0] sext_ln153_219_fu_21561_p1;
wire   [9:0] add_ln153_373_fu_21543_p2;
wire  signed [7:0] sext_ln153_222_fu_21577_p1;
wire  signed [7:0] sext_ln153_221_fu_21574_p1;
wire   [7:0] add_ln153_381_fu_21580_p2;
wire  signed [7:0] sext_ln153_220_fu_21571_p1;
wire   [7:0] add_ln153_382_fu_21586_p2;
wire  signed [9:0] sext_ln153_223_fu_21592_p1;
wire   [9:0] add_ln153_376_fu_21565_p2;
wire  signed [9:0] sext_ln153_225_fu_21611_p1;
wire   [9:0] select_ln126_15_fu_19351_p3;
wire  signed [6:0] sext_ln151_669_fu_21602_p1;
wire  signed [6:0] sext_ln151_671_fu_21605_p1;
wire   [6:0] add_ln153_386_fu_21620_p2;
wire  signed [6:0] sext_ln151_672_fu_21608_p1;
wire   [6:0] add_ln153_387_fu_21626_p2;
wire  signed [9:0] sext_ln153_226_fu_21632_p1;
wire   [9:0] add_ln153_385_fu_21614_p2;
wire  signed [7:0] sext_ln153_229_fu_21648_p1;
wire  signed [7:0] sext_ln153_228_fu_21645_p1;
wire   [7:0] add_ln153_393_fu_21651_p2;
wire  signed [7:0] sext_ln153_227_fu_21642_p1;
wire   [7:0] add_ln153_394_fu_21657_p2;
wire  signed [9:0] sext_ln153_230_fu_21663_p1;
wire   [9:0] add_ln153_388_fu_21636_p2;
wire  signed [9:0] sext_ln153_232_fu_21682_p1;
wire   [9:0] select_ln126_14_fu_19345_p3;
wire  signed [6:0] sext_ln151_680_fu_21673_p1;
wire  signed [6:0] sext_ln151_682_fu_21676_p1;
wire   [6:0] add_ln153_398_fu_21691_p2;
wire  signed [6:0] sext_ln151_683_fu_21679_p1;
wire   [6:0] add_ln153_399_fu_21697_p2;
wire  signed [9:0] sext_ln153_233_fu_21703_p1;
wire   [9:0] add_ln153_397_fu_21685_p2;
wire  signed [7:0] sext_ln153_236_fu_21719_p1;
wire  signed [7:0] sext_ln153_235_fu_21716_p1;
wire   [7:0] add_ln153_405_fu_21722_p2;
wire  signed [7:0] sext_ln153_234_fu_21713_p1;
wire   [7:0] add_ln153_406_fu_21728_p2;
wire  signed [9:0] sext_ln153_237_fu_21734_p1;
wire   [9:0] add_ln153_400_fu_21707_p2;
wire  signed [9:0] sext_ln153_239_fu_21753_p1;
wire   [9:0] select_ln126_13_fu_19339_p3;
wire  signed [6:0] sext_ln151_691_fu_21744_p1;
wire  signed [6:0] sext_ln151_693_fu_21747_p1;
wire   [6:0] add_ln153_410_fu_21762_p2;
wire  signed [6:0] sext_ln151_694_fu_21750_p1;
wire   [6:0] add_ln153_411_fu_21768_p2;
wire  signed [9:0] sext_ln153_240_fu_21774_p1;
wire   [9:0] add_ln153_409_fu_21756_p2;
wire  signed [7:0] sext_ln153_243_fu_21790_p1;
wire  signed [7:0] sext_ln153_242_fu_21787_p1;
wire   [7:0] add_ln153_417_fu_21793_p2;
wire  signed [7:0] sext_ln153_241_fu_21784_p1;
wire   [7:0] add_ln153_418_fu_21799_p2;
wire  signed [9:0] sext_ln153_244_fu_21805_p1;
wire   [9:0] add_ln153_412_fu_21778_p2;
wire  signed [9:0] sext_ln153_246_fu_21824_p1;
wire   [9:0] select_ln126_12_fu_19333_p3;
wire  signed [6:0] sext_ln151_702_fu_21815_p1;
wire  signed [6:0] sext_ln151_704_fu_21818_p1;
wire   [6:0] add_ln153_422_fu_21833_p2;
wire  signed [6:0] sext_ln151_705_fu_21821_p1;
wire   [6:0] add_ln153_423_fu_21839_p2;
wire  signed [9:0] sext_ln153_247_fu_21845_p1;
wire   [9:0] add_ln153_421_fu_21827_p2;
wire  signed [7:0] sext_ln153_250_fu_21861_p1;
wire  signed [7:0] sext_ln153_249_fu_21858_p1;
wire   [7:0] add_ln153_429_fu_21864_p2;
wire  signed [7:0] sext_ln153_248_fu_21855_p1;
wire   [7:0] add_ln153_430_fu_21870_p2;
wire  signed [9:0] sext_ln153_251_fu_21876_p1;
wire   [9:0] add_ln153_424_fu_21849_p2;
wire  signed [9:0] sext_ln153_253_fu_21895_p1;
wire   [9:0] select_ln126_11_fu_19327_p3;
wire  signed [6:0] sext_ln151_713_fu_21886_p1;
wire  signed [6:0] sext_ln151_715_fu_21889_p1;
wire   [6:0] add_ln153_434_fu_21904_p2;
wire  signed [6:0] sext_ln151_716_fu_21892_p1;
wire   [6:0] add_ln153_435_fu_21910_p2;
wire  signed [9:0] sext_ln153_254_fu_21916_p1;
wire   [9:0] add_ln153_433_fu_21898_p2;
wire  signed [7:0] sext_ln153_257_fu_21932_p1;
wire  signed [7:0] sext_ln153_256_fu_21929_p1;
wire   [7:0] add_ln153_441_fu_21935_p2;
wire  signed [7:0] sext_ln153_255_fu_21926_p1;
wire   [7:0] add_ln153_442_fu_21941_p2;
wire  signed [9:0] sext_ln153_258_fu_21947_p1;
wire   [9:0] add_ln153_436_fu_21920_p2;
wire  signed [9:0] sext_ln153_260_fu_21966_p1;
wire   [9:0] select_ln126_10_fu_19321_p3;
wire  signed [6:0] sext_ln151_724_fu_21957_p1;
wire  signed [6:0] sext_ln151_726_fu_21960_p1;
wire   [6:0] add_ln153_446_fu_21975_p2;
wire  signed [6:0] sext_ln151_727_fu_21963_p1;
wire   [6:0] add_ln153_447_fu_21981_p2;
wire  signed [9:0] sext_ln153_261_fu_21987_p1;
wire   [9:0] add_ln153_445_fu_21969_p2;
wire  signed [7:0] sext_ln153_264_fu_22003_p1;
wire  signed [7:0] sext_ln153_263_fu_22000_p1;
wire   [7:0] add_ln153_453_fu_22006_p2;
wire  signed [7:0] sext_ln153_262_fu_21997_p1;
wire   [7:0] add_ln153_454_fu_22012_p2;
wire  signed [9:0] sext_ln153_265_fu_22018_p1;
wire   [9:0] add_ln153_448_fu_21991_p2;
wire  signed [9:0] sext_ln153_267_fu_22037_p1;
wire   [9:0] select_ln126_9_fu_19315_p3;
wire  signed [6:0] sext_ln151_735_fu_22028_p1;
wire  signed [6:0] sext_ln151_737_fu_22031_p1;
wire   [6:0] add_ln153_458_fu_22046_p2;
wire  signed [6:0] sext_ln151_738_fu_22034_p1;
wire   [6:0] add_ln153_459_fu_22052_p2;
wire  signed [9:0] sext_ln153_268_fu_22058_p1;
wire   [9:0] add_ln153_457_fu_22040_p2;
wire  signed [7:0] sext_ln153_271_fu_22074_p1;
wire  signed [7:0] sext_ln153_270_fu_22071_p1;
wire   [7:0] add_ln153_465_fu_22077_p2;
wire  signed [7:0] sext_ln153_269_fu_22068_p1;
wire   [7:0] add_ln153_466_fu_22083_p2;
wire  signed [9:0] sext_ln153_272_fu_22089_p1;
wire   [9:0] add_ln153_460_fu_22062_p2;
wire  signed [9:0] sext_ln153_274_fu_22108_p1;
wire   [9:0] select_ln126_8_fu_19309_p3;
wire  signed [6:0] sext_ln151_746_fu_22099_p1;
wire  signed [6:0] sext_ln151_748_fu_22102_p1;
wire   [6:0] add_ln153_470_fu_22117_p2;
wire  signed [6:0] sext_ln151_749_fu_22105_p1;
wire   [6:0] add_ln153_471_fu_22123_p2;
wire  signed [9:0] sext_ln153_275_fu_22129_p1;
wire   [9:0] add_ln153_469_fu_22111_p2;
wire  signed [7:0] sext_ln153_278_fu_22145_p1;
wire  signed [7:0] sext_ln153_277_fu_22142_p1;
wire   [7:0] add_ln153_477_fu_22148_p2;
wire  signed [7:0] sext_ln153_276_fu_22139_p1;
wire   [7:0] add_ln153_478_fu_22154_p2;
wire  signed [9:0] sext_ln153_279_fu_22160_p1;
wire   [9:0] add_ln153_472_fu_22133_p2;
wire  signed [9:0] sext_ln153_281_fu_22179_p1;
wire   [9:0] select_ln126_7_fu_19303_p3;
wire  signed [6:0] sext_ln151_757_fu_22170_p1;
wire  signed [6:0] sext_ln151_759_fu_22173_p1;
wire   [6:0] add_ln153_482_fu_22188_p2;
wire  signed [6:0] sext_ln151_760_fu_22176_p1;
wire   [6:0] add_ln153_483_fu_22194_p2;
wire  signed [9:0] sext_ln153_282_fu_22200_p1;
wire   [9:0] add_ln153_481_fu_22182_p2;
wire  signed [7:0] sext_ln153_285_fu_22216_p1;
wire  signed [7:0] sext_ln153_284_fu_22213_p1;
wire   [7:0] add_ln153_489_fu_22219_p2;
wire  signed [7:0] sext_ln153_283_fu_22210_p1;
wire   [7:0] add_ln153_490_fu_22225_p2;
wire  signed [9:0] sext_ln153_286_fu_22231_p1;
wire   [9:0] add_ln153_484_fu_22204_p2;
wire  signed [9:0] sext_ln153_288_fu_22250_p1;
wire   [9:0] select_ln126_6_fu_19297_p3;
wire  signed [6:0] sext_ln151_768_fu_22241_p1;
wire  signed [6:0] sext_ln151_770_fu_22244_p1;
wire   [6:0] add_ln153_494_fu_22259_p2;
wire  signed [6:0] sext_ln151_771_fu_22247_p1;
wire   [6:0] add_ln153_495_fu_22265_p2;
wire  signed [9:0] sext_ln153_289_fu_22271_p1;
wire   [9:0] add_ln153_493_fu_22253_p2;
wire  signed [7:0] sext_ln153_292_fu_22287_p1;
wire  signed [7:0] sext_ln153_291_fu_22284_p1;
wire   [7:0] add_ln153_501_fu_22290_p2;
wire  signed [7:0] sext_ln153_290_fu_22281_p1;
wire   [7:0] add_ln153_502_fu_22296_p2;
wire  signed [9:0] sext_ln153_293_fu_22302_p1;
wire   [9:0] add_ln153_496_fu_22275_p2;
wire  signed [9:0] sext_ln153_295_fu_22321_p1;
wire   [9:0] select_ln126_5_fu_19291_p3;
wire  signed [6:0] sext_ln151_779_fu_22312_p1;
wire  signed [6:0] sext_ln151_781_fu_22315_p1;
wire   [6:0] add_ln153_506_fu_22330_p2;
wire  signed [6:0] sext_ln151_782_fu_22318_p1;
wire   [6:0] add_ln153_507_fu_22336_p2;
wire  signed [9:0] sext_ln153_296_fu_22342_p1;
wire   [9:0] add_ln153_505_fu_22324_p2;
wire  signed [7:0] sext_ln153_299_fu_22358_p1;
wire  signed [7:0] sext_ln153_298_fu_22355_p1;
wire   [7:0] add_ln153_513_fu_22361_p2;
wire  signed [7:0] sext_ln153_297_fu_22352_p1;
wire   [7:0] add_ln153_514_fu_22367_p2;
wire  signed [9:0] sext_ln153_300_fu_22373_p1;
wire   [9:0] add_ln153_508_fu_22346_p2;
wire  signed [9:0] sext_ln153_302_fu_22392_p1;
wire   [9:0] select_ln126_4_fu_19285_p3;
wire  signed [6:0] sext_ln151_790_fu_22383_p1;
wire  signed [6:0] sext_ln151_792_fu_22386_p1;
wire   [6:0] add_ln153_518_fu_22401_p2;
wire  signed [6:0] sext_ln151_793_fu_22389_p1;
wire   [6:0] add_ln153_519_fu_22407_p2;
wire  signed [9:0] sext_ln153_303_fu_22413_p1;
wire   [9:0] add_ln153_517_fu_22395_p2;
wire  signed [7:0] sext_ln153_306_fu_22429_p1;
wire  signed [7:0] sext_ln153_305_fu_22426_p1;
wire   [7:0] add_ln153_525_fu_22432_p2;
wire  signed [7:0] sext_ln153_304_fu_22423_p1;
wire   [7:0] add_ln153_526_fu_22438_p2;
wire  signed [9:0] sext_ln153_307_fu_22444_p1;
wire   [9:0] add_ln153_520_fu_22417_p2;
wire  signed [9:0] sext_ln153_309_fu_22463_p1;
wire   [9:0] select_ln126_3_fu_19279_p3;
wire  signed [6:0] sext_ln151_801_fu_22454_p1;
wire  signed [6:0] sext_ln151_803_fu_22457_p1;
wire   [6:0] add_ln153_530_fu_22472_p2;
wire  signed [6:0] sext_ln151_804_fu_22460_p1;
wire   [6:0] add_ln153_531_fu_22478_p2;
wire  signed [9:0] sext_ln153_310_fu_22484_p1;
wire   [9:0] add_ln153_529_fu_22466_p2;
wire  signed [7:0] sext_ln153_313_fu_22500_p1;
wire  signed [7:0] sext_ln153_312_fu_22497_p1;
wire   [7:0] add_ln153_537_fu_22503_p2;
wire  signed [7:0] sext_ln153_311_fu_22494_p1;
wire   [7:0] add_ln153_538_fu_22509_p2;
wire  signed [9:0] sext_ln153_314_fu_22515_p1;
wire   [9:0] add_ln153_532_fu_22488_p2;
wire  signed [9:0] sext_ln153_316_fu_22534_p1;
wire   [9:0] select_ln126_2_fu_19273_p3;
wire  signed [6:0] sext_ln151_812_fu_22525_p1;
wire  signed [6:0] sext_ln151_814_fu_22528_p1;
wire   [6:0] add_ln153_542_fu_22543_p2;
wire  signed [6:0] sext_ln151_815_fu_22531_p1;
wire   [6:0] add_ln153_543_fu_22549_p2;
wire  signed [9:0] sext_ln153_317_fu_22555_p1;
wire   [9:0] add_ln153_541_fu_22537_p2;
wire  signed [7:0] sext_ln153_320_fu_22571_p1;
wire  signed [7:0] sext_ln153_319_fu_22568_p1;
wire   [7:0] add_ln153_549_fu_22574_p2;
wire  signed [7:0] sext_ln153_318_fu_22565_p1;
wire   [7:0] add_ln153_550_fu_22580_p2;
wire  signed [9:0] sext_ln153_321_fu_22586_p1;
wire   [9:0] add_ln153_544_fu_22559_p2;
wire  signed [9:0] sext_ln153_323_fu_22605_p1;
wire   [9:0] select_ln126_1_fu_19267_p3;
wire  signed [6:0] sext_ln151_823_fu_22596_p1;
wire  signed [6:0] sext_ln151_825_fu_22599_p1;
wire   [6:0] add_ln153_554_fu_22614_p2;
wire  signed [6:0] sext_ln151_826_fu_22602_p1;
wire   [6:0] add_ln153_555_fu_22620_p2;
wire  signed [9:0] sext_ln153_324_fu_22626_p1;
wire   [9:0] add_ln153_553_fu_22608_p2;
wire  signed [7:0] sext_ln153_327_fu_22642_p1;
wire  signed [7:0] sext_ln153_326_fu_22639_p1;
wire   [7:0] add_ln153_561_fu_22645_p2;
wire  signed [7:0] sext_ln153_325_fu_22636_p1;
wire   [7:0] add_ln153_562_fu_22651_p2;
wire  signed [9:0] sext_ln153_328_fu_22657_p1;
wire   [9:0] add_ln153_556_fu_22630_p2;
wire  signed [9:0] sext_ln153_330_fu_22676_p1;
wire   [9:0] select_ln126_fu_19260_p3;
wire  signed [6:0] sext_ln151_834_fu_22667_p1;
wire  signed [6:0] sext_ln151_836_fu_22670_p1;
wire   [6:0] add_ln153_566_fu_22685_p2;
wire  signed [6:0] sext_ln151_837_fu_22673_p1;
wire   [6:0] add_ln153_567_fu_22691_p2;
wire  signed [9:0] sext_ln153_331_fu_22697_p1;
wire   [9:0] add_ln153_565_fu_22679_p2;
wire  signed [7:0] sext_ln153_334_fu_22713_p1;
wire  signed [7:0] sext_ln153_333_fu_22710_p1;
wire   [7:0] add_ln153_573_fu_22716_p2;
wire  signed [7:0] sext_ln153_332_fu_22707_p1;
wire   [7:0] add_ln153_574_fu_22722_p2;
wire  signed [9:0] sext_ln153_335_fu_22728_p1;
wire   [9:0] add_ln153_568_fu_22701_p2;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1234;
reg    ap_condition_1403;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter4 = 1'b0;
//#0 ap_enable_reg_pp0_iter5 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 cit_fu_2426 = 5'd0;
//#0 p_0_0_0725_fu_2430 = 10'd0;
//#0 p_0_0_0_112727_fu_2434 = 10'd0;
//#0 p_0_0_0_2729_fu_2438 = 10'd0;
//#0 p_0_0_0_3731_fu_2442 = 10'd0;
//#0 p_0_0_0_4733_fu_2446 = 10'd0;
//#0 p_0_0_0_5735_fu_2450 = 10'd0;
//#0 p_0_0_0_6737_fu_2454 = 10'd0;
//#0 p_0_0_0_7739_fu_2458 = 10'd0;
//#0 p_0_0_0_8741_fu_2462 = 10'd0;
//#0 p_0_0_0_9743_fu_2466 = 10'd0;
//#0 p_0_0_0_10745_fu_2470 = 10'd0;
//#0 p_0_0_0_11747_fu_2474 = 10'd0;
//#0 p_0_0_0_12749_fu_2478 = 10'd0;
//#0 p_0_0_0_13751_fu_2482 = 10'd0;
//#0 p_0_0_0_14753_fu_2486 = 10'd0;
//#0 p_0_0_0_15755_fu_2490 = 10'd0;
//#0 p_0_0_0_16757_fu_2494 = 10'd0;
//#0 p_0_0_0_17759_fu_2498 = 10'd0;
//#0 p_0_0_0_18761_fu_2502 = 10'd0;
//#0 p_0_0_0_19763_fu_2506 = 10'd0;
//#0 p_0_0_0_20765_fu_2510 = 10'd0;
//#0 p_0_0_0_21767_fu_2514 = 10'd0;
//#0 p_0_0_0_22769_fu_2518 = 10'd0;
//#0 p_0_0_0_23771_fu_2522 = 10'd0;
//#0 p_0_0_0773_fu_2526 = 10'd0;
//#0 p_0_0_0_112775_fu_2530 = 10'd0;
//#0 p_0_0_0_2777_fu_2534 = 10'd0;
//#0 p_0_0_0_3779_fu_2538 = 10'd0;
//#0 p_0_0_0_4781_fu_2542 = 10'd0;
//#0 p_0_0_0_5783_fu_2546 = 10'd0;
//#0 p_0_0_0_6785_fu_2550 = 10'd0;
//#0 p_0_0_0_7787_fu_2554 = 10'd0;
//#0 p_0_0_0_8789_fu_2558 = 10'd0;
//#0 p_0_0_0_9791_fu_2562 = 10'd0;
//#0 p_0_0_0_10793_fu_2566 = 10'd0;
//#0 p_0_0_0_11795_fu_2570 = 10'd0;
//#0 p_0_0_0_12797_fu_2574 = 10'd0;
//#0 p_0_0_0_13799_fu_2578 = 10'd0;
//#0 p_0_0_0_14801_fu_2582 = 10'd0;
//#0 p_0_0_0_15803_fu_2586 = 10'd0;
//#0 p_0_0_0_16805_fu_2590 = 10'd0;
//#0 p_0_0_0_17807_fu_2594 = 10'd0;
//#0 p_0_0_0_18809_fu_2598 = 10'd0;
//#0 p_0_0_0_19811_fu_2602 = 10'd0;
//#0 p_0_0_0_20813_fu_2606 = 10'd0;
//#0 p_0_0_0_21815_fu_2610 = 10'd0;
//#0 p_0_0_0_22817_fu_2614 = 10'd0;
//#0 p_0_0_0_23819_fu_2618 = 10'd0;
//#0 cot_fu_2622 = 6'd0;
//#0 indvar_flatten_fu_2626 = 11'd0;
//#0 indvar_flatten107_fu_2630 = 16'd0;
end

MLP8_matmul_step2_mac_1_mlp_inst_m1_bias_arr_111_ROM_AUTO_1R #(
    .DataWidth( 238 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mlp_inst_m1_bias_arr_111_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m1_bias_arr_111_address0),
    .ce0(mlp_inst_m1_bias_arr_111_ce0),
    .q0(mlp_inst_m1_bias_arr_111_q0)
);

MLP8_matmul_step2_mac_1_mlp_inst_m1_weight_arr_110_ROM_AUTO_1R #(
    .DataWidth( 864 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
mlp_inst_m1_weight_arr_110_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m1_weight_arr_110_address0),
    .ce0(mlp_inst_m1_weight_arr_110_ce0),
    .q0(mlp_inst_m1_weight_arr_110_q0)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U32(
    .din0(mul_res_fu_3418_p0),
    .din1(mul_res_fu_3418_p1),
    .dout(mul_res_fu_3418_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U33(
    .din0(mul_res_1_fu_3453_p0),
    .din1(mul_res_1_fu_3453_p1),
    .dout(mul_res_1_fu_3453_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U34(
    .din0(mul_res_2_fu_3488_p0),
    .din1(mul_res_2_fu_3488_p1),
    .dout(mul_res_2_fu_3488_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U35(
    .din0(mul_res_3_fu_3523_p0),
    .din1(mul_res_3_fu_3523_p1),
    .dout(mul_res_3_fu_3523_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U36(
    .din0(mul_res_4_fu_3558_p0),
    .din1(mul_res_4_fu_3558_p1),
    .dout(mul_res_4_fu_3558_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U37(
    .din0(mul_res_5_fu_3593_p0),
    .din1(mul_res_5_fu_3593_p1),
    .dout(mul_res_5_fu_3593_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U38(
    .din0(mul_res_6_fu_3628_p0),
    .din1(mul_res_6_fu_3628_p1),
    .dout(mul_res_6_fu_3628_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U39(
    .din0(mul_res_7_fu_3663_p0),
    .din1(mul_res_7_fu_3663_p1),
    .dout(mul_res_7_fu_3663_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U40(
    .din0(mul_res_8_fu_3698_p0),
    .din1(mul_res_8_fu_3698_p1),
    .dout(mul_res_8_fu_3698_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U41(
    .din0(mul_res_9_fu_3733_p0),
    .din1(mul_res_9_fu_3733_p1),
    .dout(mul_res_9_fu_3733_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U42(
    .din0(mul_res_10_fu_3768_p0),
    .din1(mul_res_10_fu_3768_p1),
    .dout(mul_res_10_fu_3768_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U43(
    .din0(mul_res_11_fu_3803_p0),
    .din1(mul_res_11_fu_3803_p1),
    .dout(mul_res_11_fu_3803_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U44(
    .din0(mul_res_12_fu_3877_p0),
    .din1(mul_res_12_fu_3877_p1),
    .dout(mul_res_12_fu_3877_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U45(
    .din0(mul_res_13_fu_3909_p0),
    .din1(mul_res_13_fu_3909_p1),
    .dout(mul_res_13_fu_3909_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U46(
    .din0(mul_res_14_fu_3941_p0),
    .din1(mul_res_14_fu_3941_p1),
    .dout(mul_res_14_fu_3941_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U47(
    .din0(mul_res_15_fu_3973_p0),
    .din1(mul_res_15_fu_3973_p1),
    .dout(mul_res_15_fu_3973_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U48(
    .din0(mul_res_16_fu_4005_p0),
    .din1(mul_res_16_fu_4005_p1),
    .dout(mul_res_16_fu_4005_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U49(
    .din0(mul_res_17_fu_4037_p0),
    .din1(mul_res_17_fu_4037_p1),
    .dout(mul_res_17_fu_4037_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U50(
    .din0(mul_res_18_fu_4069_p0),
    .din1(mul_res_18_fu_4069_p1),
    .dout(mul_res_18_fu_4069_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U51(
    .din0(mul_res_19_fu_4101_p0),
    .din1(mul_res_19_fu_4101_p1),
    .dout(mul_res_19_fu_4101_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U52(
    .din0(mul_res_20_fu_4133_p0),
    .din1(mul_res_20_fu_4133_p1),
    .dout(mul_res_20_fu_4133_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U53(
    .din0(mul_res_21_fu_4165_p0),
    .din1(mul_res_21_fu_4165_p1),
    .dout(mul_res_21_fu_4165_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U54(
    .din0(mul_res_22_fu_4197_p0),
    .din1(mul_res_22_fu_4197_p1),
    .dout(mul_res_22_fu_4197_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U55(
    .din0(mul_res_23_fu_4229_p0),
    .din1(mul_res_23_fu_4229_p1),
    .dout(mul_res_23_fu_4229_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U56(
    .din0(mul_res_24_fu_4303_p0),
    .din1(mul_res_24_fu_4303_p1),
    .dout(mul_res_24_fu_4303_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U57(
    .din0(mul_res_25_fu_4335_p0),
    .din1(mul_res_25_fu_4335_p1),
    .dout(mul_res_25_fu_4335_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U58(
    .din0(mul_res_26_fu_4367_p0),
    .din1(mul_res_26_fu_4367_p1),
    .dout(mul_res_26_fu_4367_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U59(
    .din0(mul_res_27_fu_4399_p0),
    .din1(mul_res_27_fu_4399_p1),
    .dout(mul_res_27_fu_4399_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U60(
    .din0(mul_res_28_fu_4431_p0),
    .din1(mul_res_28_fu_4431_p1),
    .dout(mul_res_28_fu_4431_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U61(
    .din0(mul_res_29_fu_4463_p0),
    .din1(mul_res_29_fu_4463_p1),
    .dout(mul_res_29_fu_4463_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U62(
    .din0(mul_res_30_fu_4495_p0),
    .din1(mul_res_30_fu_4495_p1),
    .dout(mul_res_30_fu_4495_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U63(
    .din0(mul_res_31_fu_4527_p0),
    .din1(mul_res_31_fu_4527_p1),
    .dout(mul_res_31_fu_4527_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U64(
    .din0(mul_res_32_fu_4559_p0),
    .din1(mul_res_32_fu_4559_p1),
    .dout(mul_res_32_fu_4559_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U65(
    .din0(mul_res_33_fu_4591_p0),
    .din1(mul_res_33_fu_4591_p1),
    .dout(mul_res_33_fu_4591_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U66(
    .din0(mul_res_34_fu_4623_p0),
    .din1(mul_res_34_fu_4623_p1),
    .dout(mul_res_34_fu_4623_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U67(
    .din0(mul_res_35_fu_4655_p0),
    .din1(mul_res_35_fu_4655_p1),
    .dout(mul_res_35_fu_4655_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U68(
    .din0(mul_res_36_fu_4729_p0),
    .din1(mul_res_36_fu_4729_p1),
    .dout(mul_res_36_fu_4729_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U69(
    .din0(mul_res_37_fu_4761_p0),
    .din1(mul_res_37_fu_4761_p1),
    .dout(mul_res_37_fu_4761_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U70(
    .din0(mul_res_38_fu_4793_p0),
    .din1(mul_res_38_fu_4793_p1),
    .dout(mul_res_38_fu_4793_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U71(
    .din0(mul_res_39_fu_4825_p0),
    .din1(mul_res_39_fu_4825_p1),
    .dout(mul_res_39_fu_4825_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U72(
    .din0(mul_res_40_fu_4857_p0),
    .din1(mul_res_40_fu_4857_p1),
    .dout(mul_res_40_fu_4857_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U73(
    .din0(mul_res_41_fu_4889_p0),
    .din1(mul_res_41_fu_4889_p1),
    .dout(mul_res_41_fu_4889_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U74(
    .din0(mul_res_42_fu_4921_p0),
    .din1(mul_res_42_fu_4921_p1),
    .dout(mul_res_42_fu_4921_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U75(
    .din0(mul_res_43_fu_4953_p0),
    .din1(mul_res_43_fu_4953_p1),
    .dout(mul_res_43_fu_4953_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U76(
    .din0(mul_res_44_fu_4985_p0),
    .din1(mul_res_44_fu_4985_p1),
    .dout(mul_res_44_fu_4985_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U77(
    .din0(mul_res_45_fu_5017_p0),
    .din1(mul_res_45_fu_5017_p1),
    .dout(mul_res_45_fu_5017_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U78(
    .din0(mul_res_46_fu_5049_p0),
    .din1(mul_res_46_fu_5049_p1),
    .dout(mul_res_46_fu_5049_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U79(
    .din0(mul_res_47_fu_5081_p0),
    .din1(mul_res_47_fu_5081_p1),
    .dout(mul_res_47_fu_5081_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U80(
    .din0(mul_res_48_fu_5155_p0),
    .din1(mul_res_48_fu_5155_p1),
    .dout(mul_res_48_fu_5155_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U81(
    .din0(mul_res_49_fu_5187_p0),
    .din1(mul_res_49_fu_5187_p1),
    .dout(mul_res_49_fu_5187_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U82(
    .din0(mul_res_50_fu_5219_p0),
    .din1(mul_res_50_fu_5219_p1),
    .dout(mul_res_50_fu_5219_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U83(
    .din0(mul_res_51_fu_5251_p0),
    .din1(mul_res_51_fu_5251_p1),
    .dout(mul_res_51_fu_5251_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U84(
    .din0(mul_res_52_fu_5283_p0),
    .din1(mul_res_52_fu_5283_p1),
    .dout(mul_res_52_fu_5283_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U85(
    .din0(mul_res_53_fu_5315_p0),
    .din1(mul_res_53_fu_5315_p1),
    .dout(mul_res_53_fu_5315_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U86(
    .din0(mul_res_54_fu_5347_p0),
    .din1(mul_res_54_fu_5347_p1),
    .dout(mul_res_54_fu_5347_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U87(
    .din0(mul_res_55_fu_5379_p0),
    .din1(mul_res_55_fu_5379_p1),
    .dout(mul_res_55_fu_5379_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U88(
    .din0(mul_res_56_fu_5411_p0),
    .din1(mul_res_56_fu_5411_p1),
    .dout(mul_res_56_fu_5411_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U89(
    .din0(mul_res_57_fu_5443_p0),
    .din1(mul_res_57_fu_5443_p1),
    .dout(mul_res_57_fu_5443_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U90(
    .din0(mul_res_58_fu_5475_p0),
    .din1(mul_res_58_fu_5475_p1),
    .dout(mul_res_58_fu_5475_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U91(
    .din0(mul_res_59_fu_5507_p0),
    .din1(mul_res_59_fu_5507_p1),
    .dout(mul_res_59_fu_5507_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U92(
    .din0(mul_res_60_fu_5581_p0),
    .din1(mul_res_60_fu_5581_p1),
    .dout(mul_res_60_fu_5581_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U93(
    .din0(mul_res_61_fu_5613_p0),
    .din1(mul_res_61_fu_5613_p1),
    .dout(mul_res_61_fu_5613_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U94(
    .din0(mul_res_62_fu_5645_p0),
    .din1(mul_res_62_fu_5645_p1),
    .dout(mul_res_62_fu_5645_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U95(
    .din0(mul_res_63_fu_5677_p0),
    .din1(mul_res_63_fu_5677_p1),
    .dout(mul_res_63_fu_5677_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U96(
    .din0(mul_res_64_fu_5709_p0),
    .din1(mul_res_64_fu_5709_p1),
    .dout(mul_res_64_fu_5709_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U97(
    .din0(mul_res_65_fu_5741_p0),
    .din1(mul_res_65_fu_5741_p1),
    .dout(mul_res_65_fu_5741_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U98(
    .din0(mul_res_66_fu_5773_p0),
    .din1(mul_res_66_fu_5773_p1),
    .dout(mul_res_66_fu_5773_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U99(
    .din0(mul_res_67_fu_5805_p0),
    .din1(mul_res_67_fu_5805_p1),
    .dout(mul_res_67_fu_5805_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U100(
    .din0(mul_res_68_fu_5837_p0),
    .din1(mul_res_68_fu_5837_p1),
    .dout(mul_res_68_fu_5837_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U101(
    .din0(mul_res_69_fu_5869_p0),
    .din1(mul_res_69_fu_5869_p1),
    .dout(mul_res_69_fu_5869_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U102(
    .din0(mul_res_70_fu_5901_p0),
    .din1(mul_res_70_fu_5901_p1),
    .dout(mul_res_70_fu_5901_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U103(
    .din0(mul_res_71_fu_5933_p0),
    .din1(mul_res_71_fu_5933_p1),
    .dout(mul_res_71_fu_5933_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U104(
    .din0(mul_res_72_fu_6007_p0),
    .din1(mul_res_72_fu_6007_p1),
    .dout(mul_res_72_fu_6007_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U105(
    .din0(mul_res_73_fu_6039_p0),
    .din1(mul_res_73_fu_6039_p1),
    .dout(mul_res_73_fu_6039_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U106(
    .din0(mul_res_74_fu_6071_p0),
    .din1(mul_res_74_fu_6071_p1),
    .dout(mul_res_74_fu_6071_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U107(
    .din0(mul_res_75_fu_6103_p0),
    .din1(mul_res_75_fu_6103_p1),
    .dout(mul_res_75_fu_6103_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U108(
    .din0(mul_res_76_fu_6135_p0),
    .din1(mul_res_76_fu_6135_p1),
    .dout(mul_res_76_fu_6135_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U109(
    .din0(mul_res_77_fu_6167_p0),
    .din1(mul_res_77_fu_6167_p1),
    .dout(mul_res_77_fu_6167_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U110(
    .din0(mul_res_78_fu_6199_p0),
    .din1(mul_res_78_fu_6199_p1),
    .dout(mul_res_78_fu_6199_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U111(
    .din0(mul_res_79_fu_6231_p0),
    .din1(mul_res_79_fu_6231_p1),
    .dout(mul_res_79_fu_6231_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U112(
    .din0(mul_res_80_fu_6263_p0),
    .din1(mul_res_80_fu_6263_p1),
    .dout(mul_res_80_fu_6263_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U113(
    .din0(mul_res_81_fu_6295_p0),
    .din1(mul_res_81_fu_6295_p1),
    .dout(mul_res_81_fu_6295_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U114(
    .din0(mul_res_82_fu_6327_p0),
    .din1(mul_res_82_fu_6327_p1),
    .dout(mul_res_82_fu_6327_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U115(
    .din0(mul_res_83_fu_6359_p0),
    .din1(mul_res_83_fu_6359_p1),
    .dout(mul_res_83_fu_6359_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U116(
    .din0(mul_res_84_fu_6433_p0),
    .din1(mul_res_84_fu_6433_p1),
    .dout(mul_res_84_fu_6433_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U117(
    .din0(mul_res_85_fu_6465_p0),
    .din1(mul_res_85_fu_6465_p1),
    .dout(mul_res_85_fu_6465_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U118(
    .din0(mul_res_86_fu_6497_p0),
    .din1(mul_res_86_fu_6497_p1),
    .dout(mul_res_86_fu_6497_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U119(
    .din0(mul_res_87_fu_6529_p0),
    .din1(mul_res_87_fu_6529_p1),
    .dout(mul_res_87_fu_6529_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U120(
    .din0(mul_res_88_fu_6561_p0),
    .din1(mul_res_88_fu_6561_p1),
    .dout(mul_res_88_fu_6561_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U121(
    .din0(mul_res_89_fu_6593_p0),
    .din1(mul_res_89_fu_6593_p1),
    .dout(mul_res_89_fu_6593_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U122(
    .din0(mul_res_90_fu_6625_p0),
    .din1(mul_res_90_fu_6625_p1),
    .dout(mul_res_90_fu_6625_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U123(
    .din0(mul_res_91_fu_6657_p0),
    .din1(mul_res_91_fu_6657_p1),
    .dout(mul_res_91_fu_6657_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U124(
    .din0(mul_res_92_fu_6689_p0),
    .din1(mul_res_92_fu_6689_p1),
    .dout(mul_res_92_fu_6689_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U125(
    .din0(mul_res_93_fu_6721_p0),
    .din1(mul_res_93_fu_6721_p1),
    .dout(mul_res_93_fu_6721_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U126(
    .din0(mul_res_94_fu_6753_p0),
    .din1(mul_res_94_fu_6753_p1),
    .dout(mul_res_94_fu_6753_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U127(
    .din0(mul_res_95_fu_6785_p0),
    .din1(mul_res_95_fu_6785_p1),
    .dout(mul_res_95_fu_6785_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U128(
    .din0(mul_res_96_fu_6859_p0),
    .din1(mul_res_96_fu_6859_p1),
    .dout(mul_res_96_fu_6859_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U129(
    .din0(mul_res_97_fu_6891_p0),
    .din1(mul_res_97_fu_6891_p1),
    .dout(mul_res_97_fu_6891_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U130(
    .din0(mul_res_98_fu_6923_p0),
    .din1(mul_res_98_fu_6923_p1),
    .dout(mul_res_98_fu_6923_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U131(
    .din0(mul_res_99_fu_6955_p0),
    .din1(mul_res_99_fu_6955_p1),
    .dout(mul_res_99_fu_6955_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U132(
    .din0(mul_res_100_fu_6987_p0),
    .din1(mul_res_100_fu_6987_p1),
    .dout(mul_res_100_fu_6987_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U133(
    .din0(mul_res_101_fu_7019_p0),
    .din1(mul_res_101_fu_7019_p1),
    .dout(mul_res_101_fu_7019_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U134(
    .din0(mul_res_102_fu_7051_p0),
    .din1(mul_res_102_fu_7051_p1),
    .dout(mul_res_102_fu_7051_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U135(
    .din0(mul_res_103_fu_7083_p0),
    .din1(mul_res_103_fu_7083_p1),
    .dout(mul_res_103_fu_7083_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U136(
    .din0(mul_res_104_fu_7115_p0),
    .din1(mul_res_104_fu_7115_p1),
    .dout(mul_res_104_fu_7115_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U137(
    .din0(mul_res_105_fu_7147_p0),
    .din1(mul_res_105_fu_7147_p1),
    .dout(mul_res_105_fu_7147_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U138(
    .din0(mul_res_106_fu_7179_p0),
    .din1(mul_res_106_fu_7179_p1),
    .dout(mul_res_106_fu_7179_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U139(
    .din0(mul_res_107_fu_7211_p0),
    .din1(mul_res_107_fu_7211_p1),
    .dout(mul_res_107_fu_7211_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U140(
    .din0(mul_res_108_fu_7285_p0),
    .din1(mul_res_108_fu_7285_p1),
    .dout(mul_res_108_fu_7285_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U141(
    .din0(mul_res_109_fu_7317_p0),
    .din1(mul_res_109_fu_7317_p1),
    .dout(mul_res_109_fu_7317_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U142(
    .din0(mul_res_110_fu_7349_p0),
    .din1(mul_res_110_fu_7349_p1),
    .dout(mul_res_110_fu_7349_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U143(
    .din0(mul_res_111_fu_7381_p0),
    .din1(mul_res_111_fu_7381_p1),
    .dout(mul_res_111_fu_7381_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U144(
    .din0(mul_res_112_fu_7413_p0),
    .din1(mul_res_112_fu_7413_p1),
    .dout(mul_res_112_fu_7413_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U145(
    .din0(mul_res_113_fu_7445_p0),
    .din1(mul_res_113_fu_7445_p1),
    .dout(mul_res_113_fu_7445_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U146(
    .din0(mul_res_114_fu_7477_p0),
    .din1(mul_res_114_fu_7477_p1),
    .dout(mul_res_114_fu_7477_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U147(
    .din0(mul_res_115_fu_7509_p0),
    .din1(mul_res_115_fu_7509_p1),
    .dout(mul_res_115_fu_7509_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U148(
    .din0(mul_res_116_fu_7541_p0),
    .din1(mul_res_116_fu_7541_p1),
    .dout(mul_res_116_fu_7541_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U149(
    .din0(mul_res_117_fu_7573_p0),
    .din1(mul_res_117_fu_7573_p1),
    .dout(mul_res_117_fu_7573_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U150(
    .din0(mul_res_118_fu_7605_p0),
    .din1(mul_res_118_fu_7605_p1),
    .dout(mul_res_118_fu_7605_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U151(
    .din0(mul_res_119_fu_7637_p0),
    .din1(mul_res_119_fu_7637_p1),
    .dout(mul_res_119_fu_7637_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U152(
    .din0(mul_res_120_fu_7711_p0),
    .din1(mul_res_120_fu_7711_p1),
    .dout(mul_res_120_fu_7711_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U153(
    .din0(mul_res_121_fu_7743_p0),
    .din1(mul_res_121_fu_7743_p1),
    .dout(mul_res_121_fu_7743_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U154(
    .din0(mul_res_122_fu_7775_p0),
    .din1(mul_res_122_fu_7775_p1),
    .dout(mul_res_122_fu_7775_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U155(
    .din0(mul_res_123_fu_7807_p0),
    .din1(mul_res_123_fu_7807_p1),
    .dout(mul_res_123_fu_7807_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U156(
    .din0(mul_res_124_fu_7839_p0),
    .din1(mul_res_124_fu_7839_p1),
    .dout(mul_res_124_fu_7839_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U157(
    .din0(mul_res_125_fu_7871_p0),
    .din1(mul_res_125_fu_7871_p1),
    .dout(mul_res_125_fu_7871_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U158(
    .din0(mul_res_126_fu_7899_p0),
    .din1(mul_res_126_fu_7899_p1),
    .dout(mul_res_126_fu_7899_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U159(
    .din0(mul_res_127_fu_7931_p0),
    .din1(mul_res_127_fu_7931_p1),
    .dout(mul_res_127_fu_7931_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U160(
    .din0(mul_res_128_fu_7959_p0),
    .din1(mul_res_128_fu_7959_p1),
    .dout(mul_res_128_fu_7959_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U161(
    .din0(mul_res_129_fu_7987_p0),
    .din1(mul_res_129_fu_7987_p1),
    .dout(mul_res_129_fu_7987_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U162(
    .din0(mul_res_130_fu_8019_p0),
    .din1(mul_res_130_fu_8019_p1),
    .dout(mul_res_130_fu_8019_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U163(
    .din0(mul_res_131_fu_8051_p0),
    .din1(mul_res_131_fu_8051_p1),
    .dout(mul_res_131_fu_8051_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U164(
    .din0(mul_res_132_fu_8113_p0),
    .din1(mul_res_132_fu_8113_p1),
    .dout(mul_res_132_fu_8113_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U165(
    .din0(mul_res_133_fu_8145_p0),
    .din1(mul_res_133_fu_8145_p1),
    .dout(mul_res_133_fu_8145_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U166(
    .din0(mul_res_134_fu_8177_p0),
    .din1(mul_res_134_fu_8177_p1),
    .dout(mul_res_134_fu_8177_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U167(
    .din0(mul_res_135_fu_8209_p0),
    .din1(mul_res_135_fu_8209_p1),
    .dout(mul_res_135_fu_8209_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U168(
    .din0(mul_res_136_fu_8241_p0),
    .din1(mul_res_136_fu_8241_p1),
    .dout(mul_res_136_fu_8241_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U169(
    .din0(mul_res_137_fu_8273_p0),
    .din1(mul_res_137_fu_8273_p1),
    .dout(mul_res_137_fu_8273_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U170(
    .din0(mul_res_138_fu_8301_p0),
    .din1(mul_res_138_fu_8301_p1),
    .dout(mul_res_138_fu_8301_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U171(
    .din0(mul_res_139_fu_8333_p0),
    .din1(mul_res_139_fu_8333_p1),
    .dout(mul_res_139_fu_8333_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U172(
    .din0(mul_res_140_fu_8361_p0),
    .din1(mul_res_140_fu_8361_p1),
    .dout(mul_res_140_fu_8361_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U173(
    .din0(mul_res_141_fu_8389_p0),
    .din1(mul_res_141_fu_8389_p1),
    .dout(mul_res_141_fu_8389_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U174(
    .din0(mul_res_142_fu_8421_p0),
    .din1(mul_res_142_fu_8421_p1),
    .dout(mul_res_142_fu_8421_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U175(
    .din0(mul_res_143_fu_8453_p0),
    .din1(mul_res_143_fu_8453_p1),
    .dout(mul_res_143_fu_8453_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U176(
    .din0(mul_res_144_fu_8515_p0),
    .din1(mul_res_144_fu_8515_p1),
    .dout(mul_res_144_fu_8515_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U177(
    .din0(mul_res_145_fu_8547_p0),
    .din1(mul_res_145_fu_8547_p1),
    .dout(mul_res_145_fu_8547_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U178(
    .din0(mul_res_146_fu_8579_p0),
    .din1(mul_res_146_fu_8579_p1),
    .dout(mul_res_146_fu_8579_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U179(
    .din0(mul_res_147_fu_8611_p0),
    .din1(mul_res_147_fu_8611_p1),
    .dout(mul_res_147_fu_8611_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U180(
    .din0(mul_res_148_fu_8643_p0),
    .din1(mul_res_148_fu_8643_p1),
    .dout(mul_res_148_fu_8643_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U181(
    .din0(mul_res_149_fu_8675_p0),
    .din1(mul_res_149_fu_8675_p1),
    .dout(mul_res_149_fu_8675_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U182(
    .din0(mul_res_150_fu_8703_p0),
    .din1(mul_res_150_fu_8703_p1),
    .dout(mul_res_150_fu_8703_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U183(
    .din0(mul_res_151_fu_8735_p0),
    .din1(mul_res_151_fu_8735_p1),
    .dout(mul_res_151_fu_8735_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U184(
    .din0(mul_res_152_fu_8763_p0),
    .din1(mul_res_152_fu_8763_p1),
    .dout(mul_res_152_fu_8763_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U185(
    .din0(mul_res_153_fu_8791_p0),
    .din1(mul_res_153_fu_8791_p1),
    .dout(mul_res_153_fu_8791_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U186(
    .din0(mul_res_154_fu_8823_p0),
    .din1(mul_res_154_fu_8823_p1),
    .dout(mul_res_154_fu_8823_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U187(
    .din0(mul_res_155_fu_8855_p0),
    .din1(mul_res_155_fu_8855_p1),
    .dout(mul_res_155_fu_8855_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U188(
    .din0(mul_res_156_fu_8917_p0),
    .din1(mul_res_156_fu_8917_p1),
    .dout(mul_res_156_fu_8917_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U189(
    .din0(mul_res_157_fu_8949_p0),
    .din1(mul_res_157_fu_8949_p1),
    .dout(mul_res_157_fu_8949_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U190(
    .din0(mul_res_158_fu_8981_p0),
    .din1(mul_res_158_fu_8981_p1),
    .dout(mul_res_158_fu_8981_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U191(
    .din0(mul_res_159_fu_9013_p0),
    .din1(mul_res_159_fu_9013_p1),
    .dout(mul_res_159_fu_9013_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U192(
    .din0(mul_res_160_fu_9045_p0),
    .din1(mul_res_160_fu_9045_p1),
    .dout(mul_res_160_fu_9045_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U193(
    .din0(mul_res_161_fu_9077_p0),
    .din1(mul_res_161_fu_9077_p1),
    .dout(mul_res_161_fu_9077_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U194(
    .din0(mul_res_162_fu_9105_p0),
    .din1(mul_res_162_fu_9105_p1),
    .dout(mul_res_162_fu_9105_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U195(
    .din0(mul_res_163_fu_9137_p0),
    .din1(mul_res_163_fu_9137_p1),
    .dout(mul_res_163_fu_9137_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U196(
    .din0(mul_res_164_fu_9165_p0),
    .din1(mul_res_164_fu_9165_p1),
    .dout(mul_res_164_fu_9165_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U197(
    .din0(mul_res_165_fu_9193_p0),
    .din1(mul_res_165_fu_9193_p1),
    .dout(mul_res_165_fu_9193_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U198(
    .din0(mul_res_166_fu_9225_p0),
    .din1(mul_res_166_fu_9225_p1),
    .dout(mul_res_166_fu_9225_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U199(
    .din0(mul_res_167_fu_9257_p0),
    .din1(mul_res_167_fu_9257_p1),
    .dout(mul_res_167_fu_9257_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U200(
    .din0(mul_res_168_fu_9319_p0),
    .din1(mul_res_168_fu_9319_p1),
    .dout(mul_res_168_fu_9319_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U201(
    .din0(mul_res_169_fu_9351_p0),
    .din1(mul_res_169_fu_9351_p1),
    .dout(mul_res_169_fu_9351_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U202(
    .din0(mul_res_170_fu_9383_p0),
    .din1(mul_res_170_fu_9383_p1),
    .dout(mul_res_170_fu_9383_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U203(
    .din0(mul_res_171_fu_9415_p0),
    .din1(mul_res_171_fu_9415_p1),
    .dout(mul_res_171_fu_9415_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U204(
    .din0(mul_res_172_fu_9447_p0),
    .din1(mul_res_172_fu_9447_p1),
    .dout(mul_res_172_fu_9447_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U205(
    .din0(mul_res_173_fu_9479_p0),
    .din1(mul_res_173_fu_9479_p1),
    .dout(mul_res_173_fu_9479_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U206(
    .din0(mul_res_174_fu_9507_p0),
    .din1(mul_res_174_fu_9507_p1),
    .dout(mul_res_174_fu_9507_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U207(
    .din0(mul_res_175_fu_9539_p0),
    .din1(mul_res_175_fu_9539_p1),
    .dout(mul_res_175_fu_9539_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U208(
    .din0(mul_res_176_fu_9567_p0),
    .din1(mul_res_176_fu_9567_p1),
    .dout(mul_res_176_fu_9567_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U209(
    .din0(mul_res_177_fu_9595_p0),
    .din1(mul_res_177_fu_9595_p1),
    .dout(mul_res_177_fu_9595_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U210(
    .din0(mul_res_178_fu_9627_p0),
    .din1(mul_res_178_fu_9627_p1),
    .dout(mul_res_178_fu_9627_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U211(
    .din0(mul_res_179_fu_9659_p0),
    .din1(mul_res_179_fu_9659_p1),
    .dout(mul_res_179_fu_9659_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U212(
    .din0(mul_res_180_fu_9721_p0),
    .din1(mul_res_180_fu_9721_p1),
    .dout(mul_res_180_fu_9721_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U213(
    .din0(mul_res_181_fu_9753_p0),
    .din1(mul_res_181_fu_9753_p1),
    .dout(mul_res_181_fu_9753_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U214(
    .din0(mul_res_182_fu_9785_p0),
    .din1(mul_res_182_fu_9785_p1),
    .dout(mul_res_182_fu_9785_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U215(
    .din0(mul_res_183_fu_9817_p0),
    .din1(mul_res_183_fu_9817_p1),
    .dout(mul_res_183_fu_9817_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U216(
    .din0(mul_res_184_fu_9849_p0),
    .din1(mul_res_184_fu_9849_p1),
    .dout(mul_res_184_fu_9849_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U217(
    .din0(mul_res_185_fu_9881_p0),
    .din1(mul_res_185_fu_9881_p1),
    .dout(mul_res_185_fu_9881_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U218(
    .din0(mul_res_186_fu_9909_p0),
    .din1(mul_res_186_fu_9909_p1),
    .dout(mul_res_186_fu_9909_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U219(
    .din0(mul_res_187_fu_9941_p0),
    .din1(mul_res_187_fu_9941_p1),
    .dout(mul_res_187_fu_9941_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U220(
    .din0(mul_res_188_fu_9969_p0),
    .din1(mul_res_188_fu_9969_p1),
    .dout(mul_res_188_fu_9969_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U221(
    .din0(mul_res_189_fu_9997_p0),
    .din1(mul_res_189_fu_9997_p1),
    .dout(mul_res_189_fu_9997_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U222(
    .din0(mul_res_190_fu_10029_p0),
    .din1(mul_res_190_fu_10029_p1),
    .dout(mul_res_190_fu_10029_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U223(
    .din0(mul_res_191_fu_10061_p0),
    .din1(mul_res_191_fu_10061_p1),
    .dout(mul_res_191_fu_10061_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U224(
    .din0(mul_res_192_fu_10123_p0),
    .din1(mul_res_192_fu_10123_p1),
    .dout(mul_res_192_fu_10123_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U225(
    .din0(mul_res_193_fu_10155_p0),
    .din1(mul_res_193_fu_10155_p1),
    .dout(mul_res_193_fu_10155_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U226(
    .din0(mul_res_194_fu_10187_p0),
    .din1(mul_res_194_fu_10187_p1),
    .dout(mul_res_194_fu_10187_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U227(
    .din0(mul_res_195_fu_10219_p0),
    .din1(mul_res_195_fu_10219_p1),
    .dout(mul_res_195_fu_10219_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U228(
    .din0(mul_res_196_fu_10251_p0),
    .din1(mul_res_196_fu_10251_p1),
    .dout(mul_res_196_fu_10251_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U229(
    .din0(mul_res_197_fu_10283_p0),
    .din1(mul_res_197_fu_10283_p1),
    .dout(mul_res_197_fu_10283_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U230(
    .din0(mul_res_198_fu_10311_p0),
    .din1(mul_res_198_fu_10311_p1),
    .dout(mul_res_198_fu_10311_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U231(
    .din0(mul_res_199_fu_10343_p0),
    .din1(mul_res_199_fu_10343_p1),
    .dout(mul_res_199_fu_10343_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U232(
    .din0(mul_res_200_fu_10371_p0),
    .din1(mul_res_200_fu_10371_p1),
    .dout(mul_res_200_fu_10371_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U233(
    .din0(mul_res_201_fu_10399_p0),
    .din1(mul_res_201_fu_10399_p1),
    .dout(mul_res_201_fu_10399_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U234(
    .din0(mul_res_202_fu_10431_p0),
    .din1(mul_res_202_fu_10431_p1),
    .dout(mul_res_202_fu_10431_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U235(
    .din0(mul_res_203_fu_10463_p0),
    .din1(mul_res_203_fu_10463_p1),
    .dout(mul_res_203_fu_10463_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U236(
    .din0(mul_res_204_fu_10525_p0),
    .din1(mul_res_204_fu_10525_p1),
    .dout(mul_res_204_fu_10525_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U237(
    .din0(mul_res_205_fu_10557_p0),
    .din1(mul_res_205_fu_10557_p1),
    .dout(mul_res_205_fu_10557_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U238(
    .din0(mul_res_206_fu_10589_p0),
    .din1(mul_res_206_fu_10589_p1),
    .dout(mul_res_206_fu_10589_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U239(
    .din0(mul_res_207_fu_10621_p0),
    .din1(mul_res_207_fu_10621_p1),
    .dout(mul_res_207_fu_10621_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U240(
    .din0(mul_res_208_fu_10653_p0),
    .din1(mul_res_208_fu_10653_p1),
    .dout(mul_res_208_fu_10653_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U241(
    .din0(mul_res_209_fu_10685_p0),
    .din1(mul_res_209_fu_10685_p1),
    .dout(mul_res_209_fu_10685_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U242(
    .din0(mul_res_210_fu_10713_p0),
    .din1(mul_res_210_fu_10713_p1),
    .dout(mul_res_210_fu_10713_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U243(
    .din0(mul_res_211_fu_10745_p0),
    .din1(mul_res_211_fu_10745_p1),
    .dout(mul_res_211_fu_10745_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U244(
    .din0(mul_res_212_fu_10773_p0),
    .din1(mul_res_212_fu_10773_p1),
    .dout(mul_res_212_fu_10773_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U245(
    .din0(mul_res_213_fu_10801_p0),
    .din1(mul_res_213_fu_10801_p1),
    .dout(mul_res_213_fu_10801_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U246(
    .din0(mul_res_214_fu_10833_p0),
    .din1(mul_res_214_fu_10833_p1),
    .dout(mul_res_214_fu_10833_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U247(
    .din0(mul_res_215_fu_10865_p0),
    .din1(mul_res_215_fu_10865_p1),
    .dout(mul_res_215_fu_10865_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U248(
    .din0(mul_res_216_fu_10927_p0),
    .din1(mul_res_216_fu_10927_p1),
    .dout(mul_res_216_fu_10927_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U249(
    .din0(mul_res_217_fu_10959_p0),
    .din1(mul_res_217_fu_10959_p1),
    .dout(mul_res_217_fu_10959_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U250(
    .din0(mul_res_218_fu_10991_p0),
    .din1(mul_res_218_fu_10991_p1),
    .dout(mul_res_218_fu_10991_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U251(
    .din0(mul_res_219_fu_11023_p0),
    .din1(mul_res_219_fu_11023_p1),
    .dout(mul_res_219_fu_11023_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U252(
    .din0(mul_res_220_fu_11055_p0),
    .din1(mul_res_220_fu_11055_p1),
    .dout(mul_res_220_fu_11055_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U253(
    .din0(mul_res_221_fu_11087_p0),
    .din1(mul_res_221_fu_11087_p1),
    .dout(mul_res_221_fu_11087_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U254(
    .din0(mul_res_222_fu_11115_p0),
    .din1(mul_res_222_fu_11115_p1),
    .dout(mul_res_222_fu_11115_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U255(
    .din0(mul_res_223_fu_11147_p0),
    .din1(mul_res_223_fu_11147_p1),
    .dout(mul_res_223_fu_11147_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U256(
    .din0(mul_res_224_fu_11175_p0),
    .din1(mul_res_224_fu_11175_p1),
    .dout(mul_res_224_fu_11175_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U257(
    .din0(mul_res_225_fu_11203_p0),
    .din1(mul_res_225_fu_11203_p1),
    .dout(mul_res_225_fu_11203_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U258(
    .din0(mul_res_226_fu_11235_p0),
    .din1(mul_res_226_fu_11235_p1),
    .dout(mul_res_226_fu_11235_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U259(
    .din0(mul_res_227_fu_11267_p0),
    .din1(mul_res_227_fu_11267_p1),
    .dout(mul_res_227_fu_11267_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U260(
    .din0(mul_res_228_fu_11329_p0),
    .din1(mul_res_228_fu_11329_p1),
    .dout(mul_res_228_fu_11329_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U261(
    .din0(mul_res_229_fu_11361_p0),
    .din1(mul_res_229_fu_11361_p1),
    .dout(mul_res_229_fu_11361_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U262(
    .din0(mul_res_230_fu_11393_p0),
    .din1(mul_res_230_fu_11393_p1),
    .dout(mul_res_230_fu_11393_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U263(
    .din0(mul_res_231_fu_11425_p0),
    .din1(mul_res_231_fu_11425_p1),
    .dout(mul_res_231_fu_11425_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U264(
    .din0(mul_res_232_fu_11457_p0),
    .din1(mul_res_232_fu_11457_p1),
    .dout(mul_res_232_fu_11457_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U265(
    .din0(mul_res_233_fu_11489_p0),
    .din1(mul_res_233_fu_11489_p1),
    .dout(mul_res_233_fu_11489_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U266(
    .din0(mul_res_234_fu_11517_p0),
    .din1(mul_res_234_fu_11517_p1),
    .dout(mul_res_234_fu_11517_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U267(
    .din0(mul_res_235_fu_11549_p0),
    .din1(mul_res_235_fu_11549_p1),
    .dout(mul_res_235_fu_11549_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U268(
    .din0(mul_res_236_fu_11577_p0),
    .din1(mul_res_236_fu_11577_p1),
    .dout(mul_res_236_fu_11577_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U269(
    .din0(mul_res_237_fu_11605_p0),
    .din1(mul_res_237_fu_11605_p1),
    .dout(mul_res_237_fu_11605_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U270(
    .din0(mul_res_238_fu_11637_p0),
    .din1(mul_res_238_fu_11637_p1),
    .dout(mul_res_238_fu_11637_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U271(
    .din0(mul_res_239_fu_11669_p0),
    .din1(mul_res_239_fu_11669_p1),
    .dout(mul_res_239_fu_11669_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U272(
    .din0(mul_res_240_fu_11731_p0),
    .din1(mul_res_240_fu_11731_p1),
    .dout(mul_res_240_fu_11731_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U273(
    .din0(mul_res_241_fu_11763_p0),
    .din1(mul_res_241_fu_11763_p1),
    .dout(mul_res_241_fu_11763_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U274(
    .din0(mul_res_242_fu_11795_p0),
    .din1(mul_res_242_fu_11795_p1),
    .dout(mul_res_242_fu_11795_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U275(
    .din0(mul_res_243_fu_11827_p0),
    .din1(mul_res_243_fu_11827_p1),
    .dout(mul_res_243_fu_11827_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U276(
    .din0(mul_res_244_fu_11859_p0),
    .din1(mul_res_244_fu_11859_p1),
    .dout(mul_res_244_fu_11859_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U277(
    .din0(mul_res_245_fu_11891_p0),
    .din1(mul_res_245_fu_11891_p1),
    .dout(mul_res_245_fu_11891_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U278(
    .din0(mul_res_246_fu_11919_p0),
    .din1(mul_res_246_fu_11919_p1),
    .dout(mul_res_246_fu_11919_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U279(
    .din0(mul_res_247_fu_11951_p0),
    .din1(mul_res_247_fu_11951_p1),
    .dout(mul_res_247_fu_11951_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U280(
    .din0(mul_res_248_fu_11979_p0),
    .din1(mul_res_248_fu_11979_p1),
    .dout(mul_res_248_fu_11979_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U281(
    .din0(mul_res_249_fu_12007_p0),
    .din1(mul_res_249_fu_12007_p1),
    .dout(mul_res_249_fu_12007_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U282(
    .din0(mul_res_250_fu_12039_p0),
    .din1(mul_res_250_fu_12039_p1),
    .dout(mul_res_250_fu_12039_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U283(
    .din0(mul_res_251_fu_12071_p0),
    .din1(mul_res_251_fu_12071_p1),
    .dout(mul_res_251_fu_12071_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U284(
    .din0(mul_res_252_fu_12133_p0),
    .din1(mul_res_252_fu_12133_p1),
    .dout(mul_res_252_fu_12133_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U285(
    .din0(mul_res_253_fu_12165_p0),
    .din1(mul_res_253_fu_12165_p1),
    .dout(mul_res_253_fu_12165_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U286(
    .din0(mul_res_254_fu_12197_p0),
    .din1(mul_res_254_fu_12197_p1),
    .dout(mul_res_254_fu_12197_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U287(
    .din0(mul_res_255_fu_12229_p0),
    .din1(mul_res_255_fu_12229_p1),
    .dout(mul_res_255_fu_12229_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U288(
    .din0(mul_res_256_fu_12261_p0),
    .din1(mul_res_256_fu_12261_p1),
    .dout(mul_res_256_fu_12261_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U289(
    .din0(mul_res_257_fu_12293_p0),
    .din1(mul_res_257_fu_12293_p1),
    .dout(mul_res_257_fu_12293_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U290(
    .din0(mul_res_258_fu_12321_p0),
    .din1(mul_res_258_fu_12321_p1),
    .dout(mul_res_258_fu_12321_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U291(
    .din0(mul_res_259_fu_12353_p0),
    .din1(mul_res_259_fu_12353_p1),
    .dout(mul_res_259_fu_12353_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U292(
    .din0(mul_res_260_fu_12381_p0),
    .din1(mul_res_260_fu_12381_p1),
    .dout(mul_res_260_fu_12381_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U293(
    .din0(mul_res_261_fu_12409_p0),
    .din1(mul_res_261_fu_12409_p1),
    .dout(mul_res_261_fu_12409_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U294(
    .din0(mul_res_262_fu_12441_p0),
    .din1(mul_res_262_fu_12441_p1),
    .dout(mul_res_262_fu_12441_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U295(
    .din0(mul_res_263_fu_12473_p0),
    .din1(mul_res_263_fu_12473_p1),
    .dout(mul_res_263_fu_12473_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U296(
    .din0(mul_res_264_fu_12535_p0),
    .din1(mul_res_264_fu_12535_p1),
    .dout(mul_res_264_fu_12535_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U297(
    .din0(mul_res_265_fu_12567_p0),
    .din1(mul_res_265_fu_12567_p1),
    .dout(mul_res_265_fu_12567_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U298(
    .din0(mul_res_266_fu_12599_p0),
    .din1(mul_res_266_fu_12599_p1),
    .dout(mul_res_266_fu_12599_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U299(
    .din0(mul_res_267_fu_12631_p0),
    .din1(mul_res_267_fu_12631_p1),
    .dout(mul_res_267_fu_12631_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U300(
    .din0(mul_res_268_fu_12663_p0),
    .din1(mul_res_268_fu_12663_p1),
    .dout(mul_res_268_fu_12663_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U301(
    .din0(mul_res_269_fu_12695_p0),
    .din1(mul_res_269_fu_12695_p1),
    .dout(mul_res_269_fu_12695_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U302(
    .din0(mul_res_270_fu_12723_p0),
    .din1(mul_res_270_fu_12723_p1),
    .dout(mul_res_270_fu_12723_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U303(
    .din0(mul_res_271_fu_12755_p0),
    .din1(mul_res_271_fu_12755_p1),
    .dout(mul_res_271_fu_12755_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U304(
    .din0(mul_res_272_fu_12783_p0),
    .din1(mul_res_272_fu_12783_p1),
    .dout(mul_res_272_fu_12783_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U305(
    .din0(mul_res_273_fu_12811_p0),
    .din1(mul_res_273_fu_12811_p1),
    .dout(mul_res_273_fu_12811_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U306(
    .din0(mul_res_274_fu_12843_p0),
    .din1(mul_res_274_fu_12843_p1),
    .dout(mul_res_274_fu_12843_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U307(
    .din0(mul_res_275_fu_12875_p0),
    .din1(mul_res_275_fu_12875_p1),
    .dout(mul_res_275_fu_12875_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U308(
    .din0(mul_res_276_fu_12937_p0),
    .din1(mul_res_276_fu_12937_p1),
    .dout(mul_res_276_fu_12937_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U309(
    .din0(mul_res_277_fu_12969_p0),
    .din1(mul_res_277_fu_12969_p1),
    .dout(mul_res_277_fu_12969_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U310(
    .din0(mul_res_278_fu_13001_p0),
    .din1(mul_res_278_fu_13001_p1),
    .dout(mul_res_278_fu_13001_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U311(
    .din0(mul_res_279_fu_13033_p0),
    .din1(mul_res_279_fu_13033_p1),
    .dout(mul_res_279_fu_13033_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U312(
    .din0(mul_res_280_fu_13065_p0),
    .din1(mul_res_280_fu_13065_p1),
    .dout(mul_res_280_fu_13065_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U313(
    .din0(mul_res_281_fu_13097_p0),
    .din1(mul_res_281_fu_13097_p1),
    .dout(mul_res_281_fu_13097_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U314(
    .din0(mul_res_282_fu_13125_p0),
    .din1(mul_res_282_fu_13125_p1),
    .dout(mul_res_282_fu_13125_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U315(
    .din0(mul_res_283_fu_13157_p0),
    .din1(mul_res_283_fu_13157_p1),
    .dout(mul_res_283_fu_13157_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U316(
    .din0(mul_res_284_fu_13185_p0),
    .din1(mul_res_284_fu_13185_p1),
    .dout(mul_res_284_fu_13185_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U317(
    .din0(mul_res_285_fu_13213_p0),
    .din1(mul_res_285_fu_13213_p1),
    .dout(mul_res_285_fu_13213_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U318(
    .din0(mul_res_286_fu_13245_p0),
    .din1(mul_res_286_fu_13245_p1),
    .dout(mul_res_286_fu_13245_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U319(
    .din0(mul_res_287_fu_13277_p0),
    .din1(mul_res_287_fu_13277_p1),
    .dout(mul_res_287_fu_13277_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U320(
    .din0(mul_res_288_fu_13328_p0),
    .din1(mul_res_288_fu_13328_p1),
    .dout(mul_res_288_fu_13328_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U321(
    .din0(mul_res_289_fu_13349_p0),
    .din1(mul_res_289_fu_13349_p1),
    .dout(mul_res_289_fu_13349_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U322(
    .din0(mul_res_290_fu_13370_p0),
    .din1(mul_res_290_fu_13370_p1),
    .dout(mul_res_290_fu_13370_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U323(
    .din0(mul_res_291_fu_13391_p0),
    .din1(mul_res_291_fu_13391_p1),
    .dout(mul_res_291_fu_13391_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U324(
    .din0(mul_res_292_fu_13412_p0),
    .din1(mul_res_292_fu_13412_p1),
    .dout(mul_res_292_fu_13412_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U325(
    .din0(mul_res_293_fu_13433_p0),
    .din1(mul_res_293_fu_13433_p1),
    .dout(mul_res_293_fu_13433_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U326(
    .din0(mul_res_294_fu_13450_p0),
    .din1(mul_res_294_fu_13450_p1),
    .dout(mul_res_294_fu_13450_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U327(
    .din0(mul_res_295_fu_13471_p0),
    .din1(mul_res_295_fu_13471_p1),
    .dout(mul_res_295_fu_13471_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U328(
    .din0(mul_res_296_fu_13488_p0),
    .din1(mul_res_296_fu_13488_p1),
    .dout(mul_res_296_fu_13488_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U329(
    .din0(mul_res_297_fu_13505_p0),
    .din1(mul_res_297_fu_13505_p1),
    .dout(mul_res_297_fu_13505_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U330(
    .din0(mul_res_298_fu_13526_p0),
    .din1(mul_res_298_fu_13526_p1),
    .dout(mul_res_298_fu_13526_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U331(
    .din0(mul_res_299_fu_13547_p0),
    .din1(mul_res_299_fu_13547_p1),
    .dout(mul_res_299_fu_13547_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U332(
    .din0(mul_res_300_fu_13595_p0),
    .din1(mul_res_300_fu_13595_p1),
    .dout(mul_res_300_fu_13595_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U333(
    .din0(mul_res_301_fu_13613_p0),
    .din1(mul_res_301_fu_13613_p1),
    .dout(mul_res_301_fu_13613_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U334(
    .din0(mul_res_302_fu_13631_p0),
    .din1(mul_res_302_fu_13631_p1),
    .dout(mul_res_302_fu_13631_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U335(
    .din0(mul_res_303_fu_13649_p0),
    .din1(mul_res_303_fu_13649_p1),
    .dout(mul_res_303_fu_13649_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U336(
    .din0(mul_res_304_fu_13667_p0),
    .din1(mul_res_304_fu_13667_p1),
    .dout(mul_res_304_fu_13667_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U337(
    .din0(mul_res_305_fu_13685_p0),
    .din1(mul_res_305_fu_13685_p1),
    .dout(mul_res_305_fu_13685_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U338(
    .din0(mul_res_306_fu_13699_p0),
    .din1(mul_res_306_fu_13699_p1),
    .dout(mul_res_306_fu_13699_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U339(
    .din0(mul_res_307_fu_13717_p0),
    .din1(mul_res_307_fu_13717_p1),
    .dout(mul_res_307_fu_13717_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U340(
    .din0(mul_res_308_fu_13731_p0),
    .din1(mul_res_308_fu_13731_p1),
    .dout(mul_res_308_fu_13731_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U341(
    .din0(mul_res_309_fu_13745_p0),
    .din1(mul_res_309_fu_13745_p1),
    .dout(mul_res_309_fu_13745_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U342(
    .din0(mul_res_310_fu_13763_p0),
    .din1(mul_res_310_fu_13763_p1),
    .dout(mul_res_310_fu_13763_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U343(
    .din0(mul_res_311_fu_13781_p0),
    .din1(mul_res_311_fu_13781_p1),
    .dout(mul_res_311_fu_13781_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U344(
    .din0(mul_res_312_fu_13829_p0),
    .din1(mul_res_312_fu_13829_p1),
    .dout(mul_res_312_fu_13829_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U345(
    .din0(mul_res_313_fu_13847_p0),
    .din1(mul_res_313_fu_13847_p1),
    .dout(mul_res_313_fu_13847_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U346(
    .din0(mul_res_314_fu_13865_p0),
    .din1(mul_res_314_fu_13865_p1),
    .dout(mul_res_314_fu_13865_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U347(
    .din0(mul_res_315_fu_13883_p0),
    .din1(mul_res_315_fu_13883_p1),
    .dout(mul_res_315_fu_13883_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U348(
    .din0(mul_res_316_fu_13901_p0),
    .din1(mul_res_316_fu_13901_p1),
    .dout(mul_res_316_fu_13901_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U349(
    .din0(mul_res_317_fu_13919_p0),
    .din1(mul_res_317_fu_13919_p1),
    .dout(mul_res_317_fu_13919_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U350(
    .din0(mul_res_318_fu_13933_p0),
    .din1(mul_res_318_fu_13933_p1),
    .dout(mul_res_318_fu_13933_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U351(
    .din0(mul_res_319_fu_13951_p0),
    .din1(mul_res_319_fu_13951_p1),
    .dout(mul_res_319_fu_13951_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U352(
    .din0(mul_res_320_fu_13965_p0),
    .din1(mul_res_320_fu_13965_p1),
    .dout(mul_res_320_fu_13965_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U353(
    .din0(mul_res_321_fu_13979_p0),
    .din1(mul_res_321_fu_13979_p1),
    .dout(mul_res_321_fu_13979_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U354(
    .din0(mul_res_322_fu_13997_p0),
    .din1(mul_res_322_fu_13997_p1),
    .dout(mul_res_322_fu_13997_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U355(
    .din0(mul_res_323_fu_14015_p0),
    .din1(mul_res_323_fu_14015_p1),
    .dout(mul_res_323_fu_14015_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U356(
    .din0(mul_res_324_fu_14063_p0),
    .din1(mul_res_324_fu_14063_p1),
    .dout(mul_res_324_fu_14063_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U357(
    .din0(mul_res_325_fu_14081_p0),
    .din1(mul_res_325_fu_14081_p1),
    .dout(mul_res_325_fu_14081_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U358(
    .din0(mul_res_326_fu_14099_p0),
    .din1(mul_res_326_fu_14099_p1),
    .dout(mul_res_326_fu_14099_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U359(
    .din0(mul_res_327_fu_14117_p0),
    .din1(mul_res_327_fu_14117_p1),
    .dout(mul_res_327_fu_14117_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U360(
    .din0(mul_res_328_fu_14135_p0),
    .din1(mul_res_328_fu_14135_p1),
    .dout(mul_res_328_fu_14135_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U361(
    .din0(mul_res_329_fu_14153_p0),
    .din1(mul_res_329_fu_14153_p1),
    .dout(mul_res_329_fu_14153_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U362(
    .din0(mul_res_330_fu_14167_p0),
    .din1(mul_res_330_fu_14167_p1),
    .dout(mul_res_330_fu_14167_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U363(
    .din0(mul_res_331_fu_14185_p0),
    .din1(mul_res_331_fu_14185_p1),
    .dout(mul_res_331_fu_14185_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U364(
    .din0(mul_res_332_fu_14199_p0),
    .din1(mul_res_332_fu_14199_p1),
    .dout(mul_res_332_fu_14199_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U365(
    .din0(mul_res_333_fu_14213_p0),
    .din1(mul_res_333_fu_14213_p1),
    .dout(mul_res_333_fu_14213_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U366(
    .din0(mul_res_334_fu_14231_p0),
    .din1(mul_res_334_fu_14231_p1),
    .dout(mul_res_334_fu_14231_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U367(
    .din0(mul_res_335_fu_14249_p0),
    .din1(mul_res_335_fu_14249_p1),
    .dout(mul_res_335_fu_14249_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U368(
    .din0(mul_res_336_fu_14297_p0),
    .din1(mul_res_336_fu_14297_p1),
    .dout(mul_res_336_fu_14297_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U369(
    .din0(mul_res_337_fu_14315_p0),
    .din1(mul_res_337_fu_14315_p1),
    .dout(mul_res_337_fu_14315_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U370(
    .din0(mul_res_338_fu_14333_p0),
    .din1(mul_res_338_fu_14333_p1),
    .dout(mul_res_338_fu_14333_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U371(
    .din0(mul_res_339_fu_14351_p0),
    .din1(mul_res_339_fu_14351_p1),
    .dout(mul_res_339_fu_14351_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U372(
    .din0(mul_res_340_fu_14369_p0),
    .din1(mul_res_340_fu_14369_p1),
    .dout(mul_res_340_fu_14369_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U373(
    .din0(mul_res_341_fu_14387_p0),
    .din1(mul_res_341_fu_14387_p1),
    .dout(mul_res_341_fu_14387_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U374(
    .din0(mul_res_342_fu_14401_p0),
    .din1(mul_res_342_fu_14401_p1),
    .dout(mul_res_342_fu_14401_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U375(
    .din0(mul_res_343_fu_14419_p0),
    .din1(mul_res_343_fu_14419_p1),
    .dout(mul_res_343_fu_14419_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U376(
    .din0(mul_res_344_fu_14433_p0),
    .din1(mul_res_344_fu_14433_p1),
    .dout(mul_res_344_fu_14433_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U377(
    .din0(mul_res_345_fu_14447_p0),
    .din1(mul_res_345_fu_14447_p1),
    .dout(mul_res_345_fu_14447_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U378(
    .din0(mul_res_346_fu_14465_p0),
    .din1(mul_res_346_fu_14465_p1),
    .dout(mul_res_346_fu_14465_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U379(
    .din0(mul_res_347_fu_14483_p0),
    .din1(mul_res_347_fu_14483_p1),
    .dout(mul_res_347_fu_14483_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U380(
    .din0(mul_res_348_fu_14531_p0),
    .din1(mul_res_348_fu_14531_p1),
    .dout(mul_res_348_fu_14531_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U381(
    .din0(mul_res_349_fu_14549_p0),
    .din1(mul_res_349_fu_14549_p1),
    .dout(mul_res_349_fu_14549_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U382(
    .din0(mul_res_350_fu_14567_p0),
    .din1(mul_res_350_fu_14567_p1),
    .dout(mul_res_350_fu_14567_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U383(
    .din0(mul_res_351_fu_14585_p0),
    .din1(mul_res_351_fu_14585_p1),
    .dout(mul_res_351_fu_14585_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U384(
    .din0(mul_res_352_fu_14603_p0),
    .din1(mul_res_352_fu_14603_p1),
    .dout(mul_res_352_fu_14603_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U385(
    .din0(mul_res_353_fu_14621_p0),
    .din1(mul_res_353_fu_14621_p1),
    .dout(mul_res_353_fu_14621_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U386(
    .din0(mul_res_354_fu_14635_p0),
    .din1(mul_res_354_fu_14635_p1),
    .dout(mul_res_354_fu_14635_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U387(
    .din0(mul_res_355_fu_14653_p0),
    .din1(mul_res_355_fu_14653_p1),
    .dout(mul_res_355_fu_14653_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U388(
    .din0(mul_res_356_fu_14667_p0),
    .din1(mul_res_356_fu_14667_p1),
    .dout(mul_res_356_fu_14667_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U389(
    .din0(mul_res_357_fu_14681_p0),
    .din1(mul_res_357_fu_14681_p1),
    .dout(mul_res_357_fu_14681_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U390(
    .din0(mul_res_358_fu_14699_p0),
    .din1(mul_res_358_fu_14699_p1),
    .dout(mul_res_358_fu_14699_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U391(
    .din0(mul_res_359_fu_14717_p0),
    .din1(mul_res_359_fu_14717_p1),
    .dout(mul_res_359_fu_14717_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U392(
    .din0(mul_res_360_fu_14765_p0),
    .din1(mul_res_360_fu_14765_p1),
    .dout(mul_res_360_fu_14765_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U393(
    .din0(mul_res_361_fu_14783_p0),
    .din1(mul_res_361_fu_14783_p1),
    .dout(mul_res_361_fu_14783_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U394(
    .din0(mul_res_362_fu_14801_p0),
    .din1(mul_res_362_fu_14801_p1),
    .dout(mul_res_362_fu_14801_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U395(
    .din0(mul_res_363_fu_14819_p0),
    .din1(mul_res_363_fu_14819_p1),
    .dout(mul_res_363_fu_14819_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U396(
    .din0(mul_res_364_fu_14837_p0),
    .din1(mul_res_364_fu_14837_p1),
    .dout(mul_res_364_fu_14837_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U397(
    .din0(mul_res_365_fu_14855_p0),
    .din1(mul_res_365_fu_14855_p1),
    .dout(mul_res_365_fu_14855_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U398(
    .din0(mul_res_366_fu_14869_p0),
    .din1(mul_res_366_fu_14869_p1),
    .dout(mul_res_366_fu_14869_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U399(
    .din0(mul_res_367_fu_14887_p0),
    .din1(mul_res_367_fu_14887_p1),
    .dout(mul_res_367_fu_14887_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U400(
    .din0(mul_res_368_fu_14901_p0),
    .din1(mul_res_368_fu_14901_p1),
    .dout(mul_res_368_fu_14901_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U401(
    .din0(mul_res_369_fu_14915_p0),
    .din1(mul_res_369_fu_14915_p1),
    .dout(mul_res_369_fu_14915_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U402(
    .din0(mul_res_370_fu_14933_p0),
    .din1(mul_res_370_fu_14933_p1),
    .dout(mul_res_370_fu_14933_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U403(
    .din0(mul_res_371_fu_14951_p0),
    .din1(mul_res_371_fu_14951_p1),
    .dout(mul_res_371_fu_14951_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U404(
    .din0(mul_res_372_fu_14999_p0),
    .din1(mul_res_372_fu_14999_p1),
    .dout(mul_res_372_fu_14999_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U405(
    .din0(mul_res_373_fu_15017_p0),
    .din1(mul_res_373_fu_15017_p1),
    .dout(mul_res_373_fu_15017_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U406(
    .din0(mul_res_374_fu_15035_p0),
    .din1(mul_res_374_fu_15035_p1),
    .dout(mul_res_374_fu_15035_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U407(
    .din0(mul_res_375_fu_15053_p0),
    .din1(mul_res_375_fu_15053_p1),
    .dout(mul_res_375_fu_15053_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U408(
    .din0(mul_res_376_fu_15071_p0),
    .din1(mul_res_376_fu_15071_p1),
    .dout(mul_res_376_fu_15071_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U409(
    .din0(mul_res_377_fu_15089_p0),
    .din1(mul_res_377_fu_15089_p1),
    .dout(mul_res_377_fu_15089_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U410(
    .din0(mul_res_378_fu_15103_p0),
    .din1(mul_res_378_fu_15103_p1),
    .dout(mul_res_378_fu_15103_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U411(
    .din0(mul_res_379_fu_15121_p0),
    .din1(mul_res_379_fu_15121_p1),
    .dout(mul_res_379_fu_15121_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U412(
    .din0(mul_res_380_fu_15135_p0),
    .din1(mul_res_380_fu_15135_p1),
    .dout(mul_res_380_fu_15135_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U413(
    .din0(mul_res_381_fu_15149_p0),
    .din1(mul_res_381_fu_15149_p1),
    .dout(mul_res_381_fu_15149_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U414(
    .din0(mul_res_382_fu_15167_p0),
    .din1(mul_res_382_fu_15167_p1),
    .dout(mul_res_382_fu_15167_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U415(
    .din0(mul_res_383_fu_15185_p0),
    .din1(mul_res_383_fu_15185_p1),
    .dout(mul_res_383_fu_15185_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U416(
    .din0(mul_res_384_fu_15233_p0),
    .din1(mul_res_384_fu_15233_p1),
    .dout(mul_res_384_fu_15233_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U417(
    .din0(mul_res_385_fu_15251_p0),
    .din1(mul_res_385_fu_15251_p1),
    .dout(mul_res_385_fu_15251_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U418(
    .din0(mul_res_386_fu_15269_p0),
    .din1(mul_res_386_fu_15269_p1),
    .dout(mul_res_386_fu_15269_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U419(
    .din0(mul_res_387_fu_15287_p0),
    .din1(mul_res_387_fu_15287_p1),
    .dout(mul_res_387_fu_15287_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U420(
    .din0(mul_res_388_fu_15305_p0),
    .din1(mul_res_388_fu_15305_p1),
    .dout(mul_res_388_fu_15305_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U421(
    .din0(mul_res_389_fu_15323_p0),
    .din1(mul_res_389_fu_15323_p1),
    .dout(mul_res_389_fu_15323_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U422(
    .din0(mul_res_390_fu_15337_p0),
    .din1(mul_res_390_fu_15337_p1),
    .dout(mul_res_390_fu_15337_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U423(
    .din0(mul_res_391_fu_15355_p0),
    .din1(mul_res_391_fu_15355_p1),
    .dout(mul_res_391_fu_15355_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U424(
    .din0(mul_res_392_fu_15369_p0),
    .din1(mul_res_392_fu_15369_p1),
    .dout(mul_res_392_fu_15369_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U425(
    .din0(mul_res_393_fu_15383_p0),
    .din1(mul_res_393_fu_15383_p1),
    .dout(mul_res_393_fu_15383_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U426(
    .din0(mul_res_394_fu_15401_p0),
    .din1(mul_res_394_fu_15401_p1),
    .dout(mul_res_394_fu_15401_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U427(
    .din0(mul_res_395_fu_15419_p0),
    .din1(mul_res_395_fu_15419_p1),
    .dout(mul_res_395_fu_15419_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U428(
    .din0(mul_res_396_fu_15467_p0),
    .din1(mul_res_396_fu_15467_p1),
    .dout(mul_res_396_fu_15467_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U429(
    .din0(mul_res_397_fu_15485_p0),
    .din1(mul_res_397_fu_15485_p1),
    .dout(mul_res_397_fu_15485_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U430(
    .din0(mul_res_398_fu_15503_p0),
    .din1(mul_res_398_fu_15503_p1),
    .dout(mul_res_398_fu_15503_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U431(
    .din0(mul_res_399_fu_15521_p0),
    .din1(mul_res_399_fu_15521_p1),
    .dout(mul_res_399_fu_15521_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U432(
    .din0(mul_res_400_fu_15539_p0),
    .din1(mul_res_400_fu_15539_p1),
    .dout(mul_res_400_fu_15539_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U433(
    .din0(mul_res_401_fu_15557_p0),
    .din1(mul_res_401_fu_15557_p1),
    .dout(mul_res_401_fu_15557_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U434(
    .din0(mul_res_402_fu_15571_p0),
    .din1(mul_res_402_fu_15571_p1),
    .dout(mul_res_402_fu_15571_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U435(
    .din0(mul_res_403_fu_15589_p0),
    .din1(mul_res_403_fu_15589_p1),
    .dout(mul_res_403_fu_15589_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U436(
    .din0(mul_res_404_fu_15603_p0),
    .din1(mul_res_404_fu_15603_p1),
    .dout(mul_res_404_fu_15603_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U437(
    .din0(mul_res_405_fu_15617_p0),
    .din1(mul_res_405_fu_15617_p1),
    .dout(mul_res_405_fu_15617_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U438(
    .din0(mul_res_406_fu_15635_p0),
    .din1(mul_res_406_fu_15635_p1),
    .dout(mul_res_406_fu_15635_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U439(
    .din0(mul_res_407_fu_15653_p0),
    .din1(mul_res_407_fu_15653_p1),
    .dout(mul_res_407_fu_15653_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U440(
    .din0(mul_res_408_fu_15701_p0),
    .din1(mul_res_408_fu_15701_p1),
    .dout(mul_res_408_fu_15701_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U441(
    .din0(mul_res_409_fu_15719_p0),
    .din1(mul_res_409_fu_15719_p1),
    .dout(mul_res_409_fu_15719_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U442(
    .din0(mul_res_410_fu_15737_p0),
    .din1(mul_res_410_fu_15737_p1),
    .dout(mul_res_410_fu_15737_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U443(
    .din0(mul_res_411_fu_15755_p0),
    .din1(mul_res_411_fu_15755_p1),
    .dout(mul_res_411_fu_15755_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U444(
    .din0(mul_res_412_fu_15773_p0),
    .din1(mul_res_412_fu_15773_p1),
    .dout(mul_res_412_fu_15773_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U445(
    .din0(mul_res_413_fu_15791_p0),
    .din1(mul_res_413_fu_15791_p1),
    .dout(mul_res_413_fu_15791_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U446(
    .din0(mul_res_414_fu_15805_p0),
    .din1(mul_res_414_fu_15805_p1),
    .dout(mul_res_414_fu_15805_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U447(
    .din0(mul_res_415_fu_15823_p0),
    .din1(mul_res_415_fu_15823_p1),
    .dout(mul_res_415_fu_15823_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U448(
    .din0(mul_res_416_fu_15837_p0),
    .din1(mul_res_416_fu_15837_p1),
    .dout(mul_res_416_fu_15837_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U449(
    .din0(mul_res_417_fu_15851_p0),
    .din1(mul_res_417_fu_15851_p1),
    .dout(mul_res_417_fu_15851_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U450(
    .din0(mul_res_418_fu_15869_p0),
    .din1(mul_res_418_fu_15869_p1),
    .dout(mul_res_418_fu_15869_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U451(
    .din0(mul_res_419_fu_15887_p0),
    .din1(mul_res_419_fu_15887_p1),
    .dout(mul_res_419_fu_15887_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U452(
    .din0(mul_res_420_fu_15935_p0),
    .din1(mul_res_420_fu_15935_p1),
    .dout(mul_res_420_fu_15935_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U453(
    .din0(mul_res_421_fu_15953_p0),
    .din1(mul_res_421_fu_15953_p1),
    .dout(mul_res_421_fu_15953_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U454(
    .din0(mul_res_422_fu_15971_p0),
    .din1(mul_res_422_fu_15971_p1),
    .dout(mul_res_422_fu_15971_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U455(
    .din0(mul_res_423_fu_15989_p0),
    .din1(mul_res_423_fu_15989_p1),
    .dout(mul_res_423_fu_15989_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U456(
    .din0(mul_res_424_fu_16007_p0),
    .din1(mul_res_424_fu_16007_p1),
    .dout(mul_res_424_fu_16007_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U457(
    .din0(mul_res_425_fu_16025_p0),
    .din1(mul_res_425_fu_16025_p1),
    .dout(mul_res_425_fu_16025_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U458(
    .din0(mul_res_426_fu_16039_p0),
    .din1(mul_res_426_fu_16039_p1),
    .dout(mul_res_426_fu_16039_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U459(
    .din0(mul_res_427_fu_16057_p0),
    .din1(mul_res_427_fu_16057_p1),
    .dout(mul_res_427_fu_16057_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U460(
    .din0(mul_res_428_fu_16071_p0),
    .din1(mul_res_428_fu_16071_p1),
    .dout(mul_res_428_fu_16071_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U461(
    .din0(mul_res_429_fu_16085_p0),
    .din1(mul_res_429_fu_16085_p1),
    .dout(mul_res_429_fu_16085_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U462(
    .din0(mul_res_430_fu_16103_p0),
    .din1(mul_res_430_fu_16103_p1),
    .dout(mul_res_430_fu_16103_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U463(
    .din0(mul_res_431_fu_16121_p0),
    .din1(mul_res_431_fu_16121_p1),
    .dout(mul_res_431_fu_16121_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U464(
    .din0(mul_res_432_fu_16169_p0),
    .din1(mul_res_432_fu_16169_p1),
    .dout(mul_res_432_fu_16169_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U465(
    .din0(mul_res_433_fu_16187_p0),
    .din1(mul_res_433_fu_16187_p1),
    .dout(mul_res_433_fu_16187_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U466(
    .din0(mul_res_434_fu_16205_p0),
    .din1(mul_res_434_fu_16205_p1),
    .dout(mul_res_434_fu_16205_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U467(
    .din0(mul_res_435_fu_16223_p0),
    .din1(mul_res_435_fu_16223_p1),
    .dout(mul_res_435_fu_16223_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U468(
    .din0(mul_res_436_fu_16241_p0),
    .din1(mul_res_436_fu_16241_p1),
    .dout(mul_res_436_fu_16241_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U469(
    .din0(mul_res_437_fu_16259_p0),
    .din1(mul_res_437_fu_16259_p1),
    .dout(mul_res_437_fu_16259_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U470(
    .din0(mul_res_438_fu_16273_p0),
    .din1(mul_res_438_fu_16273_p1),
    .dout(mul_res_438_fu_16273_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U471(
    .din0(mul_res_439_fu_16291_p0),
    .din1(mul_res_439_fu_16291_p1),
    .dout(mul_res_439_fu_16291_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U472(
    .din0(mul_res_440_fu_16305_p0),
    .din1(mul_res_440_fu_16305_p1),
    .dout(mul_res_440_fu_16305_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U473(
    .din0(mul_res_441_fu_16319_p0),
    .din1(mul_res_441_fu_16319_p1),
    .dout(mul_res_441_fu_16319_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U474(
    .din0(mul_res_442_fu_16337_p0),
    .din1(mul_res_442_fu_16337_p1),
    .dout(mul_res_442_fu_16337_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U475(
    .din0(mul_res_443_fu_16355_p0),
    .din1(mul_res_443_fu_16355_p1),
    .dout(mul_res_443_fu_16355_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U476(
    .din0(mul_res_444_fu_16403_p0),
    .din1(mul_res_444_fu_16403_p1),
    .dout(mul_res_444_fu_16403_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U477(
    .din0(mul_res_445_fu_16421_p0),
    .din1(mul_res_445_fu_16421_p1),
    .dout(mul_res_445_fu_16421_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U478(
    .din0(mul_res_446_fu_16439_p0),
    .din1(mul_res_446_fu_16439_p1),
    .dout(mul_res_446_fu_16439_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U479(
    .din0(mul_res_447_fu_16457_p0),
    .din1(mul_res_447_fu_16457_p1),
    .dout(mul_res_447_fu_16457_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U480(
    .din0(mul_res_448_fu_16475_p0),
    .din1(mul_res_448_fu_16475_p1),
    .dout(mul_res_448_fu_16475_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U481(
    .din0(mul_res_449_fu_16493_p0),
    .din1(mul_res_449_fu_16493_p1),
    .dout(mul_res_449_fu_16493_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U482(
    .din0(mul_res_450_fu_16507_p0),
    .din1(mul_res_450_fu_16507_p1),
    .dout(mul_res_450_fu_16507_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U483(
    .din0(mul_res_451_fu_16525_p0),
    .din1(mul_res_451_fu_16525_p1),
    .dout(mul_res_451_fu_16525_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U484(
    .din0(mul_res_452_fu_16539_p0),
    .din1(mul_res_452_fu_16539_p1),
    .dout(mul_res_452_fu_16539_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U485(
    .din0(mul_res_453_fu_16553_p0),
    .din1(mul_res_453_fu_16553_p1),
    .dout(mul_res_453_fu_16553_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U486(
    .din0(mul_res_454_fu_16571_p0),
    .din1(mul_res_454_fu_16571_p1),
    .dout(mul_res_454_fu_16571_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U487(
    .din0(mul_res_455_fu_16589_p0),
    .din1(mul_res_455_fu_16589_p1),
    .dout(mul_res_455_fu_16589_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U488(
    .din0(mul_res_456_fu_16637_p0),
    .din1(mul_res_456_fu_16637_p1),
    .dout(mul_res_456_fu_16637_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U489(
    .din0(mul_res_457_fu_16655_p0),
    .din1(mul_res_457_fu_16655_p1),
    .dout(mul_res_457_fu_16655_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U490(
    .din0(mul_res_458_fu_16673_p0),
    .din1(mul_res_458_fu_16673_p1),
    .dout(mul_res_458_fu_16673_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U491(
    .din0(mul_res_459_fu_16691_p0),
    .din1(mul_res_459_fu_16691_p1),
    .dout(mul_res_459_fu_16691_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U492(
    .din0(mul_res_460_fu_16709_p0),
    .din1(mul_res_460_fu_16709_p1),
    .dout(mul_res_460_fu_16709_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U493(
    .din0(mul_res_461_fu_16727_p0),
    .din1(mul_res_461_fu_16727_p1),
    .dout(mul_res_461_fu_16727_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U494(
    .din0(mul_res_462_fu_16741_p0),
    .din1(mul_res_462_fu_16741_p1),
    .dout(mul_res_462_fu_16741_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U495(
    .din0(mul_res_463_fu_16759_p0),
    .din1(mul_res_463_fu_16759_p1),
    .dout(mul_res_463_fu_16759_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U496(
    .din0(mul_res_464_fu_16773_p0),
    .din1(mul_res_464_fu_16773_p1),
    .dout(mul_res_464_fu_16773_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U497(
    .din0(mul_res_465_fu_16787_p0),
    .din1(mul_res_465_fu_16787_p1),
    .dout(mul_res_465_fu_16787_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U498(
    .din0(mul_res_466_fu_16805_p0),
    .din1(mul_res_466_fu_16805_p1),
    .dout(mul_res_466_fu_16805_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U499(
    .din0(mul_res_467_fu_16823_p0),
    .din1(mul_res_467_fu_16823_p1),
    .dout(mul_res_467_fu_16823_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U500(
    .din0(mul_res_468_fu_16871_p0),
    .din1(mul_res_468_fu_16871_p1),
    .dout(mul_res_468_fu_16871_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U501(
    .din0(mul_res_469_fu_16889_p0),
    .din1(mul_res_469_fu_16889_p1),
    .dout(mul_res_469_fu_16889_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U502(
    .din0(mul_res_470_fu_16907_p0),
    .din1(mul_res_470_fu_16907_p1),
    .dout(mul_res_470_fu_16907_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U503(
    .din0(mul_res_471_fu_16925_p0),
    .din1(mul_res_471_fu_16925_p1),
    .dout(mul_res_471_fu_16925_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U504(
    .din0(mul_res_472_fu_16943_p0),
    .din1(mul_res_472_fu_16943_p1),
    .dout(mul_res_472_fu_16943_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U505(
    .din0(mul_res_473_fu_16961_p0),
    .din1(mul_res_473_fu_16961_p1),
    .dout(mul_res_473_fu_16961_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U506(
    .din0(mul_res_474_fu_16975_p0),
    .din1(mul_res_474_fu_16975_p1),
    .dout(mul_res_474_fu_16975_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U507(
    .din0(mul_res_475_fu_16993_p0),
    .din1(mul_res_475_fu_16993_p1),
    .dout(mul_res_475_fu_16993_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U508(
    .din0(mul_res_476_fu_17007_p0),
    .din1(mul_res_476_fu_17007_p1),
    .dout(mul_res_476_fu_17007_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U509(
    .din0(mul_res_477_fu_17021_p0),
    .din1(mul_res_477_fu_17021_p1),
    .dout(mul_res_477_fu_17021_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U510(
    .din0(mul_res_478_fu_17039_p0),
    .din1(mul_res_478_fu_17039_p1),
    .dout(mul_res_478_fu_17039_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U511(
    .din0(mul_res_479_fu_17057_p0),
    .din1(mul_res_479_fu_17057_p1),
    .dout(mul_res_479_fu_17057_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U512(
    .din0(mul_res_480_fu_17105_p0),
    .din1(mul_res_480_fu_17105_p1),
    .dout(mul_res_480_fu_17105_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U513(
    .din0(mul_res_481_fu_17123_p0),
    .din1(mul_res_481_fu_17123_p1),
    .dout(mul_res_481_fu_17123_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U514(
    .din0(mul_res_482_fu_17141_p0),
    .din1(mul_res_482_fu_17141_p1),
    .dout(mul_res_482_fu_17141_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U515(
    .din0(mul_res_483_fu_17159_p0),
    .din1(mul_res_483_fu_17159_p1),
    .dout(mul_res_483_fu_17159_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U516(
    .din0(mul_res_484_fu_17177_p0),
    .din1(mul_res_484_fu_17177_p1),
    .dout(mul_res_484_fu_17177_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U517(
    .din0(mul_res_485_fu_17195_p0),
    .din1(mul_res_485_fu_17195_p1),
    .dout(mul_res_485_fu_17195_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U518(
    .din0(mul_res_486_fu_17209_p0),
    .din1(mul_res_486_fu_17209_p1),
    .dout(mul_res_486_fu_17209_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U519(
    .din0(mul_res_487_fu_17227_p0),
    .din1(mul_res_487_fu_17227_p1),
    .dout(mul_res_487_fu_17227_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U520(
    .din0(mul_res_488_fu_17241_p0),
    .din1(mul_res_488_fu_17241_p1),
    .dout(mul_res_488_fu_17241_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U521(
    .din0(mul_res_489_fu_17255_p0),
    .din1(mul_res_489_fu_17255_p1),
    .dout(mul_res_489_fu_17255_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U522(
    .din0(mul_res_490_fu_17273_p0),
    .din1(mul_res_490_fu_17273_p1),
    .dout(mul_res_490_fu_17273_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U523(
    .din0(mul_res_491_fu_17291_p0),
    .din1(mul_res_491_fu_17291_p1),
    .dout(mul_res_491_fu_17291_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U524(
    .din0(mul_res_492_fu_17339_p0),
    .din1(mul_res_492_fu_17339_p1),
    .dout(mul_res_492_fu_17339_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U525(
    .din0(mul_res_493_fu_17357_p0),
    .din1(mul_res_493_fu_17357_p1),
    .dout(mul_res_493_fu_17357_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U526(
    .din0(mul_res_494_fu_17375_p0),
    .din1(mul_res_494_fu_17375_p1),
    .dout(mul_res_494_fu_17375_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U527(
    .din0(mul_res_495_fu_17393_p0),
    .din1(mul_res_495_fu_17393_p1),
    .dout(mul_res_495_fu_17393_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U528(
    .din0(mul_res_496_fu_17411_p0),
    .din1(mul_res_496_fu_17411_p1),
    .dout(mul_res_496_fu_17411_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U529(
    .din0(mul_res_497_fu_17429_p0),
    .din1(mul_res_497_fu_17429_p1),
    .dout(mul_res_497_fu_17429_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U530(
    .din0(mul_res_498_fu_17443_p0),
    .din1(mul_res_498_fu_17443_p1),
    .dout(mul_res_498_fu_17443_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U531(
    .din0(mul_res_499_fu_17461_p0),
    .din1(mul_res_499_fu_17461_p1),
    .dout(mul_res_499_fu_17461_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U532(
    .din0(mul_res_500_fu_17475_p0),
    .din1(mul_res_500_fu_17475_p1),
    .dout(mul_res_500_fu_17475_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U533(
    .din0(mul_res_501_fu_17489_p0),
    .din1(mul_res_501_fu_17489_p1),
    .dout(mul_res_501_fu_17489_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U534(
    .din0(mul_res_502_fu_17507_p0),
    .din1(mul_res_502_fu_17507_p1),
    .dout(mul_res_502_fu_17507_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U535(
    .din0(mul_res_503_fu_17525_p0),
    .din1(mul_res_503_fu_17525_p1),
    .dout(mul_res_503_fu_17525_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U536(
    .din0(mul_res_504_fu_17573_p0),
    .din1(mul_res_504_fu_17573_p1),
    .dout(mul_res_504_fu_17573_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U537(
    .din0(mul_res_505_fu_17591_p0),
    .din1(mul_res_505_fu_17591_p1),
    .dout(mul_res_505_fu_17591_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U538(
    .din0(mul_res_506_fu_17609_p0),
    .din1(mul_res_506_fu_17609_p1),
    .dout(mul_res_506_fu_17609_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U539(
    .din0(mul_res_507_fu_17627_p0),
    .din1(mul_res_507_fu_17627_p1),
    .dout(mul_res_507_fu_17627_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U540(
    .din0(mul_res_508_fu_17645_p0),
    .din1(mul_res_508_fu_17645_p1),
    .dout(mul_res_508_fu_17645_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U541(
    .din0(mul_res_509_fu_17663_p0),
    .din1(mul_res_509_fu_17663_p1),
    .dout(mul_res_509_fu_17663_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U542(
    .din0(mul_res_510_fu_17677_p0),
    .din1(mul_res_510_fu_17677_p1),
    .dout(mul_res_510_fu_17677_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U543(
    .din0(mul_res_511_fu_17695_p0),
    .din1(mul_res_511_fu_17695_p1),
    .dout(mul_res_511_fu_17695_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U544(
    .din0(mul_res_512_fu_17709_p0),
    .din1(mul_res_512_fu_17709_p1),
    .dout(mul_res_512_fu_17709_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U545(
    .din0(mul_res_513_fu_17723_p0),
    .din1(mul_res_513_fu_17723_p1),
    .dout(mul_res_513_fu_17723_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U546(
    .din0(mul_res_514_fu_17741_p0),
    .din1(mul_res_514_fu_17741_p1),
    .dout(mul_res_514_fu_17741_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U547(
    .din0(mul_res_515_fu_17759_p0),
    .din1(mul_res_515_fu_17759_p1),
    .dout(mul_res_515_fu_17759_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U548(
    .din0(mul_res_516_fu_17807_p0),
    .din1(mul_res_516_fu_17807_p1),
    .dout(mul_res_516_fu_17807_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U549(
    .din0(mul_res_517_fu_17825_p0),
    .din1(mul_res_517_fu_17825_p1),
    .dout(mul_res_517_fu_17825_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U550(
    .din0(mul_res_518_fu_17843_p0),
    .din1(mul_res_518_fu_17843_p1),
    .dout(mul_res_518_fu_17843_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U551(
    .din0(mul_res_519_fu_17861_p0),
    .din1(mul_res_519_fu_17861_p1),
    .dout(mul_res_519_fu_17861_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U552(
    .din0(mul_res_520_fu_17879_p0),
    .din1(mul_res_520_fu_17879_p1),
    .dout(mul_res_520_fu_17879_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U553(
    .din0(mul_res_521_fu_17897_p0),
    .din1(mul_res_521_fu_17897_p1),
    .dout(mul_res_521_fu_17897_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U554(
    .din0(mul_res_522_fu_17911_p0),
    .din1(mul_res_522_fu_17911_p1),
    .dout(mul_res_522_fu_17911_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U555(
    .din0(mul_res_523_fu_17929_p0),
    .din1(mul_res_523_fu_17929_p1),
    .dout(mul_res_523_fu_17929_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U556(
    .din0(mul_res_524_fu_17943_p0),
    .din1(mul_res_524_fu_17943_p1),
    .dout(mul_res_524_fu_17943_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U557(
    .din0(mul_res_525_fu_17957_p0),
    .din1(mul_res_525_fu_17957_p1),
    .dout(mul_res_525_fu_17957_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U558(
    .din0(mul_res_526_fu_17975_p0),
    .din1(mul_res_526_fu_17975_p1),
    .dout(mul_res_526_fu_17975_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U559(
    .din0(mul_res_527_fu_17993_p0),
    .din1(mul_res_527_fu_17993_p1),
    .dout(mul_res_527_fu_17993_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U560(
    .din0(mul_res_528_fu_18041_p0),
    .din1(mul_res_528_fu_18041_p1),
    .dout(mul_res_528_fu_18041_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U561(
    .din0(mul_res_529_fu_18059_p0),
    .din1(mul_res_529_fu_18059_p1),
    .dout(mul_res_529_fu_18059_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U562(
    .din0(mul_res_530_fu_18077_p0),
    .din1(mul_res_530_fu_18077_p1),
    .dout(mul_res_530_fu_18077_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U563(
    .din0(mul_res_531_fu_18095_p0),
    .din1(mul_res_531_fu_18095_p1),
    .dout(mul_res_531_fu_18095_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U564(
    .din0(mul_res_532_fu_18113_p0),
    .din1(mul_res_532_fu_18113_p1),
    .dout(mul_res_532_fu_18113_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U565(
    .din0(mul_res_533_fu_18131_p0),
    .din1(mul_res_533_fu_18131_p1),
    .dout(mul_res_533_fu_18131_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U566(
    .din0(mul_res_534_fu_18145_p0),
    .din1(mul_res_534_fu_18145_p1),
    .dout(mul_res_534_fu_18145_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U567(
    .din0(mul_res_535_fu_18163_p0),
    .din1(mul_res_535_fu_18163_p1),
    .dout(mul_res_535_fu_18163_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U568(
    .din0(mul_res_536_fu_18177_p0),
    .din1(mul_res_536_fu_18177_p1),
    .dout(mul_res_536_fu_18177_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U569(
    .din0(mul_res_537_fu_18191_p0),
    .din1(mul_res_537_fu_18191_p1),
    .dout(mul_res_537_fu_18191_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U570(
    .din0(mul_res_538_fu_18209_p0),
    .din1(mul_res_538_fu_18209_p1),
    .dout(mul_res_538_fu_18209_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U571(
    .din0(mul_res_539_fu_18227_p0),
    .din1(mul_res_539_fu_18227_p1),
    .dout(mul_res_539_fu_18227_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U572(
    .din0(mul_res_540_fu_18275_p0),
    .din1(mul_res_540_fu_18275_p1),
    .dout(mul_res_540_fu_18275_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U573(
    .din0(mul_res_541_fu_18293_p0),
    .din1(mul_res_541_fu_18293_p1),
    .dout(mul_res_541_fu_18293_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U574(
    .din0(mul_res_542_fu_18311_p0),
    .din1(mul_res_542_fu_18311_p1),
    .dout(mul_res_542_fu_18311_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U575(
    .din0(mul_res_543_fu_18329_p0),
    .din1(mul_res_543_fu_18329_p1),
    .dout(mul_res_543_fu_18329_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U576(
    .din0(mul_res_544_fu_18347_p0),
    .din1(mul_res_544_fu_18347_p1),
    .dout(mul_res_544_fu_18347_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U577(
    .din0(mul_res_545_fu_18365_p0),
    .din1(mul_res_545_fu_18365_p1),
    .dout(mul_res_545_fu_18365_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U578(
    .din0(mul_res_546_fu_18379_p0),
    .din1(mul_res_546_fu_18379_p1),
    .dout(mul_res_546_fu_18379_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U579(
    .din0(mul_res_547_fu_18397_p0),
    .din1(mul_res_547_fu_18397_p1),
    .dout(mul_res_547_fu_18397_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U580(
    .din0(mul_res_548_fu_18411_p0),
    .din1(mul_res_548_fu_18411_p1),
    .dout(mul_res_548_fu_18411_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U581(
    .din0(mul_res_549_fu_18425_p0),
    .din1(mul_res_549_fu_18425_p1),
    .dout(mul_res_549_fu_18425_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U582(
    .din0(mul_res_550_fu_18443_p0),
    .din1(mul_res_550_fu_18443_p1),
    .dout(mul_res_550_fu_18443_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U583(
    .din0(mul_res_551_fu_18461_p0),
    .din1(mul_res_551_fu_18461_p1),
    .dout(mul_res_551_fu_18461_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U584(
    .din0(mul_res_552_fu_18509_p0),
    .din1(mul_res_552_fu_18509_p1),
    .dout(mul_res_552_fu_18509_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U585(
    .din0(mul_res_553_fu_18527_p0),
    .din1(mul_res_553_fu_18527_p1),
    .dout(mul_res_553_fu_18527_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U586(
    .din0(mul_res_554_fu_18545_p0),
    .din1(mul_res_554_fu_18545_p1),
    .dout(mul_res_554_fu_18545_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U587(
    .din0(mul_res_555_fu_18563_p0),
    .din1(mul_res_555_fu_18563_p1),
    .dout(mul_res_555_fu_18563_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U588(
    .din0(mul_res_556_fu_18581_p0),
    .din1(mul_res_556_fu_18581_p1),
    .dout(mul_res_556_fu_18581_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U589(
    .din0(mul_res_557_fu_18599_p0),
    .din1(mul_res_557_fu_18599_p1),
    .dout(mul_res_557_fu_18599_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U590(
    .din0(mul_res_558_fu_18613_p0),
    .din1(mul_res_558_fu_18613_p1),
    .dout(mul_res_558_fu_18613_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U591(
    .din0(mul_res_559_fu_18631_p0),
    .din1(mul_res_559_fu_18631_p1),
    .dout(mul_res_559_fu_18631_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U592(
    .din0(mul_res_560_fu_18645_p0),
    .din1(mul_res_560_fu_18645_p1),
    .dout(mul_res_560_fu_18645_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U593(
    .din0(mul_res_561_fu_18659_p0),
    .din1(mul_res_561_fu_18659_p1),
    .dout(mul_res_561_fu_18659_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U594(
    .din0(mul_res_562_fu_18677_p0),
    .din1(mul_res_562_fu_18677_p1),
    .dout(mul_res_562_fu_18677_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U595(
    .din0(mul_res_563_fu_18695_p0),
    .din1(mul_res_563_fu_18695_p1),
    .dout(mul_res_563_fu_18695_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U596(
    .din0(mul_res_564_fu_18743_p0),
    .din1(mul_res_564_fu_18743_p1),
    .dout(mul_res_564_fu_18743_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U597(
    .din0(mul_res_565_fu_18761_p0),
    .din1(mul_res_565_fu_18761_p1),
    .dout(mul_res_565_fu_18761_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U598(
    .din0(mul_res_566_fu_18779_p0),
    .din1(mul_res_566_fu_18779_p1),
    .dout(mul_res_566_fu_18779_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U599(
    .din0(mul_res_567_fu_18797_p0),
    .din1(mul_res_567_fu_18797_p1),
    .dout(mul_res_567_fu_18797_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U600(
    .din0(mul_res_568_fu_18815_p0),
    .din1(mul_res_568_fu_18815_p1),
    .dout(mul_res_568_fu_18815_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U601(
    .din0(mul_res_569_fu_18833_p0),
    .din1(mul_res_569_fu_18833_p1),
    .dout(mul_res_569_fu_18833_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U602(
    .din0(mul_res_570_fu_18847_p0),
    .din1(mul_res_570_fu_18847_p1),
    .dout(mul_res_570_fu_18847_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U603(
    .din0(mul_res_571_fu_18865_p0),
    .din1(mul_res_571_fu_18865_p1),
    .dout(mul_res_571_fu_18865_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U604(
    .din0(mul_res_572_fu_18879_p0),
    .din1(mul_res_572_fu_18879_p1),
    .dout(mul_res_572_fu_18879_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U605(
    .din0(mul_res_573_fu_18893_p0),
    .din1(mul_res_573_fu_18893_p1),
    .dout(mul_res_573_fu_18893_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U606(
    .din0(mul_res_574_fu_18911_p0),
    .din1(mul_res_574_fu_18911_p1),
    .dout(mul_res_574_fu_18911_p2)
);

MLP8_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U607(
    .din0(mul_res_575_fu_18929_p0),
    .din1(mul_res_575_fu_18929_p1),
    .dout(mul_res_575_fu_18929_p2)
);

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1234)) begin
        cit_fu_2426 <= add_ln122_fu_2856_p2;
    end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_1234)) begin
    cot_fu_2622 <= select_ln121_1_fu_2844_p3;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_1403)) begin
    if ((icmp_ln120_fu_2739_p2 == 1'd0)) begin
        indvar_flatten107_fu_2630 <= add_ln120_fu_2733_p2;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten107_fu_2630 <= 16'd0;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_1403)) begin
    if ((icmp_ln120_fu_2739_p2 == 1'd0)) begin
        indvar_flatten_fu_2626 <= select_ln121_2_fu_2757_p3;
    end else if ((ap_loop_init == 1'b1)) begin
        indvar_flatten_fu_2626 <= 11'd0;
    end
end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln153_102_reg_24362 <= add_ln153_102_fu_7245_p2;
        add_ln153_103_reg_24367 <= add_ln153_103_fu_7251_p2;
        add_ln153_104_reg_24372 <= add_ln153_104_fu_7257_p2;
        add_ln153_107_reg_25772 <= add_ln153_107_fu_19985_p2;
        add_ln153_108_reg_24377 <= add_ln153_108_fu_7647_p2;
        add_ln153_111_reg_24382 <= add_ln153_111_fu_7659_p2;
        add_ln153_114_reg_24387 <= add_ln153_114_fu_7671_p2;
        add_ln153_115_reg_24392 <= add_ln153_115_fu_7677_p2;
        add_ln153_116_reg_24397 <= add_ln153_116_fu_7683_p2;
        add_ln153_119_reg_25777 <= add_ln153_119_fu_20034_p2;
        add_ln153_11_reg_25732 <= add_ln153_11_fu_19593_p2;
        add_ln153_120_reg_24417 <= add_ln153_120_fu_8061_p2;
        add_ln153_126_reg_24422 <= add_ln153_126_fu_8073_p2;
        add_ln153_127_reg_24427 <= add_ln153_127_fu_8079_p2;
        add_ln153_128_reg_24432 <= add_ln153_128_fu_8085_p2;
        add_ln153_12_reg_24177 <= add_ln153_12_fu_4239_p2;
        add_ln153_131_reg_25782 <= add_ln153_131_fu_20105_p2;
        add_ln153_132_reg_24452 <= add_ln153_132_fu_8463_p2;
        add_ln153_138_reg_24457 <= add_ln153_138_fu_8475_p2;
        add_ln153_139_reg_24462 <= add_ln153_139_fu_8481_p2;
        add_ln153_140_reg_24467 <= add_ln153_140_fu_8487_p2;
        add_ln153_143_reg_25787 <= add_ln153_143_fu_20176_p2;
        add_ln153_144_reg_24487 <= add_ln153_144_fu_8865_p2;
        add_ln153_150_reg_24492 <= add_ln153_150_fu_8877_p2;
        add_ln153_151_reg_24497 <= add_ln153_151_fu_8883_p2;
        add_ln153_152_reg_24502 <= add_ln153_152_fu_8889_p2;
        add_ln153_155_reg_25792 <= add_ln153_155_fu_20247_p2;
        add_ln153_156_reg_24522 <= add_ln153_156_fu_9267_p2;
        add_ln153_15_reg_24182 <= add_ln153_15_fu_4251_p2;
        add_ln153_162_reg_24527 <= add_ln153_162_fu_9279_p2;
        add_ln153_163_reg_24532 <= add_ln153_163_fu_9285_p2;
        add_ln153_164_reg_24537 <= add_ln153_164_fu_9291_p2;
        add_ln153_167_reg_25797 <= add_ln153_167_fu_20318_p2;
        add_ln153_168_reg_24557 <= add_ln153_168_fu_9669_p2;
        add_ln153_174_reg_24562 <= add_ln153_174_fu_9681_p2;
        add_ln153_175_reg_24567 <= add_ln153_175_fu_9687_p2;
        add_ln153_176_reg_24572 <= add_ln153_176_fu_9693_p2;
        add_ln153_179_reg_25802 <= add_ln153_179_fu_20389_p2;
        add_ln153_180_reg_24592 <= add_ln153_180_fu_10071_p2;
        add_ln153_186_reg_24597 <= add_ln153_186_fu_10083_p2;
        add_ln153_187_reg_24602 <= add_ln153_187_fu_10089_p2;
        add_ln153_188_reg_24607 <= add_ln153_188_fu_10095_p2;
        add_ln153_18_reg_24187 <= add_ln153_18_fu_4263_p2;
        add_ln153_191_reg_25807 <= add_ln153_191_fu_20460_p2;
        add_ln153_192_reg_24627 <= add_ln153_192_fu_10473_p2;
        add_ln153_198_reg_24632 <= add_ln153_198_fu_10485_p2;
        add_ln153_199_reg_24637 <= add_ln153_199_fu_10491_p2;
        add_ln153_19_reg_24192 <= add_ln153_19_fu_4269_p2;
        add_ln153_200_reg_24642 <= add_ln153_200_fu_10497_p2;
        add_ln153_203_reg_25812 <= add_ln153_203_fu_20531_p2;
        add_ln153_204_reg_24662 <= add_ln153_204_fu_10875_p2;
        add_ln153_20_reg_24197 <= add_ln153_20_fu_4275_p2;
        add_ln153_210_reg_24667 <= add_ln153_210_fu_10887_p2;
        add_ln153_211_reg_24672 <= add_ln153_211_fu_10893_p2;
        add_ln153_212_reg_24677 <= add_ln153_212_fu_10899_p2;
        add_ln153_215_reg_25817 <= add_ln153_215_fu_20602_p2;
        add_ln153_216_reg_24697 <= add_ln153_216_fu_11277_p2;
        add_ln153_222_reg_24702 <= add_ln153_222_fu_11289_p2;
        add_ln153_223_reg_24707 <= add_ln153_223_fu_11295_p2;
        add_ln153_224_reg_24712 <= add_ln153_224_fu_11301_p2;
        add_ln153_227_reg_25822 <= add_ln153_227_fu_20673_p2;
        add_ln153_228_reg_24732 <= add_ln153_228_fu_11679_p2;
        add_ln153_234_reg_24737 <= add_ln153_234_fu_11691_p2;
        add_ln153_235_reg_24742 <= add_ln153_235_fu_11697_p2;
        add_ln153_236_reg_24747 <= add_ln153_236_fu_11703_p2;
        add_ln153_239_reg_25827 <= add_ln153_239_fu_20744_p2;
        add_ln153_23_reg_25737 <= add_ln153_23_fu_19642_p2;
        add_ln153_240_reg_24767 <= add_ln153_240_fu_12081_p2;
        add_ln153_246_reg_24772 <= add_ln153_246_fu_12093_p2;
        add_ln153_247_reg_24777 <= add_ln153_247_fu_12099_p2;
        add_ln153_248_reg_24782 <= add_ln153_248_fu_12105_p2;
        add_ln153_24_reg_24202 <= add_ln153_24_fu_4665_p2;
        add_ln153_251_reg_25832 <= add_ln153_251_fu_20815_p2;
        add_ln153_252_reg_24802 <= add_ln153_252_fu_12483_p2;
        add_ln153_258_reg_24807 <= add_ln153_258_fu_12495_p2;
        add_ln153_259_reg_24812 <= add_ln153_259_fu_12501_p2;
        add_ln153_260_reg_24817 <= add_ln153_260_fu_12507_p2;
        add_ln153_263_reg_25837 <= add_ln153_263_fu_20886_p2;
        add_ln153_264_reg_24837 <= add_ln153_264_fu_12885_p2;
        add_ln153_270_reg_24842 <= add_ln153_270_fu_12897_p2;
        add_ln153_271_reg_24847 <= add_ln153_271_fu_12903_p2;
        add_ln153_272_reg_24852 <= add_ln153_272_fu_12909_p2;
        add_ln153_275_reg_25842 <= add_ln153_275_fu_20957_p2;
        add_ln153_276_reg_24872 <= add_ln153_276_fu_13287_p2;
        add_ln153_27_reg_24207 <= add_ln153_27_fu_4677_p2;
        add_ln153_282_reg_24877 <= add_ln153_282_fu_13299_p2;
        add_ln153_283_reg_24882 <= add_ln153_283_fu_13305_p2;
        add_ln153_284_reg_24887 <= add_ln153_284_fu_13311_p2;
        add_ln153_287_reg_25847 <= add_ln153_287_fu_21028_p2;
        add_ln153_288_reg_24907 <= add_ln153_288_fu_13557_p2;
        add_ln153_294_reg_24912 <= add_ln153_294_fu_13569_p2;
        add_ln153_295_reg_24917 <= add_ln153_295_fu_13575_p2;
        add_ln153_296_reg_24922 <= add_ln153_296_fu_13581_p2;
        add_ln153_299_reg_25852 <= add_ln153_299_fu_21099_p2;
        add_ln153_300_reg_24942 <= add_ln153_300_fu_13791_p2;
        add_ln153_306_reg_24947 <= add_ln153_306_fu_13803_p2;
        add_ln153_307_reg_24952 <= add_ln153_307_fu_13809_p2;
        add_ln153_308_reg_24957 <= add_ln153_308_fu_13815_p2;
        add_ln153_30_reg_24212 <= add_ln153_30_fu_4689_p2;
        add_ln153_311_reg_25857 <= add_ln153_311_fu_21170_p2;
        add_ln153_312_reg_24977 <= add_ln153_312_fu_14025_p2;
        add_ln153_318_reg_24982 <= add_ln153_318_fu_14037_p2;
        add_ln153_319_reg_24987 <= add_ln153_319_fu_14043_p2;
        add_ln153_31_reg_24217 <= add_ln153_31_fu_4695_p2;
        add_ln153_320_reg_24992 <= add_ln153_320_fu_14049_p2;
        add_ln153_323_reg_25862 <= add_ln153_323_fu_21241_p2;
        add_ln153_324_reg_25012 <= add_ln153_324_fu_14259_p2;
        add_ln153_32_reg_24222 <= add_ln153_32_fu_4701_p2;
        add_ln153_330_reg_25017 <= add_ln153_330_fu_14271_p2;
        add_ln153_331_reg_25022 <= add_ln153_331_fu_14277_p2;
        add_ln153_332_reg_25027 <= add_ln153_332_fu_14283_p2;
        add_ln153_335_reg_25867 <= add_ln153_335_fu_21312_p2;
        add_ln153_336_reg_25047 <= add_ln153_336_fu_14493_p2;
        add_ln153_342_reg_25052 <= add_ln153_342_fu_14505_p2;
        add_ln153_343_reg_25057 <= add_ln153_343_fu_14511_p2;
        add_ln153_344_reg_25062 <= add_ln153_344_fu_14517_p2;
        add_ln153_347_reg_25872 <= add_ln153_347_fu_21383_p2;
        add_ln153_348_reg_25082 <= add_ln153_348_fu_14727_p2;
        add_ln153_354_reg_25087 <= add_ln153_354_fu_14739_p2;
        add_ln153_355_reg_25092 <= add_ln153_355_fu_14745_p2;
        add_ln153_356_reg_25097 <= add_ln153_356_fu_14751_p2;
        add_ln153_359_reg_25877 <= add_ln153_359_fu_21454_p2;
        add_ln153_35_reg_25742 <= add_ln153_35_fu_19691_p2;
        add_ln153_360_reg_25117 <= add_ln153_360_fu_14961_p2;
        add_ln153_366_reg_25122 <= add_ln153_366_fu_14973_p2;
        add_ln153_367_reg_25127 <= add_ln153_367_fu_14979_p2;
        add_ln153_368_reg_25132 <= add_ln153_368_fu_14985_p2;
        add_ln153_36_reg_24227 <= add_ln153_36_fu_5091_p2;
        add_ln153_371_reg_25882 <= add_ln153_371_fu_21525_p2;
        add_ln153_372_reg_25152 <= add_ln153_372_fu_15195_p2;
        add_ln153_378_reg_25157 <= add_ln153_378_fu_15207_p2;
        add_ln153_379_reg_25162 <= add_ln153_379_fu_15213_p2;
        add_ln153_380_reg_25167 <= add_ln153_380_fu_15219_p2;
        add_ln153_383_reg_25887 <= add_ln153_383_fu_21596_p2;
        add_ln153_384_reg_25187 <= add_ln153_384_fu_15429_p2;
        add_ln153_390_reg_25192 <= add_ln153_390_fu_15441_p2;
        add_ln153_391_reg_25197 <= add_ln153_391_fu_15447_p2;
        add_ln153_392_reg_25202 <= add_ln153_392_fu_15453_p2;
        add_ln153_395_reg_25892 <= add_ln153_395_fu_21667_p2;
        add_ln153_396_reg_25222 <= add_ln153_396_fu_15663_p2;
        add_ln153_39_reg_24232 <= add_ln153_39_fu_5103_p2;
        add_ln153_3_reg_24157 <= add_ln153_3_fu_3825_p2;
        add_ln153_402_reg_25227 <= add_ln153_402_fu_15675_p2;
        add_ln153_403_reg_25232 <= add_ln153_403_fu_15681_p2;
        add_ln153_404_reg_25237 <= add_ln153_404_fu_15687_p2;
        add_ln153_407_reg_25897 <= add_ln153_407_fu_21738_p2;
        add_ln153_408_reg_25257 <= add_ln153_408_fu_15897_p2;
        add_ln153_414_reg_25262 <= add_ln153_414_fu_15909_p2;
        add_ln153_415_reg_25267 <= add_ln153_415_fu_15915_p2;
        add_ln153_416_reg_25272 <= add_ln153_416_fu_15921_p2;
        add_ln153_419_reg_25902 <= add_ln153_419_fu_21809_p2;
        add_ln153_420_reg_25292 <= add_ln153_420_fu_16131_p2;
        add_ln153_426_reg_25297 <= add_ln153_426_fu_16143_p2;
        add_ln153_427_reg_25302 <= add_ln153_427_fu_16149_p2;
        add_ln153_428_reg_25307 <= add_ln153_428_fu_16155_p2;
        add_ln153_42_reg_24237 <= add_ln153_42_fu_5115_p2;
        add_ln153_431_reg_25907 <= add_ln153_431_fu_21880_p2;
        add_ln153_432_reg_25327 <= add_ln153_432_fu_16365_p2;
        add_ln153_438_reg_25332 <= add_ln153_438_fu_16377_p2;
        add_ln153_439_reg_25337 <= add_ln153_439_fu_16383_p2;
        add_ln153_43_reg_24242 <= add_ln153_43_fu_5121_p2;
        add_ln153_440_reg_25342 <= add_ln153_440_fu_16389_p2;
        add_ln153_443_reg_25912 <= add_ln153_443_fu_21951_p2;
        add_ln153_444_reg_25362 <= add_ln153_444_fu_16599_p2;
        add_ln153_44_reg_24247 <= add_ln153_44_fu_5127_p2;
        add_ln153_450_reg_25367 <= add_ln153_450_fu_16611_p2;
        add_ln153_451_reg_25372 <= add_ln153_451_fu_16617_p2;
        add_ln153_452_reg_25377 <= add_ln153_452_fu_16623_p2;
        add_ln153_455_reg_25917 <= add_ln153_455_fu_22022_p2;
        add_ln153_456_reg_25397 <= add_ln153_456_fu_16833_p2;
        add_ln153_462_reg_25402 <= add_ln153_462_fu_16845_p2;
        add_ln153_463_reg_25407 <= add_ln153_463_fu_16851_p2;
        add_ln153_464_reg_25412 <= add_ln153_464_fu_16857_p2;
        add_ln153_467_reg_25922 <= add_ln153_467_fu_22093_p2;
        add_ln153_468_reg_25432 <= add_ln153_468_fu_17067_p2;
        add_ln153_474_reg_25437 <= add_ln153_474_fu_17079_p2;
        add_ln153_475_reg_25442 <= add_ln153_475_fu_17085_p2;
        add_ln153_476_reg_25447 <= add_ln153_476_fu_17091_p2;
        add_ln153_479_reg_25927 <= add_ln153_479_fu_22164_p2;
        add_ln153_47_reg_25747 <= add_ln153_47_fu_19740_p2;
        add_ln153_480_reg_25467 <= add_ln153_480_fu_17301_p2;
        add_ln153_486_reg_25472 <= add_ln153_486_fu_17313_p2;
        add_ln153_487_reg_25477 <= add_ln153_487_fu_17319_p2;
        add_ln153_488_reg_25482 <= add_ln153_488_fu_17325_p2;
        add_ln153_48_reg_24252 <= add_ln153_48_fu_5517_p2;
        add_ln153_491_reg_25932 <= add_ln153_491_fu_22235_p2;
        add_ln153_492_reg_25502 <= add_ln153_492_fu_17535_p2;
        add_ln153_498_reg_25507 <= add_ln153_498_fu_17547_p2;
        add_ln153_499_reg_25512 <= add_ln153_499_fu_17553_p2;
        add_ln153_500_reg_25517 <= add_ln153_500_fu_17559_p2;
        add_ln153_503_reg_25937 <= add_ln153_503_fu_22306_p2;
        add_ln153_504_reg_25537 <= add_ln153_504_fu_17769_p2;
        add_ln153_510_reg_25542 <= add_ln153_510_fu_17781_p2;
        add_ln153_511_reg_25547 <= add_ln153_511_fu_17787_p2;
        add_ln153_512_reg_25552 <= add_ln153_512_fu_17793_p2;
        add_ln153_515_reg_25942 <= add_ln153_515_fu_22377_p2;
        add_ln153_516_reg_25572 <= add_ln153_516_fu_18003_p2;
        add_ln153_51_reg_24257 <= add_ln153_51_fu_5529_p2;
        add_ln153_522_reg_25577 <= add_ln153_522_fu_18015_p2;
        add_ln153_523_reg_25582 <= add_ln153_523_fu_18021_p2;
        add_ln153_524_reg_25587 <= add_ln153_524_fu_18027_p2;
        add_ln153_527_reg_25947 <= add_ln153_527_fu_22448_p2;
        add_ln153_528_reg_25607 <= add_ln153_528_fu_18237_p2;
        add_ln153_534_reg_25612 <= add_ln153_534_fu_18249_p2;
        add_ln153_535_reg_25617 <= add_ln153_535_fu_18255_p2;
        add_ln153_536_reg_25622 <= add_ln153_536_fu_18261_p2;
        add_ln153_539_reg_25952 <= add_ln153_539_fu_22519_p2;
        add_ln153_540_reg_25642 <= add_ln153_540_fu_18471_p2;
        add_ln153_546_reg_25647 <= add_ln153_546_fu_18483_p2;
        add_ln153_547_reg_25652 <= add_ln153_547_fu_18489_p2;
        add_ln153_548_reg_25657 <= add_ln153_548_fu_18495_p2;
        add_ln153_54_reg_24262 <= add_ln153_54_fu_5541_p2;
        add_ln153_551_reg_25957 <= add_ln153_551_fu_22590_p2;
        add_ln153_552_reg_25677 <= add_ln153_552_fu_18705_p2;
        add_ln153_558_reg_25682 <= add_ln153_558_fu_18717_p2;
        add_ln153_559_reg_25687 <= add_ln153_559_fu_18723_p2;
        add_ln153_55_reg_24267 <= add_ln153_55_fu_5547_p2;
        add_ln153_560_reg_25692 <= add_ln153_560_fu_18729_p2;
        add_ln153_563_reg_25962 <= add_ln153_563_fu_22661_p2;
        add_ln153_564_reg_25712 <= add_ln153_564_fu_18939_p2;
        add_ln153_56_reg_24272 <= add_ln153_56_fu_5553_p2;
        add_ln153_570_reg_25717 <= add_ln153_570_fu_18951_p2;
        add_ln153_571_reg_25722 <= add_ln153_571_fu_18957_p2;
        add_ln153_572_reg_25727 <= add_ln153_572_fu_18963_p2;
        add_ln153_575_reg_25967 <= add_ln153_575_fu_22732_p2;
        add_ln153_59_reg_25752 <= add_ln153_59_fu_19789_p2;
        add_ln153_60_reg_24277 <= add_ln153_60_fu_5943_p2;
        add_ln153_63_reg_24282 <= add_ln153_63_fu_5955_p2;
        add_ln153_66_reg_24287 <= add_ln153_66_fu_5967_p2;
        add_ln153_67_reg_24292 <= add_ln153_67_fu_5973_p2;
        add_ln153_68_reg_24297 <= add_ln153_68_fu_5979_p2;
        add_ln153_6_reg_24162 <= add_ln153_6_fu_3837_p2;
        add_ln153_71_reg_25757 <= add_ln153_71_fu_19838_p2;
        add_ln153_72_reg_24302 <= add_ln153_72_fu_6369_p2;
        add_ln153_75_reg_24307 <= add_ln153_75_fu_6381_p2;
        add_ln153_78_reg_24312 <= add_ln153_78_fu_6393_p2;
        add_ln153_79_reg_24317 <= add_ln153_79_fu_6399_p2;
        add_ln153_7_reg_24167 <= add_ln153_7_fu_3843_p2;
        add_ln153_80_reg_24322 <= add_ln153_80_fu_6405_p2;
        add_ln153_83_reg_25762 <= add_ln153_83_fu_19887_p2;
        add_ln153_84_reg_24327 <= add_ln153_84_fu_6795_p2;
        add_ln153_87_reg_24332 <= add_ln153_87_fu_6807_p2;
        add_ln153_8_reg_24172 <= add_ln153_8_fu_3849_p2;
        add_ln153_90_reg_24337 <= add_ln153_90_fu_6819_p2;
        add_ln153_91_reg_24342 <= add_ln153_91_fu_6825_p2;
        add_ln153_92_reg_24347 <= add_ln153_92_fu_6831_p2;
        add_ln153_95_reg_25767 <= add_ln153_95_fu_19936_p2;
        add_ln153_96_reg_24352 <= add_ln153_96_fu_7221_p2;
        add_ln153_99_reg_24357 <= add_ln153_99_fu_7233_p2;
        add_ln153_reg_24152 <= add_ln153_fu_3813_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln126_reg_23833 <= icmp_ln126_fu_2915_p2;
        icmp_ln126_reg_23833_pp0_iter3_reg <= icmp_ln126_reg_23833;
        icmp_ln161_reg_24005 <= icmp_ln161_fu_3160_p2;
        icmp_ln161_reg_24005_pp0_iter3_reg <= icmp_ln161_reg_24005;
        icmp_ln161_reg_24005_pp0_iter4_reg <= icmp_ln161_reg_24005_pp0_iter3_reg;
        mul_res_125_reg_24402 <= mul_res_125_fu_7871_p2;
        mul_res_127_reg_24407 <= mul_res_127_fu_7931_p2;
        mul_res_128_reg_24412 <= mul_res_128_fu_7959_p2;
        mul_res_137_reg_24437 <= mul_res_137_fu_8273_p2;
        mul_res_139_reg_24442 <= mul_res_139_fu_8333_p2;
        mul_res_140_reg_24447 <= mul_res_140_fu_8361_p2;
        mul_res_149_reg_24472 <= mul_res_149_fu_8675_p2;
        mul_res_151_reg_24477 <= mul_res_151_fu_8735_p2;
        mul_res_152_reg_24482 <= mul_res_152_fu_8763_p2;
        mul_res_161_reg_24507 <= mul_res_161_fu_9077_p2;
        mul_res_163_reg_24512 <= mul_res_163_fu_9137_p2;
        mul_res_164_reg_24517 <= mul_res_164_fu_9165_p2;
        mul_res_173_reg_24542 <= mul_res_173_fu_9479_p2;
        mul_res_175_reg_24547 <= mul_res_175_fu_9539_p2;
        mul_res_176_reg_24552 <= mul_res_176_fu_9567_p2;
        mul_res_185_reg_24577 <= mul_res_185_fu_9881_p2;
        mul_res_187_reg_24582 <= mul_res_187_fu_9941_p2;
        mul_res_188_reg_24587 <= mul_res_188_fu_9969_p2;
        mul_res_197_reg_24612 <= mul_res_197_fu_10283_p2;
        mul_res_199_reg_24617 <= mul_res_199_fu_10343_p2;
        mul_res_200_reg_24622 <= mul_res_200_fu_10371_p2;
        mul_res_209_reg_24647 <= mul_res_209_fu_10685_p2;
        mul_res_211_reg_24652 <= mul_res_211_fu_10745_p2;
        mul_res_212_reg_24657 <= mul_res_212_fu_10773_p2;
        mul_res_221_reg_24682 <= mul_res_221_fu_11087_p2;
        mul_res_223_reg_24687 <= mul_res_223_fu_11147_p2;
        mul_res_224_reg_24692 <= mul_res_224_fu_11175_p2;
        mul_res_233_reg_24717 <= mul_res_233_fu_11489_p2;
        mul_res_235_reg_24722 <= mul_res_235_fu_11549_p2;
        mul_res_236_reg_24727 <= mul_res_236_fu_11577_p2;
        mul_res_245_reg_24752 <= mul_res_245_fu_11891_p2;
        mul_res_247_reg_24757 <= mul_res_247_fu_11951_p2;
        mul_res_248_reg_24762 <= mul_res_248_fu_11979_p2;
        mul_res_257_reg_24787 <= mul_res_257_fu_12293_p2;
        mul_res_259_reg_24792 <= mul_res_259_fu_12353_p2;
        mul_res_260_reg_24797 <= mul_res_260_fu_12381_p2;
        mul_res_269_reg_24822 <= mul_res_269_fu_12695_p2;
        mul_res_271_reg_24827 <= mul_res_271_fu_12755_p2;
        mul_res_272_reg_24832 <= mul_res_272_fu_12783_p2;
        mul_res_281_reg_24857 <= mul_res_281_fu_13097_p2;
        mul_res_283_reg_24862 <= mul_res_283_fu_13157_p2;
        mul_res_284_reg_24867 <= mul_res_284_fu_13185_p2;
        mul_res_293_reg_24892 <= mul_res_293_fu_13433_p2;
        mul_res_295_reg_24897 <= mul_res_295_fu_13471_p2;
        mul_res_296_reg_24902 <= mul_res_296_fu_13488_p2;
        mul_res_305_reg_24927 <= mul_res_305_fu_13685_p2;
        mul_res_307_reg_24932 <= mul_res_307_fu_13717_p2;
        mul_res_308_reg_24937 <= mul_res_308_fu_13731_p2;
        mul_res_317_reg_24962 <= mul_res_317_fu_13919_p2;
        mul_res_319_reg_24967 <= mul_res_319_fu_13951_p2;
        mul_res_320_reg_24972 <= mul_res_320_fu_13965_p2;
        mul_res_329_reg_24997 <= mul_res_329_fu_14153_p2;
        mul_res_331_reg_25002 <= mul_res_331_fu_14185_p2;
        mul_res_332_reg_25007 <= mul_res_332_fu_14199_p2;
        mul_res_341_reg_25032 <= mul_res_341_fu_14387_p2;
        mul_res_343_reg_25037 <= mul_res_343_fu_14419_p2;
        mul_res_344_reg_25042 <= mul_res_344_fu_14433_p2;
        mul_res_353_reg_25067 <= mul_res_353_fu_14621_p2;
        mul_res_355_reg_25072 <= mul_res_355_fu_14653_p2;
        mul_res_356_reg_25077 <= mul_res_356_fu_14667_p2;
        mul_res_365_reg_25102 <= mul_res_365_fu_14855_p2;
        mul_res_367_reg_25107 <= mul_res_367_fu_14887_p2;
        mul_res_368_reg_25112 <= mul_res_368_fu_14901_p2;
        mul_res_377_reg_25137 <= mul_res_377_fu_15089_p2;
        mul_res_379_reg_25142 <= mul_res_379_fu_15121_p2;
        mul_res_380_reg_25147 <= mul_res_380_fu_15135_p2;
        mul_res_389_reg_25172 <= mul_res_389_fu_15323_p2;
        mul_res_391_reg_25177 <= mul_res_391_fu_15355_p2;
        mul_res_392_reg_25182 <= mul_res_392_fu_15369_p2;
        mul_res_401_reg_25207 <= mul_res_401_fu_15557_p2;
        mul_res_403_reg_25212 <= mul_res_403_fu_15589_p2;
        mul_res_404_reg_25217 <= mul_res_404_fu_15603_p2;
        mul_res_413_reg_25242 <= mul_res_413_fu_15791_p2;
        mul_res_415_reg_25247 <= mul_res_415_fu_15823_p2;
        mul_res_416_reg_25252 <= mul_res_416_fu_15837_p2;
        mul_res_425_reg_25277 <= mul_res_425_fu_16025_p2;
        mul_res_427_reg_25282 <= mul_res_427_fu_16057_p2;
        mul_res_428_reg_25287 <= mul_res_428_fu_16071_p2;
        mul_res_437_reg_25312 <= mul_res_437_fu_16259_p2;
        mul_res_439_reg_25317 <= mul_res_439_fu_16291_p2;
        mul_res_440_reg_25322 <= mul_res_440_fu_16305_p2;
        mul_res_449_reg_25347 <= mul_res_449_fu_16493_p2;
        mul_res_451_reg_25352 <= mul_res_451_fu_16525_p2;
        mul_res_452_reg_25357 <= mul_res_452_fu_16539_p2;
        mul_res_461_reg_25382 <= mul_res_461_fu_16727_p2;
        mul_res_463_reg_25387 <= mul_res_463_fu_16759_p2;
        mul_res_464_reg_25392 <= mul_res_464_fu_16773_p2;
        mul_res_473_reg_25417 <= mul_res_473_fu_16961_p2;
        mul_res_475_reg_25422 <= mul_res_475_fu_16993_p2;
        mul_res_476_reg_25427 <= mul_res_476_fu_17007_p2;
        mul_res_485_reg_25452 <= mul_res_485_fu_17195_p2;
        mul_res_487_reg_25457 <= mul_res_487_fu_17227_p2;
        mul_res_488_reg_25462 <= mul_res_488_fu_17241_p2;
        mul_res_497_reg_25487 <= mul_res_497_fu_17429_p2;
        mul_res_499_reg_25492 <= mul_res_499_fu_17461_p2;
        mul_res_500_reg_25497 <= mul_res_500_fu_17475_p2;
        mul_res_509_reg_25522 <= mul_res_509_fu_17663_p2;
        mul_res_511_reg_25527 <= mul_res_511_fu_17695_p2;
        mul_res_512_reg_25532 <= mul_res_512_fu_17709_p2;
        mul_res_521_reg_25557 <= mul_res_521_fu_17897_p2;
        mul_res_523_reg_25562 <= mul_res_523_fu_17929_p2;
        mul_res_524_reg_25567 <= mul_res_524_fu_17943_p2;
        mul_res_533_reg_25592 <= mul_res_533_fu_18131_p2;
        mul_res_535_reg_25597 <= mul_res_535_fu_18163_p2;
        mul_res_536_reg_25602 <= mul_res_536_fu_18177_p2;
        mul_res_545_reg_25627 <= mul_res_545_fu_18365_p2;
        mul_res_547_reg_25632 <= mul_res_547_fu_18397_p2;
        mul_res_548_reg_25637 <= mul_res_548_fu_18411_p2;
        mul_res_557_reg_25662 <= mul_res_557_fu_18599_p2;
        mul_res_559_reg_25667 <= mul_res_559_fu_18631_p2;
        mul_res_560_reg_25672 <= mul_res_560_fu_18645_p2;
        mul_res_569_reg_25697 <= mul_res_569_fu_18833_p2;
        mul_res_571_reg_25702 <= mul_res_571_fu_18865_p2;
        mul_res_572_reg_25707 <= mul_res_572_fu_18879_p2;
        tmp_10_reg_24069 <= {{mlp_inst_m1_bias_arr_111_q0[109:100]}};
        tmp_11_reg_24075 <= {{mlp_inst_m1_bias_arr_111_q0[119:110]}};
        tmp_12_reg_24081 <= {{mlp_inst_m1_bias_arr_111_q0[129:120]}};
        tmp_13_reg_24087 <= {{mlp_inst_m1_bias_arr_111_q0[139:130]}};
        tmp_14_reg_24093 <= {{mlp_inst_m1_bias_arr_111_q0[149:140]}};
        tmp_15_reg_24099 <= {{mlp_inst_m1_bias_arr_111_q0[159:150]}};
        tmp_16_reg_24105 <= {{mlp_inst_m1_bias_arr_111_q0[169:160]}};
        tmp_17_reg_24111 <= {{mlp_inst_m1_bias_arr_111_q0[179:170]}};
        tmp_18_reg_24117 <= {{mlp_inst_m1_bias_arr_111_q0[189:180]}};
        tmp_19_reg_24123 <= {{mlp_inst_m1_bias_arr_111_q0[199:190]}};
        tmp_20_reg_24129 <= {{mlp_inst_m1_bias_arr_111_q0[209:200]}};
        tmp_21_reg_24135 <= {{mlp_inst_m1_bias_arr_111_q0[219:210]}};
        tmp_22_reg_24141 <= {{mlp_inst_m1_bias_arr_111_q0[229:220]}};
        tmp_23_reg_24147 <= {{mlp_inst_m1_bias_arr_111_q0[237:230]}};
        tmp_2_reg_24021 <= {{mlp_inst_m1_bias_arr_111_q0[29:20]}};
        tmp_3_reg_24027 <= {{mlp_inst_m1_bias_arr_111_q0[39:30]}};
        tmp_4_reg_24033 <= {{mlp_inst_m1_bias_arr_111_q0[49:40]}};
        tmp_5_reg_24039 <= {{mlp_inst_m1_bias_arr_111_q0[59:50]}};
        tmp_6_reg_24045 <= {{mlp_inst_m1_bias_arr_111_q0[69:60]}};
        tmp_7_reg_24051 <= {{mlp_inst_m1_bias_arr_111_q0[79:70]}};
        tmp_8_reg_24057 <= {{mlp_inst_m1_bias_arr_111_q0[89:80]}};
        tmp_9_reg_24063 <= {{mlp_inst_m1_bias_arr_111_q0[99:90]}};
        tmp_s_reg_24015 <= {{mlp_inst_m1_bias_arr_111_q0[19:10]}};
        trunc_ln131_reg_24009 <= trunc_ln131_fu_3165_p1;
        trunc_ln137_10_reg_23940 <= {{cache_window_sm_dout[35:33]}};
        trunc_ln137_11_reg_23945 <= {{cache_window_sm_dout[38:36]}};
        trunc_ln137_12_reg_23950 <= {{cache_window_sm_dout[41:39]}};
        trunc_ln137_13_reg_23955 <= {{cache_window_sm_dout[44:42]}};
        trunc_ln137_14_reg_23960 <= {{cache_window_sm_dout[47:45]}};
        trunc_ln137_15_reg_23965 <= {{cache_window_sm_dout[50:48]}};
        trunc_ln137_16_reg_23970 <= {{cache_window_sm_dout[53:51]}};
        trunc_ln137_17_reg_23975 <= {{cache_window_sm_dout[56:54]}};
        trunc_ln137_18_reg_23980 <= {{cache_window_sm_dout[59:57]}};
        trunc_ln137_19_reg_23985 <= {{cache_window_sm_dout[62:60]}};
        trunc_ln137_1_reg_23895 <= {{cache_window_sm_dout[8:6]}};
        trunc_ln137_20_reg_23990 <= {{cache_window_sm_dout[65:63]}};
        trunc_ln137_21_reg_23995 <= {{cache_window_sm_dout[68:66]}};
        trunc_ln137_22_reg_24000 <= {{cache_window_sm_dout[71:69]}};
        trunc_ln137_2_reg_23900 <= {{cache_window_sm_dout[11:9]}};
        trunc_ln137_3_reg_23905 <= {{cache_window_sm_dout[14:12]}};
        trunc_ln137_4_reg_23910 <= {{cache_window_sm_dout[17:15]}};
        trunc_ln137_5_reg_23915 <= {{cache_window_sm_dout[20:18]}};
        trunc_ln137_6_reg_23920 <= {{cache_window_sm_dout[23:21]}};
        trunc_ln137_7_reg_23925 <= {{cache_window_sm_dout[26:24]}};
        trunc_ln137_8_reg_23930 <= {{cache_window_sm_dout[29:27]}};
        trunc_ln137_9_reg_23935 <= {{cache_window_sm_dout[32:30]}};
        trunc_ln137_reg_23885 <= trunc_ln137_fu_2922_p1;
        trunc_ln137_s_reg_23890 <= {{cache_window_sm_dout[5:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        icmp_ln121_reg_23799 <= icmp_ln121_fu_2745_p2;
        select_ln121_1_reg_23813 <= select_ln121_1_fu_2844_p3;
        select_ln121_reg_23806 <= select_ln121_fu_2836_p3;
        trunc_ln121_reg_23818 <= trunc_ln121_fu_2852_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_0_0_0725_fu_2430 <= add_ln153_11_fu_19593_p2;
        p_0_0_0773_fu_2526 <= add_ln153_299_fu_21099_p2;
        p_0_0_0_10745_fu_2470 <= add_ln153_131_fu_20105_p2;
        p_0_0_0_10793_fu_2566 <= add_ln153_419_fu_21809_p2;
        p_0_0_0_112727_fu_2434 <= add_ln153_23_fu_19642_p2;
        p_0_0_0_112775_fu_2530 <= add_ln153_311_fu_21170_p2;
        p_0_0_0_11747_fu_2474 <= add_ln153_143_fu_20176_p2;
        p_0_0_0_11795_fu_2570 <= add_ln153_431_fu_21880_p2;
        p_0_0_0_12749_fu_2478 <= add_ln153_155_fu_20247_p2;
        p_0_0_0_12797_fu_2574 <= add_ln153_443_fu_21951_p2;
        p_0_0_0_13751_fu_2482 <= add_ln153_167_fu_20318_p2;
        p_0_0_0_13799_fu_2578 <= add_ln153_455_fu_22022_p2;
        p_0_0_0_14753_fu_2486 <= add_ln153_179_fu_20389_p2;
        p_0_0_0_14801_fu_2582 <= add_ln153_467_fu_22093_p2;
        p_0_0_0_15755_fu_2490 <= add_ln153_191_fu_20460_p2;
        p_0_0_0_15803_fu_2586 <= add_ln153_479_fu_22164_p2;
        p_0_0_0_16757_fu_2494 <= add_ln153_203_fu_20531_p2;
        p_0_0_0_16805_fu_2590 <= add_ln153_491_fu_22235_p2;
        p_0_0_0_17759_fu_2498 <= add_ln153_215_fu_20602_p2;
        p_0_0_0_17807_fu_2594 <= add_ln153_503_fu_22306_p2;
        p_0_0_0_18761_fu_2502 <= add_ln153_227_fu_20673_p2;
        p_0_0_0_18809_fu_2598 <= add_ln153_515_fu_22377_p2;
        p_0_0_0_19763_fu_2506 <= add_ln153_239_fu_20744_p2;
        p_0_0_0_19811_fu_2602 <= add_ln153_527_fu_22448_p2;
        p_0_0_0_20765_fu_2510 <= add_ln153_251_fu_20815_p2;
        p_0_0_0_20813_fu_2606 <= add_ln153_539_fu_22519_p2;
        p_0_0_0_21767_fu_2514 <= add_ln153_263_fu_20886_p2;
        p_0_0_0_21815_fu_2610 <= add_ln153_551_fu_22590_p2;
        p_0_0_0_22769_fu_2518 <= add_ln153_275_fu_20957_p2;
        p_0_0_0_22817_fu_2614 <= add_ln153_563_fu_22661_p2;
        p_0_0_0_23771_fu_2522 <= add_ln153_287_fu_21028_p2;
        p_0_0_0_23819_fu_2618 <= add_ln153_575_fu_22732_p2;
        p_0_0_0_2729_fu_2438 <= add_ln153_35_fu_19691_p2;
        p_0_0_0_2777_fu_2534 <= add_ln153_323_fu_21241_p2;
        p_0_0_0_3731_fu_2442 <= add_ln153_47_fu_19740_p2;
        p_0_0_0_3779_fu_2538 <= add_ln153_335_fu_21312_p2;
        p_0_0_0_4733_fu_2446 <= add_ln153_59_fu_19789_p2;
        p_0_0_0_4781_fu_2542 <= add_ln153_347_fu_21383_p2;
        p_0_0_0_5735_fu_2450 <= add_ln153_71_fu_19838_p2;
        p_0_0_0_5783_fu_2546 <= add_ln153_359_fu_21454_p2;
        p_0_0_0_6737_fu_2454 <= add_ln153_83_fu_19887_p2;
        p_0_0_0_6785_fu_2550 <= add_ln153_371_fu_21525_p2;
        p_0_0_0_7739_fu_2458 <= add_ln153_95_fu_19936_p2;
        p_0_0_0_7787_fu_2554 <= add_ln153_383_fu_21596_p2;
        p_0_0_0_8741_fu_2462 <= add_ln153_107_fu_19985_p2;
        p_0_0_0_8789_fu_2558 <= add_ln153_395_fu_21667_p2;
        p_0_0_0_9743_fu_2466 <= add_ln153_119_fu_20034_p2;
        p_0_0_0_9791_fu_2562 <= add_ln153_407_fu_21738_p2;
    end
end

always @ (*) begin
    if (((icmp_ln120_fu_2739_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_cit_load = 5'd0;
    end else begin
        ap_sig_allocacmp_cit_load = cit_fu_2426;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init_pp0_iter1_reg == 1'b1))) begin
        ap_sig_allocacmp_cot_load = 6'd0;
    end else begin
        ap_sig_allocacmp_cot_load = cot_fu_2622;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten107_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten107_load = indvar_flatten107_fu_2630;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_2626;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cache_window_sm_blk_n = cache_window_sm_empty_n;
    end else begin
        cache_window_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cache_window_sm_read = 1'b1;
    end else begin
        cache_window_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln161_reg_24005_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        mac_sm_blk_n = mac_sm_full_n;
    end else begin
        mac_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln161_reg_24005_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        mac_sm_write = 1'b1;
    end else begin
        mac_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_m1_bias_arr_111_ce0 = 1'b1;
    end else begin
        mlp_inst_m1_bias_arr_111_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_m1_weight_arr_110_ce0 = 1'b1;
    end else begin
        mlp_inst_m1_weight_arr_110_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln120_fu_2733_p2 = (ap_sig_allocacmp_indvar_flatten107_load + 16'd1);

assign add_ln121_1_fu_2751_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln121_fu_2825_p2 = (select_ln120_fu_2801_p3 + 6'd1);

assign add_ln122_fu_2856_p2 = (select_ln121_fu_2836_p3 + 5'd1);

assign add_ln151_fu_2904_p2 = (tmp_1_fu_2890_p3 + zext_ln151_fu_2901_p1);

assign add_ln153_100_fu_19979_p2 = ($signed(sext_ln153_62_fu_19975_p1) + $signed(add_ln153_97_fu_19948_p2));

assign add_ln153_101_fu_7239_p2 = ($signed(sext_ln151_199_fu_6897_p1) + $signed(sext_ln151_197_fu_6865_p1));

assign add_ln153_102_fu_7245_p2 = ($signed(add_ln153_101_fu_7239_p2) + $signed(sext_ln151_209_fu_7057_p1));

assign add_ln153_103_fu_7251_p2 = ($signed(sext_ln151_201_fu_6929_p1) + $signed(sext_ln151_205_fu_6993_p1));

assign add_ln153_104_fu_7257_p2 = ($signed(sext_ln151_203_fu_6961_p1) + $signed(sext_ln153_56_fu_7217_p1));

assign add_ln153_105_fu_19963_p2 = ($signed(sext_ln153_61_fu_19960_p1) + $signed(sext_ln153_60_fu_19957_p1));

assign add_ln153_106_fu_19969_p2 = ($signed(add_ln153_105_fu_19963_p2) + $signed(sext_ln153_59_fu_19954_p1));

assign add_ln153_107_fu_19985_p2 = (add_ln153_100_fu_19979_p2 + select_ln126_39_fu_19496_p3);

assign add_ln153_108_fu_7647_p2 = ($signed(sext_ln151_238_fu_7579_p1) + $signed(sext_ln151_240_fu_7611_p1));

assign add_ln153_109_fu_19997_p2 = ($signed(sext_ln153_65_fu_19994_p1) + $signed(sext_ln153_64_fu_19991_p1));

assign add_ln153_10_fu_19577_p2 = ($signed(add_ln153_9_fu_19571_p2) + $signed(sext_ln153_3_fu_19562_p1));

assign add_ln153_110_fu_7653_p2 = ($signed(sext_ln151_230_fu_7451_p1) + $signed(sext_ln151_234_fu_7515_p1));

assign add_ln153_111_fu_7659_p2 = ($signed(add_ln153_110_fu_7653_p2) + $signed(sext_ln151_236_fu_7547_p1));

assign add_ln153_112_fu_20028_p2 = ($signed(sext_ln153_69_fu_20024_p1) + $signed(add_ln153_109_fu_19997_p2));

assign add_ln153_113_fu_7665_p2 = ($signed(sext_ln151_222_fu_7323_p1) + $signed(sext_ln151_220_fu_7291_p1));

assign add_ln153_114_fu_7671_p2 = ($signed(add_ln153_113_fu_7665_p2) + $signed(sext_ln151_232_fu_7483_p1));

assign add_ln153_115_fu_7677_p2 = ($signed(sext_ln151_224_fu_7355_p1) + $signed(sext_ln151_228_fu_7419_p1));

assign add_ln153_116_fu_7683_p2 = ($signed(sext_ln151_226_fu_7387_p1) + $signed(sext_ln153_63_fu_7643_p1));

assign add_ln153_117_fu_20012_p2 = ($signed(sext_ln153_68_fu_20009_p1) + $signed(sext_ln153_67_fu_20006_p1));

assign add_ln153_118_fu_20018_p2 = ($signed(add_ln153_117_fu_20012_p2) + $signed(sext_ln153_66_fu_20003_p1));

assign add_ln153_119_fu_20034_p2 = (add_ln153_112_fu_20028_p2 + select_ln126_38_fu_19490_p3);

assign add_ln153_11_fu_19593_p2 = (add_ln153_4_fu_19587_p2 + select_ln126_47_fu_19544_p3);

assign add_ln153_120_fu_8061_p2 = ($signed(sext_ln151_261_fu_7993_p1) + $signed(sext_ln151_263_fu_8025_p1));

assign add_ln153_121_fu_20052_p2 = ($signed(sext_ln153_71_fu_20049_p1) + $signed(select_ln126_37_fu_19484_p3));

assign add_ln153_122_fu_20058_p2 = ($signed(sext_ln151_253_fu_20040_p1) + $signed(sext_ln151_257_fu_20043_p1));

assign add_ln153_123_fu_20064_p2 = ($signed(add_ln153_122_fu_20058_p2) + $signed(sext_ln151_259_fu_20046_p1));

assign add_ln153_124_fu_20074_p2 = ($signed(sext_ln153_72_fu_20070_p1) + $signed(add_ln153_121_fu_20052_p2));

assign add_ln153_125_fu_8067_p2 = ($signed(sext_ln151_245_fu_7749_p1) + $signed(sext_ln151_243_fu_7717_p1));

assign add_ln153_126_fu_8073_p2 = ($signed(add_ln153_125_fu_8067_p2) + $signed(sext_ln151_255_fu_7905_p1));

assign add_ln153_127_fu_8079_p2 = ($signed(sext_ln151_247_fu_7781_p1) + $signed(sext_ln151_251_fu_7845_p1));

assign add_ln153_128_fu_8085_p2 = ($signed(sext_ln151_249_fu_7813_p1) + $signed(sext_ln153_70_fu_8057_p1));

assign add_ln153_129_fu_20089_p2 = ($signed(sext_ln153_75_fu_20086_p1) + $signed(sext_ln153_74_fu_20083_p1));

assign add_ln153_12_fu_4239_p2 = ($signed(sext_ln151_54_fu_4171_p1) + $signed(sext_ln151_56_fu_4203_p1));

assign add_ln153_130_fu_20095_p2 = ($signed(add_ln153_129_fu_20089_p2) + $signed(sext_ln153_73_fu_20080_p1));

assign add_ln153_131_fu_20105_p2 = ($signed(sext_ln153_76_fu_20101_p1) + $signed(add_ln153_124_fu_20074_p2));

assign add_ln153_132_fu_8463_p2 = ($signed(sext_ln151_284_fu_8395_p1) + $signed(sext_ln151_286_fu_8427_p1));

assign add_ln153_133_fu_20123_p2 = ($signed(sext_ln153_78_fu_20120_p1) + $signed(select_ln126_36_fu_19478_p3));

assign add_ln153_134_fu_20129_p2 = ($signed(sext_ln151_276_fu_20111_p1) + $signed(sext_ln151_280_fu_20114_p1));

assign add_ln153_135_fu_20135_p2 = ($signed(add_ln153_134_fu_20129_p2) + $signed(sext_ln151_282_fu_20117_p1));

assign add_ln153_136_fu_20145_p2 = ($signed(sext_ln153_79_fu_20141_p1) + $signed(add_ln153_133_fu_20123_p2));

assign add_ln153_137_fu_8469_p2 = ($signed(sext_ln151_268_fu_8151_p1) + $signed(sext_ln151_266_fu_8119_p1));

assign add_ln153_138_fu_8475_p2 = ($signed(add_ln153_137_fu_8469_p2) + $signed(sext_ln151_278_fu_8307_p1));

assign add_ln153_139_fu_8481_p2 = ($signed(sext_ln151_270_fu_8183_p1) + $signed(sext_ln151_274_fu_8247_p1));

assign add_ln153_13_fu_19605_p2 = ($signed(sext_ln153_9_fu_19602_p1) + $signed(sext_ln153_8_fu_19599_p1));

assign add_ln153_140_fu_8487_p2 = ($signed(sext_ln151_272_fu_8215_p1) + $signed(sext_ln153_77_fu_8459_p1));

assign add_ln153_141_fu_20160_p2 = ($signed(sext_ln153_82_fu_20157_p1) + $signed(sext_ln153_81_fu_20154_p1));

assign add_ln153_142_fu_20166_p2 = ($signed(add_ln153_141_fu_20160_p2) + $signed(sext_ln153_80_fu_20151_p1));

assign add_ln153_143_fu_20176_p2 = ($signed(sext_ln153_83_fu_20172_p1) + $signed(add_ln153_136_fu_20145_p2));

assign add_ln153_144_fu_8865_p2 = ($signed(sext_ln151_307_fu_8797_p1) + $signed(sext_ln151_309_fu_8829_p1));

assign add_ln153_145_fu_20194_p2 = ($signed(sext_ln153_85_fu_20191_p1) + $signed(select_ln126_35_fu_19472_p3));

assign add_ln153_146_fu_20200_p2 = ($signed(sext_ln151_299_fu_20182_p1) + $signed(sext_ln151_303_fu_20185_p1));

assign add_ln153_147_fu_20206_p2 = ($signed(add_ln153_146_fu_20200_p2) + $signed(sext_ln151_305_fu_20188_p1));

assign add_ln153_148_fu_20216_p2 = ($signed(sext_ln153_86_fu_20212_p1) + $signed(add_ln153_145_fu_20194_p2));

assign add_ln153_149_fu_8871_p2 = ($signed(sext_ln151_291_fu_8553_p1) + $signed(sext_ln151_289_fu_8521_p1));

assign add_ln153_14_fu_4245_p2 = ($signed(sext_ln151_46_fu_4043_p1) + $signed(sext_ln151_50_fu_4107_p1));

assign add_ln153_150_fu_8877_p2 = ($signed(add_ln153_149_fu_8871_p2) + $signed(sext_ln151_301_fu_8709_p1));

assign add_ln153_151_fu_8883_p2 = ($signed(sext_ln151_293_fu_8585_p1) + $signed(sext_ln151_297_fu_8649_p1));

assign add_ln153_152_fu_8889_p2 = ($signed(sext_ln151_295_fu_8617_p1) + $signed(sext_ln153_84_fu_8861_p1));

assign add_ln153_153_fu_20231_p2 = ($signed(sext_ln153_89_fu_20228_p1) + $signed(sext_ln153_88_fu_20225_p1));

assign add_ln153_154_fu_20237_p2 = ($signed(add_ln153_153_fu_20231_p2) + $signed(sext_ln153_87_fu_20222_p1));

assign add_ln153_155_fu_20247_p2 = ($signed(sext_ln153_90_fu_20243_p1) + $signed(add_ln153_148_fu_20216_p2));

assign add_ln153_156_fu_9267_p2 = ($signed(sext_ln151_330_fu_9199_p1) + $signed(sext_ln151_332_fu_9231_p1));

assign add_ln153_157_fu_20265_p2 = ($signed(sext_ln153_92_fu_20262_p1) + $signed(select_ln126_34_fu_19466_p3));

assign add_ln153_158_fu_20271_p2 = ($signed(sext_ln151_322_fu_20253_p1) + $signed(sext_ln151_326_fu_20256_p1));

assign add_ln153_159_fu_20277_p2 = ($signed(add_ln153_158_fu_20271_p2) + $signed(sext_ln151_328_fu_20259_p1));

assign add_ln153_15_fu_4251_p2 = ($signed(add_ln153_14_fu_4245_p2) + $signed(sext_ln151_52_fu_4139_p1));

assign add_ln153_160_fu_20287_p2 = ($signed(sext_ln153_93_fu_20283_p1) + $signed(add_ln153_157_fu_20265_p2));

assign add_ln153_161_fu_9273_p2 = ($signed(sext_ln151_314_fu_8955_p1) + $signed(sext_ln151_312_fu_8923_p1));

assign add_ln153_162_fu_9279_p2 = ($signed(add_ln153_161_fu_9273_p2) + $signed(sext_ln151_324_fu_9111_p1));

assign add_ln153_163_fu_9285_p2 = ($signed(sext_ln151_316_fu_8987_p1) + $signed(sext_ln151_320_fu_9051_p1));

assign add_ln153_164_fu_9291_p2 = ($signed(sext_ln151_318_fu_9019_p1) + $signed(sext_ln153_91_fu_9263_p1));

assign add_ln153_165_fu_20302_p2 = ($signed(sext_ln153_96_fu_20299_p1) + $signed(sext_ln153_95_fu_20296_p1));

assign add_ln153_166_fu_20308_p2 = ($signed(add_ln153_165_fu_20302_p2) + $signed(sext_ln153_94_fu_20293_p1));

assign add_ln153_167_fu_20318_p2 = ($signed(sext_ln153_97_fu_20314_p1) + $signed(add_ln153_160_fu_20287_p2));

assign add_ln153_168_fu_9669_p2 = ($signed(sext_ln151_353_fu_9601_p1) + $signed(sext_ln151_355_fu_9633_p1));

assign add_ln153_169_fu_20336_p2 = ($signed(sext_ln153_99_fu_20333_p1) + $signed(select_ln126_33_fu_19460_p3));

assign add_ln153_16_fu_19636_p2 = ($signed(sext_ln153_13_fu_19632_p1) + $signed(add_ln153_13_fu_19605_p2));

assign add_ln153_170_fu_20342_p2 = ($signed(sext_ln151_345_fu_20324_p1) + $signed(sext_ln151_349_fu_20327_p1));

assign add_ln153_171_fu_20348_p2 = ($signed(add_ln153_170_fu_20342_p2) + $signed(sext_ln151_351_fu_20330_p1));

assign add_ln153_172_fu_20358_p2 = ($signed(sext_ln153_100_fu_20354_p1) + $signed(add_ln153_169_fu_20336_p2));

assign add_ln153_173_fu_9675_p2 = ($signed(sext_ln151_337_fu_9357_p1) + $signed(sext_ln151_335_fu_9325_p1));

assign add_ln153_174_fu_9681_p2 = ($signed(add_ln153_173_fu_9675_p2) + $signed(sext_ln151_347_fu_9513_p1));

assign add_ln153_175_fu_9687_p2 = ($signed(sext_ln151_339_fu_9389_p1) + $signed(sext_ln151_343_fu_9453_p1));

assign add_ln153_176_fu_9693_p2 = ($signed(sext_ln151_341_fu_9421_p1) + $signed(sext_ln153_98_fu_9665_p1));

assign add_ln153_177_fu_20373_p2 = ($signed(sext_ln153_103_fu_20370_p1) + $signed(sext_ln153_102_fu_20367_p1));

assign add_ln153_178_fu_20379_p2 = ($signed(add_ln153_177_fu_20373_p2) + $signed(sext_ln153_101_fu_20364_p1));

assign add_ln153_179_fu_20389_p2 = ($signed(sext_ln153_104_fu_20385_p1) + $signed(add_ln153_172_fu_20358_p2));

assign add_ln153_17_fu_4257_p2 = ($signed(sext_ln151_38_fu_3915_p1) + $signed(sext_ln151_36_fu_3883_p1));

assign add_ln153_180_fu_10071_p2 = ($signed(sext_ln151_376_fu_10003_p1) + $signed(sext_ln151_378_fu_10035_p1));

assign add_ln153_181_fu_20407_p2 = ($signed(sext_ln153_106_fu_20404_p1) + $signed(select_ln126_32_fu_19454_p3));

assign add_ln153_182_fu_20413_p2 = ($signed(sext_ln151_368_fu_20395_p1) + $signed(sext_ln151_372_fu_20398_p1));

assign add_ln153_183_fu_20419_p2 = ($signed(add_ln153_182_fu_20413_p2) + $signed(sext_ln151_374_fu_20401_p1));

assign add_ln153_184_fu_20429_p2 = ($signed(sext_ln153_107_fu_20425_p1) + $signed(add_ln153_181_fu_20407_p2));

assign add_ln153_185_fu_10077_p2 = ($signed(sext_ln151_360_fu_9759_p1) + $signed(sext_ln151_358_fu_9727_p1));

assign add_ln153_186_fu_10083_p2 = ($signed(add_ln153_185_fu_10077_p2) + $signed(sext_ln151_370_fu_9915_p1));

assign add_ln153_187_fu_10089_p2 = ($signed(sext_ln151_362_fu_9791_p1) + $signed(sext_ln151_366_fu_9855_p1));

assign add_ln153_188_fu_10095_p2 = ($signed(sext_ln151_364_fu_9823_p1) + $signed(sext_ln153_105_fu_10067_p1));

assign add_ln153_189_fu_20444_p2 = ($signed(sext_ln153_110_fu_20441_p1) + $signed(sext_ln153_109_fu_20438_p1));

assign add_ln153_18_fu_4263_p2 = ($signed(add_ln153_17_fu_4257_p2) + $signed(sext_ln151_48_fu_4075_p1));

assign add_ln153_190_fu_20450_p2 = ($signed(add_ln153_189_fu_20444_p2) + $signed(sext_ln153_108_fu_20435_p1));

assign add_ln153_191_fu_20460_p2 = ($signed(sext_ln153_111_fu_20456_p1) + $signed(add_ln153_184_fu_20429_p2));

assign add_ln153_192_fu_10473_p2 = ($signed(sext_ln151_399_fu_10405_p1) + $signed(sext_ln151_401_fu_10437_p1));

assign add_ln153_193_fu_20478_p2 = ($signed(sext_ln153_113_fu_20475_p1) + $signed(select_ln126_31_fu_19448_p3));

assign add_ln153_194_fu_20484_p2 = ($signed(sext_ln151_391_fu_20466_p1) + $signed(sext_ln151_395_fu_20469_p1));

assign add_ln153_195_fu_20490_p2 = ($signed(add_ln153_194_fu_20484_p2) + $signed(sext_ln151_397_fu_20472_p1));

assign add_ln153_196_fu_20500_p2 = ($signed(sext_ln153_114_fu_20496_p1) + $signed(add_ln153_193_fu_20478_p2));

assign add_ln153_197_fu_10479_p2 = ($signed(sext_ln151_383_fu_10161_p1) + $signed(sext_ln151_381_fu_10129_p1));

assign add_ln153_198_fu_10485_p2 = ($signed(add_ln153_197_fu_10479_p2) + $signed(sext_ln151_393_fu_10317_p1));

assign add_ln153_199_fu_10491_p2 = ($signed(sext_ln151_385_fu_10193_p1) + $signed(sext_ln151_389_fu_10257_p1));

assign add_ln153_19_fu_4269_p2 = ($signed(sext_ln151_40_fu_3947_p1) + $signed(sext_ln151_44_fu_4011_p1));

assign add_ln153_1_fu_19556_p2 = ($signed(sext_ln153_2_fu_19553_p1) + $signed(sext_ln153_1_fu_19550_p1));

assign add_ln153_200_fu_10497_p2 = ($signed(sext_ln151_387_fu_10225_p1) + $signed(sext_ln153_112_fu_10469_p1));

assign add_ln153_201_fu_20515_p2 = ($signed(sext_ln153_117_fu_20512_p1) + $signed(sext_ln153_116_fu_20509_p1));

assign add_ln153_202_fu_20521_p2 = ($signed(add_ln153_201_fu_20515_p2) + $signed(sext_ln153_115_fu_20506_p1));

assign add_ln153_203_fu_20531_p2 = ($signed(sext_ln153_118_fu_20527_p1) + $signed(add_ln153_196_fu_20500_p2));

assign add_ln153_204_fu_10875_p2 = ($signed(sext_ln151_422_fu_10807_p1) + $signed(sext_ln151_424_fu_10839_p1));

assign add_ln153_205_fu_20549_p2 = ($signed(sext_ln153_120_fu_20546_p1) + $signed(select_ln126_30_fu_19442_p3));

assign add_ln153_206_fu_20555_p2 = ($signed(sext_ln151_414_fu_20537_p1) + $signed(sext_ln151_418_fu_20540_p1));

assign add_ln153_207_fu_20561_p2 = ($signed(add_ln153_206_fu_20555_p2) + $signed(sext_ln151_420_fu_20543_p1));

assign add_ln153_208_fu_20571_p2 = ($signed(sext_ln153_121_fu_20567_p1) + $signed(add_ln153_205_fu_20549_p2));

assign add_ln153_209_fu_10881_p2 = ($signed(sext_ln151_406_fu_10563_p1) + $signed(sext_ln151_404_fu_10531_p1));

assign add_ln153_20_fu_4275_p2 = ($signed(sext_ln151_42_fu_3979_p1) + $signed(sext_ln153_7_fu_4235_p1));

assign add_ln153_210_fu_10887_p2 = ($signed(add_ln153_209_fu_10881_p2) + $signed(sext_ln151_416_fu_10719_p1));

assign add_ln153_211_fu_10893_p2 = ($signed(sext_ln151_408_fu_10595_p1) + $signed(sext_ln151_412_fu_10659_p1));

assign add_ln153_212_fu_10899_p2 = ($signed(sext_ln151_410_fu_10627_p1) + $signed(sext_ln153_119_fu_10871_p1));

assign add_ln153_213_fu_20586_p2 = ($signed(sext_ln153_124_fu_20583_p1) + $signed(sext_ln153_123_fu_20580_p1));

assign add_ln153_214_fu_20592_p2 = ($signed(add_ln153_213_fu_20586_p2) + $signed(sext_ln153_122_fu_20577_p1));

assign add_ln153_215_fu_20602_p2 = ($signed(sext_ln153_125_fu_20598_p1) + $signed(add_ln153_208_fu_20571_p2));

assign add_ln153_216_fu_11277_p2 = ($signed(sext_ln151_445_fu_11209_p1) + $signed(sext_ln151_447_fu_11241_p1));

assign add_ln153_217_fu_20620_p2 = ($signed(sext_ln153_127_fu_20617_p1) + $signed(select_ln126_29_fu_19436_p3));

assign add_ln153_218_fu_20626_p2 = ($signed(sext_ln151_437_fu_20608_p1) + $signed(sext_ln151_441_fu_20611_p1));

assign add_ln153_219_fu_20632_p2 = ($signed(add_ln153_218_fu_20626_p2) + $signed(sext_ln151_443_fu_20614_p1));

assign add_ln153_21_fu_19620_p2 = ($signed(sext_ln153_12_fu_19617_p1) + $signed(sext_ln153_11_fu_19614_p1));

assign add_ln153_220_fu_20642_p2 = ($signed(sext_ln153_128_fu_20638_p1) + $signed(add_ln153_217_fu_20620_p2));

assign add_ln153_221_fu_11283_p2 = ($signed(sext_ln151_429_fu_10965_p1) + $signed(sext_ln151_427_fu_10933_p1));

assign add_ln153_222_fu_11289_p2 = ($signed(add_ln153_221_fu_11283_p2) + $signed(sext_ln151_439_fu_11121_p1));

assign add_ln153_223_fu_11295_p2 = ($signed(sext_ln151_431_fu_10997_p1) + $signed(sext_ln151_435_fu_11061_p1));

assign add_ln153_224_fu_11301_p2 = ($signed(sext_ln151_433_fu_11029_p1) + $signed(sext_ln153_126_fu_11273_p1));

assign add_ln153_225_fu_20657_p2 = ($signed(sext_ln153_131_fu_20654_p1) + $signed(sext_ln153_130_fu_20651_p1));

assign add_ln153_226_fu_20663_p2 = ($signed(add_ln153_225_fu_20657_p2) + $signed(sext_ln153_129_fu_20648_p1));

assign add_ln153_227_fu_20673_p2 = ($signed(sext_ln153_132_fu_20669_p1) + $signed(add_ln153_220_fu_20642_p2));

assign add_ln153_228_fu_11679_p2 = ($signed(sext_ln151_468_fu_11611_p1) + $signed(sext_ln151_470_fu_11643_p1));

assign add_ln153_229_fu_20691_p2 = ($signed(sext_ln153_134_fu_20688_p1) + $signed(select_ln126_28_fu_19430_p3));

assign add_ln153_22_fu_19626_p2 = ($signed(add_ln153_21_fu_19620_p2) + $signed(sext_ln153_10_fu_19611_p1));

assign add_ln153_230_fu_20697_p2 = ($signed(sext_ln151_460_fu_20679_p1) + $signed(sext_ln151_464_fu_20682_p1));

assign add_ln153_231_fu_20703_p2 = ($signed(add_ln153_230_fu_20697_p2) + $signed(sext_ln151_466_fu_20685_p1));

assign add_ln153_232_fu_20713_p2 = ($signed(sext_ln153_135_fu_20709_p1) + $signed(add_ln153_229_fu_20691_p2));

assign add_ln153_233_fu_11685_p2 = ($signed(sext_ln151_452_fu_11367_p1) + $signed(sext_ln151_450_fu_11335_p1));

assign add_ln153_234_fu_11691_p2 = ($signed(add_ln153_233_fu_11685_p2) + $signed(sext_ln151_462_fu_11523_p1));

assign add_ln153_235_fu_11697_p2 = ($signed(sext_ln151_454_fu_11399_p1) + $signed(sext_ln151_458_fu_11463_p1));

assign add_ln153_236_fu_11703_p2 = ($signed(sext_ln151_456_fu_11431_p1) + $signed(sext_ln153_133_fu_11675_p1));

assign add_ln153_237_fu_20728_p2 = ($signed(sext_ln153_138_fu_20725_p1) + $signed(sext_ln153_137_fu_20722_p1));

assign add_ln153_238_fu_20734_p2 = ($signed(add_ln153_237_fu_20728_p2) + $signed(sext_ln153_136_fu_20719_p1));

assign add_ln153_239_fu_20744_p2 = ($signed(sext_ln153_139_fu_20740_p1) + $signed(add_ln153_232_fu_20713_p2));

assign add_ln153_23_fu_19642_p2 = (add_ln153_16_fu_19636_p2 + select_ln126_46_fu_19538_p3);

assign add_ln153_240_fu_12081_p2 = ($signed(sext_ln151_491_fu_12013_p1) + $signed(sext_ln151_493_fu_12045_p1));

assign add_ln153_241_fu_20762_p2 = ($signed(sext_ln153_141_fu_20759_p1) + $signed(select_ln126_27_fu_19424_p3));

assign add_ln153_242_fu_20768_p2 = ($signed(sext_ln151_483_fu_20750_p1) + $signed(sext_ln151_487_fu_20753_p1));

assign add_ln153_243_fu_20774_p2 = ($signed(add_ln153_242_fu_20768_p2) + $signed(sext_ln151_489_fu_20756_p1));

assign add_ln153_244_fu_20784_p2 = ($signed(sext_ln153_142_fu_20780_p1) + $signed(add_ln153_241_fu_20762_p2));

assign add_ln153_245_fu_12087_p2 = ($signed(sext_ln151_475_fu_11769_p1) + $signed(sext_ln151_473_fu_11737_p1));

assign add_ln153_246_fu_12093_p2 = ($signed(add_ln153_245_fu_12087_p2) + $signed(sext_ln151_485_fu_11925_p1));

assign add_ln153_247_fu_12099_p2 = ($signed(sext_ln151_477_fu_11801_p1) + $signed(sext_ln151_481_fu_11865_p1));

assign add_ln153_248_fu_12105_p2 = ($signed(sext_ln151_479_fu_11833_p1) + $signed(sext_ln153_140_fu_12077_p1));

assign add_ln153_249_fu_20799_p2 = ($signed(sext_ln153_145_fu_20796_p1) + $signed(sext_ln153_144_fu_20793_p1));

assign add_ln153_24_fu_4665_p2 = ($signed(sext_ln151_77_fu_4597_p1) + $signed(sext_ln151_79_fu_4629_p1));

assign add_ln153_250_fu_20805_p2 = ($signed(add_ln153_249_fu_20799_p2) + $signed(sext_ln153_143_fu_20790_p1));

assign add_ln153_251_fu_20815_p2 = ($signed(sext_ln153_146_fu_20811_p1) + $signed(add_ln153_244_fu_20784_p2));

assign add_ln153_252_fu_12483_p2 = ($signed(sext_ln151_514_fu_12415_p1) + $signed(sext_ln151_516_fu_12447_p1));

assign add_ln153_253_fu_20833_p2 = ($signed(sext_ln153_148_fu_20830_p1) + $signed(select_ln126_26_fu_19418_p3));

assign add_ln153_254_fu_20839_p2 = ($signed(sext_ln151_506_fu_20821_p1) + $signed(sext_ln151_510_fu_20824_p1));

assign add_ln153_255_fu_20845_p2 = ($signed(add_ln153_254_fu_20839_p2) + $signed(sext_ln151_512_fu_20827_p1));

assign add_ln153_256_fu_20855_p2 = ($signed(sext_ln153_149_fu_20851_p1) + $signed(add_ln153_253_fu_20833_p2));

assign add_ln153_257_fu_12489_p2 = ($signed(sext_ln151_498_fu_12171_p1) + $signed(sext_ln151_496_fu_12139_p1));

assign add_ln153_258_fu_12495_p2 = ($signed(add_ln153_257_fu_12489_p2) + $signed(sext_ln151_508_fu_12327_p1));

assign add_ln153_259_fu_12501_p2 = ($signed(sext_ln151_500_fu_12203_p1) + $signed(sext_ln151_504_fu_12267_p1));

assign add_ln153_25_fu_19654_p2 = ($signed(sext_ln153_16_fu_19651_p1) + $signed(sext_ln153_15_fu_19648_p1));

assign add_ln153_260_fu_12507_p2 = ($signed(sext_ln151_502_fu_12235_p1) + $signed(sext_ln153_147_fu_12479_p1));

assign add_ln153_261_fu_20870_p2 = ($signed(sext_ln153_152_fu_20867_p1) + $signed(sext_ln153_151_fu_20864_p1));

assign add_ln153_262_fu_20876_p2 = ($signed(add_ln153_261_fu_20870_p2) + $signed(sext_ln153_150_fu_20861_p1));

assign add_ln153_263_fu_20886_p2 = ($signed(sext_ln153_153_fu_20882_p1) + $signed(add_ln153_256_fu_20855_p2));

assign add_ln153_264_fu_12885_p2 = ($signed(sext_ln151_537_fu_12817_p1) + $signed(sext_ln151_539_fu_12849_p1));

assign add_ln153_265_fu_20904_p2 = ($signed(sext_ln153_155_fu_20901_p1) + $signed(select_ln126_25_fu_19412_p3));

assign add_ln153_266_fu_20910_p2 = ($signed(sext_ln151_529_fu_20892_p1) + $signed(sext_ln151_533_fu_20895_p1));

assign add_ln153_267_fu_20916_p2 = ($signed(add_ln153_266_fu_20910_p2) + $signed(sext_ln151_535_fu_20898_p1));

assign add_ln153_268_fu_20926_p2 = ($signed(sext_ln153_156_fu_20922_p1) + $signed(add_ln153_265_fu_20904_p2));

assign add_ln153_269_fu_12891_p2 = ($signed(sext_ln151_521_fu_12573_p1) + $signed(sext_ln151_519_fu_12541_p1));

assign add_ln153_26_fu_4671_p2 = ($signed(sext_ln151_69_fu_4469_p1) + $signed(sext_ln151_73_fu_4533_p1));

assign add_ln153_270_fu_12897_p2 = ($signed(add_ln153_269_fu_12891_p2) + $signed(sext_ln151_531_fu_12729_p1));

assign add_ln153_271_fu_12903_p2 = ($signed(sext_ln151_523_fu_12605_p1) + $signed(sext_ln151_527_fu_12669_p1));

assign add_ln153_272_fu_12909_p2 = ($signed(sext_ln151_525_fu_12637_p1) + $signed(sext_ln153_154_fu_12881_p1));

assign add_ln153_273_fu_20941_p2 = ($signed(sext_ln153_159_fu_20938_p1) + $signed(sext_ln153_158_fu_20935_p1));

assign add_ln153_274_fu_20947_p2 = ($signed(add_ln153_273_fu_20941_p2) + $signed(sext_ln153_157_fu_20932_p1));

assign add_ln153_275_fu_20957_p2 = ($signed(sext_ln153_160_fu_20953_p1) + $signed(add_ln153_268_fu_20926_p2));

assign add_ln153_276_fu_13287_p2 = ($signed(sext_ln151_560_fu_13219_p1) + $signed(sext_ln151_562_fu_13251_p1));

assign add_ln153_277_fu_20975_p2 = ($signed(sext_ln153_162_fu_20972_p1) + $signed(select_ln126_24_fu_19405_p3));

assign add_ln153_278_fu_20981_p2 = ($signed(sext_ln151_552_fu_20963_p1) + $signed(sext_ln151_556_fu_20966_p1));

assign add_ln153_279_fu_20987_p2 = ($signed(add_ln153_278_fu_20981_p2) + $signed(sext_ln151_558_fu_20969_p1));

assign add_ln153_27_fu_4677_p2 = ($signed(add_ln153_26_fu_4671_p2) + $signed(sext_ln151_75_fu_4565_p1));

assign add_ln153_280_fu_20997_p2 = ($signed(sext_ln153_163_fu_20993_p1) + $signed(add_ln153_277_fu_20975_p2));

assign add_ln153_281_fu_13293_p2 = ($signed(sext_ln151_544_fu_12975_p1) + $signed(sext_ln151_542_fu_12943_p1));

assign add_ln153_282_fu_13299_p2 = ($signed(add_ln153_281_fu_13293_p2) + $signed(sext_ln151_554_fu_13131_p1));

assign add_ln153_283_fu_13305_p2 = ($signed(sext_ln151_546_fu_13007_p1) + $signed(sext_ln151_550_fu_13071_p1));

assign add_ln153_284_fu_13311_p2 = ($signed(sext_ln151_548_fu_13039_p1) + $signed(sext_ln153_161_fu_13283_p1));

assign add_ln153_285_fu_21012_p2 = ($signed(sext_ln153_166_fu_21009_p1) + $signed(sext_ln153_165_fu_21006_p1));

assign add_ln153_286_fu_21018_p2 = ($signed(add_ln153_285_fu_21012_p2) + $signed(sext_ln153_164_fu_21003_p1));

assign add_ln153_287_fu_21028_p2 = ($signed(sext_ln153_167_fu_21024_p1) + $signed(add_ln153_280_fu_20997_p2));

assign add_ln153_288_fu_13557_p2 = ($signed(sext_ln151_583_fu_13511_p1) + $signed(sext_ln151_585_fu_13532_p1));

assign add_ln153_289_fu_21046_p2 = ($signed(sext_ln153_169_fu_21043_p1) + $signed(select_ln126_23_fu_19399_p3));

assign add_ln153_28_fu_19685_p2 = ($signed(sext_ln153_20_fu_19681_p1) + $signed(add_ln153_25_fu_19654_p2));

assign add_ln153_290_fu_21052_p2 = ($signed(sext_ln151_575_fu_21034_p1) + $signed(sext_ln151_579_fu_21037_p1));

assign add_ln153_291_fu_21058_p2 = ($signed(add_ln153_290_fu_21052_p2) + $signed(sext_ln151_581_fu_21040_p1));

assign add_ln153_292_fu_21068_p2 = ($signed(sext_ln153_170_fu_21064_p1) + $signed(add_ln153_289_fu_21046_p2));

assign add_ln153_293_fu_13563_p2 = ($signed(sext_ln151_567_fu_13355_p1) + $signed(sext_ln151_565_fu_13334_p1));

assign add_ln153_294_fu_13569_p2 = ($signed(add_ln153_293_fu_13563_p2) + $signed(sext_ln151_577_fu_13456_p1));

assign add_ln153_295_fu_13575_p2 = ($signed(sext_ln151_569_fu_13376_p1) + $signed(sext_ln151_573_fu_13418_p1));

assign add_ln153_296_fu_13581_p2 = ($signed(sext_ln151_571_fu_13397_p1) + $signed(sext_ln153_168_fu_13553_p1));

assign add_ln153_297_fu_21083_p2 = ($signed(sext_ln153_173_fu_21080_p1) + $signed(sext_ln153_172_fu_21077_p1));

assign add_ln153_298_fu_21089_p2 = ($signed(add_ln153_297_fu_21083_p2) + $signed(sext_ln153_171_fu_21074_p1));

assign add_ln153_299_fu_21099_p2 = ($signed(sext_ln153_174_fu_21095_p1) + $signed(add_ln153_292_fu_21068_p2));

assign add_ln153_29_fu_4683_p2 = ($signed(sext_ln151_61_fu_4341_p1) + $signed(sext_ln151_59_fu_4309_p1));

assign add_ln153_2_fu_3819_p2 = ($signed(sext_ln151_17_fu_3599_p1) + $signed(sext_ln151_23_fu_3669_p1));

assign add_ln153_300_fu_13791_p2 = ($signed(sext_ln151_596_fu_13751_p1) + $signed(sext_ln151_597_fu_13769_p1));

assign add_ln153_301_fu_21117_p2 = ($signed(sext_ln153_176_fu_21114_p1) + $signed(select_ln126_22_fu_19393_p3));

assign add_ln153_302_fu_21123_p2 = ($signed(sext_ln151_592_fu_21105_p1) + $signed(sext_ln151_594_fu_21108_p1));

assign add_ln153_303_fu_21129_p2 = ($signed(add_ln153_302_fu_21123_p2) + $signed(sext_ln151_595_fu_21111_p1));

assign add_ln153_304_fu_21139_p2 = ($signed(sext_ln153_177_fu_21135_p1) + $signed(add_ln153_301_fu_21117_p2));

assign add_ln153_305_fu_13797_p2 = ($signed(sext_ln151_588_fu_13619_p1) + $signed(sext_ln151_587_fu_13601_p1));

assign add_ln153_306_fu_13803_p2 = ($signed(add_ln153_305_fu_13797_p2) + $signed(sext_ln151_593_fu_13705_p1));

assign add_ln153_307_fu_13809_p2 = ($signed(sext_ln151_589_fu_13637_p1) + $signed(sext_ln151_591_fu_13673_p1));

assign add_ln153_308_fu_13815_p2 = ($signed(sext_ln151_590_fu_13655_p1) + $signed(sext_ln153_175_fu_13787_p1));

assign add_ln153_309_fu_21154_p2 = ($signed(sext_ln153_180_fu_21151_p1) + $signed(sext_ln153_179_fu_21148_p1));

assign add_ln153_30_fu_4689_p2 = ($signed(add_ln153_29_fu_4683_p2) + $signed(sext_ln151_71_fu_4501_p1));

assign add_ln153_310_fu_21160_p2 = ($signed(add_ln153_309_fu_21154_p2) + $signed(sext_ln153_178_fu_21145_p1));

assign add_ln153_311_fu_21170_p2 = ($signed(sext_ln153_181_fu_21166_p1) + $signed(add_ln153_304_fu_21139_p2));

assign add_ln153_312_fu_14025_p2 = ($signed(sext_ln151_607_fu_13985_p1) + $signed(sext_ln151_608_fu_14003_p1));

assign add_ln153_313_fu_21188_p2 = ($signed(sext_ln153_183_fu_21185_p1) + $signed(select_ln126_21_fu_19387_p3));

assign add_ln153_314_fu_21194_p2 = ($signed(sext_ln151_603_fu_21176_p1) + $signed(sext_ln151_605_fu_21179_p1));

assign add_ln153_315_fu_21200_p2 = ($signed(add_ln153_314_fu_21194_p2) + $signed(sext_ln151_606_fu_21182_p1));

assign add_ln153_316_fu_21210_p2 = ($signed(sext_ln153_184_fu_21206_p1) + $signed(add_ln153_313_fu_21188_p2));

assign add_ln153_317_fu_14031_p2 = ($signed(sext_ln151_599_fu_13853_p1) + $signed(sext_ln151_598_fu_13835_p1));

assign add_ln153_318_fu_14037_p2 = ($signed(add_ln153_317_fu_14031_p2) + $signed(sext_ln151_604_fu_13939_p1));

assign add_ln153_319_fu_14043_p2 = ($signed(sext_ln151_600_fu_13871_p1) + $signed(sext_ln151_602_fu_13907_p1));

assign add_ln153_31_fu_4695_p2 = ($signed(sext_ln151_63_fu_4373_p1) + $signed(sext_ln151_67_fu_4437_p1));

assign add_ln153_320_fu_14049_p2 = ($signed(sext_ln151_601_fu_13889_p1) + $signed(sext_ln153_182_fu_14021_p1));

assign add_ln153_321_fu_21225_p2 = ($signed(sext_ln153_187_fu_21222_p1) + $signed(sext_ln153_186_fu_21219_p1));

assign add_ln153_322_fu_21231_p2 = ($signed(add_ln153_321_fu_21225_p2) + $signed(sext_ln153_185_fu_21216_p1));

assign add_ln153_323_fu_21241_p2 = ($signed(sext_ln153_188_fu_21237_p1) + $signed(add_ln153_316_fu_21210_p2));

assign add_ln153_324_fu_14259_p2 = ($signed(sext_ln151_618_fu_14219_p1) + $signed(sext_ln151_619_fu_14237_p1));

assign add_ln153_325_fu_21259_p2 = ($signed(sext_ln153_190_fu_21256_p1) + $signed(select_ln126_20_fu_19381_p3));

assign add_ln153_326_fu_21265_p2 = ($signed(sext_ln151_614_fu_21247_p1) + $signed(sext_ln151_616_fu_21250_p1));

assign add_ln153_327_fu_21271_p2 = ($signed(add_ln153_326_fu_21265_p2) + $signed(sext_ln151_617_fu_21253_p1));

assign add_ln153_328_fu_21281_p2 = ($signed(sext_ln153_191_fu_21277_p1) + $signed(add_ln153_325_fu_21259_p2));

assign add_ln153_329_fu_14265_p2 = ($signed(sext_ln151_610_fu_14087_p1) + $signed(sext_ln151_609_fu_14069_p1));

assign add_ln153_32_fu_4701_p2 = ($signed(sext_ln151_65_fu_4405_p1) + $signed(sext_ln153_14_fu_4661_p1));

assign add_ln153_330_fu_14271_p2 = ($signed(add_ln153_329_fu_14265_p2) + $signed(sext_ln151_615_fu_14173_p1));

assign add_ln153_331_fu_14277_p2 = ($signed(sext_ln151_611_fu_14105_p1) + $signed(sext_ln151_613_fu_14141_p1));

assign add_ln153_332_fu_14283_p2 = ($signed(sext_ln151_612_fu_14123_p1) + $signed(sext_ln153_189_fu_14255_p1));

assign add_ln153_333_fu_21296_p2 = ($signed(sext_ln153_194_fu_21293_p1) + $signed(sext_ln153_193_fu_21290_p1));

assign add_ln153_334_fu_21302_p2 = ($signed(add_ln153_333_fu_21296_p2) + $signed(sext_ln153_192_fu_21287_p1));

assign add_ln153_335_fu_21312_p2 = ($signed(sext_ln153_195_fu_21308_p1) + $signed(add_ln153_328_fu_21281_p2));

assign add_ln153_336_fu_14493_p2 = ($signed(sext_ln151_629_fu_14453_p1) + $signed(sext_ln151_630_fu_14471_p1));

assign add_ln153_337_fu_21330_p2 = ($signed(sext_ln153_197_fu_21327_p1) + $signed(select_ln126_19_fu_19375_p3));

assign add_ln153_338_fu_21336_p2 = ($signed(sext_ln151_625_fu_21318_p1) + $signed(sext_ln151_627_fu_21321_p1));

assign add_ln153_339_fu_21342_p2 = ($signed(add_ln153_338_fu_21336_p2) + $signed(sext_ln151_628_fu_21324_p1));

assign add_ln153_33_fu_19669_p2 = ($signed(sext_ln153_19_fu_19666_p1) + $signed(sext_ln153_18_fu_19663_p1));

assign add_ln153_340_fu_21352_p2 = ($signed(sext_ln153_198_fu_21348_p1) + $signed(add_ln153_337_fu_21330_p2));

assign add_ln153_341_fu_14499_p2 = ($signed(sext_ln151_621_fu_14321_p1) + $signed(sext_ln151_620_fu_14303_p1));

assign add_ln153_342_fu_14505_p2 = ($signed(add_ln153_341_fu_14499_p2) + $signed(sext_ln151_626_fu_14407_p1));

assign add_ln153_343_fu_14511_p2 = ($signed(sext_ln151_622_fu_14339_p1) + $signed(sext_ln151_624_fu_14375_p1));

assign add_ln153_344_fu_14517_p2 = ($signed(sext_ln151_623_fu_14357_p1) + $signed(sext_ln153_196_fu_14489_p1));

assign add_ln153_345_fu_21367_p2 = ($signed(sext_ln153_201_fu_21364_p1) + $signed(sext_ln153_200_fu_21361_p1));

assign add_ln153_346_fu_21373_p2 = ($signed(add_ln153_345_fu_21367_p2) + $signed(sext_ln153_199_fu_21358_p1));

assign add_ln153_347_fu_21383_p2 = ($signed(sext_ln153_202_fu_21379_p1) + $signed(add_ln153_340_fu_21352_p2));

assign add_ln153_348_fu_14727_p2 = ($signed(sext_ln151_640_fu_14687_p1) + $signed(sext_ln151_641_fu_14705_p1));

assign add_ln153_349_fu_21401_p2 = ($signed(sext_ln153_204_fu_21398_p1) + $signed(select_ln126_18_fu_19369_p3));

assign add_ln153_34_fu_19675_p2 = ($signed(add_ln153_33_fu_19669_p2) + $signed(sext_ln153_17_fu_19660_p1));

assign add_ln153_350_fu_21407_p2 = ($signed(sext_ln151_636_fu_21389_p1) + $signed(sext_ln151_638_fu_21392_p1));

assign add_ln153_351_fu_21413_p2 = ($signed(add_ln153_350_fu_21407_p2) + $signed(sext_ln151_639_fu_21395_p1));

assign add_ln153_352_fu_21423_p2 = ($signed(sext_ln153_205_fu_21419_p1) + $signed(add_ln153_349_fu_21401_p2));

assign add_ln153_353_fu_14733_p2 = ($signed(sext_ln151_632_fu_14555_p1) + $signed(sext_ln151_631_fu_14537_p1));

assign add_ln153_354_fu_14739_p2 = ($signed(add_ln153_353_fu_14733_p2) + $signed(sext_ln151_637_fu_14641_p1));

assign add_ln153_355_fu_14745_p2 = ($signed(sext_ln151_633_fu_14573_p1) + $signed(sext_ln151_635_fu_14609_p1));

assign add_ln153_356_fu_14751_p2 = ($signed(sext_ln151_634_fu_14591_p1) + $signed(sext_ln153_203_fu_14723_p1));

assign add_ln153_357_fu_21438_p2 = ($signed(sext_ln153_208_fu_21435_p1) + $signed(sext_ln153_207_fu_21432_p1));

assign add_ln153_358_fu_21444_p2 = ($signed(add_ln153_357_fu_21438_p2) + $signed(sext_ln153_206_fu_21429_p1));

assign add_ln153_359_fu_21454_p2 = ($signed(sext_ln153_209_fu_21450_p1) + $signed(add_ln153_352_fu_21423_p2));

assign add_ln153_35_fu_19691_p2 = (add_ln153_28_fu_19685_p2 + select_ln126_45_fu_19532_p3);

assign add_ln153_360_fu_14961_p2 = ($signed(sext_ln151_651_fu_14921_p1) + $signed(sext_ln151_652_fu_14939_p1));

assign add_ln153_361_fu_21472_p2 = ($signed(sext_ln153_211_fu_21469_p1) + $signed(select_ln126_17_fu_19363_p3));

assign add_ln153_362_fu_21478_p2 = ($signed(sext_ln151_647_fu_21460_p1) + $signed(sext_ln151_649_fu_21463_p1));

assign add_ln153_363_fu_21484_p2 = ($signed(add_ln153_362_fu_21478_p2) + $signed(sext_ln151_650_fu_21466_p1));

assign add_ln153_364_fu_21494_p2 = ($signed(sext_ln153_212_fu_21490_p1) + $signed(add_ln153_361_fu_21472_p2));

assign add_ln153_365_fu_14967_p2 = ($signed(sext_ln151_643_fu_14789_p1) + $signed(sext_ln151_642_fu_14771_p1));

assign add_ln153_366_fu_14973_p2 = ($signed(add_ln153_365_fu_14967_p2) + $signed(sext_ln151_648_fu_14875_p1));

assign add_ln153_367_fu_14979_p2 = ($signed(sext_ln151_644_fu_14807_p1) + $signed(sext_ln151_646_fu_14843_p1));

assign add_ln153_368_fu_14985_p2 = ($signed(sext_ln151_645_fu_14825_p1) + $signed(sext_ln153_210_fu_14957_p1));

assign add_ln153_369_fu_21509_p2 = ($signed(sext_ln153_215_fu_21506_p1) + $signed(sext_ln153_214_fu_21503_p1));

assign add_ln153_36_fu_5091_p2 = ($signed(sext_ln151_100_fu_5023_p1) + $signed(sext_ln151_102_fu_5055_p1));

assign add_ln153_370_fu_21515_p2 = ($signed(add_ln153_369_fu_21509_p2) + $signed(sext_ln153_213_fu_21500_p1));

assign add_ln153_371_fu_21525_p2 = ($signed(sext_ln153_216_fu_21521_p1) + $signed(add_ln153_364_fu_21494_p2));

assign add_ln153_372_fu_15195_p2 = ($signed(sext_ln151_662_fu_15155_p1) + $signed(sext_ln151_663_fu_15173_p1));

assign add_ln153_373_fu_21543_p2 = ($signed(sext_ln153_218_fu_21540_p1) + $signed(select_ln126_16_fu_19357_p3));

assign add_ln153_374_fu_21549_p2 = ($signed(sext_ln151_658_fu_21531_p1) + $signed(sext_ln151_660_fu_21534_p1));

assign add_ln153_375_fu_21555_p2 = ($signed(add_ln153_374_fu_21549_p2) + $signed(sext_ln151_661_fu_21537_p1));

assign add_ln153_376_fu_21565_p2 = ($signed(sext_ln153_219_fu_21561_p1) + $signed(add_ln153_373_fu_21543_p2));

assign add_ln153_377_fu_15201_p2 = ($signed(sext_ln151_654_fu_15023_p1) + $signed(sext_ln151_653_fu_15005_p1));

assign add_ln153_378_fu_15207_p2 = ($signed(add_ln153_377_fu_15201_p2) + $signed(sext_ln151_659_fu_15109_p1));

assign add_ln153_379_fu_15213_p2 = ($signed(sext_ln151_655_fu_15041_p1) + $signed(sext_ln151_657_fu_15077_p1));

assign add_ln153_37_fu_19703_p2 = ($signed(sext_ln153_23_fu_19700_p1) + $signed(sext_ln153_22_fu_19697_p1));

assign add_ln153_380_fu_15219_p2 = ($signed(sext_ln151_656_fu_15059_p1) + $signed(sext_ln153_217_fu_15191_p1));

assign add_ln153_381_fu_21580_p2 = ($signed(sext_ln153_222_fu_21577_p1) + $signed(sext_ln153_221_fu_21574_p1));

assign add_ln153_382_fu_21586_p2 = ($signed(add_ln153_381_fu_21580_p2) + $signed(sext_ln153_220_fu_21571_p1));

assign add_ln153_383_fu_21596_p2 = ($signed(sext_ln153_223_fu_21592_p1) + $signed(add_ln153_376_fu_21565_p2));

assign add_ln153_384_fu_15429_p2 = ($signed(sext_ln151_673_fu_15389_p1) + $signed(sext_ln151_674_fu_15407_p1));

assign add_ln153_385_fu_21614_p2 = ($signed(sext_ln153_225_fu_21611_p1) + $signed(select_ln126_15_fu_19351_p3));

assign add_ln153_386_fu_21620_p2 = ($signed(sext_ln151_669_fu_21602_p1) + $signed(sext_ln151_671_fu_21605_p1));

assign add_ln153_387_fu_21626_p2 = ($signed(add_ln153_386_fu_21620_p2) + $signed(sext_ln151_672_fu_21608_p1));

assign add_ln153_388_fu_21636_p2 = ($signed(sext_ln153_226_fu_21632_p1) + $signed(add_ln153_385_fu_21614_p2));

assign add_ln153_389_fu_15435_p2 = ($signed(sext_ln151_665_fu_15257_p1) + $signed(sext_ln151_664_fu_15239_p1));

assign add_ln153_38_fu_5097_p2 = ($signed(sext_ln151_92_fu_4895_p1) + $signed(sext_ln151_96_fu_4959_p1));

assign add_ln153_390_fu_15441_p2 = ($signed(add_ln153_389_fu_15435_p2) + $signed(sext_ln151_670_fu_15343_p1));

assign add_ln153_391_fu_15447_p2 = ($signed(sext_ln151_666_fu_15275_p1) + $signed(sext_ln151_668_fu_15311_p1));

assign add_ln153_392_fu_15453_p2 = ($signed(sext_ln151_667_fu_15293_p1) + $signed(sext_ln153_224_fu_15425_p1));

assign add_ln153_393_fu_21651_p2 = ($signed(sext_ln153_229_fu_21648_p1) + $signed(sext_ln153_228_fu_21645_p1));

assign add_ln153_394_fu_21657_p2 = ($signed(add_ln153_393_fu_21651_p2) + $signed(sext_ln153_227_fu_21642_p1));

assign add_ln153_395_fu_21667_p2 = ($signed(sext_ln153_230_fu_21663_p1) + $signed(add_ln153_388_fu_21636_p2));

assign add_ln153_396_fu_15663_p2 = ($signed(sext_ln151_684_fu_15623_p1) + $signed(sext_ln151_685_fu_15641_p1));

assign add_ln153_397_fu_21685_p2 = ($signed(sext_ln153_232_fu_21682_p1) + $signed(select_ln126_14_fu_19345_p3));

assign add_ln153_398_fu_21691_p2 = ($signed(sext_ln151_680_fu_21673_p1) + $signed(sext_ln151_682_fu_21676_p1));

assign add_ln153_399_fu_21697_p2 = ($signed(add_ln153_398_fu_21691_p2) + $signed(sext_ln151_683_fu_21679_p1));

assign add_ln153_39_fu_5103_p2 = ($signed(add_ln153_38_fu_5097_p2) + $signed(sext_ln151_98_fu_4991_p1));

assign add_ln153_3_fu_3825_p2 = ($signed(add_ln153_2_fu_3819_p2) + $signed(sext_ln151_26_fu_3704_p1));

assign add_ln153_400_fu_21707_p2 = ($signed(sext_ln153_233_fu_21703_p1) + $signed(add_ln153_397_fu_21685_p2));

assign add_ln153_401_fu_15669_p2 = ($signed(sext_ln151_676_fu_15491_p1) + $signed(sext_ln151_675_fu_15473_p1));

assign add_ln153_402_fu_15675_p2 = ($signed(add_ln153_401_fu_15669_p2) + $signed(sext_ln151_681_fu_15577_p1));

assign add_ln153_403_fu_15681_p2 = ($signed(sext_ln151_677_fu_15509_p1) + $signed(sext_ln151_679_fu_15545_p1));

assign add_ln153_404_fu_15687_p2 = ($signed(sext_ln151_678_fu_15527_p1) + $signed(sext_ln153_231_fu_15659_p1));

assign add_ln153_405_fu_21722_p2 = ($signed(sext_ln153_236_fu_21719_p1) + $signed(sext_ln153_235_fu_21716_p1));

assign add_ln153_406_fu_21728_p2 = ($signed(add_ln153_405_fu_21722_p2) + $signed(sext_ln153_234_fu_21713_p1));

assign add_ln153_407_fu_21738_p2 = ($signed(sext_ln153_237_fu_21734_p1) + $signed(add_ln153_400_fu_21707_p2));

assign add_ln153_408_fu_15897_p2 = ($signed(sext_ln151_695_fu_15857_p1) + $signed(sext_ln151_696_fu_15875_p1));

assign add_ln153_409_fu_21756_p2 = ($signed(sext_ln153_239_fu_21753_p1) + $signed(select_ln126_13_fu_19339_p3));

assign add_ln153_40_fu_19734_p2 = ($signed(sext_ln153_27_fu_19730_p1) + $signed(add_ln153_37_fu_19703_p2));

assign add_ln153_410_fu_21762_p2 = ($signed(sext_ln151_691_fu_21744_p1) + $signed(sext_ln151_693_fu_21747_p1));

assign add_ln153_411_fu_21768_p2 = ($signed(add_ln153_410_fu_21762_p2) + $signed(sext_ln151_694_fu_21750_p1));

assign add_ln153_412_fu_21778_p2 = ($signed(sext_ln153_240_fu_21774_p1) + $signed(add_ln153_409_fu_21756_p2));

assign add_ln153_413_fu_15903_p2 = ($signed(sext_ln151_687_fu_15725_p1) + $signed(sext_ln151_686_fu_15707_p1));

assign add_ln153_414_fu_15909_p2 = ($signed(add_ln153_413_fu_15903_p2) + $signed(sext_ln151_692_fu_15811_p1));

assign add_ln153_415_fu_15915_p2 = ($signed(sext_ln151_688_fu_15743_p1) + $signed(sext_ln151_690_fu_15779_p1));

assign add_ln153_416_fu_15921_p2 = ($signed(sext_ln151_689_fu_15761_p1) + $signed(sext_ln153_238_fu_15893_p1));

assign add_ln153_417_fu_21793_p2 = ($signed(sext_ln153_243_fu_21790_p1) + $signed(sext_ln153_242_fu_21787_p1));

assign add_ln153_418_fu_21799_p2 = ($signed(add_ln153_417_fu_21793_p2) + $signed(sext_ln153_241_fu_21784_p1));

assign add_ln153_419_fu_21809_p2 = ($signed(sext_ln153_244_fu_21805_p1) + $signed(add_ln153_412_fu_21778_p2));

assign add_ln153_41_fu_5109_p2 = ($signed(sext_ln151_84_fu_4767_p1) + $signed(sext_ln151_82_fu_4735_p1));

assign add_ln153_420_fu_16131_p2 = ($signed(sext_ln151_706_fu_16091_p1) + $signed(sext_ln151_707_fu_16109_p1));

assign add_ln153_421_fu_21827_p2 = ($signed(sext_ln153_246_fu_21824_p1) + $signed(select_ln126_12_fu_19333_p3));

assign add_ln153_422_fu_21833_p2 = ($signed(sext_ln151_702_fu_21815_p1) + $signed(sext_ln151_704_fu_21818_p1));

assign add_ln153_423_fu_21839_p2 = ($signed(add_ln153_422_fu_21833_p2) + $signed(sext_ln151_705_fu_21821_p1));

assign add_ln153_424_fu_21849_p2 = ($signed(sext_ln153_247_fu_21845_p1) + $signed(add_ln153_421_fu_21827_p2));

assign add_ln153_425_fu_16137_p2 = ($signed(sext_ln151_698_fu_15959_p1) + $signed(sext_ln151_697_fu_15941_p1));

assign add_ln153_426_fu_16143_p2 = ($signed(add_ln153_425_fu_16137_p2) + $signed(sext_ln151_703_fu_16045_p1));

assign add_ln153_427_fu_16149_p2 = ($signed(sext_ln151_699_fu_15977_p1) + $signed(sext_ln151_701_fu_16013_p1));

assign add_ln153_428_fu_16155_p2 = ($signed(sext_ln151_700_fu_15995_p1) + $signed(sext_ln153_245_fu_16127_p1));

assign add_ln153_429_fu_21864_p2 = ($signed(sext_ln153_250_fu_21861_p1) + $signed(sext_ln153_249_fu_21858_p1));

assign add_ln153_42_fu_5115_p2 = ($signed(add_ln153_41_fu_5109_p2) + $signed(sext_ln151_94_fu_4927_p1));

assign add_ln153_430_fu_21870_p2 = ($signed(add_ln153_429_fu_21864_p2) + $signed(sext_ln153_248_fu_21855_p1));

assign add_ln153_431_fu_21880_p2 = ($signed(sext_ln153_251_fu_21876_p1) + $signed(add_ln153_424_fu_21849_p2));

assign add_ln153_432_fu_16365_p2 = ($signed(sext_ln151_717_fu_16325_p1) + $signed(sext_ln151_718_fu_16343_p1));

assign add_ln153_433_fu_21898_p2 = ($signed(sext_ln153_253_fu_21895_p1) + $signed(select_ln126_11_fu_19327_p3));

assign add_ln153_434_fu_21904_p2 = ($signed(sext_ln151_713_fu_21886_p1) + $signed(sext_ln151_715_fu_21889_p1));

assign add_ln153_435_fu_21910_p2 = ($signed(add_ln153_434_fu_21904_p2) + $signed(sext_ln151_716_fu_21892_p1));

assign add_ln153_436_fu_21920_p2 = ($signed(sext_ln153_254_fu_21916_p1) + $signed(add_ln153_433_fu_21898_p2));

assign add_ln153_437_fu_16371_p2 = ($signed(sext_ln151_709_fu_16193_p1) + $signed(sext_ln151_708_fu_16175_p1));

assign add_ln153_438_fu_16377_p2 = ($signed(add_ln153_437_fu_16371_p2) + $signed(sext_ln151_714_fu_16279_p1));

assign add_ln153_439_fu_16383_p2 = ($signed(sext_ln151_710_fu_16211_p1) + $signed(sext_ln151_712_fu_16247_p1));

assign add_ln153_43_fu_5121_p2 = ($signed(sext_ln151_86_fu_4799_p1) + $signed(sext_ln151_90_fu_4863_p1));

assign add_ln153_440_fu_16389_p2 = ($signed(sext_ln151_711_fu_16229_p1) + $signed(sext_ln153_252_fu_16361_p1));

assign add_ln153_441_fu_21935_p2 = ($signed(sext_ln153_257_fu_21932_p1) + $signed(sext_ln153_256_fu_21929_p1));

assign add_ln153_442_fu_21941_p2 = ($signed(add_ln153_441_fu_21935_p2) + $signed(sext_ln153_255_fu_21926_p1));

assign add_ln153_443_fu_21951_p2 = ($signed(sext_ln153_258_fu_21947_p1) + $signed(add_ln153_436_fu_21920_p2));

assign add_ln153_444_fu_16599_p2 = ($signed(sext_ln151_728_fu_16559_p1) + $signed(sext_ln151_729_fu_16577_p1));

assign add_ln153_445_fu_21969_p2 = ($signed(sext_ln153_260_fu_21966_p1) + $signed(select_ln126_10_fu_19321_p3));

assign add_ln153_446_fu_21975_p2 = ($signed(sext_ln151_724_fu_21957_p1) + $signed(sext_ln151_726_fu_21960_p1));

assign add_ln153_447_fu_21981_p2 = ($signed(add_ln153_446_fu_21975_p2) + $signed(sext_ln151_727_fu_21963_p1));

assign add_ln153_448_fu_21991_p2 = ($signed(sext_ln153_261_fu_21987_p1) + $signed(add_ln153_445_fu_21969_p2));

assign add_ln153_449_fu_16605_p2 = ($signed(sext_ln151_720_fu_16427_p1) + $signed(sext_ln151_719_fu_16409_p1));

assign add_ln153_44_fu_5127_p2 = ($signed(sext_ln151_88_fu_4831_p1) + $signed(sext_ln153_21_fu_5087_p1));

assign add_ln153_450_fu_16611_p2 = ($signed(add_ln153_449_fu_16605_p2) + $signed(sext_ln151_725_fu_16513_p1));

assign add_ln153_451_fu_16617_p2 = ($signed(sext_ln151_721_fu_16445_p1) + $signed(sext_ln151_723_fu_16481_p1));

assign add_ln153_452_fu_16623_p2 = ($signed(sext_ln151_722_fu_16463_p1) + $signed(sext_ln153_259_fu_16595_p1));

assign add_ln153_453_fu_22006_p2 = ($signed(sext_ln153_264_fu_22003_p1) + $signed(sext_ln153_263_fu_22000_p1));

assign add_ln153_454_fu_22012_p2 = ($signed(add_ln153_453_fu_22006_p2) + $signed(sext_ln153_262_fu_21997_p1));

assign add_ln153_455_fu_22022_p2 = ($signed(sext_ln153_265_fu_22018_p1) + $signed(add_ln153_448_fu_21991_p2));

assign add_ln153_456_fu_16833_p2 = ($signed(sext_ln151_739_fu_16793_p1) + $signed(sext_ln151_740_fu_16811_p1));

assign add_ln153_457_fu_22040_p2 = ($signed(sext_ln153_267_fu_22037_p1) + $signed(select_ln126_9_fu_19315_p3));

assign add_ln153_458_fu_22046_p2 = ($signed(sext_ln151_735_fu_22028_p1) + $signed(sext_ln151_737_fu_22031_p1));

assign add_ln153_459_fu_22052_p2 = ($signed(add_ln153_458_fu_22046_p2) + $signed(sext_ln151_738_fu_22034_p1));

assign add_ln153_45_fu_19718_p2 = ($signed(sext_ln153_26_fu_19715_p1) + $signed(sext_ln153_25_fu_19712_p1));

assign add_ln153_460_fu_22062_p2 = ($signed(sext_ln153_268_fu_22058_p1) + $signed(add_ln153_457_fu_22040_p2));

assign add_ln153_461_fu_16839_p2 = ($signed(sext_ln151_731_fu_16661_p1) + $signed(sext_ln151_730_fu_16643_p1));

assign add_ln153_462_fu_16845_p2 = ($signed(add_ln153_461_fu_16839_p2) + $signed(sext_ln151_736_fu_16747_p1));

assign add_ln153_463_fu_16851_p2 = ($signed(sext_ln151_732_fu_16679_p1) + $signed(sext_ln151_734_fu_16715_p1));

assign add_ln153_464_fu_16857_p2 = ($signed(sext_ln151_733_fu_16697_p1) + $signed(sext_ln153_266_fu_16829_p1));

assign add_ln153_465_fu_22077_p2 = ($signed(sext_ln153_271_fu_22074_p1) + $signed(sext_ln153_270_fu_22071_p1));

assign add_ln153_466_fu_22083_p2 = ($signed(add_ln153_465_fu_22077_p2) + $signed(sext_ln153_269_fu_22068_p1));

assign add_ln153_467_fu_22093_p2 = ($signed(sext_ln153_272_fu_22089_p1) + $signed(add_ln153_460_fu_22062_p2));

assign add_ln153_468_fu_17067_p2 = ($signed(sext_ln151_750_fu_17027_p1) + $signed(sext_ln151_751_fu_17045_p1));

assign add_ln153_469_fu_22111_p2 = ($signed(sext_ln153_274_fu_22108_p1) + $signed(select_ln126_8_fu_19309_p3));

assign add_ln153_46_fu_19724_p2 = ($signed(add_ln153_45_fu_19718_p2) + $signed(sext_ln153_24_fu_19709_p1));

assign add_ln153_470_fu_22117_p2 = ($signed(sext_ln151_746_fu_22099_p1) + $signed(sext_ln151_748_fu_22102_p1));

assign add_ln153_471_fu_22123_p2 = ($signed(add_ln153_470_fu_22117_p2) + $signed(sext_ln151_749_fu_22105_p1));

assign add_ln153_472_fu_22133_p2 = ($signed(sext_ln153_275_fu_22129_p1) + $signed(add_ln153_469_fu_22111_p2));

assign add_ln153_473_fu_17073_p2 = ($signed(sext_ln151_742_fu_16895_p1) + $signed(sext_ln151_741_fu_16877_p1));

assign add_ln153_474_fu_17079_p2 = ($signed(add_ln153_473_fu_17073_p2) + $signed(sext_ln151_747_fu_16981_p1));

assign add_ln153_475_fu_17085_p2 = ($signed(sext_ln151_743_fu_16913_p1) + $signed(sext_ln151_745_fu_16949_p1));

assign add_ln153_476_fu_17091_p2 = ($signed(sext_ln151_744_fu_16931_p1) + $signed(sext_ln153_273_fu_17063_p1));

assign add_ln153_477_fu_22148_p2 = ($signed(sext_ln153_278_fu_22145_p1) + $signed(sext_ln153_277_fu_22142_p1));

assign add_ln153_478_fu_22154_p2 = ($signed(add_ln153_477_fu_22148_p2) + $signed(sext_ln153_276_fu_22139_p1));

assign add_ln153_479_fu_22164_p2 = ($signed(sext_ln153_279_fu_22160_p1) + $signed(add_ln153_472_fu_22133_p2));

assign add_ln153_47_fu_19740_p2 = (add_ln153_40_fu_19734_p2 + select_ln126_44_fu_19526_p3);

assign add_ln153_480_fu_17301_p2 = ($signed(sext_ln151_761_fu_17261_p1) + $signed(sext_ln151_762_fu_17279_p1));

assign add_ln153_481_fu_22182_p2 = ($signed(sext_ln153_281_fu_22179_p1) + $signed(select_ln126_7_fu_19303_p3));

assign add_ln153_482_fu_22188_p2 = ($signed(sext_ln151_757_fu_22170_p1) + $signed(sext_ln151_759_fu_22173_p1));

assign add_ln153_483_fu_22194_p2 = ($signed(add_ln153_482_fu_22188_p2) + $signed(sext_ln151_760_fu_22176_p1));

assign add_ln153_484_fu_22204_p2 = ($signed(sext_ln153_282_fu_22200_p1) + $signed(add_ln153_481_fu_22182_p2));

assign add_ln153_485_fu_17307_p2 = ($signed(sext_ln151_753_fu_17129_p1) + $signed(sext_ln151_752_fu_17111_p1));

assign add_ln153_486_fu_17313_p2 = ($signed(add_ln153_485_fu_17307_p2) + $signed(sext_ln151_758_fu_17215_p1));

assign add_ln153_487_fu_17319_p2 = ($signed(sext_ln151_754_fu_17147_p1) + $signed(sext_ln151_756_fu_17183_p1));

assign add_ln153_488_fu_17325_p2 = ($signed(sext_ln151_755_fu_17165_p1) + $signed(sext_ln153_280_fu_17297_p1));

assign add_ln153_489_fu_22219_p2 = ($signed(sext_ln153_285_fu_22216_p1) + $signed(sext_ln153_284_fu_22213_p1));

assign add_ln153_48_fu_5517_p2 = ($signed(sext_ln151_123_fu_5449_p1) + $signed(sext_ln151_125_fu_5481_p1));

assign add_ln153_490_fu_22225_p2 = ($signed(add_ln153_489_fu_22219_p2) + $signed(sext_ln153_283_fu_22210_p1));

assign add_ln153_491_fu_22235_p2 = ($signed(sext_ln153_286_fu_22231_p1) + $signed(add_ln153_484_fu_22204_p2));

assign add_ln153_492_fu_17535_p2 = ($signed(sext_ln151_772_fu_17495_p1) + $signed(sext_ln151_773_fu_17513_p1));

assign add_ln153_493_fu_22253_p2 = ($signed(sext_ln153_288_fu_22250_p1) + $signed(select_ln126_6_fu_19297_p3));

assign add_ln153_494_fu_22259_p2 = ($signed(sext_ln151_768_fu_22241_p1) + $signed(sext_ln151_770_fu_22244_p1));

assign add_ln153_495_fu_22265_p2 = ($signed(add_ln153_494_fu_22259_p2) + $signed(sext_ln151_771_fu_22247_p1));

assign add_ln153_496_fu_22275_p2 = ($signed(sext_ln153_289_fu_22271_p1) + $signed(add_ln153_493_fu_22253_p2));

assign add_ln153_497_fu_17541_p2 = ($signed(sext_ln151_764_fu_17363_p1) + $signed(sext_ln151_763_fu_17345_p1));

assign add_ln153_498_fu_17547_p2 = ($signed(add_ln153_497_fu_17541_p2) + $signed(sext_ln151_769_fu_17449_p1));

assign add_ln153_499_fu_17553_p2 = ($signed(sext_ln151_765_fu_17381_p1) + $signed(sext_ln151_767_fu_17417_p1));

assign add_ln153_49_fu_19752_p2 = ($signed(sext_ln153_30_fu_19749_p1) + $signed(sext_ln153_29_fu_19746_p1));

assign add_ln153_4_fu_19587_p2 = ($signed(sext_ln153_6_fu_19583_p1) + $signed(add_ln153_1_fu_19556_p2));

assign add_ln153_500_fu_17559_p2 = ($signed(sext_ln151_766_fu_17399_p1) + $signed(sext_ln153_287_fu_17531_p1));

assign add_ln153_501_fu_22290_p2 = ($signed(sext_ln153_292_fu_22287_p1) + $signed(sext_ln153_291_fu_22284_p1));

assign add_ln153_502_fu_22296_p2 = ($signed(add_ln153_501_fu_22290_p2) + $signed(sext_ln153_290_fu_22281_p1));

assign add_ln153_503_fu_22306_p2 = ($signed(sext_ln153_293_fu_22302_p1) + $signed(add_ln153_496_fu_22275_p2));

assign add_ln153_504_fu_17769_p2 = ($signed(sext_ln151_783_fu_17729_p1) + $signed(sext_ln151_784_fu_17747_p1));

assign add_ln153_505_fu_22324_p2 = ($signed(sext_ln153_295_fu_22321_p1) + $signed(select_ln126_5_fu_19291_p3));

assign add_ln153_506_fu_22330_p2 = ($signed(sext_ln151_779_fu_22312_p1) + $signed(sext_ln151_781_fu_22315_p1));

assign add_ln153_507_fu_22336_p2 = ($signed(add_ln153_506_fu_22330_p2) + $signed(sext_ln151_782_fu_22318_p1));

assign add_ln153_508_fu_22346_p2 = ($signed(sext_ln153_296_fu_22342_p1) + $signed(add_ln153_505_fu_22324_p2));

assign add_ln153_509_fu_17775_p2 = ($signed(sext_ln151_775_fu_17597_p1) + $signed(sext_ln151_774_fu_17579_p1));

assign add_ln153_50_fu_5523_p2 = ($signed(sext_ln151_115_fu_5321_p1) + $signed(sext_ln151_119_fu_5385_p1));

assign add_ln153_510_fu_17781_p2 = ($signed(add_ln153_509_fu_17775_p2) + $signed(sext_ln151_780_fu_17683_p1));

assign add_ln153_511_fu_17787_p2 = ($signed(sext_ln151_776_fu_17615_p1) + $signed(sext_ln151_778_fu_17651_p1));

assign add_ln153_512_fu_17793_p2 = ($signed(sext_ln151_777_fu_17633_p1) + $signed(sext_ln153_294_fu_17765_p1));

assign add_ln153_513_fu_22361_p2 = ($signed(sext_ln153_299_fu_22358_p1) + $signed(sext_ln153_298_fu_22355_p1));

assign add_ln153_514_fu_22367_p2 = ($signed(add_ln153_513_fu_22361_p2) + $signed(sext_ln153_297_fu_22352_p1));

assign add_ln153_515_fu_22377_p2 = ($signed(sext_ln153_300_fu_22373_p1) + $signed(add_ln153_508_fu_22346_p2));

assign add_ln153_516_fu_18003_p2 = ($signed(sext_ln151_794_fu_17963_p1) + $signed(sext_ln151_795_fu_17981_p1));

assign add_ln153_517_fu_22395_p2 = ($signed(sext_ln153_302_fu_22392_p1) + $signed(select_ln126_4_fu_19285_p3));

assign add_ln153_518_fu_22401_p2 = ($signed(sext_ln151_790_fu_22383_p1) + $signed(sext_ln151_792_fu_22386_p1));

assign add_ln153_519_fu_22407_p2 = ($signed(add_ln153_518_fu_22401_p2) + $signed(sext_ln151_793_fu_22389_p1));

assign add_ln153_51_fu_5529_p2 = ($signed(add_ln153_50_fu_5523_p2) + $signed(sext_ln151_121_fu_5417_p1));

assign add_ln153_520_fu_22417_p2 = ($signed(sext_ln153_303_fu_22413_p1) + $signed(add_ln153_517_fu_22395_p2));

assign add_ln153_521_fu_18009_p2 = ($signed(sext_ln151_786_fu_17831_p1) + $signed(sext_ln151_785_fu_17813_p1));

assign add_ln153_522_fu_18015_p2 = ($signed(add_ln153_521_fu_18009_p2) + $signed(sext_ln151_791_fu_17917_p1));

assign add_ln153_523_fu_18021_p2 = ($signed(sext_ln151_787_fu_17849_p1) + $signed(sext_ln151_789_fu_17885_p1));

assign add_ln153_524_fu_18027_p2 = ($signed(sext_ln151_788_fu_17867_p1) + $signed(sext_ln153_301_fu_17999_p1));

assign add_ln153_525_fu_22432_p2 = ($signed(sext_ln153_306_fu_22429_p1) + $signed(sext_ln153_305_fu_22426_p1));

assign add_ln153_526_fu_22438_p2 = ($signed(add_ln153_525_fu_22432_p2) + $signed(sext_ln153_304_fu_22423_p1));

assign add_ln153_527_fu_22448_p2 = ($signed(sext_ln153_307_fu_22444_p1) + $signed(add_ln153_520_fu_22417_p2));

assign add_ln153_528_fu_18237_p2 = ($signed(sext_ln151_805_fu_18197_p1) + $signed(sext_ln151_806_fu_18215_p1));

assign add_ln153_529_fu_22466_p2 = ($signed(sext_ln153_309_fu_22463_p1) + $signed(select_ln126_3_fu_19279_p3));

assign add_ln153_52_fu_19783_p2 = ($signed(sext_ln153_34_fu_19779_p1) + $signed(add_ln153_49_fu_19752_p2));

assign add_ln153_530_fu_22472_p2 = ($signed(sext_ln151_801_fu_22454_p1) + $signed(sext_ln151_803_fu_22457_p1));

assign add_ln153_531_fu_22478_p2 = ($signed(add_ln153_530_fu_22472_p2) + $signed(sext_ln151_804_fu_22460_p1));

assign add_ln153_532_fu_22488_p2 = ($signed(sext_ln153_310_fu_22484_p1) + $signed(add_ln153_529_fu_22466_p2));

assign add_ln153_533_fu_18243_p2 = ($signed(sext_ln151_797_fu_18065_p1) + $signed(sext_ln151_796_fu_18047_p1));

assign add_ln153_534_fu_18249_p2 = ($signed(add_ln153_533_fu_18243_p2) + $signed(sext_ln151_802_fu_18151_p1));

assign add_ln153_535_fu_18255_p2 = ($signed(sext_ln151_798_fu_18083_p1) + $signed(sext_ln151_800_fu_18119_p1));

assign add_ln153_536_fu_18261_p2 = ($signed(sext_ln151_799_fu_18101_p1) + $signed(sext_ln153_308_fu_18233_p1));

assign add_ln153_537_fu_22503_p2 = ($signed(sext_ln153_313_fu_22500_p1) + $signed(sext_ln153_312_fu_22497_p1));

assign add_ln153_538_fu_22509_p2 = ($signed(add_ln153_537_fu_22503_p2) + $signed(sext_ln153_311_fu_22494_p1));

assign add_ln153_539_fu_22519_p2 = ($signed(sext_ln153_314_fu_22515_p1) + $signed(add_ln153_532_fu_22488_p2));

assign add_ln153_53_fu_5535_p2 = ($signed(sext_ln151_107_fu_5193_p1) + $signed(sext_ln151_105_fu_5161_p1));

assign add_ln153_540_fu_18471_p2 = ($signed(sext_ln151_816_fu_18431_p1) + $signed(sext_ln151_817_fu_18449_p1));

assign add_ln153_541_fu_22537_p2 = ($signed(sext_ln153_316_fu_22534_p1) + $signed(select_ln126_2_fu_19273_p3));

assign add_ln153_542_fu_22543_p2 = ($signed(sext_ln151_812_fu_22525_p1) + $signed(sext_ln151_814_fu_22528_p1));

assign add_ln153_543_fu_22549_p2 = ($signed(add_ln153_542_fu_22543_p2) + $signed(sext_ln151_815_fu_22531_p1));

assign add_ln153_544_fu_22559_p2 = ($signed(sext_ln153_317_fu_22555_p1) + $signed(add_ln153_541_fu_22537_p2));

assign add_ln153_545_fu_18477_p2 = ($signed(sext_ln151_808_fu_18299_p1) + $signed(sext_ln151_807_fu_18281_p1));

assign add_ln153_546_fu_18483_p2 = ($signed(add_ln153_545_fu_18477_p2) + $signed(sext_ln151_813_fu_18385_p1));

assign add_ln153_547_fu_18489_p2 = ($signed(sext_ln151_809_fu_18317_p1) + $signed(sext_ln151_811_fu_18353_p1));

assign add_ln153_548_fu_18495_p2 = ($signed(sext_ln151_810_fu_18335_p1) + $signed(sext_ln153_315_fu_18467_p1));

assign add_ln153_549_fu_22574_p2 = ($signed(sext_ln153_320_fu_22571_p1) + $signed(sext_ln153_319_fu_22568_p1));

assign add_ln153_54_fu_5541_p2 = ($signed(add_ln153_53_fu_5535_p2) + $signed(sext_ln151_117_fu_5353_p1));

assign add_ln153_550_fu_22580_p2 = ($signed(add_ln153_549_fu_22574_p2) + $signed(sext_ln153_318_fu_22565_p1));

assign add_ln153_551_fu_22590_p2 = ($signed(sext_ln153_321_fu_22586_p1) + $signed(add_ln153_544_fu_22559_p2));

assign add_ln153_552_fu_18705_p2 = ($signed(sext_ln151_827_fu_18665_p1) + $signed(sext_ln151_828_fu_18683_p1));

assign add_ln153_553_fu_22608_p2 = ($signed(sext_ln153_323_fu_22605_p1) + $signed(select_ln126_1_fu_19267_p3));

assign add_ln153_554_fu_22614_p2 = ($signed(sext_ln151_823_fu_22596_p1) + $signed(sext_ln151_825_fu_22599_p1));

assign add_ln153_555_fu_22620_p2 = ($signed(add_ln153_554_fu_22614_p2) + $signed(sext_ln151_826_fu_22602_p1));

assign add_ln153_556_fu_22630_p2 = ($signed(sext_ln153_324_fu_22626_p1) + $signed(add_ln153_553_fu_22608_p2));

assign add_ln153_557_fu_18711_p2 = ($signed(sext_ln151_819_fu_18533_p1) + $signed(sext_ln151_818_fu_18515_p1));

assign add_ln153_558_fu_18717_p2 = ($signed(add_ln153_557_fu_18711_p2) + $signed(sext_ln151_824_fu_18619_p1));

assign add_ln153_559_fu_18723_p2 = ($signed(sext_ln151_820_fu_18551_p1) + $signed(sext_ln151_822_fu_18587_p1));

assign add_ln153_55_fu_5547_p2 = ($signed(sext_ln151_109_fu_5225_p1) + $signed(sext_ln151_113_fu_5289_p1));

assign add_ln153_560_fu_18729_p2 = ($signed(sext_ln151_821_fu_18569_p1) + $signed(sext_ln153_322_fu_18701_p1));

assign add_ln153_561_fu_22645_p2 = ($signed(sext_ln153_327_fu_22642_p1) + $signed(sext_ln153_326_fu_22639_p1));

assign add_ln153_562_fu_22651_p2 = ($signed(add_ln153_561_fu_22645_p2) + $signed(sext_ln153_325_fu_22636_p1));

assign add_ln153_563_fu_22661_p2 = ($signed(sext_ln153_328_fu_22657_p1) + $signed(add_ln153_556_fu_22630_p2));

assign add_ln153_564_fu_18939_p2 = ($signed(sext_ln151_838_fu_18899_p1) + $signed(sext_ln151_839_fu_18917_p1));

assign add_ln153_565_fu_22679_p2 = ($signed(sext_ln153_330_fu_22676_p1) + $signed(select_ln126_fu_19260_p3));

assign add_ln153_566_fu_22685_p2 = ($signed(sext_ln151_834_fu_22667_p1) + $signed(sext_ln151_836_fu_22670_p1));

assign add_ln153_567_fu_22691_p2 = ($signed(add_ln153_566_fu_22685_p2) + $signed(sext_ln151_837_fu_22673_p1));

assign add_ln153_568_fu_22701_p2 = ($signed(sext_ln153_331_fu_22697_p1) + $signed(add_ln153_565_fu_22679_p2));

assign add_ln153_569_fu_18945_p2 = ($signed(sext_ln151_830_fu_18767_p1) + $signed(sext_ln151_829_fu_18749_p1));

assign add_ln153_56_fu_5553_p2 = ($signed(sext_ln151_111_fu_5257_p1) + $signed(sext_ln153_28_fu_5513_p1));

assign add_ln153_570_fu_18951_p2 = ($signed(add_ln153_569_fu_18945_p2) + $signed(sext_ln151_835_fu_18853_p1));

assign add_ln153_571_fu_18957_p2 = ($signed(sext_ln151_831_fu_18785_p1) + $signed(sext_ln151_833_fu_18821_p1));

assign add_ln153_572_fu_18963_p2 = ($signed(sext_ln151_832_fu_18803_p1) + $signed(sext_ln153_329_fu_18935_p1));

assign add_ln153_573_fu_22716_p2 = ($signed(sext_ln153_334_fu_22713_p1) + $signed(sext_ln153_333_fu_22710_p1));

assign add_ln153_574_fu_22722_p2 = ($signed(add_ln153_573_fu_22716_p2) + $signed(sext_ln153_332_fu_22707_p1));

assign add_ln153_575_fu_22732_p2 = ($signed(sext_ln153_335_fu_22728_p1) + $signed(add_ln153_568_fu_22701_p2));

assign add_ln153_57_fu_19767_p2 = ($signed(sext_ln153_33_fu_19764_p1) + $signed(sext_ln153_32_fu_19761_p1));

assign add_ln153_58_fu_19773_p2 = ($signed(add_ln153_57_fu_19767_p2) + $signed(sext_ln153_31_fu_19758_p1));

assign add_ln153_59_fu_19789_p2 = (add_ln153_52_fu_19783_p2 + select_ln126_43_fu_19520_p3);

assign add_ln153_5_fu_3831_p2 = ($signed(sext_ln151_5_fu_3459_p1) + $signed(sext_ln151_2_fu_3424_p1));

assign add_ln153_60_fu_5943_p2 = ($signed(sext_ln151_146_fu_5875_p1) + $signed(sext_ln151_148_fu_5907_p1));

assign add_ln153_61_fu_19801_p2 = ($signed(sext_ln153_37_fu_19798_p1) + $signed(sext_ln153_36_fu_19795_p1));

assign add_ln153_62_fu_5949_p2 = ($signed(sext_ln151_138_fu_5747_p1) + $signed(sext_ln151_142_fu_5811_p1));

assign add_ln153_63_fu_5955_p2 = ($signed(add_ln153_62_fu_5949_p2) + $signed(sext_ln151_144_fu_5843_p1));

assign add_ln153_64_fu_19832_p2 = ($signed(sext_ln153_41_fu_19828_p1) + $signed(add_ln153_61_fu_19801_p2));

assign add_ln153_65_fu_5961_p2 = ($signed(sext_ln151_130_fu_5619_p1) + $signed(sext_ln151_128_fu_5587_p1));

assign add_ln153_66_fu_5967_p2 = ($signed(add_ln153_65_fu_5961_p2) + $signed(sext_ln151_140_fu_5779_p1));

assign add_ln153_67_fu_5973_p2 = ($signed(sext_ln151_132_fu_5651_p1) + $signed(sext_ln151_136_fu_5715_p1));

assign add_ln153_68_fu_5979_p2 = ($signed(sext_ln151_134_fu_5683_p1) + $signed(sext_ln153_35_fu_5939_p1));

assign add_ln153_69_fu_19816_p2 = ($signed(sext_ln153_40_fu_19813_p1) + $signed(sext_ln153_39_fu_19810_p1));

assign add_ln153_6_fu_3837_p2 = ($signed(add_ln153_5_fu_3831_p2) + $signed(sext_ln151_20_fu_3634_p1));

assign add_ln153_70_fu_19822_p2 = ($signed(add_ln153_69_fu_19816_p2) + $signed(sext_ln153_38_fu_19807_p1));

assign add_ln153_71_fu_19838_p2 = (add_ln153_64_fu_19832_p2 + select_ln126_42_fu_19514_p3);

assign add_ln153_72_fu_6369_p2 = ($signed(sext_ln151_169_fu_6301_p1) + $signed(sext_ln151_171_fu_6333_p1));

assign add_ln153_73_fu_19850_p2 = ($signed(sext_ln153_44_fu_19847_p1) + $signed(sext_ln153_43_fu_19844_p1));

assign add_ln153_74_fu_6375_p2 = ($signed(sext_ln151_161_fu_6173_p1) + $signed(sext_ln151_165_fu_6237_p1));

assign add_ln153_75_fu_6381_p2 = ($signed(add_ln153_74_fu_6375_p2) + $signed(sext_ln151_167_fu_6269_p1));

assign add_ln153_76_fu_19881_p2 = ($signed(sext_ln153_48_fu_19877_p1) + $signed(add_ln153_73_fu_19850_p2));

assign add_ln153_77_fu_6387_p2 = ($signed(sext_ln151_153_fu_6045_p1) + $signed(sext_ln151_151_fu_6013_p1));

assign add_ln153_78_fu_6393_p2 = ($signed(add_ln153_77_fu_6387_p2) + $signed(sext_ln151_163_fu_6205_p1));

assign add_ln153_79_fu_6399_p2 = ($signed(sext_ln151_155_fu_6077_p1) + $signed(sext_ln151_159_fu_6141_p1));

assign add_ln153_7_fu_3843_p2 = ($signed(sext_ln151_8_fu_3494_p1) + $signed(sext_ln151_14_fu_3564_p1));

assign add_ln153_80_fu_6405_p2 = ($signed(sext_ln151_157_fu_6109_p1) + $signed(sext_ln153_42_fu_6365_p1));

assign add_ln153_81_fu_19865_p2 = ($signed(sext_ln153_47_fu_19862_p1) + $signed(sext_ln153_46_fu_19859_p1));

assign add_ln153_82_fu_19871_p2 = ($signed(add_ln153_81_fu_19865_p2) + $signed(sext_ln153_45_fu_19856_p1));

assign add_ln153_83_fu_19887_p2 = (add_ln153_76_fu_19881_p2 + select_ln126_41_fu_19508_p3);

assign add_ln153_84_fu_6795_p2 = ($signed(sext_ln151_192_fu_6727_p1) + $signed(sext_ln151_194_fu_6759_p1));

assign add_ln153_85_fu_19899_p2 = ($signed(sext_ln153_51_fu_19896_p1) + $signed(sext_ln153_50_fu_19893_p1));

assign add_ln153_86_fu_6801_p2 = ($signed(sext_ln151_184_fu_6599_p1) + $signed(sext_ln151_188_fu_6663_p1));

assign add_ln153_87_fu_6807_p2 = ($signed(add_ln153_86_fu_6801_p2) + $signed(sext_ln151_190_fu_6695_p1));

assign add_ln153_88_fu_19930_p2 = ($signed(sext_ln153_55_fu_19926_p1) + $signed(add_ln153_85_fu_19899_p2));

assign add_ln153_89_fu_6813_p2 = ($signed(sext_ln151_176_fu_6471_p1) + $signed(sext_ln151_174_fu_6439_p1));

assign add_ln153_8_fu_3849_p2 = ($signed(sext_ln151_11_fu_3529_p1) + $signed(sext_ln153_fu_3809_p1));

assign add_ln153_90_fu_6819_p2 = ($signed(add_ln153_89_fu_6813_p2) + $signed(sext_ln151_186_fu_6631_p1));

assign add_ln153_91_fu_6825_p2 = ($signed(sext_ln151_178_fu_6503_p1) + $signed(sext_ln151_182_fu_6567_p1));

assign add_ln153_92_fu_6831_p2 = ($signed(sext_ln151_180_fu_6535_p1) + $signed(sext_ln153_49_fu_6791_p1));

assign add_ln153_93_fu_19914_p2 = ($signed(sext_ln153_54_fu_19911_p1) + $signed(sext_ln153_53_fu_19908_p1));

assign add_ln153_94_fu_19920_p2 = ($signed(add_ln153_93_fu_19914_p2) + $signed(sext_ln153_52_fu_19905_p1));

assign add_ln153_95_fu_19936_p2 = (add_ln153_88_fu_19930_p2 + select_ln126_40_fu_19502_p3);

assign add_ln153_96_fu_7221_p2 = ($signed(sext_ln151_215_fu_7153_p1) + $signed(sext_ln151_217_fu_7185_p1));

assign add_ln153_97_fu_19948_p2 = ($signed(sext_ln153_58_fu_19945_p1) + $signed(sext_ln153_57_fu_19942_p1));

assign add_ln153_98_fu_7227_p2 = ($signed(sext_ln151_207_fu_7025_p1) + $signed(sext_ln151_211_fu_7089_p1));

assign add_ln153_99_fu_7233_p2 = ($signed(add_ln153_98_fu_7227_p2) + $signed(sext_ln151_213_fu_7121_p1));

assign add_ln153_9_fu_19571_p2 = ($signed(sext_ln153_5_fu_19568_p1) + $signed(sext_ln153_4_fu_19565_p1));

assign add_ln153_fu_3813_p2 = ($signed(sext_ln151_29_fu_3739_p1) + $signed(sext_ln151_32_fu_3774_p1));

assign and_ln120_fu_2819_p2 = (xor_ln120_fu_2808_p2 & icmp_ln122_fu_2813_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (cache_window_sm_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((icmp_ln161_reg_24005_pp0_iter4_reg == 1'd1) & (mac_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1234 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1403 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign icmp_ln120_fu_2739_p2 = ((ap_sig_allocacmp_indvar_flatten107_load == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_2745_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2813_p2 = ((ap_sig_allocacmp_cit_load == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_2915_p2 = ((select_ln121_reg_23806 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_3160_p2 = ((select_ln121_reg_23806 == 5'd15) ? 1'b1 : 1'b0);

assign mac_sm_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{add_ln153_575_reg_25967}, {add_ln153_563_reg_25962}}, {add_ln153_551_reg_25957}}, {add_ln153_539_reg_25952}}, {add_ln153_527_reg_25947}}, {add_ln153_515_reg_25942}}, {add_ln153_503_reg_25937}}, {add_ln153_491_reg_25932}}, {add_ln153_479_reg_25927}}, {add_ln153_467_reg_25922}}, {add_ln153_455_reg_25917}}, {add_ln153_443_reg_25912}}, {add_ln153_431_reg_25907}}, {add_ln153_419_reg_25902}}, {add_ln153_407_reg_25897}}, {add_ln153_395_reg_25892}}, {add_ln153_383_reg_25887}}, {add_ln153_371_reg_25882}}, {add_ln153_359_reg_25877}}, {add_ln153_347_reg_25872}}, {add_ln153_335_reg_25867}}, {add_ln153_323_reg_25862}}, {add_ln153_311_reg_25857}}, {add_ln153_299_reg_25852}}, {add_ln153_287_reg_25847}}, {add_ln153_275_reg_25842}}, {add_ln153_263_reg_25837}}, {add_ln153_251_reg_25832}}, {add_ln153_239_reg_25827}}, {add_ln153_227_reg_25822}}, {add_ln153_215_reg_25817}}, {add_ln153_203_reg_25812}}, {add_ln153_191_reg_25807}}, {add_ln153_179_reg_25802}}, {add_ln153_167_reg_25797}}, 
    {add_ln153_155_reg_25792}}, {add_ln153_143_reg_25787}}, {add_ln153_131_reg_25782}}, {add_ln153_119_reg_25777}}, {add_ln153_107_reg_25772}}, {add_ln153_95_reg_25767}}, {add_ln153_83_reg_25762}}, {add_ln153_71_reg_25757}}, {add_ln153_59_reg_25752}}, {add_ln153_47_reg_25747}}, {add_ln153_35_reg_25742}}, {add_ln153_23_reg_25737}}, {add_ln153_11_reg_25732}};

assign mlp_inst_m1_bias_arr_111_address0 = zext_ln121_fu_2886_p1;

assign mlp_inst_m1_weight_arr_110_address0 = zext_ln151_1_fu_2910_p1;

assign mul_res_100_fu_6987_p0 = sext_ln151_204_fu_6975_p1;

assign mul_res_100_fu_6987_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_101_fu_7019_p0 = sext_ln151_206_fu_7007_p1;

assign mul_res_101_fu_7019_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_102_fu_7051_p0 = sext_ln151_208_fu_7039_p1;

assign mul_res_102_fu_7051_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_103_fu_7083_p0 = sext_ln151_210_fu_7071_p1;

assign mul_res_103_fu_7083_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_104_fu_7115_p0 = sext_ln151_212_fu_7103_p1;

assign mul_res_104_fu_7115_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_105_fu_7147_p0 = sext_ln151_214_fu_7135_p1;

assign mul_res_105_fu_7147_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_106_fu_7179_p0 = sext_ln151_216_fu_7167_p1;

assign mul_res_106_fu_7179_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_107_fu_7211_p0 = sext_ln151_218_fu_7199_p1;

assign mul_res_107_fu_7211_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_108_fu_7285_p0 = sext_ln151_219_fu_7273_p1;

assign mul_res_108_fu_7285_p1 = sext_ln151_fu_3403_p1;

assign mul_res_109_fu_7317_p0 = sext_ln151_221_fu_7305_p1;

assign mul_res_109_fu_7317_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_10_fu_3768_p0 = sext_ln151_31_fu_3756_p1;

assign mul_res_10_fu_3768_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_110_fu_7349_p0 = sext_ln151_223_fu_7337_p1;

assign mul_res_110_fu_7349_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_111_fu_7381_p0 = sext_ln151_225_fu_7369_p1;

assign mul_res_111_fu_7381_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_112_fu_7413_p0 = sext_ln151_227_fu_7401_p1;

assign mul_res_112_fu_7413_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_113_fu_7445_p0 = sext_ln151_229_fu_7433_p1;

assign mul_res_113_fu_7445_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_114_fu_7477_p0 = sext_ln151_231_fu_7465_p1;

assign mul_res_114_fu_7477_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_115_fu_7509_p0 = sext_ln151_233_fu_7497_p1;

assign mul_res_115_fu_7509_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_116_fu_7541_p0 = sext_ln151_235_fu_7529_p1;

assign mul_res_116_fu_7541_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_117_fu_7573_p0 = sext_ln151_237_fu_7561_p1;

assign mul_res_117_fu_7573_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_118_fu_7605_p0 = sext_ln151_239_fu_7593_p1;

assign mul_res_118_fu_7605_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_119_fu_7637_p0 = sext_ln151_241_fu_7625_p1;

assign mul_res_119_fu_7637_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_11_fu_3803_p0 = sext_ln151_34_fu_3791_p1;

assign mul_res_11_fu_3803_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_120_fu_7711_p0 = sext_ln151_242_fu_7699_p1;

assign mul_res_120_fu_7711_p1 = sext_ln151_fu_3403_p1;

assign mul_res_121_fu_7743_p0 = sext_ln151_244_fu_7731_p1;

assign mul_res_121_fu_7743_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_122_fu_7775_p0 = sext_ln151_246_fu_7763_p1;

assign mul_res_122_fu_7775_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_123_fu_7807_p0 = sext_ln151_248_fu_7795_p1;

assign mul_res_123_fu_7807_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_124_fu_7839_p0 = sext_ln151_250_fu_7827_p1;

assign mul_res_124_fu_7839_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_125_fu_7871_p0 = sext_ln151_252_fu_7859_p1;

assign mul_res_125_fu_7871_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_126_fu_7899_p0 = sext_ln151_254_fu_7887_p1;

assign mul_res_126_fu_7899_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_127_fu_7931_p0 = sext_ln151_256_fu_7919_p1;

assign mul_res_127_fu_7931_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_128_fu_7959_p0 = sext_ln151_258_fu_7947_p1;

assign mul_res_128_fu_7959_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_129_fu_7987_p0 = sext_ln151_260_fu_7975_p1;

assign mul_res_129_fu_7987_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_12_fu_3877_p0 = sext_ln151_35_fu_3865_p1;

assign mul_res_12_fu_3877_p1 = sext_ln151_fu_3403_p1;

assign mul_res_130_fu_8019_p0 = sext_ln151_262_fu_8007_p1;

assign mul_res_130_fu_8019_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_131_fu_8051_p0 = sext_ln151_264_fu_8039_p1;

assign mul_res_131_fu_8051_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_132_fu_8113_p0 = sext_ln151_265_fu_8101_p1;

assign mul_res_132_fu_8113_p1 = sext_ln151_fu_3403_p1;

assign mul_res_133_fu_8145_p0 = sext_ln151_267_fu_8133_p1;

assign mul_res_133_fu_8145_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_134_fu_8177_p0 = sext_ln151_269_fu_8165_p1;

assign mul_res_134_fu_8177_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_135_fu_8209_p0 = sext_ln151_271_fu_8197_p1;

assign mul_res_135_fu_8209_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_136_fu_8241_p0 = sext_ln151_273_fu_8229_p1;

assign mul_res_136_fu_8241_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_137_fu_8273_p0 = sext_ln151_275_fu_8261_p1;

assign mul_res_137_fu_8273_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_138_fu_8301_p0 = sext_ln151_277_fu_8289_p1;

assign mul_res_138_fu_8301_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_139_fu_8333_p0 = sext_ln151_279_fu_8321_p1;

assign mul_res_139_fu_8333_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_13_fu_3909_p0 = sext_ln151_37_fu_3897_p1;

assign mul_res_13_fu_3909_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_140_fu_8361_p0 = sext_ln151_281_fu_8349_p1;

assign mul_res_140_fu_8361_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_141_fu_8389_p0 = sext_ln151_283_fu_8377_p1;

assign mul_res_141_fu_8389_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_142_fu_8421_p0 = sext_ln151_285_fu_8409_p1;

assign mul_res_142_fu_8421_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_143_fu_8453_p0 = sext_ln151_287_fu_8441_p1;

assign mul_res_143_fu_8453_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_144_fu_8515_p0 = sext_ln151_288_fu_8503_p1;

assign mul_res_144_fu_8515_p1 = sext_ln151_fu_3403_p1;

assign mul_res_145_fu_8547_p0 = sext_ln151_290_fu_8535_p1;

assign mul_res_145_fu_8547_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_146_fu_8579_p0 = sext_ln151_292_fu_8567_p1;

assign mul_res_146_fu_8579_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_147_fu_8611_p0 = sext_ln151_294_fu_8599_p1;

assign mul_res_147_fu_8611_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_148_fu_8643_p0 = sext_ln151_296_fu_8631_p1;

assign mul_res_148_fu_8643_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_149_fu_8675_p0 = sext_ln151_298_fu_8663_p1;

assign mul_res_149_fu_8675_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_14_fu_3941_p0 = sext_ln151_39_fu_3929_p1;

assign mul_res_14_fu_3941_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_150_fu_8703_p0 = sext_ln151_300_fu_8691_p1;

assign mul_res_150_fu_8703_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_151_fu_8735_p0 = sext_ln151_302_fu_8723_p1;

assign mul_res_151_fu_8735_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_152_fu_8763_p0 = sext_ln151_304_fu_8751_p1;

assign mul_res_152_fu_8763_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_153_fu_8791_p0 = sext_ln151_306_fu_8779_p1;

assign mul_res_153_fu_8791_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_154_fu_8823_p0 = sext_ln151_308_fu_8811_p1;

assign mul_res_154_fu_8823_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_155_fu_8855_p0 = sext_ln151_310_fu_8843_p1;

assign mul_res_155_fu_8855_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_156_fu_8917_p0 = sext_ln151_311_fu_8905_p1;

assign mul_res_156_fu_8917_p1 = sext_ln151_fu_3403_p1;

assign mul_res_157_fu_8949_p0 = sext_ln151_313_fu_8937_p1;

assign mul_res_157_fu_8949_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_158_fu_8981_p0 = sext_ln151_315_fu_8969_p1;

assign mul_res_158_fu_8981_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_159_fu_9013_p0 = sext_ln151_317_fu_9001_p1;

assign mul_res_159_fu_9013_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_15_fu_3973_p0 = sext_ln151_41_fu_3961_p1;

assign mul_res_15_fu_3973_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_160_fu_9045_p0 = sext_ln151_319_fu_9033_p1;

assign mul_res_160_fu_9045_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_161_fu_9077_p0 = sext_ln151_321_fu_9065_p1;

assign mul_res_161_fu_9077_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_162_fu_9105_p0 = sext_ln151_323_fu_9093_p1;

assign mul_res_162_fu_9105_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_163_fu_9137_p0 = sext_ln151_325_fu_9125_p1;

assign mul_res_163_fu_9137_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_164_fu_9165_p0 = sext_ln151_327_fu_9153_p1;

assign mul_res_164_fu_9165_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_165_fu_9193_p0 = sext_ln151_329_fu_9181_p1;

assign mul_res_165_fu_9193_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_166_fu_9225_p0 = sext_ln151_331_fu_9213_p1;

assign mul_res_166_fu_9225_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_167_fu_9257_p0 = sext_ln151_333_fu_9245_p1;

assign mul_res_167_fu_9257_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_168_fu_9319_p0 = sext_ln151_334_fu_9307_p1;

assign mul_res_168_fu_9319_p1 = sext_ln151_fu_3403_p1;

assign mul_res_169_fu_9351_p0 = sext_ln151_336_fu_9339_p1;

assign mul_res_169_fu_9351_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_16_fu_4005_p0 = sext_ln151_43_fu_3993_p1;

assign mul_res_16_fu_4005_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_170_fu_9383_p0 = sext_ln151_338_fu_9371_p1;

assign mul_res_170_fu_9383_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_171_fu_9415_p0 = sext_ln151_340_fu_9403_p1;

assign mul_res_171_fu_9415_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_172_fu_9447_p0 = sext_ln151_342_fu_9435_p1;

assign mul_res_172_fu_9447_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_173_fu_9479_p0 = sext_ln151_344_fu_9467_p1;

assign mul_res_173_fu_9479_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_174_fu_9507_p0 = sext_ln151_346_fu_9495_p1;

assign mul_res_174_fu_9507_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_175_fu_9539_p0 = sext_ln151_348_fu_9527_p1;

assign mul_res_175_fu_9539_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_176_fu_9567_p0 = sext_ln151_350_fu_9555_p1;

assign mul_res_176_fu_9567_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_177_fu_9595_p0 = sext_ln151_352_fu_9583_p1;

assign mul_res_177_fu_9595_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_178_fu_9627_p0 = sext_ln151_354_fu_9615_p1;

assign mul_res_178_fu_9627_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_179_fu_9659_p0 = sext_ln151_356_fu_9647_p1;

assign mul_res_179_fu_9659_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_17_fu_4037_p0 = sext_ln151_45_fu_4025_p1;

assign mul_res_17_fu_4037_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_180_fu_9721_p0 = sext_ln151_357_fu_9709_p1;

assign mul_res_180_fu_9721_p1 = sext_ln151_fu_3403_p1;

assign mul_res_181_fu_9753_p0 = sext_ln151_359_fu_9741_p1;

assign mul_res_181_fu_9753_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_182_fu_9785_p0 = sext_ln151_361_fu_9773_p1;

assign mul_res_182_fu_9785_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_183_fu_9817_p0 = sext_ln151_363_fu_9805_p1;

assign mul_res_183_fu_9817_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_184_fu_9849_p0 = sext_ln151_365_fu_9837_p1;

assign mul_res_184_fu_9849_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_185_fu_9881_p0 = sext_ln151_367_fu_9869_p1;

assign mul_res_185_fu_9881_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_186_fu_9909_p0 = sext_ln151_369_fu_9897_p1;

assign mul_res_186_fu_9909_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_187_fu_9941_p0 = sext_ln151_371_fu_9929_p1;

assign mul_res_187_fu_9941_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_188_fu_9969_p0 = sext_ln151_373_fu_9957_p1;

assign mul_res_188_fu_9969_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_189_fu_9997_p0 = sext_ln151_375_fu_9985_p1;

assign mul_res_189_fu_9997_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_18_fu_4069_p0 = sext_ln151_47_fu_4057_p1;

assign mul_res_18_fu_4069_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_190_fu_10029_p0 = sext_ln151_377_fu_10017_p1;

assign mul_res_190_fu_10029_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_191_fu_10061_p0 = sext_ln151_379_fu_10049_p1;

assign mul_res_191_fu_10061_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_192_fu_10123_p0 = sext_ln151_380_fu_10111_p1;

assign mul_res_192_fu_10123_p1 = sext_ln151_fu_3403_p1;

assign mul_res_193_fu_10155_p0 = sext_ln151_382_fu_10143_p1;

assign mul_res_193_fu_10155_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_194_fu_10187_p0 = sext_ln151_384_fu_10175_p1;

assign mul_res_194_fu_10187_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_195_fu_10219_p0 = sext_ln151_386_fu_10207_p1;

assign mul_res_195_fu_10219_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_196_fu_10251_p0 = sext_ln151_388_fu_10239_p1;

assign mul_res_196_fu_10251_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_197_fu_10283_p0 = sext_ln151_390_fu_10271_p1;

assign mul_res_197_fu_10283_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_198_fu_10311_p0 = sext_ln151_392_fu_10299_p1;

assign mul_res_198_fu_10311_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_199_fu_10343_p0 = sext_ln151_394_fu_10331_p1;

assign mul_res_199_fu_10343_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_19_fu_4101_p0 = sext_ln151_49_fu_4089_p1;

assign mul_res_19_fu_4101_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_1_fu_3453_p0 = sext_ln151_4_fu_3441_p1;

assign mul_res_1_fu_3453_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_200_fu_10371_p0 = sext_ln151_396_fu_10359_p1;

assign mul_res_200_fu_10371_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_201_fu_10399_p0 = sext_ln151_398_fu_10387_p1;

assign mul_res_201_fu_10399_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_202_fu_10431_p0 = sext_ln151_400_fu_10419_p1;

assign mul_res_202_fu_10431_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_203_fu_10463_p0 = sext_ln151_402_fu_10451_p1;

assign mul_res_203_fu_10463_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_204_fu_10525_p0 = sext_ln151_403_fu_10513_p1;

assign mul_res_204_fu_10525_p1 = sext_ln151_fu_3403_p1;

assign mul_res_205_fu_10557_p0 = sext_ln151_405_fu_10545_p1;

assign mul_res_205_fu_10557_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_206_fu_10589_p0 = sext_ln151_407_fu_10577_p1;

assign mul_res_206_fu_10589_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_207_fu_10621_p0 = sext_ln151_409_fu_10609_p1;

assign mul_res_207_fu_10621_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_208_fu_10653_p0 = sext_ln151_411_fu_10641_p1;

assign mul_res_208_fu_10653_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_209_fu_10685_p0 = sext_ln151_413_fu_10673_p1;

assign mul_res_209_fu_10685_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_20_fu_4133_p0 = sext_ln151_51_fu_4121_p1;

assign mul_res_20_fu_4133_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_210_fu_10713_p0 = sext_ln151_415_fu_10701_p1;

assign mul_res_210_fu_10713_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_211_fu_10745_p0 = sext_ln151_417_fu_10733_p1;

assign mul_res_211_fu_10745_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_212_fu_10773_p0 = sext_ln151_419_fu_10761_p1;

assign mul_res_212_fu_10773_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_213_fu_10801_p0 = sext_ln151_421_fu_10789_p1;

assign mul_res_213_fu_10801_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_214_fu_10833_p0 = sext_ln151_423_fu_10821_p1;

assign mul_res_214_fu_10833_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_215_fu_10865_p0 = sext_ln151_425_fu_10853_p1;

assign mul_res_215_fu_10865_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_216_fu_10927_p0 = sext_ln151_426_fu_10915_p1;

assign mul_res_216_fu_10927_p1 = sext_ln151_fu_3403_p1;

assign mul_res_217_fu_10959_p0 = sext_ln151_428_fu_10947_p1;

assign mul_res_217_fu_10959_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_218_fu_10991_p0 = sext_ln151_430_fu_10979_p1;

assign mul_res_218_fu_10991_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_219_fu_11023_p0 = sext_ln151_432_fu_11011_p1;

assign mul_res_219_fu_11023_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_21_fu_4165_p0 = sext_ln151_53_fu_4153_p1;

assign mul_res_21_fu_4165_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_220_fu_11055_p0 = sext_ln151_434_fu_11043_p1;

assign mul_res_220_fu_11055_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_221_fu_11087_p0 = sext_ln151_436_fu_11075_p1;

assign mul_res_221_fu_11087_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_222_fu_11115_p0 = sext_ln151_438_fu_11103_p1;

assign mul_res_222_fu_11115_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_223_fu_11147_p0 = sext_ln151_440_fu_11135_p1;

assign mul_res_223_fu_11147_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_224_fu_11175_p0 = sext_ln151_442_fu_11163_p1;

assign mul_res_224_fu_11175_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_225_fu_11203_p0 = sext_ln151_444_fu_11191_p1;

assign mul_res_225_fu_11203_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_226_fu_11235_p0 = sext_ln151_446_fu_11223_p1;

assign mul_res_226_fu_11235_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_227_fu_11267_p0 = sext_ln151_448_fu_11255_p1;

assign mul_res_227_fu_11267_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_228_fu_11329_p0 = sext_ln151_449_fu_11317_p1;

assign mul_res_228_fu_11329_p1 = sext_ln151_fu_3403_p1;

assign mul_res_229_fu_11361_p0 = sext_ln151_451_fu_11349_p1;

assign mul_res_229_fu_11361_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_22_fu_4197_p0 = sext_ln151_55_fu_4185_p1;

assign mul_res_22_fu_4197_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_230_fu_11393_p0 = sext_ln151_453_fu_11381_p1;

assign mul_res_230_fu_11393_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_231_fu_11425_p0 = sext_ln151_455_fu_11413_p1;

assign mul_res_231_fu_11425_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_232_fu_11457_p0 = sext_ln151_457_fu_11445_p1;

assign mul_res_232_fu_11457_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_233_fu_11489_p0 = sext_ln151_459_fu_11477_p1;

assign mul_res_233_fu_11489_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_234_fu_11517_p0 = sext_ln151_461_fu_11505_p1;

assign mul_res_234_fu_11517_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_235_fu_11549_p0 = sext_ln151_463_fu_11537_p1;

assign mul_res_235_fu_11549_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_236_fu_11577_p0 = sext_ln151_465_fu_11565_p1;

assign mul_res_236_fu_11577_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_237_fu_11605_p0 = sext_ln151_467_fu_11593_p1;

assign mul_res_237_fu_11605_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_238_fu_11637_p0 = sext_ln151_469_fu_11625_p1;

assign mul_res_238_fu_11637_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_239_fu_11669_p0 = sext_ln151_471_fu_11657_p1;

assign mul_res_239_fu_11669_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_23_fu_4229_p0 = sext_ln151_57_fu_4217_p1;

assign mul_res_23_fu_4229_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_240_fu_11731_p0 = sext_ln151_472_fu_11719_p1;

assign mul_res_240_fu_11731_p1 = sext_ln151_fu_3403_p1;

assign mul_res_241_fu_11763_p0 = sext_ln151_474_fu_11751_p1;

assign mul_res_241_fu_11763_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_242_fu_11795_p0 = sext_ln151_476_fu_11783_p1;

assign mul_res_242_fu_11795_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_243_fu_11827_p0 = sext_ln151_478_fu_11815_p1;

assign mul_res_243_fu_11827_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_244_fu_11859_p0 = sext_ln151_480_fu_11847_p1;

assign mul_res_244_fu_11859_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_245_fu_11891_p0 = sext_ln151_482_fu_11879_p1;

assign mul_res_245_fu_11891_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_246_fu_11919_p0 = sext_ln151_484_fu_11907_p1;

assign mul_res_246_fu_11919_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_247_fu_11951_p0 = sext_ln151_486_fu_11939_p1;

assign mul_res_247_fu_11951_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_248_fu_11979_p0 = sext_ln151_488_fu_11967_p1;

assign mul_res_248_fu_11979_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_249_fu_12007_p0 = sext_ln151_490_fu_11995_p1;

assign mul_res_249_fu_12007_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_24_fu_4303_p0 = sext_ln151_58_fu_4291_p1;

assign mul_res_24_fu_4303_p1 = sext_ln151_fu_3403_p1;

assign mul_res_250_fu_12039_p0 = sext_ln151_492_fu_12027_p1;

assign mul_res_250_fu_12039_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_251_fu_12071_p0 = sext_ln151_494_fu_12059_p1;

assign mul_res_251_fu_12071_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_252_fu_12133_p0 = sext_ln151_495_fu_12121_p1;

assign mul_res_252_fu_12133_p1 = sext_ln151_fu_3403_p1;

assign mul_res_253_fu_12165_p0 = sext_ln151_497_fu_12153_p1;

assign mul_res_253_fu_12165_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_254_fu_12197_p0 = sext_ln151_499_fu_12185_p1;

assign mul_res_254_fu_12197_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_255_fu_12229_p0 = sext_ln151_501_fu_12217_p1;

assign mul_res_255_fu_12229_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_256_fu_12261_p0 = sext_ln151_503_fu_12249_p1;

assign mul_res_256_fu_12261_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_257_fu_12293_p0 = sext_ln151_505_fu_12281_p1;

assign mul_res_257_fu_12293_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_258_fu_12321_p0 = sext_ln151_507_fu_12309_p1;

assign mul_res_258_fu_12321_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_259_fu_12353_p0 = sext_ln151_509_fu_12341_p1;

assign mul_res_259_fu_12353_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_25_fu_4335_p0 = sext_ln151_60_fu_4323_p1;

assign mul_res_25_fu_4335_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_260_fu_12381_p0 = sext_ln151_511_fu_12369_p1;

assign mul_res_260_fu_12381_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_261_fu_12409_p0 = sext_ln151_513_fu_12397_p1;

assign mul_res_261_fu_12409_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_262_fu_12441_p0 = sext_ln151_515_fu_12429_p1;

assign mul_res_262_fu_12441_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_263_fu_12473_p0 = sext_ln151_517_fu_12461_p1;

assign mul_res_263_fu_12473_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_264_fu_12535_p0 = sext_ln151_518_fu_12523_p1;

assign mul_res_264_fu_12535_p1 = sext_ln151_fu_3403_p1;

assign mul_res_265_fu_12567_p0 = sext_ln151_520_fu_12555_p1;

assign mul_res_265_fu_12567_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_266_fu_12599_p0 = sext_ln151_522_fu_12587_p1;

assign mul_res_266_fu_12599_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_267_fu_12631_p0 = sext_ln151_524_fu_12619_p1;

assign mul_res_267_fu_12631_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_268_fu_12663_p0 = sext_ln151_526_fu_12651_p1;

assign mul_res_268_fu_12663_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_269_fu_12695_p0 = sext_ln151_528_fu_12683_p1;

assign mul_res_269_fu_12695_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_26_fu_4367_p0 = sext_ln151_62_fu_4355_p1;

assign mul_res_26_fu_4367_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_270_fu_12723_p0 = sext_ln151_530_fu_12711_p1;

assign mul_res_270_fu_12723_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_271_fu_12755_p0 = sext_ln151_532_fu_12743_p1;

assign mul_res_271_fu_12755_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_272_fu_12783_p0 = sext_ln151_534_fu_12771_p1;

assign mul_res_272_fu_12783_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_273_fu_12811_p0 = sext_ln151_536_fu_12799_p1;

assign mul_res_273_fu_12811_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_274_fu_12843_p0 = sext_ln151_538_fu_12831_p1;

assign mul_res_274_fu_12843_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_275_fu_12875_p0 = sext_ln151_540_fu_12863_p1;

assign mul_res_275_fu_12875_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_276_fu_12937_p0 = sext_ln151_541_fu_12925_p1;

assign mul_res_276_fu_12937_p1 = sext_ln151_fu_3403_p1;

assign mul_res_277_fu_12969_p0 = sext_ln151_543_fu_12957_p1;

assign mul_res_277_fu_12969_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_278_fu_13001_p0 = sext_ln151_545_fu_12989_p1;

assign mul_res_278_fu_13001_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_279_fu_13033_p0 = sext_ln151_547_fu_13021_p1;

assign mul_res_279_fu_13033_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_27_fu_4399_p0 = sext_ln151_64_fu_4387_p1;

assign mul_res_27_fu_4399_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_280_fu_13065_p0 = sext_ln151_549_fu_13053_p1;

assign mul_res_280_fu_13065_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_281_fu_13097_p0 = sext_ln151_551_fu_13085_p1;

assign mul_res_281_fu_13097_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_282_fu_13125_p0 = sext_ln151_553_fu_13113_p1;

assign mul_res_282_fu_13125_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_283_fu_13157_p0 = sext_ln151_555_fu_13145_p1;

assign mul_res_283_fu_13157_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_284_fu_13185_p0 = sext_ln151_557_fu_13173_p1;

assign mul_res_284_fu_13185_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_285_fu_13213_p0 = sext_ln151_559_fu_13201_p1;

assign mul_res_285_fu_13213_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_286_fu_13245_p0 = sext_ln151_561_fu_13233_p1;

assign mul_res_286_fu_13245_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_287_fu_13277_p0 = sext_ln151_563_fu_13265_p1;

assign mul_res_287_fu_13277_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_288_fu_13328_p0 = sext_ln151_1_fu_3406_p1;

assign mul_res_288_fu_13328_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_289_fu_13349_p0 = sext_ln151_4_fu_3441_p1;

assign mul_res_289_fu_13349_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_28_fu_4431_p0 = sext_ln151_66_fu_4419_p1;

assign mul_res_28_fu_4431_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_290_fu_13370_p0 = sext_ln151_7_fu_3476_p1;

assign mul_res_290_fu_13370_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_291_fu_13391_p0 = sext_ln151_10_fu_3511_p1;

assign mul_res_291_fu_13391_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_292_fu_13412_p0 = sext_ln151_13_fu_3546_p1;

assign mul_res_292_fu_13412_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_293_fu_13433_p0 = sext_ln151_16_fu_3581_p1;

assign mul_res_293_fu_13433_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_294_fu_13450_p0 = sext_ln151_19_fu_3616_p1;

assign mul_res_294_fu_13450_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_295_fu_13471_p0 = sext_ln151_22_fu_3651_p1;

assign mul_res_295_fu_13471_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_296_fu_13488_p0 = sext_ln151_25_fu_3686_p1;

assign mul_res_296_fu_13488_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_297_fu_13505_p0 = sext_ln151_28_fu_3721_p1;

assign mul_res_297_fu_13505_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_298_fu_13526_p0 = sext_ln151_31_fu_3756_p1;

assign mul_res_298_fu_13526_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_299_fu_13547_p0 = sext_ln151_34_fu_3791_p1;

assign mul_res_299_fu_13547_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_29_fu_4463_p0 = sext_ln151_68_fu_4451_p1;

assign mul_res_29_fu_4463_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_2_fu_3488_p0 = sext_ln151_7_fu_3476_p1;

assign mul_res_2_fu_3488_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_300_fu_13595_p0 = sext_ln151_35_fu_3865_p1;

assign mul_res_300_fu_13595_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_301_fu_13613_p0 = sext_ln151_37_fu_3897_p1;

assign mul_res_301_fu_13613_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_302_fu_13631_p0 = sext_ln151_39_fu_3929_p1;

assign mul_res_302_fu_13631_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_303_fu_13649_p0 = sext_ln151_41_fu_3961_p1;

assign mul_res_303_fu_13649_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_304_fu_13667_p0 = sext_ln151_43_fu_3993_p1;

assign mul_res_304_fu_13667_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_305_fu_13685_p0 = sext_ln151_45_fu_4025_p1;

assign mul_res_305_fu_13685_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_306_fu_13699_p0 = sext_ln151_47_fu_4057_p1;

assign mul_res_306_fu_13699_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_307_fu_13717_p0 = sext_ln151_49_fu_4089_p1;

assign mul_res_307_fu_13717_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_308_fu_13731_p0 = sext_ln151_51_fu_4121_p1;

assign mul_res_308_fu_13731_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_309_fu_13745_p0 = sext_ln151_53_fu_4153_p1;

assign mul_res_309_fu_13745_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_30_fu_4495_p0 = sext_ln151_70_fu_4483_p1;

assign mul_res_30_fu_4495_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_310_fu_13763_p0 = sext_ln151_55_fu_4185_p1;

assign mul_res_310_fu_13763_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_311_fu_13781_p0 = sext_ln151_57_fu_4217_p1;

assign mul_res_311_fu_13781_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_312_fu_13829_p0 = sext_ln151_58_fu_4291_p1;

assign mul_res_312_fu_13829_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_313_fu_13847_p0 = sext_ln151_60_fu_4323_p1;

assign mul_res_313_fu_13847_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_314_fu_13865_p0 = sext_ln151_62_fu_4355_p1;

assign mul_res_314_fu_13865_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_315_fu_13883_p0 = sext_ln151_64_fu_4387_p1;

assign mul_res_315_fu_13883_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_316_fu_13901_p0 = sext_ln151_66_fu_4419_p1;

assign mul_res_316_fu_13901_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_317_fu_13919_p0 = sext_ln151_68_fu_4451_p1;

assign mul_res_317_fu_13919_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_318_fu_13933_p0 = sext_ln151_70_fu_4483_p1;

assign mul_res_318_fu_13933_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_319_fu_13951_p0 = sext_ln151_72_fu_4515_p1;

assign mul_res_319_fu_13951_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_31_fu_4527_p0 = sext_ln151_72_fu_4515_p1;

assign mul_res_31_fu_4527_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_320_fu_13965_p0 = sext_ln151_74_fu_4547_p1;

assign mul_res_320_fu_13965_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_321_fu_13979_p0 = sext_ln151_76_fu_4579_p1;

assign mul_res_321_fu_13979_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_322_fu_13997_p0 = sext_ln151_78_fu_4611_p1;

assign mul_res_322_fu_13997_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_323_fu_14015_p0 = sext_ln151_80_fu_4643_p1;

assign mul_res_323_fu_14015_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_324_fu_14063_p0 = sext_ln151_81_fu_4717_p1;

assign mul_res_324_fu_14063_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_325_fu_14081_p0 = sext_ln151_83_fu_4749_p1;

assign mul_res_325_fu_14081_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_326_fu_14099_p0 = sext_ln151_85_fu_4781_p1;

assign mul_res_326_fu_14099_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_327_fu_14117_p0 = sext_ln151_87_fu_4813_p1;

assign mul_res_327_fu_14117_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_328_fu_14135_p0 = sext_ln151_89_fu_4845_p1;

assign mul_res_328_fu_14135_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_329_fu_14153_p0 = sext_ln151_91_fu_4877_p1;

assign mul_res_329_fu_14153_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_32_fu_4559_p0 = sext_ln151_74_fu_4547_p1;

assign mul_res_32_fu_4559_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_330_fu_14167_p0 = sext_ln151_93_fu_4909_p1;

assign mul_res_330_fu_14167_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_331_fu_14185_p0 = sext_ln151_95_fu_4941_p1;

assign mul_res_331_fu_14185_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_332_fu_14199_p0 = sext_ln151_97_fu_4973_p1;

assign mul_res_332_fu_14199_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_333_fu_14213_p0 = sext_ln151_99_fu_5005_p1;

assign mul_res_333_fu_14213_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_334_fu_14231_p0 = sext_ln151_101_fu_5037_p1;

assign mul_res_334_fu_14231_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_335_fu_14249_p0 = sext_ln151_103_fu_5069_p1;

assign mul_res_335_fu_14249_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_336_fu_14297_p0 = sext_ln151_104_fu_5143_p1;

assign mul_res_336_fu_14297_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_337_fu_14315_p0 = sext_ln151_106_fu_5175_p1;

assign mul_res_337_fu_14315_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_338_fu_14333_p0 = sext_ln151_108_fu_5207_p1;

assign mul_res_338_fu_14333_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_339_fu_14351_p0 = sext_ln151_110_fu_5239_p1;

assign mul_res_339_fu_14351_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_33_fu_4591_p0 = sext_ln151_76_fu_4579_p1;

assign mul_res_33_fu_4591_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_340_fu_14369_p0 = sext_ln151_112_fu_5271_p1;

assign mul_res_340_fu_14369_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_341_fu_14387_p0 = sext_ln151_114_fu_5303_p1;

assign mul_res_341_fu_14387_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_342_fu_14401_p0 = sext_ln151_116_fu_5335_p1;

assign mul_res_342_fu_14401_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_343_fu_14419_p0 = sext_ln151_118_fu_5367_p1;

assign mul_res_343_fu_14419_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_344_fu_14433_p0 = sext_ln151_120_fu_5399_p1;

assign mul_res_344_fu_14433_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_345_fu_14447_p0 = sext_ln151_122_fu_5431_p1;

assign mul_res_345_fu_14447_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_346_fu_14465_p0 = sext_ln151_124_fu_5463_p1;

assign mul_res_346_fu_14465_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_347_fu_14483_p0 = sext_ln151_126_fu_5495_p1;

assign mul_res_347_fu_14483_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_348_fu_14531_p0 = sext_ln151_127_fu_5569_p1;

assign mul_res_348_fu_14531_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_349_fu_14549_p0 = sext_ln151_129_fu_5601_p1;

assign mul_res_349_fu_14549_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_34_fu_4623_p0 = sext_ln151_78_fu_4611_p1;

assign mul_res_34_fu_4623_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_350_fu_14567_p0 = sext_ln151_131_fu_5633_p1;

assign mul_res_350_fu_14567_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_351_fu_14585_p0 = sext_ln151_133_fu_5665_p1;

assign mul_res_351_fu_14585_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_352_fu_14603_p0 = sext_ln151_135_fu_5697_p1;

assign mul_res_352_fu_14603_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_353_fu_14621_p0 = sext_ln151_137_fu_5729_p1;

assign mul_res_353_fu_14621_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_354_fu_14635_p0 = sext_ln151_139_fu_5761_p1;

assign mul_res_354_fu_14635_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_355_fu_14653_p0 = sext_ln151_141_fu_5793_p1;

assign mul_res_355_fu_14653_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_356_fu_14667_p0 = sext_ln151_143_fu_5825_p1;

assign mul_res_356_fu_14667_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_357_fu_14681_p0 = sext_ln151_145_fu_5857_p1;

assign mul_res_357_fu_14681_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_358_fu_14699_p0 = sext_ln151_147_fu_5889_p1;

assign mul_res_358_fu_14699_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_359_fu_14717_p0 = sext_ln151_149_fu_5921_p1;

assign mul_res_359_fu_14717_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_35_fu_4655_p0 = sext_ln151_80_fu_4643_p1;

assign mul_res_35_fu_4655_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_360_fu_14765_p0 = sext_ln151_150_fu_5995_p1;

assign mul_res_360_fu_14765_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_361_fu_14783_p0 = sext_ln151_152_fu_6027_p1;

assign mul_res_361_fu_14783_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_362_fu_14801_p0 = sext_ln151_154_fu_6059_p1;

assign mul_res_362_fu_14801_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_363_fu_14819_p0 = sext_ln151_156_fu_6091_p1;

assign mul_res_363_fu_14819_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_364_fu_14837_p0 = sext_ln151_158_fu_6123_p1;

assign mul_res_364_fu_14837_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_365_fu_14855_p0 = sext_ln151_160_fu_6155_p1;

assign mul_res_365_fu_14855_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_366_fu_14869_p0 = sext_ln151_162_fu_6187_p1;

assign mul_res_366_fu_14869_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_367_fu_14887_p0 = sext_ln151_164_fu_6219_p1;

assign mul_res_367_fu_14887_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_368_fu_14901_p0 = sext_ln151_166_fu_6251_p1;

assign mul_res_368_fu_14901_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_369_fu_14915_p0 = sext_ln151_168_fu_6283_p1;

assign mul_res_369_fu_14915_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_36_fu_4729_p0 = sext_ln151_81_fu_4717_p1;

assign mul_res_36_fu_4729_p1 = sext_ln151_fu_3403_p1;

assign mul_res_370_fu_14933_p0 = sext_ln151_170_fu_6315_p1;

assign mul_res_370_fu_14933_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_371_fu_14951_p0 = sext_ln151_172_fu_6347_p1;

assign mul_res_371_fu_14951_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_372_fu_14999_p0 = sext_ln151_173_fu_6421_p1;

assign mul_res_372_fu_14999_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_373_fu_15017_p0 = sext_ln151_175_fu_6453_p1;

assign mul_res_373_fu_15017_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_374_fu_15035_p0 = sext_ln151_177_fu_6485_p1;

assign mul_res_374_fu_15035_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_375_fu_15053_p0 = sext_ln151_179_fu_6517_p1;

assign mul_res_375_fu_15053_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_376_fu_15071_p0 = sext_ln151_181_fu_6549_p1;

assign mul_res_376_fu_15071_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_377_fu_15089_p0 = sext_ln151_183_fu_6581_p1;

assign mul_res_377_fu_15089_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_378_fu_15103_p0 = sext_ln151_185_fu_6613_p1;

assign mul_res_378_fu_15103_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_379_fu_15121_p0 = sext_ln151_187_fu_6645_p1;

assign mul_res_379_fu_15121_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_37_fu_4761_p0 = sext_ln151_83_fu_4749_p1;

assign mul_res_37_fu_4761_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_380_fu_15135_p0 = sext_ln151_189_fu_6677_p1;

assign mul_res_380_fu_15135_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_381_fu_15149_p0 = sext_ln151_191_fu_6709_p1;

assign mul_res_381_fu_15149_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_382_fu_15167_p0 = sext_ln151_193_fu_6741_p1;

assign mul_res_382_fu_15167_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_383_fu_15185_p0 = sext_ln151_195_fu_6773_p1;

assign mul_res_383_fu_15185_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_384_fu_15233_p0 = sext_ln151_196_fu_6847_p1;

assign mul_res_384_fu_15233_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_385_fu_15251_p0 = sext_ln151_198_fu_6879_p1;

assign mul_res_385_fu_15251_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_386_fu_15269_p0 = sext_ln151_200_fu_6911_p1;

assign mul_res_386_fu_15269_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_387_fu_15287_p0 = sext_ln151_202_fu_6943_p1;

assign mul_res_387_fu_15287_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_388_fu_15305_p0 = sext_ln151_204_fu_6975_p1;

assign mul_res_388_fu_15305_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_389_fu_15323_p0 = sext_ln151_206_fu_7007_p1;

assign mul_res_389_fu_15323_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_38_fu_4793_p0 = sext_ln151_85_fu_4781_p1;

assign mul_res_38_fu_4793_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_390_fu_15337_p0 = sext_ln151_208_fu_7039_p1;

assign mul_res_390_fu_15337_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_391_fu_15355_p0 = sext_ln151_210_fu_7071_p1;

assign mul_res_391_fu_15355_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_392_fu_15369_p0 = sext_ln151_212_fu_7103_p1;

assign mul_res_392_fu_15369_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_393_fu_15383_p0 = sext_ln151_214_fu_7135_p1;

assign mul_res_393_fu_15383_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_394_fu_15401_p0 = sext_ln151_216_fu_7167_p1;

assign mul_res_394_fu_15401_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_395_fu_15419_p0 = sext_ln151_218_fu_7199_p1;

assign mul_res_395_fu_15419_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_396_fu_15467_p0 = sext_ln151_219_fu_7273_p1;

assign mul_res_396_fu_15467_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_397_fu_15485_p0 = sext_ln151_221_fu_7305_p1;

assign mul_res_397_fu_15485_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_398_fu_15503_p0 = sext_ln151_223_fu_7337_p1;

assign mul_res_398_fu_15503_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_399_fu_15521_p0 = sext_ln151_225_fu_7369_p1;

assign mul_res_399_fu_15521_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_39_fu_4825_p0 = sext_ln151_87_fu_4813_p1;

assign mul_res_39_fu_4825_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_3_fu_3523_p0 = sext_ln151_10_fu_3511_p1;

assign mul_res_3_fu_3523_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_400_fu_15539_p0 = sext_ln151_227_fu_7401_p1;

assign mul_res_400_fu_15539_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_401_fu_15557_p0 = sext_ln151_229_fu_7433_p1;

assign mul_res_401_fu_15557_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_402_fu_15571_p0 = sext_ln151_231_fu_7465_p1;

assign mul_res_402_fu_15571_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_403_fu_15589_p0 = sext_ln151_233_fu_7497_p1;

assign mul_res_403_fu_15589_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_404_fu_15603_p0 = sext_ln151_235_fu_7529_p1;

assign mul_res_404_fu_15603_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_405_fu_15617_p0 = sext_ln151_237_fu_7561_p1;

assign mul_res_405_fu_15617_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_406_fu_15635_p0 = sext_ln151_239_fu_7593_p1;

assign mul_res_406_fu_15635_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_407_fu_15653_p0 = sext_ln151_241_fu_7625_p1;

assign mul_res_407_fu_15653_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_408_fu_15701_p0 = sext_ln151_242_fu_7699_p1;

assign mul_res_408_fu_15701_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_409_fu_15719_p0 = sext_ln151_244_fu_7731_p1;

assign mul_res_409_fu_15719_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_40_fu_4857_p0 = sext_ln151_89_fu_4845_p1;

assign mul_res_40_fu_4857_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_410_fu_15737_p0 = sext_ln151_246_fu_7763_p1;

assign mul_res_410_fu_15737_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_411_fu_15755_p0 = sext_ln151_248_fu_7795_p1;

assign mul_res_411_fu_15755_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_412_fu_15773_p0 = sext_ln151_250_fu_7827_p1;

assign mul_res_412_fu_15773_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_413_fu_15791_p0 = sext_ln151_252_fu_7859_p1;

assign mul_res_413_fu_15791_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_414_fu_15805_p0 = sext_ln151_254_fu_7887_p1;

assign mul_res_414_fu_15805_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_415_fu_15823_p0 = sext_ln151_256_fu_7919_p1;

assign mul_res_415_fu_15823_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_416_fu_15837_p0 = sext_ln151_258_fu_7947_p1;

assign mul_res_416_fu_15837_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_417_fu_15851_p0 = sext_ln151_260_fu_7975_p1;

assign mul_res_417_fu_15851_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_418_fu_15869_p0 = sext_ln151_262_fu_8007_p1;

assign mul_res_418_fu_15869_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_419_fu_15887_p0 = sext_ln151_264_fu_8039_p1;

assign mul_res_419_fu_15887_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_41_fu_4889_p0 = sext_ln151_91_fu_4877_p1;

assign mul_res_41_fu_4889_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_420_fu_15935_p0 = sext_ln151_265_fu_8101_p1;

assign mul_res_420_fu_15935_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_421_fu_15953_p0 = sext_ln151_267_fu_8133_p1;

assign mul_res_421_fu_15953_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_422_fu_15971_p0 = sext_ln151_269_fu_8165_p1;

assign mul_res_422_fu_15971_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_423_fu_15989_p0 = sext_ln151_271_fu_8197_p1;

assign mul_res_423_fu_15989_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_424_fu_16007_p0 = sext_ln151_273_fu_8229_p1;

assign mul_res_424_fu_16007_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_425_fu_16025_p0 = sext_ln151_275_fu_8261_p1;

assign mul_res_425_fu_16025_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_426_fu_16039_p0 = sext_ln151_277_fu_8289_p1;

assign mul_res_426_fu_16039_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_427_fu_16057_p0 = sext_ln151_279_fu_8321_p1;

assign mul_res_427_fu_16057_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_428_fu_16071_p0 = sext_ln151_281_fu_8349_p1;

assign mul_res_428_fu_16071_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_429_fu_16085_p0 = sext_ln151_283_fu_8377_p1;

assign mul_res_429_fu_16085_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_42_fu_4921_p0 = sext_ln151_93_fu_4909_p1;

assign mul_res_42_fu_4921_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_430_fu_16103_p0 = sext_ln151_285_fu_8409_p1;

assign mul_res_430_fu_16103_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_431_fu_16121_p0 = sext_ln151_287_fu_8441_p1;

assign mul_res_431_fu_16121_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_432_fu_16169_p0 = sext_ln151_288_fu_8503_p1;

assign mul_res_432_fu_16169_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_433_fu_16187_p0 = sext_ln151_290_fu_8535_p1;

assign mul_res_433_fu_16187_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_434_fu_16205_p0 = sext_ln151_292_fu_8567_p1;

assign mul_res_434_fu_16205_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_435_fu_16223_p0 = sext_ln151_294_fu_8599_p1;

assign mul_res_435_fu_16223_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_436_fu_16241_p0 = sext_ln151_296_fu_8631_p1;

assign mul_res_436_fu_16241_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_437_fu_16259_p0 = sext_ln151_298_fu_8663_p1;

assign mul_res_437_fu_16259_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_438_fu_16273_p0 = sext_ln151_300_fu_8691_p1;

assign mul_res_438_fu_16273_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_439_fu_16291_p0 = sext_ln151_302_fu_8723_p1;

assign mul_res_439_fu_16291_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_43_fu_4953_p0 = sext_ln151_95_fu_4941_p1;

assign mul_res_43_fu_4953_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_440_fu_16305_p0 = sext_ln151_304_fu_8751_p1;

assign mul_res_440_fu_16305_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_441_fu_16319_p0 = sext_ln151_306_fu_8779_p1;

assign mul_res_441_fu_16319_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_442_fu_16337_p0 = sext_ln151_308_fu_8811_p1;

assign mul_res_442_fu_16337_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_443_fu_16355_p0 = sext_ln151_310_fu_8843_p1;

assign mul_res_443_fu_16355_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_444_fu_16403_p0 = sext_ln151_311_fu_8905_p1;

assign mul_res_444_fu_16403_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_445_fu_16421_p0 = sext_ln151_313_fu_8937_p1;

assign mul_res_445_fu_16421_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_446_fu_16439_p0 = sext_ln151_315_fu_8969_p1;

assign mul_res_446_fu_16439_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_447_fu_16457_p0 = sext_ln151_317_fu_9001_p1;

assign mul_res_447_fu_16457_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_448_fu_16475_p0 = sext_ln151_319_fu_9033_p1;

assign mul_res_448_fu_16475_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_449_fu_16493_p0 = sext_ln151_321_fu_9065_p1;

assign mul_res_449_fu_16493_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_44_fu_4985_p0 = sext_ln151_97_fu_4973_p1;

assign mul_res_44_fu_4985_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_450_fu_16507_p0 = sext_ln151_323_fu_9093_p1;

assign mul_res_450_fu_16507_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_451_fu_16525_p0 = sext_ln151_325_fu_9125_p1;

assign mul_res_451_fu_16525_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_452_fu_16539_p0 = sext_ln151_327_fu_9153_p1;

assign mul_res_452_fu_16539_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_453_fu_16553_p0 = sext_ln151_329_fu_9181_p1;

assign mul_res_453_fu_16553_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_454_fu_16571_p0 = sext_ln151_331_fu_9213_p1;

assign mul_res_454_fu_16571_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_455_fu_16589_p0 = sext_ln151_333_fu_9245_p1;

assign mul_res_455_fu_16589_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_456_fu_16637_p0 = sext_ln151_334_fu_9307_p1;

assign mul_res_456_fu_16637_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_457_fu_16655_p0 = sext_ln151_336_fu_9339_p1;

assign mul_res_457_fu_16655_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_458_fu_16673_p0 = sext_ln151_338_fu_9371_p1;

assign mul_res_458_fu_16673_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_459_fu_16691_p0 = sext_ln151_340_fu_9403_p1;

assign mul_res_459_fu_16691_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_45_fu_5017_p0 = sext_ln151_99_fu_5005_p1;

assign mul_res_45_fu_5017_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_460_fu_16709_p0 = sext_ln151_342_fu_9435_p1;

assign mul_res_460_fu_16709_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_461_fu_16727_p0 = sext_ln151_344_fu_9467_p1;

assign mul_res_461_fu_16727_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_462_fu_16741_p0 = sext_ln151_346_fu_9495_p1;

assign mul_res_462_fu_16741_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_463_fu_16759_p0 = sext_ln151_348_fu_9527_p1;

assign mul_res_463_fu_16759_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_464_fu_16773_p0 = sext_ln151_350_fu_9555_p1;

assign mul_res_464_fu_16773_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_465_fu_16787_p0 = sext_ln151_352_fu_9583_p1;

assign mul_res_465_fu_16787_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_466_fu_16805_p0 = sext_ln151_354_fu_9615_p1;

assign mul_res_466_fu_16805_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_467_fu_16823_p0 = sext_ln151_356_fu_9647_p1;

assign mul_res_467_fu_16823_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_468_fu_16871_p0 = sext_ln151_357_fu_9709_p1;

assign mul_res_468_fu_16871_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_469_fu_16889_p0 = sext_ln151_359_fu_9741_p1;

assign mul_res_469_fu_16889_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_46_fu_5049_p0 = sext_ln151_101_fu_5037_p1;

assign mul_res_46_fu_5049_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_470_fu_16907_p0 = sext_ln151_361_fu_9773_p1;

assign mul_res_470_fu_16907_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_471_fu_16925_p0 = sext_ln151_363_fu_9805_p1;

assign mul_res_471_fu_16925_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_472_fu_16943_p0 = sext_ln151_365_fu_9837_p1;

assign mul_res_472_fu_16943_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_473_fu_16961_p0 = sext_ln151_367_fu_9869_p1;

assign mul_res_473_fu_16961_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_474_fu_16975_p0 = sext_ln151_369_fu_9897_p1;

assign mul_res_474_fu_16975_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_475_fu_16993_p0 = sext_ln151_371_fu_9929_p1;

assign mul_res_475_fu_16993_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_476_fu_17007_p0 = sext_ln151_373_fu_9957_p1;

assign mul_res_476_fu_17007_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_477_fu_17021_p0 = sext_ln151_375_fu_9985_p1;

assign mul_res_477_fu_17021_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_478_fu_17039_p0 = sext_ln151_377_fu_10017_p1;

assign mul_res_478_fu_17039_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_479_fu_17057_p0 = sext_ln151_379_fu_10049_p1;

assign mul_res_479_fu_17057_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_47_fu_5081_p0 = sext_ln151_103_fu_5069_p1;

assign mul_res_47_fu_5081_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_480_fu_17105_p0 = sext_ln151_380_fu_10111_p1;

assign mul_res_480_fu_17105_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_481_fu_17123_p0 = sext_ln151_382_fu_10143_p1;

assign mul_res_481_fu_17123_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_482_fu_17141_p0 = sext_ln151_384_fu_10175_p1;

assign mul_res_482_fu_17141_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_483_fu_17159_p0 = sext_ln151_386_fu_10207_p1;

assign mul_res_483_fu_17159_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_484_fu_17177_p0 = sext_ln151_388_fu_10239_p1;

assign mul_res_484_fu_17177_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_485_fu_17195_p0 = sext_ln151_390_fu_10271_p1;

assign mul_res_485_fu_17195_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_486_fu_17209_p0 = sext_ln151_392_fu_10299_p1;

assign mul_res_486_fu_17209_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_487_fu_17227_p0 = sext_ln151_394_fu_10331_p1;

assign mul_res_487_fu_17227_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_488_fu_17241_p0 = sext_ln151_396_fu_10359_p1;

assign mul_res_488_fu_17241_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_489_fu_17255_p0 = sext_ln151_398_fu_10387_p1;

assign mul_res_489_fu_17255_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_48_fu_5155_p0 = sext_ln151_104_fu_5143_p1;

assign mul_res_48_fu_5155_p1 = sext_ln151_fu_3403_p1;

assign mul_res_490_fu_17273_p0 = sext_ln151_400_fu_10419_p1;

assign mul_res_490_fu_17273_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_491_fu_17291_p0 = sext_ln151_402_fu_10451_p1;

assign mul_res_491_fu_17291_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_492_fu_17339_p0 = sext_ln151_403_fu_10513_p1;

assign mul_res_492_fu_17339_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_493_fu_17357_p0 = sext_ln151_405_fu_10545_p1;

assign mul_res_493_fu_17357_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_494_fu_17375_p0 = sext_ln151_407_fu_10577_p1;

assign mul_res_494_fu_17375_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_495_fu_17393_p0 = sext_ln151_409_fu_10609_p1;

assign mul_res_495_fu_17393_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_496_fu_17411_p0 = sext_ln151_411_fu_10641_p1;

assign mul_res_496_fu_17411_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_497_fu_17429_p0 = sext_ln151_413_fu_10673_p1;

assign mul_res_497_fu_17429_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_498_fu_17443_p0 = sext_ln151_415_fu_10701_p1;

assign mul_res_498_fu_17443_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_499_fu_17461_p0 = sext_ln151_417_fu_10733_p1;

assign mul_res_499_fu_17461_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_49_fu_5187_p0 = sext_ln151_106_fu_5175_p1;

assign mul_res_49_fu_5187_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_4_fu_3558_p0 = sext_ln151_13_fu_3546_p1;

assign mul_res_4_fu_3558_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_500_fu_17475_p0 = sext_ln151_419_fu_10761_p1;

assign mul_res_500_fu_17475_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_501_fu_17489_p0 = sext_ln151_421_fu_10789_p1;

assign mul_res_501_fu_17489_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_502_fu_17507_p0 = sext_ln151_423_fu_10821_p1;

assign mul_res_502_fu_17507_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_503_fu_17525_p0 = sext_ln151_425_fu_10853_p1;

assign mul_res_503_fu_17525_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_504_fu_17573_p0 = sext_ln151_426_fu_10915_p1;

assign mul_res_504_fu_17573_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_505_fu_17591_p0 = sext_ln151_428_fu_10947_p1;

assign mul_res_505_fu_17591_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_506_fu_17609_p0 = sext_ln151_430_fu_10979_p1;

assign mul_res_506_fu_17609_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_507_fu_17627_p0 = sext_ln151_432_fu_11011_p1;

assign mul_res_507_fu_17627_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_508_fu_17645_p0 = sext_ln151_434_fu_11043_p1;

assign mul_res_508_fu_17645_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_509_fu_17663_p0 = sext_ln151_436_fu_11075_p1;

assign mul_res_509_fu_17663_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_50_fu_5219_p0 = sext_ln151_108_fu_5207_p1;

assign mul_res_50_fu_5219_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_510_fu_17677_p0 = sext_ln151_438_fu_11103_p1;

assign mul_res_510_fu_17677_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_511_fu_17695_p0 = sext_ln151_440_fu_11135_p1;

assign mul_res_511_fu_17695_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_512_fu_17709_p0 = sext_ln151_442_fu_11163_p1;

assign mul_res_512_fu_17709_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_513_fu_17723_p0 = sext_ln151_444_fu_11191_p1;

assign mul_res_513_fu_17723_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_514_fu_17741_p0 = sext_ln151_446_fu_11223_p1;

assign mul_res_514_fu_17741_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_515_fu_17759_p0 = sext_ln151_448_fu_11255_p1;

assign mul_res_515_fu_17759_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_516_fu_17807_p0 = sext_ln151_449_fu_11317_p1;

assign mul_res_516_fu_17807_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_517_fu_17825_p0 = sext_ln151_451_fu_11349_p1;

assign mul_res_517_fu_17825_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_518_fu_17843_p0 = sext_ln151_453_fu_11381_p1;

assign mul_res_518_fu_17843_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_519_fu_17861_p0 = sext_ln151_455_fu_11413_p1;

assign mul_res_519_fu_17861_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_51_fu_5251_p0 = sext_ln151_110_fu_5239_p1;

assign mul_res_51_fu_5251_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_520_fu_17879_p0 = sext_ln151_457_fu_11445_p1;

assign mul_res_520_fu_17879_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_521_fu_17897_p0 = sext_ln151_459_fu_11477_p1;

assign mul_res_521_fu_17897_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_522_fu_17911_p0 = sext_ln151_461_fu_11505_p1;

assign mul_res_522_fu_17911_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_523_fu_17929_p0 = sext_ln151_463_fu_11537_p1;

assign mul_res_523_fu_17929_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_524_fu_17943_p0 = sext_ln151_465_fu_11565_p1;

assign mul_res_524_fu_17943_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_525_fu_17957_p0 = sext_ln151_467_fu_11593_p1;

assign mul_res_525_fu_17957_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_526_fu_17975_p0 = sext_ln151_469_fu_11625_p1;

assign mul_res_526_fu_17975_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_527_fu_17993_p0 = sext_ln151_471_fu_11657_p1;

assign mul_res_527_fu_17993_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_528_fu_18041_p0 = sext_ln151_472_fu_11719_p1;

assign mul_res_528_fu_18041_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_529_fu_18059_p0 = sext_ln151_474_fu_11751_p1;

assign mul_res_529_fu_18059_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_52_fu_5283_p0 = sext_ln151_112_fu_5271_p1;

assign mul_res_52_fu_5283_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_530_fu_18077_p0 = sext_ln151_476_fu_11783_p1;

assign mul_res_530_fu_18077_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_531_fu_18095_p0 = sext_ln151_478_fu_11815_p1;

assign mul_res_531_fu_18095_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_532_fu_18113_p0 = sext_ln151_480_fu_11847_p1;

assign mul_res_532_fu_18113_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_533_fu_18131_p0 = sext_ln151_482_fu_11879_p1;

assign mul_res_533_fu_18131_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_534_fu_18145_p0 = sext_ln151_484_fu_11907_p1;

assign mul_res_534_fu_18145_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_535_fu_18163_p0 = sext_ln151_486_fu_11939_p1;

assign mul_res_535_fu_18163_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_536_fu_18177_p0 = sext_ln151_488_fu_11967_p1;

assign mul_res_536_fu_18177_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_537_fu_18191_p0 = sext_ln151_490_fu_11995_p1;

assign mul_res_537_fu_18191_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_538_fu_18209_p0 = sext_ln151_492_fu_12027_p1;

assign mul_res_538_fu_18209_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_539_fu_18227_p0 = sext_ln151_494_fu_12059_p1;

assign mul_res_539_fu_18227_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_53_fu_5315_p0 = sext_ln151_114_fu_5303_p1;

assign mul_res_53_fu_5315_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_540_fu_18275_p0 = sext_ln151_495_fu_12121_p1;

assign mul_res_540_fu_18275_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_541_fu_18293_p0 = sext_ln151_497_fu_12153_p1;

assign mul_res_541_fu_18293_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_542_fu_18311_p0 = sext_ln151_499_fu_12185_p1;

assign mul_res_542_fu_18311_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_543_fu_18329_p0 = sext_ln151_501_fu_12217_p1;

assign mul_res_543_fu_18329_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_544_fu_18347_p0 = sext_ln151_503_fu_12249_p1;

assign mul_res_544_fu_18347_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_545_fu_18365_p0 = sext_ln151_505_fu_12281_p1;

assign mul_res_545_fu_18365_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_546_fu_18379_p0 = sext_ln151_507_fu_12309_p1;

assign mul_res_546_fu_18379_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_547_fu_18397_p0 = sext_ln151_509_fu_12341_p1;

assign mul_res_547_fu_18397_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_548_fu_18411_p0 = sext_ln151_511_fu_12369_p1;

assign mul_res_548_fu_18411_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_549_fu_18425_p0 = sext_ln151_513_fu_12397_p1;

assign mul_res_549_fu_18425_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_54_fu_5347_p0 = sext_ln151_116_fu_5335_p1;

assign mul_res_54_fu_5347_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_550_fu_18443_p0 = sext_ln151_515_fu_12429_p1;

assign mul_res_550_fu_18443_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_551_fu_18461_p0 = sext_ln151_517_fu_12461_p1;

assign mul_res_551_fu_18461_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_552_fu_18509_p0 = sext_ln151_518_fu_12523_p1;

assign mul_res_552_fu_18509_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_553_fu_18527_p0 = sext_ln151_520_fu_12555_p1;

assign mul_res_553_fu_18527_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_554_fu_18545_p0 = sext_ln151_522_fu_12587_p1;

assign mul_res_554_fu_18545_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_555_fu_18563_p0 = sext_ln151_524_fu_12619_p1;

assign mul_res_555_fu_18563_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_556_fu_18581_p0 = sext_ln151_526_fu_12651_p1;

assign mul_res_556_fu_18581_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_557_fu_18599_p0 = sext_ln151_528_fu_12683_p1;

assign mul_res_557_fu_18599_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_558_fu_18613_p0 = sext_ln151_530_fu_12711_p1;

assign mul_res_558_fu_18613_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_559_fu_18631_p0 = sext_ln151_532_fu_12743_p1;

assign mul_res_559_fu_18631_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_55_fu_5379_p0 = sext_ln151_118_fu_5367_p1;

assign mul_res_55_fu_5379_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_560_fu_18645_p0 = sext_ln151_534_fu_12771_p1;

assign mul_res_560_fu_18645_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_561_fu_18659_p0 = sext_ln151_536_fu_12799_p1;

assign mul_res_561_fu_18659_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_562_fu_18677_p0 = sext_ln151_538_fu_12831_p1;

assign mul_res_562_fu_18677_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_563_fu_18695_p0 = sext_ln151_540_fu_12863_p1;

assign mul_res_563_fu_18695_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_564_fu_18743_p0 = sext_ln151_541_fu_12925_p1;

assign mul_res_564_fu_18743_p1 = sext_ln151_564_fu_13317_p1;

assign mul_res_565_fu_18761_p0 = sext_ln151_543_fu_12957_p1;

assign mul_res_565_fu_18761_p1 = sext_ln151_566_fu_13338_p1;

assign mul_res_566_fu_18779_p0 = sext_ln151_545_fu_12989_p1;

assign mul_res_566_fu_18779_p1 = sext_ln151_568_fu_13359_p1;

assign mul_res_567_fu_18797_p0 = sext_ln151_547_fu_13021_p1;

assign mul_res_567_fu_18797_p1 = sext_ln151_570_fu_13380_p1;

assign mul_res_568_fu_18815_p0 = sext_ln151_549_fu_13053_p1;

assign mul_res_568_fu_18815_p1 = sext_ln151_572_fu_13401_p1;

assign mul_res_569_fu_18833_p0 = sext_ln151_551_fu_13085_p1;

assign mul_res_569_fu_18833_p1 = sext_ln151_574_fu_13422_p1;

assign mul_res_56_fu_5411_p0 = sext_ln151_120_fu_5399_p1;

assign mul_res_56_fu_5411_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_570_fu_18847_p0 = sext_ln151_553_fu_13113_p1;

assign mul_res_570_fu_18847_p1 = sext_ln151_576_fu_13439_p1;

assign mul_res_571_fu_18865_p0 = sext_ln151_555_fu_13145_p1;

assign mul_res_571_fu_18865_p1 = sext_ln151_578_fu_13460_p1;

assign mul_res_572_fu_18879_p0 = sext_ln151_557_fu_13173_p1;

assign mul_res_572_fu_18879_p1 = sext_ln151_580_fu_13477_p1;

assign mul_res_573_fu_18893_p0 = sext_ln151_559_fu_13201_p1;

assign mul_res_573_fu_18893_p1 = sext_ln151_582_fu_13494_p1;

assign mul_res_574_fu_18911_p0 = sext_ln151_561_fu_13233_p1;

assign mul_res_574_fu_18911_p1 = sext_ln151_584_fu_13515_p1;

assign mul_res_575_fu_18929_p0 = sext_ln151_563_fu_13265_p1;

assign mul_res_575_fu_18929_p1 = sext_ln151_586_fu_13536_p1;

assign mul_res_57_fu_5443_p0 = sext_ln151_122_fu_5431_p1;

assign mul_res_57_fu_5443_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_58_fu_5475_p0 = sext_ln151_124_fu_5463_p1;

assign mul_res_58_fu_5475_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_59_fu_5507_p0 = sext_ln151_126_fu_5495_p1;

assign mul_res_59_fu_5507_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_5_fu_3593_p0 = sext_ln151_16_fu_3581_p1;

assign mul_res_5_fu_3593_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_60_fu_5581_p0 = sext_ln151_127_fu_5569_p1;

assign mul_res_60_fu_5581_p1 = sext_ln151_fu_3403_p1;

assign mul_res_61_fu_5613_p0 = sext_ln151_129_fu_5601_p1;

assign mul_res_61_fu_5613_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_62_fu_5645_p0 = sext_ln151_131_fu_5633_p1;

assign mul_res_62_fu_5645_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_63_fu_5677_p0 = sext_ln151_133_fu_5665_p1;

assign mul_res_63_fu_5677_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_64_fu_5709_p0 = sext_ln151_135_fu_5697_p1;

assign mul_res_64_fu_5709_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_65_fu_5741_p0 = sext_ln151_137_fu_5729_p1;

assign mul_res_65_fu_5741_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_66_fu_5773_p0 = sext_ln151_139_fu_5761_p1;

assign mul_res_66_fu_5773_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_67_fu_5805_p0 = sext_ln151_141_fu_5793_p1;

assign mul_res_67_fu_5805_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_68_fu_5837_p0 = sext_ln151_143_fu_5825_p1;

assign mul_res_68_fu_5837_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_69_fu_5869_p0 = sext_ln151_145_fu_5857_p1;

assign mul_res_69_fu_5869_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_6_fu_3628_p0 = sext_ln151_19_fu_3616_p1;

assign mul_res_6_fu_3628_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_70_fu_5901_p0 = sext_ln151_147_fu_5889_p1;

assign mul_res_70_fu_5901_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_71_fu_5933_p0 = sext_ln151_149_fu_5921_p1;

assign mul_res_71_fu_5933_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_72_fu_6007_p0 = sext_ln151_150_fu_5995_p1;

assign mul_res_72_fu_6007_p1 = sext_ln151_fu_3403_p1;

assign mul_res_73_fu_6039_p0 = sext_ln151_152_fu_6027_p1;

assign mul_res_73_fu_6039_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_74_fu_6071_p0 = sext_ln151_154_fu_6059_p1;

assign mul_res_74_fu_6071_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_75_fu_6103_p0 = sext_ln151_156_fu_6091_p1;

assign mul_res_75_fu_6103_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_76_fu_6135_p0 = sext_ln151_158_fu_6123_p1;

assign mul_res_76_fu_6135_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_77_fu_6167_p0 = sext_ln151_160_fu_6155_p1;

assign mul_res_77_fu_6167_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_78_fu_6199_p0 = sext_ln151_162_fu_6187_p1;

assign mul_res_78_fu_6199_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_79_fu_6231_p0 = sext_ln151_164_fu_6219_p1;

assign mul_res_79_fu_6231_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_7_fu_3663_p0 = sext_ln151_22_fu_3651_p1;

assign mul_res_7_fu_3663_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_80_fu_6263_p0 = sext_ln151_166_fu_6251_p1;

assign mul_res_80_fu_6263_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_81_fu_6295_p0 = sext_ln151_168_fu_6283_p1;

assign mul_res_81_fu_6295_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_82_fu_6327_p0 = sext_ln151_170_fu_6315_p1;

assign mul_res_82_fu_6327_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_83_fu_6359_p0 = sext_ln151_172_fu_6347_p1;

assign mul_res_83_fu_6359_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_84_fu_6433_p0 = sext_ln151_173_fu_6421_p1;

assign mul_res_84_fu_6433_p1 = sext_ln151_fu_3403_p1;

assign mul_res_85_fu_6465_p0 = sext_ln151_175_fu_6453_p1;

assign mul_res_85_fu_6465_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_86_fu_6497_p0 = sext_ln151_177_fu_6485_p1;

assign mul_res_86_fu_6497_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_87_fu_6529_p0 = sext_ln151_179_fu_6517_p1;

assign mul_res_87_fu_6529_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_88_fu_6561_p0 = sext_ln151_181_fu_6549_p1;

assign mul_res_88_fu_6561_p1 = sext_ln151_12_fu_3543_p1;

assign mul_res_89_fu_6593_p0 = sext_ln151_183_fu_6581_p1;

assign mul_res_89_fu_6593_p1 = sext_ln151_15_fu_3578_p1;

assign mul_res_8_fu_3698_p0 = sext_ln151_25_fu_3686_p1;

assign mul_res_8_fu_3698_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_90_fu_6625_p0 = sext_ln151_185_fu_6613_p1;

assign mul_res_90_fu_6625_p1 = sext_ln151_18_fu_3613_p1;

assign mul_res_91_fu_6657_p0 = sext_ln151_187_fu_6645_p1;

assign mul_res_91_fu_6657_p1 = sext_ln151_21_fu_3648_p1;

assign mul_res_92_fu_6689_p0 = sext_ln151_189_fu_6677_p1;

assign mul_res_92_fu_6689_p1 = sext_ln151_24_fu_3683_p1;

assign mul_res_93_fu_6721_p0 = sext_ln151_191_fu_6709_p1;

assign mul_res_93_fu_6721_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_94_fu_6753_p0 = sext_ln151_193_fu_6741_p1;

assign mul_res_94_fu_6753_p1 = sext_ln151_30_fu_3753_p1;

assign mul_res_95_fu_6785_p0 = sext_ln151_195_fu_6773_p1;

assign mul_res_95_fu_6785_p1 = sext_ln151_33_fu_3788_p1;

assign mul_res_96_fu_6859_p0 = sext_ln151_196_fu_6847_p1;

assign mul_res_96_fu_6859_p1 = sext_ln151_fu_3403_p1;

assign mul_res_97_fu_6891_p0 = sext_ln151_198_fu_6879_p1;

assign mul_res_97_fu_6891_p1 = sext_ln151_3_fu_3438_p1;

assign mul_res_98_fu_6923_p0 = sext_ln151_200_fu_6911_p1;

assign mul_res_98_fu_6923_p1 = sext_ln151_6_fu_3473_p1;

assign mul_res_99_fu_6955_p0 = sext_ln151_202_fu_6943_p1;

assign mul_res_99_fu_6955_p1 = sext_ln151_9_fu_3508_p1;

assign mul_res_9_fu_3733_p0 = sext_ln151_28_fu_3721_p1;

assign mul_res_9_fu_3733_p1 = sext_ln151_27_fu_3718_p1;

assign mul_res_fu_3418_p0 = sext_ln151_1_fu_3406_p1;

assign mul_res_fu_3418_p1 = sext_ln151_fu_3403_p1;

assign or_ln121_fu_2831_p2 = (icmp_ln121_reg_23799 | and_ln120_fu_2819_p2);

assign select_ln120_fu_2801_p3 = ((icmp_ln121_reg_23799[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_cot_load);

assign select_ln121_1_fu_2844_p3 = ((and_ln120_fu_2819_p2[0:0] == 1'b1) ? add_ln121_fu_2825_p2 : select_ln120_fu_2801_p3);

assign select_ln121_2_fu_2757_p3 = ((icmp_ln121_fu_2745_p2[0:0] == 1'b1) ? 11'd1 : add_ln121_1_fu_2751_p2);

assign select_ln121_fu_2836_p3 = ((or_ln121_fu_2831_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_cit_load);

assign select_ln126_10_fu_19321_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_13_reg_24087 : p_0_0_0_13799_fu_2578);

assign select_ln126_11_fu_19327_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_12_reg_24081 : p_0_0_0_12797_fu_2574);

assign select_ln126_12_fu_19333_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_11_reg_24075 : p_0_0_0_11795_fu_2570);

assign select_ln126_13_fu_19339_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_10_reg_24069 : p_0_0_0_10793_fu_2566);

assign select_ln126_14_fu_19345_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_9_reg_24063 : p_0_0_0_9791_fu_2562);

assign select_ln126_15_fu_19351_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_8_reg_24057 : p_0_0_0_8789_fu_2558);

assign select_ln126_16_fu_19357_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_7_reg_24051 : p_0_0_0_7787_fu_2554);

assign select_ln126_17_fu_19363_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_6_reg_24045 : p_0_0_0_6785_fu_2550);

assign select_ln126_18_fu_19369_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_5_reg_24039 : p_0_0_0_5783_fu_2546);

assign select_ln126_19_fu_19375_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_4_reg_24033 : p_0_0_0_4781_fu_2542);

assign select_ln126_1_fu_19267_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_22_reg_24141 : p_0_0_0_22817_fu_2614);

assign select_ln126_20_fu_19381_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_3_reg_24027 : p_0_0_0_3779_fu_2538);

assign select_ln126_21_fu_19387_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_2_reg_24021 : p_0_0_0_2777_fu_2534);

assign select_ln126_22_fu_19393_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_s_reg_24015 : p_0_0_0_112775_fu_2530);

assign select_ln126_23_fu_19399_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? trunc_ln131_reg_24009 : p_0_0_0773_fu_2526);

assign select_ln126_24_fu_19405_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? sext_ln131_fu_19257_p1 : p_0_0_0_23771_fu_2522);

assign select_ln126_25_fu_19412_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_22_reg_24141 : p_0_0_0_22769_fu_2518);

assign select_ln126_26_fu_19418_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_21_reg_24135 : p_0_0_0_21767_fu_2514);

assign select_ln126_27_fu_19424_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_20_reg_24129 : p_0_0_0_20765_fu_2510);

assign select_ln126_28_fu_19430_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_19_reg_24123 : p_0_0_0_19763_fu_2506);

assign select_ln126_29_fu_19436_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_18_reg_24117 : p_0_0_0_18761_fu_2502);

assign select_ln126_2_fu_19273_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_21_reg_24135 : p_0_0_0_21815_fu_2610);

assign select_ln126_30_fu_19442_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_17_reg_24111 : p_0_0_0_17759_fu_2498);

assign select_ln126_31_fu_19448_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_16_reg_24105 : p_0_0_0_16757_fu_2494);

assign select_ln126_32_fu_19454_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_15_reg_24099 : p_0_0_0_15755_fu_2490);

assign select_ln126_33_fu_19460_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_14_reg_24093 : p_0_0_0_14753_fu_2486);

assign select_ln126_34_fu_19466_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_13_reg_24087 : p_0_0_0_13751_fu_2482);

assign select_ln126_35_fu_19472_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_12_reg_24081 : p_0_0_0_12749_fu_2478);

assign select_ln126_36_fu_19478_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_11_reg_24075 : p_0_0_0_11747_fu_2474);

assign select_ln126_37_fu_19484_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_10_reg_24069 : p_0_0_0_10745_fu_2470);

assign select_ln126_38_fu_19490_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_9_reg_24063 : p_0_0_0_9743_fu_2466);

assign select_ln126_39_fu_19496_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_8_reg_24057 : p_0_0_0_8741_fu_2462);

assign select_ln126_3_fu_19279_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_20_reg_24129 : p_0_0_0_20813_fu_2606);

assign select_ln126_40_fu_19502_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_7_reg_24051 : p_0_0_0_7739_fu_2458);

assign select_ln126_41_fu_19508_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_6_reg_24045 : p_0_0_0_6737_fu_2454);

assign select_ln126_42_fu_19514_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_5_reg_24039 : p_0_0_0_5735_fu_2450);

assign select_ln126_43_fu_19520_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_4_reg_24033 : p_0_0_0_4733_fu_2446);

assign select_ln126_44_fu_19526_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_3_reg_24027 : p_0_0_0_3731_fu_2442);

assign select_ln126_45_fu_19532_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_2_reg_24021 : p_0_0_0_2729_fu_2438);

assign select_ln126_46_fu_19538_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_s_reg_24015 : p_0_0_0_112727_fu_2434);

assign select_ln126_47_fu_19544_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? trunc_ln131_reg_24009 : p_0_0_0725_fu_2430);

assign select_ln126_4_fu_19285_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_19_reg_24123 : p_0_0_0_19811_fu_2602);

assign select_ln126_5_fu_19291_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_18_reg_24117 : p_0_0_0_18809_fu_2598);

assign select_ln126_6_fu_19297_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_17_reg_24111 : p_0_0_0_17807_fu_2594);

assign select_ln126_7_fu_19303_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_16_reg_24105 : p_0_0_0_16805_fu_2590);

assign select_ln126_8_fu_19309_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_15_reg_24099 : p_0_0_0_15803_fu_2586);

assign select_ln126_9_fu_19315_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? tmp_14_reg_24093 : p_0_0_0_14801_fu_2582);

assign select_ln126_fu_19260_p3 = ((icmp_ln126_reg_23833_pp0_iter3_reg[0:0] == 1'b1) ? sext_ln131_fu_19257_p1 : p_0_0_0_23819_fu_2618);

assign sext_ln131_fu_19257_p1 = $signed(tmp_23_reg_24147);

assign sext_ln151_100_fu_5023_p1 = mul_res_45_fu_5017_p2;

assign sext_ln151_101_fu_5037_p1 = $signed(tmp_69_fu_5027_p4);

assign sext_ln151_102_fu_5055_p1 = mul_res_46_fu_5049_p2;

assign sext_ln151_103_fu_5069_p1 = $signed(tmp_70_fu_5059_p4);

assign sext_ln151_104_fu_5143_p1 = $signed(tmp_71_fu_5133_p4);

assign sext_ln151_105_fu_5161_p1 = mul_res_48_fu_5155_p2;

assign sext_ln151_106_fu_5175_p1 = $signed(tmp_72_fu_5165_p4);

assign sext_ln151_107_fu_5193_p1 = mul_res_49_fu_5187_p2;

assign sext_ln151_108_fu_5207_p1 = $signed(tmp_73_fu_5197_p4);

assign sext_ln151_109_fu_5225_p1 = mul_res_50_fu_5219_p2;

assign sext_ln151_10_fu_3511_p1 = $signed(tmp_26_fu_3498_p4);

assign sext_ln151_110_fu_5239_p1 = $signed(tmp_74_fu_5229_p4);

assign sext_ln151_111_fu_5257_p1 = mul_res_51_fu_5251_p2;

assign sext_ln151_112_fu_5271_p1 = $signed(tmp_75_fu_5261_p4);

assign sext_ln151_113_fu_5289_p1 = mul_res_52_fu_5283_p2;

assign sext_ln151_114_fu_5303_p1 = $signed(tmp_76_fu_5293_p4);

assign sext_ln151_115_fu_5321_p1 = mul_res_53_fu_5315_p2;

assign sext_ln151_116_fu_5335_p1 = $signed(tmp_77_fu_5325_p4);

assign sext_ln151_117_fu_5353_p1 = mul_res_54_fu_5347_p2;

assign sext_ln151_118_fu_5367_p1 = $signed(tmp_78_fu_5357_p4);

assign sext_ln151_119_fu_5385_p1 = mul_res_55_fu_5379_p2;

assign sext_ln151_11_fu_3529_p1 = mul_res_3_fu_3523_p2;

assign sext_ln151_120_fu_5399_p1 = $signed(tmp_79_fu_5389_p4);

assign sext_ln151_121_fu_5417_p1 = mul_res_56_fu_5411_p2;

assign sext_ln151_122_fu_5431_p1 = $signed(tmp_80_fu_5421_p4);

assign sext_ln151_123_fu_5449_p1 = mul_res_57_fu_5443_p2;

assign sext_ln151_124_fu_5463_p1 = $signed(tmp_81_fu_5453_p4);

assign sext_ln151_125_fu_5481_p1 = mul_res_58_fu_5475_p2;

assign sext_ln151_126_fu_5495_p1 = $signed(tmp_82_fu_5485_p4);

assign sext_ln151_127_fu_5569_p1 = $signed(tmp_83_fu_5559_p4);

assign sext_ln151_128_fu_5587_p1 = mul_res_60_fu_5581_p2;

assign sext_ln151_129_fu_5601_p1 = $signed(tmp_84_fu_5591_p4);

assign sext_ln151_12_fu_3543_p1 = $signed(trunc_ln137_3_reg_23905);

assign sext_ln151_130_fu_5619_p1 = mul_res_61_fu_5613_p2;

assign sext_ln151_131_fu_5633_p1 = $signed(tmp_85_fu_5623_p4);

assign sext_ln151_132_fu_5651_p1 = mul_res_62_fu_5645_p2;

assign sext_ln151_133_fu_5665_p1 = $signed(tmp_86_fu_5655_p4);

assign sext_ln151_134_fu_5683_p1 = mul_res_63_fu_5677_p2;

assign sext_ln151_135_fu_5697_p1 = $signed(tmp_87_fu_5687_p4);

assign sext_ln151_136_fu_5715_p1 = mul_res_64_fu_5709_p2;

assign sext_ln151_137_fu_5729_p1 = $signed(tmp_88_fu_5719_p4);

assign sext_ln151_138_fu_5747_p1 = mul_res_65_fu_5741_p2;

assign sext_ln151_139_fu_5761_p1 = $signed(tmp_89_fu_5751_p4);

assign sext_ln151_13_fu_3546_p1 = $signed(tmp_27_fu_3533_p4);

assign sext_ln151_140_fu_5779_p1 = mul_res_66_fu_5773_p2;

assign sext_ln151_141_fu_5793_p1 = $signed(tmp_90_fu_5783_p4);

assign sext_ln151_142_fu_5811_p1 = mul_res_67_fu_5805_p2;

assign sext_ln151_143_fu_5825_p1 = $signed(tmp_91_fu_5815_p4);

assign sext_ln151_144_fu_5843_p1 = mul_res_68_fu_5837_p2;

assign sext_ln151_145_fu_5857_p1 = $signed(tmp_92_fu_5847_p4);

assign sext_ln151_146_fu_5875_p1 = mul_res_69_fu_5869_p2;

assign sext_ln151_147_fu_5889_p1 = $signed(tmp_93_fu_5879_p4);

assign sext_ln151_148_fu_5907_p1 = mul_res_70_fu_5901_p2;

assign sext_ln151_149_fu_5921_p1 = $signed(tmp_94_fu_5911_p4);

assign sext_ln151_14_fu_3564_p1 = mul_res_4_fu_3558_p2;

assign sext_ln151_150_fu_5995_p1 = $signed(tmp_95_fu_5985_p4);

assign sext_ln151_151_fu_6013_p1 = mul_res_72_fu_6007_p2;

assign sext_ln151_152_fu_6027_p1 = $signed(tmp_96_fu_6017_p4);

assign sext_ln151_153_fu_6045_p1 = mul_res_73_fu_6039_p2;

assign sext_ln151_154_fu_6059_p1 = $signed(tmp_97_fu_6049_p4);

assign sext_ln151_155_fu_6077_p1 = mul_res_74_fu_6071_p2;

assign sext_ln151_156_fu_6091_p1 = $signed(tmp_98_fu_6081_p4);

assign sext_ln151_157_fu_6109_p1 = mul_res_75_fu_6103_p2;

assign sext_ln151_158_fu_6123_p1 = $signed(tmp_99_fu_6113_p4);

assign sext_ln151_159_fu_6141_p1 = mul_res_76_fu_6135_p2;

assign sext_ln151_15_fu_3578_p1 = $signed(trunc_ln137_4_reg_23910);

assign sext_ln151_160_fu_6155_p1 = $signed(tmp_100_fu_6145_p4);

assign sext_ln151_161_fu_6173_p1 = mul_res_77_fu_6167_p2;

assign sext_ln151_162_fu_6187_p1 = $signed(tmp_101_fu_6177_p4);

assign sext_ln151_163_fu_6205_p1 = mul_res_78_fu_6199_p2;

assign sext_ln151_164_fu_6219_p1 = $signed(tmp_102_fu_6209_p4);

assign sext_ln151_165_fu_6237_p1 = mul_res_79_fu_6231_p2;

assign sext_ln151_166_fu_6251_p1 = $signed(tmp_103_fu_6241_p4);

assign sext_ln151_167_fu_6269_p1 = mul_res_80_fu_6263_p2;

assign sext_ln151_168_fu_6283_p1 = $signed(tmp_104_fu_6273_p4);

assign sext_ln151_169_fu_6301_p1 = mul_res_81_fu_6295_p2;

assign sext_ln151_16_fu_3581_p1 = $signed(tmp_28_fu_3568_p4);

assign sext_ln151_170_fu_6315_p1 = $signed(tmp_105_fu_6305_p4);

assign sext_ln151_171_fu_6333_p1 = mul_res_82_fu_6327_p2;

assign sext_ln151_172_fu_6347_p1 = $signed(tmp_106_fu_6337_p4);

assign sext_ln151_173_fu_6421_p1 = $signed(tmp_107_fu_6411_p4);

assign sext_ln151_174_fu_6439_p1 = mul_res_84_fu_6433_p2;

assign sext_ln151_175_fu_6453_p1 = $signed(tmp_108_fu_6443_p4);

assign sext_ln151_176_fu_6471_p1 = mul_res_85_fu_6465_p2;

assign sext_ln151_177_fu_6485_p1 = $signed(tmp_109_fu_6475_p4);

assign sext_ln151_178_fu_6503_p1 = mul_res_86_fu_6497_p2;

assign sext_ln151_179_fu_6517_p1 = $signed(tmp_110_fu_6507_p4);

assign sext_ln151_17_fu_3599_p1 = mul_res_5_fu_3593_p2;

assign sext_ln151_180_fu_6535_p1 = mul_res_87_fu_6529_p2;

assign sext_ln151_181_fu_6549_p1 = $signed(tmp_111_fu_6539_p4);

assign sext_ln151_182_fu_6567_p1 = mul_res_88_fu_6561_p2;

assign sext_ln151_183_fu_6581_p1 = $signed(tmp_112_fu_6571_p4);

assign sext_ln151_184_fu_6599_p1 = mul_res_89_fu_6593_p2;

assign sext_ln151_185_fu_6613_p1 = $signed(tmp_113_fu_6603_p4);

assign sext_ln151_186_fu_6631_p1 = mul_res_90_fu_6625_p2;

assign sext_ln151_187_fu_6645_p1 = $signed(tmp_114_fu_6635_p4);

assign sext_ln151_188_fu_6663_p1 = mul_res_91_fu_6657_p2;

assign sext_ln151_189_fu_6677_p1 = $signed(tmp_115_fu_6667_p4);

assign sext_ln151_18_fu_3613_p1 = $signed(trunc_ln137_5_reg_23915);

assign sext_ln151_190_fu_6695_p1 = mul_res_92_fu_6689_p2;

assign sext_ln151_191_fu_6709_p1 = $signed(tmp_116_fu_6699_p4);

assign sext_ln151_192_fu_6727_p1 = mul_res_93_fu_6721_p2;

assign sext_ln151_193_fu_6741_p1 = $signed(tmp_117_fu_6731_p4);

assign sext_ln151_194_fu_6759_p1 = mul_res_94_fu_6753_p2;

assign sext_ln151_195_fu_6773_p1 = $signed(tmp_118_fu_6763_p4);

assign sext_ln151_196_fu_6847_p1 = $signed(tmp_119_fu_6837_p4);

assign sext_ln151_197_fu_6865_p1 = mul_res_96_fu_6859_p2;

assign sext_ln151_198_fu_6879_p1 = $signed(tmp_120_fu_6869_p4);

assign sext_ln151_199_fu_6897_p1 = mul_res_97_fu_6891_p2;

assign sext_ln151_19_fu_3616_p1 = $signed(tmp_29_fu_3603_p4);

assign sext_ln151_1_fu_3406_p1 = $signed(trunc_ln151_fu_3399_p1);

assign sext_ln151_200_fu_6911_p1 = $signed(tmp_121_fu_6901_p4);

assign sext_ln151_201_fu_6929_p1 = mul_res_98_fu_6923_p2;

assign sext_ln151_202_fu_6943_p1 = $signed(tmp_122_fu_6933_p4);

assign sext_ln151_203_fu_6961_p1 = mul_res_99_fu_6955_p2;

assign sext_ln151_204_fu_6975_p1 = $signed(tmp_123_fu_6965_p4);

assign sext_ln151_205_fu_6993_p1 = mul_res_100_fu_6987_p2;

assign sext_ln151_206_fu_7007_p1 = $signed(tmp_124_fu_6997_p4);

assign sext_ln151_207_fu_7025_p1 = mul_res_101_fu_7019_p2;

assign sext_ln151_208_fu_7039_p1 = $signed(tmp_125_fu_7029_p4);

assign sext_ln151_209_fu_7057_p1 = mul_res_102_fu_7051_p2;

assign sext_ln151_20_fu_3634_p1 = mul_res_6_fu_3628_p2;

assign sext_ln151_210_fu_7071_p1 = $signed(tmp_126_fu_7061_p4);

assign sext_ln151_211_fu_7089_p1 = mul_res_103_fu_7083_p2;

assign sext_ln151_212_fu_7103_p1 = $signed(tmp_127_fu_7093_p4);

assign sext_ln151_213_fu_7121_p1 = mul_res_104_fu_7115_p2;

assign sext_ln151_214_fu_7135_p1 = $signed(tmp_128_fu_7125_p4);

assign sext_ln151_215_fu_7153_p1 = mul_res_105_fu_7147_p2;

assign sext_ln151_216_fu_7167_p1 = $signed(tmp_129_fu_7157_p4);

assign sext_ln151_217_fu_7185_p1 = mul_res_106_fu_7179_p2;

assign sext_ln151_218_fu_7199_p1 = $signed(tmp_130_fu_7189_p4);

assign sext_ln151_219_fu_7273_p1 = $signed(tmp_131_fu_7263_p4);

assign sext_ln151_21_fu_3648_p1 = $signed(trunc_ln137_6_reg_23920);

assign sext_ln151_220_fu_7291_p1 = mul_res_108_fu_7285_p2;

assign sext_ln151_221_fu_7305_p1 = $signed(tmp_132_fu_7295_p4);

assign sext_ln151_222_fu_7323_p1 = mul_res_109_fu_7317_p2;

assign sext_ln151_223_fu_7337_p1 = $signed(tmp_133_fu_7327_p4);

assign sext_ln151_224_fu_7355_p1 = mul_res_110_fu_7349_p2;

assign sext_ln151_225_fu_7369_p1 = $signed(tmp_134_fu_7359_p4);

assign sext_ln151_226_fu_7387_p1 = mul_res_111_fu_7381_p2;

assign sext_ln151_227_fu_7401_p1 = $signed(tmp_135_fu_7391_p4);

assign sext_ln151_228_fu_7419_p1 = mul_res_112_fu_7413_p2;

assign sext_ln151_229_fu_7433_p1 = $signed(tmp_136_fu_7423_p4);

assign sext_ln151_22_fu_3651_p1 = $signed(tmp_30_fu_3638_p4);

assign sext_ln151_230_fu_7451_p1 = mul_res_113_fu_7445_p2;

assign sext_ln151_231_fu_7465_p1 = $signed(tmp_137_fu_7455_p4);

assign sext_ln151_232_fu_7483_p1 = mul_res_114_fu_7477_p2;

assign sext_ln151_233_fu_7497_p1 = $signed(tmp_138_fu_7487_p4);

assign sext_ln151_234_fu_7515_p1 = mul_res_115_fu_7509_p2;

assign sext_ln151_235_fu_7529_p1 = $signed(tmp_139_fu_7519_p4);

assign sext_ln151_236_fu_7547_p1 = mul_res_116_fu_7541_p2;

assign sext_ln151_237_fu_7561_p1 = $signed(tmp_140_fu_7551_p4);

assign sext_ln151_238_fu_7579_p1 = mul_res_117_fu_7573_p2;

assign sext_ln151_239_fu_7593_p1 = $signed(tmp_141_fu_7583_p4);

assign sext_ln151_23_fu_3669_p1 = mul_res_7_fu_3663_p2;

assign sext_ln151_240_fu_7611_p1 = mul_res_118_fu_7605_p2;

assign sext_ln151_241_fu_7625_p1 = $signed(tmp_142_fu_7615_p4);

assign sext_ln151_242_fu_7699_p1 = $signed(tmp_143_fu_7689_p4);

assign sext_ln151_243_fu_7717_p1 = mul_res_120_fu_7711_p2;

assign sext_ln151_244_fu_7731_p1 = $signed(tmp_144_fu_7721_p4);

assign sext_ln151_245_fu_7749_p1 = mul_res_121_fu_7743_p2;

assign sext_ln151_246_fu_7763_p1 = $signed(tmp_145_fu_7753_p4);

assign sext_ln151_247_fu_7781_p1 = mul_res_122_fu_7775_p2;

assign sext_ln151_248_fu_7795_p1 = $signed(tmp_146_fu_7785_p4);

assign sext_ln151_249_fu_7813_p1 = mul_res_123_fu_7807_p2;

assign sext_ln151_24_fu_3683_p1 = $signed(trunc_ln137_7_reg_23925);

assign sext_ln151_250_fu_7827_p1 = $signed(tmp_147_fu_7817_p4);

assign sext_ln151_251_fu_7845_p1 = mul_res_124_fu_7839_p2;

assign sext_ln151_252_fu_7859_p1 = $signed(tmp_148_fu_7849_p4);

assign sext_ln151_253_fu_20040_p1 = mul_res_125_reg_24402;

assign sext_ln151_254_fu_7887_p1 = $signed(tmp_149_fu_7877_p4);

assign sext_ln151_255_fu_7905_p1 = mul_res_126_fu_7899_p2;

assign sext_ln151_256_fu_7919_p1 = $signed(tmp_150_fu_7909_p4);

assign sext_ln151_257_fu_20043_p1 = mul_res_127_reg_24407;

assign sext_ln151_258_fu_7947_p1 = $signed(tmp_151_fu_7937_p4);

assign sext_ln151_259_fu_20046_p1 = mul_res_128_reg_24412;

assign sext_ln151_25_fu_3686_p1 = $signed(tmp_31_fu_3673_p4);

assign sext_ln151_260_fu_7975_p1 = $signed(tmp_152_fu_7965_p4);

assign sext_ln151_261_fu_7993_p1 = mul_res_129_fu_7987_p2;

assign sext_ln151_262_fu_8007_p1 = $signed(tmp_153_fu_7997_p4);

assign sext_ln151_263_fu_8025_p1 = mul_res_130_fu_8019_p2;

assign sext_ln151_264_fu_8039_p1 = $signed(tmp_154_fu_8029_p4);

assign sext_ln151_265_fu_8101_p1 = $signed(tmp_155_fu_8091_p4);

assign sext_ln151_266_fu_8119_p1 = mul_res_132_fu_8113_p2;

assign sext_ln151_267_fu_8133_p1 = $signed(tmp_156_fu_8123_p4);

assign sext_ln151_268_fu_8151_p1 = mul_res_133_fu_8145_p2;

assign sext_ln151_269_fu_8165_p1 = $signed(tmp_157_fu_8155_p4);

assign sext_ln151_26_fu_3704_p1 = mul_res_8_fu_3698_p2;

assign sext_ln151_270_fu_8183_p1 = mul_res_134_fu_8177_p2;

assign sext_ln151_271_fu_8197_p1 = $signed(tmp_158_fu_8187_p4);

assign sext_ln151_272_fu_8215_p1 = mul_res_135_fu_8209_p2;

assign sext_ln151_273_fu_8229_p1 = $signed(tmp_159_fu_8219_p4);

assign sext_ln151_274_fu_8247_p1 = mul_res_136_fu_8241_p2;

assign sext_ln151_275_fu_8261_p1 = $signed(tmp_160_fu_8251_p4);

assign sext_ln151_276_fu_20111_p1 = mul_res_137_reg_24437;

assign sext_ln151_277_fu_8289_p1 = $signed(tmp_161_fu_8279_p4);

assign sext_ln151_278_fu_8307_p1 = mul_res_138_fu_8301_p2;

assign sext_ln151_279_fu_8321_p1 = $signed(tmp_162_fu_8311_p4);

assign sext_ln151_27_fu_3718_p1 = $signed(trunc_ln137_8_reg_23930);

assign sext_ln151_280_fu_20114_p1 = mul_res_139_reg_24442;

assign sext_ln151_281_fu_8349_p1 = $signed(tmp_163_fu_8339_p4);

assign sext_ln151_282_fu_20117_p1 = mul_res_140_reg_24447;

assign sext_ln151_283_fu_8377_p1 = $signed(tmp_164_fu_8367_p4);

assign sext_ln151_284_fu_8395_p1 = mul_res_141_fu_8389_p2;

assign sext_ln151_285_fu_8409_p1 = $signed(tmp_165_fu_8399_p4);

assign sext_ln151_286_fu_8427_p1 = mul_res_142_fu_8421_p2;

assign sext_ln151_287_fu_8441_p1 = $signed(tmp_166_fu_8431_p4);

assign sext_ln151_288_fu_8503_p1 = $signed(tmp_167_fu_8493_p4);

assign sext_ln151_289_fu_8521_p1 = mul_res_144_fu_8515_p2;

assign sext_ln151_28_fu_3721_p1 = $signed(tmp_32_fu_3708_p4);

assign sext_ln151_290_fu_8535_p1 = $signed(tmp_168_fu_8525_p4);

assign sext_ln151_291_fu_8553_p1 = mul_res_145_fu_8547_p2;

assign sext_ln151_292_fu_8567_p1 = $signed(tmp_169_fu_8557_p4);

assign sext_ln151_293_fu_8585_p1 = mul_res_146_fu_8579_p2;

assign sext_ln151_294_fu_8599_p1 = $signed(tmp_170_fu_8589_p4);

assign sext_ln151_295_fu_8617_p1 = mul_res_147_fu_8611_p2;

assign sext_ln151_296_fu_8631_p1 = $signed(tmp_171_fu_8621_p4);

assign sext_ln151_297_fu_8649_p1 = mul_res_148_fu_8643_p2;

assign sext_ln151_298_fu_8663_p1 = $signed(tmp_172_fu_8653_p4);

assign sext_ln151_299_fu_20182_p1 = mul_res_149_reg_24472;

assign sext_ln151_29_fu_3739_p1 = mul_res_9_fu_3733_p2;

assign sext_ln151_2_fu_3424_p1 = mul_res_fu_3418_p2;

assign sext_ln151_300_fu_8691_p1 = $signed(tmp_173_fu_8681_p4);

assign sext_ln151_301_fu_8709_p1 = mul_res_150_fu_8703_p2;

assign sext_ln151_302_fu_8723_p1 = $signed(tmp_174_fu_8713_p4);

assign sext_ln151_303_fu_20185_p1 = mul_res_151_reg_24477;

assign sext_ln151_304_fu_8751_p1 = $signed(tmp_175_fu_8741_p4);

assign sext_ln151_305_fu_20188_p1 = mul_res_152_reg_24482;

assign sext_ln151_306_fu_8779_p1 = $signed(tmp_176_fu_8769_p4);

assign sext_ln151_307_fu_8797_p1 = mul_res_153_fu_8791_p2;

assign sext_ln151_308_fu_8811_p1 = $signed(tmp_177_fu_8801_p4);

assign sext_ln151_309_fu_8829_p1 = mul_res_154_fu_8823_p2;

assign sext_ln151_30_fu_3753_p1 = $signed(trunc_ln137_9_reg_23935);

assign sext_ln151_310_fu_8843_p1 = $signed(tmp_178_fu_8833_p4);

assign sext_ln151_311_fu_8905_p1 = $signed(tmp_179_fu_8895_p4);

assign sext_ln151_312_fu_8923_p1 = mul_res_156_fu_8917_p2;

assign sext_ln151_313_fu_8937_p1 = $signed(tmp_180_fu_8927_p4);

assign sext_ln151_314_fu_8955_p1 = mul_res_157_fu_8949_p2;

assign sext_ln151_315_fu_8969_p1 = $signed(tmp_181_fu_8959_p4);

assign sext_ln151_316_fu_8987_p1 = mul_res_158_fu_8981_p2;

assign sext_ln151_317_fu_9001_p1 = $signed(tmp_182_fu_8991_p4);

assign sext_ln151_318_fu_9019_p1 = mul_res_159_fu_9013_p2;

assign sext_ln151_319_fu_9033_p1 = $signed(tmp_183_fu_9023_p4);

assign sext_ln151_31_fu_3756_p1 = $signed(tmp_33_fu_3743_p4);

assign sext_ln151_320_fu_9051_p1 = mul_res_160_fu_9045_p2;

assign sext_ln151_321_fu_9065_p1 = $signed(tmp_184_fu_9055_p4);

assign sext_ln151_322_fu_20253_p1 = mul_res_161_reg_24507;

assign sext_ln151_323_fu_9093_p1 = $signed(tmp_185_fu_9083_p4);

assign sext_ln151_324_fu_9111_p1 = mul_res_162_fu_9105_p2;

assign sext_ln151_325_fu_9125_p1 = $signed(tmp_186_fu_9115_p4);

assign sext_ln151_326_fu_20256_p1 = mul_res_163_reg_24512;

assign sext_ln151_327_fu_9153_p1 = $signed(tmp_187_fu_9143_p4);

assign sext_ln151_328_fu_20259_p1 = mul_res_164_reg_24517;

assign sext_ln151_329_fu_9181_p1 = $signed(tmp_188_fu_9171_p4);

assign sext_ln151_32_fu_3774_p1 = mul_res_10_fu_3768_p2;

assign sext_ln151_330_fu_9199_p1 = mul_res_165_fu_9193_p2;

assign sext_ln151_331_fu_9213_p1 = $signed(tmp_189_fu_9203_p4);

assign sext_ln151_332_fu_9231_p1 = mul_res_166_fu_9225_p2;

assign sext_ln151_333_fu_9245_p1 = $signed(tmp_190_fu_9235_p4);

assign sext_ln151_334_fu_9307_p1 = $signed(tmp_191_fu_9297_p4);

assign sext_ln151_335_fu_9325_p1 = mul_res_168_fu_9319_p2;

assign sext_ln151_336_fu_9339_p1 = $signed(tmp_192_fu_9329_p4);

assign sext_ln151_337_fu_9357_p1 = mul_res_169_fu_9351_p2;

assign sext_ln151_338_fu_9371_p1 = $signed(tmp_193_fu_9361_p4);

assign sext_ln151_339_fu_9389_p1 = mul_res_170_fu_9383_p2;

assign sext_ln151_33_fu_3788_p1 = $signed(trunc_ln137_10_reg_23940);

assign sext_ln151_340_fu_9403_p1 = $signed(tmp_194_fu_9393_p4);

assign sext_ln151_341_fu_9421_p1 = mul_res_171_fu_9415_p2;

assign sext_ln151_342_fu_9435_p1 = $signed(tmp_195_fu_9425_p4);

assign sext_ln151_343_fu_9453_p1 = mul_res_172_fu_9447_p2;

assign sext_ln151_344_fu_9467_p1 = $signed(tmp_196_fu_9457_p4);

assign sext_ln151_345_fu_20324_p1 = mul_res_173_reg_24542;

assign sext_ln151_346_fu_9495_p1 = $signed(tmp_197_fu_9485_p4);

assign sext_ln151_347_fu_9513_p1 = mul_res_174_fu_9507_p2;

assign sext_ln151_348_fu_9527_p1 = $signed(tmp_198_fu_9517_p4);

assign sext_ln151_349_fu_20327_p1 = mul_res_175_reg_24547;

assign sext_ln151_34_fu_3791_p1 = $signed(tmp_34_fu_3778_p4);

assign sext_ln151_350_fu_9555_p1 = $signed(tmp_199_fu_9545_p4);

assign sext_ln151_351_fu_20330_p1 = mul_res_176_reg_24552;

assign sext_ln151_352_fu_9583_p1 = $signed(tmp_200_fu_9573_p4);

assign sext_ln151_353_fu_9601_p1 = mul_res_177_fu_9595_p2;

assign sext_ln151_354_fu_9615_p1 = $signed(tmp_201_fu_9605_p4);

assign sext_ln151_355_fu_9633_p1 = mul_res_178_fu_9627_p2;

assign sext_ln151_356_fu_9647_p1 = $signed(tmp_202_fu_9637_p4);

assign sext_ln151_357_fu_9709_p1 = $signed(tmp_203_fu_9699_p4);

assign sext_ln151_358_fu_9727_p1 = mul_res_180_fu_9721_p2;

assign sext_ln151_359_fu_9741_p1 = $signed(tmp_204_fu_9731_p4);

assign sext_ln151_35_fu_3865_p1 = $signed(tmp_35_fu_3855_p4);

assign sext_ln151_360_fu_9759_p1 = mul_res_181_fu_9753_p2;

assign sext_ln151_361_fu_9773_p1 = $signed(tmp_205_fu_9763_p4);

assign sext_ln151_362_fu_9791_p1 = mul_res_182_fu_9785_p2;

assign sext_ln151_363_fu_9805_p1 = $signed(tmp_206_fu_9795_p4);

assign sext_ln151_364_fu_9823_p1 = mul_res_183_fu_9817_p2;

assign sext_ln151_365_fu_9837_p1 = $signed(tmp_207_fu_9827_p4);

assign sext_ln151_366_fu_9855_p1 = mul_res_184_fu_9849_p2;

assign sext_ln151_367_fu_9869_p1 = $signed(tmp_208_fu_9859_p4);

assign sext_ln151_368_fu_20395_p1 = mul_res_185_reg_24577;

assign sext_ln151_369_fu_9897_p1 = $signed(tmp_209_fu_9887_p4);

assign sext_ln151_36_fu_3883_p1 = mul_res_12_fu_3877_p2;

assign sext_ln151_370_fu_9915_p1 = mul_res_186_fu_9909_p2;

assign sext_ln151_371_fu_9929_p1 = $signed(tmp_210_fu_9919_p4);

assign sext_ln151_372_fu_20398_p1 = mul_res_187_reg_24582;

assign sext_ln151_373_fu_9957_p1 = $signed(tmp_211_fu_9947_p4);

assign sext_ln151_374_fu_20401_p1 = mul_res_188_reg_24587;

assign sext_ln151_375_fu_9985_p1 = $signed(tmp_212_fu_9975_p4);

assign sext_ln151_376_fu_10003_p1 = mul_res_189_fu_9997_p2;

assign sext_ln151_377_fu_10017_p1 = $signed(tmp_213_fu_10007_p4);

assign sext_ln151_378_fu_10035_p1 = mul_res_190_fu_10029_p2;

assign sext_ln151_379_fu_10049_p1 = $signed(tmp_214_fu_10039_p4);

assign sext_ln151_37_fu_3897_p1 = $signed(tmp_36_fu_3887_p4);

assign sext_ln151_380_fu_10111_p1 = $signed(tmp_215_fu_10101_p4);

assign sext_ln151_381_fu_10129_p1 = mul_res_192_fu_10123_p2;

assign sext_ln151_382_fu_10143_p1 = $signed(tmp_216_fu_10133_p4);

assign sext_ln151_383_fu_10161_p1 = mul_res_193_fu_10155_p2;

assign sext_ln151_384_fu_10175_p1 = $signed(tmp_217_fu_10165_p4);

assign sext_ln151_385_fu_10193_p1 = mul_res_194_fu_10187_p2;

assign sext_ln151_386_fu_10207_p1 = $signed(tmp_218_fu_10197_p4);

assign sext_ln151_387_fu_10225_p1 = mul_res_195_fu_10219_p2;

assign sext_ln151_388_fu_10239_p1 = $signed(tmp_219_fu_10229_p4);

assign sext_ln151_389_fu_10257_p1 = mul_res_196_fu_10251_p2;

assign sext_ln151_38_fu_3915_p1 = mul_res_13_fu_3909_p2;

assign sext_ln151_390_fu_10271_p1 = $signed(tmp_220_fu_10261_p4);

assign sext_ln151_391_fu_20466_p1 = mul_res_197_reg_24612;

assign sext_ln151_392_fu_10299_p1 = $signed(tmp_221_fu_10289_p4);

assign sext_ln151_393_fu_10317_p1 = mul_res_198_fu_10311_p2;

assign sext_ln151_394_fu_10331_p1 = $signed(tmp_222_fu_10321_p4);

assign sext_ln151_395_fu_20469_p1 = mul_res_199_reg_24617;

assign sext_ln151_396_fu_10359_p1 = $signed(tmp_223_fu_10349_p4);

assign sext_ln151_397_fu_20472_p1 = mul_res_200_reg_24622;

assign sext_ln151_398_fu_10387_p1 = $signed(tmp_224_fu_10377_p4);

assign sext_ln151_399_fu_10405_p1 = mul_res_201_fu_10399_p2;

assign sext_ln151_39_fu_3929_p1 = $signed(tmp_37_fu_3919_p4);

assign sext_ln151_3_fu_3438_p1 = $signed(trunc_ln137_s_reg_23890);

assign sext_ln151_400_fu_10419_p1 = $signed(tmp_225_fu_10409_p4);

assign sext_ln151_401_fu_10437_p1 = mul_res_202_fu_10431_p2;

assign sext_ln151_402_fu_10451_p1 = $signed(tmp_226_fu_10441_p4);

assign sext_ln151_403_fu_10513_p1 = $signed(tmp_227_fu_10503_p4);

assign sext_ln151_404_fu_10531_p1 = mul_res_204_fu_10525_p2;

assign sext_ln151_405_fu_10545_p1 = $signed(tmp_228_fu_10535_p4);

assign sext_ln151_406_fu_10563_p1 = mul_res_205_fu_10557_p2;

assign sext_ln151_407_fu_10577_p1 = $signed(tmp_229_fu_10567_p4);

assign sext_ln151_408_fu_10595_p1 = mul_res_206_fu_10589_p2;

assign sext_ln151_409_fu_10609_p1 = $signed(tmp_230_fu_10599_p4);

assign sext_ln151_40_fu_3947_p1 = mul_res_14_fu_3941_p2;

assign sext_ln151_410_fu_10627_p1 = mul_res_207_fu_10621_p2;

assign sext_ln151_411_fu_10641_p1 = $signed(tmp_231_fu_10631_p4);

assign sext_ln151_412_fu_10659_p1 = mul_res_208_fu_10653_p2;

assign sext_ln151_413_fu_10673_p1 = $signed(tmp_232_fu_10663_p4);

assign sext_ln151_414_fu_20537_p1 = mul_res_209_reg_24647;

assign sext_ln151_415_fu_10701_p1 = $signed(tmp_233_fu_10691_p4);

assign sext_ln151_416_fu_10719_p1 = mul_res_210_fu_10713_p2;

assign sext_ln151_417_fu_10733_p1 = $signed(tmp_234_fu_10723_p4);

assign sext_ln151_418_fu_20540_p1 = mul_res_211_reg_24652;

assign sext_ln151_419_fu_10761_p1 = $signed(tmp_235_fu_10751_p4);

assign sext_ln151_41_fu_3961_p1 = $signed(tmp_38_fu_3951_p4);

assign sext_ln151_420_fu_20543_p1 = mul_res_212_reg_24657;

assign sext_ln151_421_fu_10789_p1 = $signed(tmp_236_fu_10779_p4);

assign sext_ln151_422_fu_10807_p1 = mul_res_213_fu_10801_p2;

assign sext_ln151_423_fu_10821_p1 = $signed(tmp_237_fu_10811_p4);

assign sext_ln151_424_fu_10839_p1 = mul_res_214_fu_10833_p2;

assign sext_ln151_425_fu_10853_p1 = $signed(tmp_238_fu_10843_p4);

assign sext_ln151_426_fu_10915_p1 = $signed(tmp_239_fu_10905_p4);

assign sext_ln151_427_fu_10933_p1 = mul_res_216_fu_10927_p2;

assign sext_ln151_428_fu_10947_p1 = $signed(tmp_240_fu_10937_p4);

assign sext_ln151_429_fu_10965_p1 = mul_res_217_fu_10959_p2;

assign sext_ln151_42_fu_3979_p1 = mul_res_15_fu_3973_p2;

assign sext_ln151_430_fu_10979_p1 = $signed(tmp_241_fu_10969_p4);

assign sext_ln151_431_fu_10997_p1 = mul_res_218_fu_10991_p2;

assign sext_ln151_432_fu_11011_p1 = $signed(tmp_242_fu_11001_p4);

assign sext_ln151_433_fu_11029_p1 = mul_res_219_fu_11023_p2;

assign sext_ln151_434_fu_11043_p1 = $signed(tmp_243_fu_11033_p4);

assign sext_ln151_435_fu_11061_p1 = mul_res_220_fu_11055_p2;

assign sext_ln151_436_fu_11075_p1 = $signed(tmp_244_fu_11065_p4);

assign sext_ln151_437_fu_20608_p1 = mul_res_221_reg_24682;

assign sext_ln151_438_fu_11103_p1 = $signed(tmp_245_fu_11093_p4);

assign sext_ln151_439_fu_11121_p1 = mul_res_222_fu_11115_p2;

assign sext_ln151_43_fu_3993_p1 = $signed(tmp_39_fu_3983_p4);

assign sext_ln151_440_fu_11135_p1 = $signed(tmp_246_fu_11125_p4);

assign sext_ln151_441_fu_20611_p1 = mul_res_223_reg_24687;

assign sext_ln151_442_fu_11163_p1 = $signed(tmp_247_fu_11153_p4);

assign sext_ln151_443_fu_20614_p1 = mul_res_224_reg_24692;

assign sext_ln151_444_fu_11191_p1 = $signed(tmp_248_fu_11181_p4);

assign sext_ln151_445_fu_11209_p1 = mul_res_225_fu_11203_p2;

assign sext_ln151_446_fu_11223_p1 = $signed(tmp_249_fu_11213_p4);

assign sext_ln151_447_fu_11241_p1 = mul_res_226_fu_11235_p2;

assign sext_ln151_448_fu_11255_p1 = $signed(tmp_250_fu_11245_p4);

assign sext_ln151_449_fu_11317_p1 = $signed(tmp_251_fu_11307_p4);

assign sext_ln151_44_fu_4011_p1 = mul_res_16_fu_4005_p2;

assign sext_ln151_450_fu_11335_p1 = mul_res_228_fu_11329_p2;

assign sext_ln151_451_fu_11349_p1 = $signed(tmp_252_fu_11339_p4);

assign sext_ln151_452_fu_11367_p1 = mul_res_229_fu_11361_p2;

assign sext_ln151_453_fu_11381_p1 = $signed(tmp_253_fu_11371_p4);

assign sext_ln151_454_fu_11399_p1 = mul_res_230_fu_11393_p2;

assign sext_ln151_455_fu_11413_p1 = $signed(tmp_254_fu_11403_p4);

assign sext_ln151_456_fu_11431_p1 = mul_res_231_fu_11425_p2;

assign sext_ln151_457_fu_11445_p1 = $signed(tmp_255_fu_11435_p4);

assign sext_ln151_458_fu_11463_p1 = mul_res_232_fu_11457_p2;

assign sext_ln151_459_fu_11477_p1 = $signed(tmp_256_fu_11467_p4);

assign sext_ln151_45_fu_4025_p1 = $signed(tmp_40_fu_4015_p4);

assign sext_ln151_460_fu_20679_p1 = mul_res_233_reg_24717;

assign sext_ln151_461_fu_11505_p1 = $signed(tmp_257_fu_11495_p4);

assign sext_ln151_462_fu_11523_p1 = mul_res_234_fu_11517_p2;

assign sext_ln151_463_fu_11537_p1 = $signed(tmp_258_fu_11527_p4);

assign sext_ln151_464_fu_20682_p1 = mul_res_235_reg_24722;

assign sext_ln151_465_fu_11565_p1 = $signed(tmp_259_fu_11555_p4);

assign sext_ln151_466_fu_20685_p1 = mul_res_236_reg_24727;

assign sext_ln151_467_fu_11593_p1 = $signed(tmp_260_fu_11583_p4);

assign sext_ln151_468_fu_11611_p1 = mul_res_237_fu_11605_p2;

assign sext_ln151_469_fu_11625_p1 = $signed(tmp_261_fu_11615_p4);

assign sext_ln151_46_fu_4043_p1 = mul_res_17_fu_4037_p2;

assign sext_ln151_470_fu_11643_p1 = mul_res_238_fu_11637_p2;

assign sext_ln151_471_fu_11657_p1 = $signed(tmp_262_fu_11647_p4);

assign sext_ln151_472_fu_11719_p1 = $signed(tmp_263_fu_11709_p4);

assign sext_ln151_473_fu_11737_p1 = mul_res_240_fu_11731_p2;

assign sext_ln151_474_fu_11751_p1 = $signed(tmp_264_fu_11741_p4);

assign sext_ln151_475_fu_11769_p1 = mul_res_241_fu_11763_p2;

assign sext_ln151_476_fu_11783_p1 = $signed(tmp_265_fu_11773_p4);

assign sext_ln151_477_fu_11801_p1 = mul_res_242_fu_11795_p2;

assign sext_ln151_478_fu_11815_p1 = $signed(tmp_266_fu_11805_p4);

assign sext_ln151_479_fu_11833_p1 = mul_res_243_fu_11827_p2;

assign sext_ln151_47_fu_4057_p1 = $signed(tmp_41_fu_4047_p4);

assign sext_ln151_480_fu_11847_p1 = $signed(tmp_267_fu_11837_p4);

assign sext_ln151_481_fu_11865_p1 = mul_res_244_fu_11859_p2;

assign sext_ln151_482_fu_11879_p1 = $signed(tmp_268_fu_11869_p4);

assign sext_ln151_483_fu_20750_p1 = mul_res_245_reg_24752;

assign sext_ln151_484_fu_11907_p1 = $signed(tmp_269_fu_11897_p4);

assign sext_ln151_485_fu_11925_p1 = mul_res_246_fu_11919_p2;

assign sext_ln151_486_fu_11939_p1 = $signed(tmp_270_fu_11929_p4);

assign sext_ln151_487_fu_20753_p1 = mul_res_247_reg_24757;

assign sext_ln151_488_fu_11967_p1 = $signed(tmp_271_fu_11957_p4);

assign sext_ln151_489_fu_20756_p1 = mul_res_248_reg_24762;

assign sext_ln151_48_fu_4075_p1 = mul_res_18_fu_4069_p2;

assign sext_ln151_490_fu_11995_p1 = $signed(tmp_272_fu_11985_p4);

assign sext_ln151_491_fu_12013_p1 = mul_res_249_fu_12007_p2;

assign sext_ln151_492_fu_12027_p1 = $signed(tmp_273_fu_12017_p4);

assign sext_ln151_493_fu_12045_p1 = mul_res_250_fu_12039_p2;

assign sext_ln151_494_fu_12059_p1 = $signed(tmp_274_fu_12049_p4);

assign sext_ln151_495_fu_12121_p1 = $signed(tmp_275_fu_12111_p4);

assign sext_ln151_496_fu_12139_p1 = mul_res_252_fu_12133_p2;

assign sext_ln151_497_fu_12153_p1 = $signed(tmp_276_fu_12143_p4);

assign sext_ln151_498_fu_12171_p1 = mul_res_253_fu_12165_p2;

assign sext_ln151_499_fu_12185_p1 = $signed(tmp_277_fu_12175_p4);

assign sext_ln151_49_fu_4089_p1 = $signed(tmp_42_fu_4079_p4);

assign sext_ln151_4_fu_3441_p1 = $signed(tmp_24_fu_3428_p4);

assign sext_ln151_500_fu_12203_p1 = mul_res_254_fu_12197_p2;

assign sext_ln151_501_fu_12217_p1 = $signed(tmp_278_fu_12207_p4);

assign sext_ln151_502_fu_12235_p1 = mul_res_255_fu_12229_p2;

assign sext_ln151_503_fu_12249_p1 = $signed(tmp_279_fu_12239_p4);

assign sext_ln151_504_fu_12267_p1 = mul_res_256_fu_12261_p2;

assign sext_ln151_505_fu_12281_p1 = $signed(tmp_280_fu_12271_p4);

assign sext_ln151_506_fu_20821_p1 = mul_res_257_reg_24787;

assign sext_ln151_507_fu_12309_p1 = $signed(tmp_281_fu_12299_p4);

assign sext_ln151_508_fu_12327_p1 = mul_res_258_fu_12321_p2;

assign sext_ln151_509_fu_12341_p1 = $signed(tmp_282_fu_12331_p4);

assign sext_ln151_50_fu_4107_p1 = mul_res_19_fu_4101_p2;

assign sext_ln151_510_fu_20824_p1 = mul_res_259_reg_24792;

assign sext_ln151_511_fu_12369_p1 = $signed(tmp_283_fu_12359_p4);

assign sext_ln151_512_fu_20827_p1 = mul_res_260_reg_24797;

assign sext_ln151_513_fu_12397_p1 = $signed(tmp_284_fu_12387_p4);

assign sext_ln151_514_fu_12415_p1 = mul_res_261_fu_12409_p2;

assign sext_ln151_515_fu_12429_p1 = $signed(tmp_285_fu_12419_p4);

assign sext_ln151_516_fu_12447_p1 = mul_res_262_fu_12441_p2;

assign sext_ln151_517_fu_12461_p1 = $signed(tmp_286_fu_12451_p4);

assign sext_ln151_518_fu_12523_p1 = $signed(tmp_287_fu_12513_p4);

assign sext_ln151_519_fu_12541_p1 = mul_res_264_fu_12535_p2;

assign sext_ln151_51_fu_4121_p1 = $signed(tmp_43_fu_4111_p4);

assign sext_ln151_520_fu_12555_p1 = $signed(tmp_288_fu_12545_p4);

assign sext_ln151_521_fu_12573_p1 = mul_res_265_fu_12567_p2;

assign sext_ln151_522_fu_12587_p1 = $signed(tmp_289_fu_12577_p4);

assign sext_ln151_523_fu_12605_p1 = mul_res_266_fu_12599_p2;

assign sext_ln151_524_fu_12619_p1 = $signed(tmp_290_fu_12609_p4);

assign sext_ln151_525_fu_12637_p1 = mul_res_267_fu_12631_p2;

assign sext_ln151_526_fu_12651_p1 = $signed(tmp_291_fu_12641_p4);

assign sext_ln151_527_fu_12669_p1 = mul_res_268_fu_12663_p2;

assign sext_ln151_528_fu_12683_p1 = $signed(tmp_292_fu_12673_p4);

assign sext_ln151_529_fu_20892_p1 = mul_res_269_reg_24822;

assign sext_ln151_52_fu_4139_p1 = mul_res_20_fu_4133_p2;

assign sext_ln151_530_fu_12711_p1 = $signed(tmp_293_fu_12701_p4);

assign sext_ln151_531_fu_12729_p1 = mul_res_270_fu_12723_p2;

assign sext_ln151_532_fu_12743_p1 = $signed(tmp_294_fu_12733_p4);

assign sext_ln151_533_fu_20895_p1 = mul_res_271_reg_24827;

assign sext_ln151_534_fu_12771_p1 = $signed(tmp_295_fu_12761_p4);

assign sext_ln151_535_fu_20898_p1 = mul_res_272_reg_24832;

assign sext_ln151_536_fu_12799_p1 = $signed(tmp_296_fu_12789_p4);

assign sext_ln151_537_fu_12817_p1 = mul_res_273_fu_12811_p2;

assign sext_ln151_538_fu_12831_p1 = $signed(tmp_297_fu_12821_p4);

assign sext_ln151_539_fu_12849_p1 = mul_res_274_fu_12843_p2;

assign sext_ln151_53_fu_4153_p1 = $signed(tmp_44_fu_4143_p4);

assign sext_ln151_540_fu_12863_p1 = $signed(tmp_298_fu_12853_p4);

assign sext_ln151_541_fu_12925_p1 = $signed(tmp_299_fu_12915_p4);

assign sext_ln151_542_fu_12943_p1 = mul_res_276_fu_12937_p2;

assign sext_ln151_543_fu_12957_p1 = $signed(tmp_300_fu_12947_p4);

assign sext_ln151_544_fu_12975_p1 = mul_res_277_fu_12969_p2;

assign sext_ln151_545_fu_12989_p1 = $signed(tmp_301_fu_12979_p4);

assign sext_ln151_546_fu_13007_p1 = mul_res_278_fu_13001_p2;

assign sext_ln151_547_fu_13021_p1 = $signed(tmp_302_fu_13011_p4);

assign sext_ln151_548_fu_13039_p1 = mul_res_279_fu_13033_p2;

assign sext_ln151_549_fu_13053_p1 = $signed(tmp_303_fu_13043_p4);

assign sext_ln151_54_fu_4171_p1 = mul_res_21_fu_4165_p2;

assign sext_ln151_550_fu_13071_p1 = mul_res_280_fu_13065_p2;

assign sext_ln151_551_fu_13085_p1 = $signed(tmp_304_fu_13075_p4);

assign sext_ln151_552_fu_20963_p1 = mul_res_281_reg_24857;

assign sext_ln151_553_fu_13113_p1 = $signed(tmp_305_fu_13103_p4);

assign sext_ln151_554_fu_13131_p1 = mul_res_282_fu_13125_p2;

assign sext_ln151_555_fu_13145_p1 = $signed(tmp_306_fu_13135_p4);

assign sext_ln151_556_fu_20966_p1 = mul_res_283_reg_24862;

assign sext_ln151_557_fu_13173_p1 = $signed(tmp_307_fu_13163_p4);

assign sext_ln151_558_fu_20969_p1 = mul_res_284_reg_24867;

assign sext_ln151_559_fu_13201_p1 = $signed(tmp_308_fu_13191_p4);

assign sext_ln151_55_fu_4185_p1 = $signed(tmp_45_fu_4175_p4);

assign sext_ln151_560_fu_13219_p1 = mul_res_285_fu_13213_p2;

assign sext_ln151_561_fu_13233_p1 = $signed(tmp_309_fu_13223_p4);

assign sext_ln151_562_fu_13251_p1 = mul_res_286_fu_13245_p2;

assign sext_ln151_563_fu_13265_p1 = $signed(tmp_310_fu_13255_p4);

assign sext_ln151_564_fu_13317_p1 = $signed(trunc_ln137_11_reg_23945);

assign sext_ln151_565_fu_13334_p1 = mul_res_288_fu_13328_p2;

assign sext_ln151_566_fu_13338_p1 = $signed(trunc_ln137_12_reg_23950);

assign sext_ln151_567_fu_13355_p1 = mul_res_289_fu_13349_p2;

assign sext_ln151_568_fu_13359_p1 = $signed(trunc_ln137_13_reg_23955);

assign sext_ln151_569_fu_13376_p1 = mul_res_290_fu_13370_p2;

assign sext_ln151_56_fu_4203_p1 = mul_res_22_fu_4197_p2;

assign sext_ln151_570_fu_13380_p1 = $signed(trunc_ln137_14_reg_23960);

assign sext_ln151_571_fu_13397_p1 = mul_res_291_fu_13391_p2;

assign sext_ln151_572_fu_13401_p1 = $signed(trunc_ln137_15_reg_23965);

assign sext_ln151_573_fu_13418_p1 = mul_res_292_fu_13412_p2;

assign sext_ln151_574_fu_13422_p1 = $signed(trunc_ln137_16_reg_23970);

assign sext_ln151_575_fu_21034_p1 = mul_res_293_reg_24892;

assign sext_ln151_576_fu_13439_p1 = $signed(trunc_ln137_17_reg_23975);

assign sext_ln151_577_fu_13456_p1 = mul_res_294_fu_13450_p2;

assign sext_ln151_578_fu_13460_p1 = $signed(trunc_ln137_18_reg_23980);

assign sext_ln151_579_fu_21037_p1 = mul_res_295_reg_24897;

assign sext_ln151_57_fu_4217_p1 = $signed(tmp_46_fu_4207_p4);

assign sext_ln151_580_fu_13477_p1 = $signed(trunc_ln137_19_reg_23985);

assign sext_ln151_581_fu_21040_p1 = mul_res_296_reg_24902;

assign sext_ln151_582_fu_13494_p1 = $signed(trunc_ln137_20_reg_23990);

assign sext_ln151_583_fu_13511_p1 = mul_res_297_fu_13505_p2;

assign sext_ln151_584_fu_13515_p1 = $signed(trunc_ln137_21_reg_23995);

assign sext_ln151_585_fu_13532_p1 = mul_res_298_fu_13526_p2;

assign sext_ln151_586_fu_13536_p1 = $signed(trunc_ln137_22_reg_24000);

assign sext_ln151_587_fu_13601_p1 = mul_res_300_fu_13595_p2;

assign sext_ln151_588_fu_13619_p1 = mul_res_301_fu_13613_p2;

assign sext_ln151_589_fu_13637_p1 = mul_res_302_fu_13631_p2;

assign sext_ln151_58_fu_4291_p1 = $signed(tmp_47_fu_4281_p4);

assign sext_ln151_590_fu_13655_p1 = mul_res_303_fu_13649_p2;

assign sext_ln151_591_fu_13673_p1 = mul_res_304_fu_13667_p2;

assign sext_ln151_592_fu_21105_p1 = mul_res_305_reg_24927;

assign sext_ln151_593_fu_13705_p1 = mul_res_306_fu_13699_p2;

assign sext_ln151_594_fu_21108_p1 = mul_res_307_reg_24932;

assign sext_ln151_595_fu_21111_p1 = mul_res_308_reg_24937;

assign sext_ln151_596_fu_13751_p1 = mul_res_309_fu_13745_p2;

assign sext_ln151_597_fu_13769_p1 = mul_res_310_fu_13763_p2;

assign sext_ln151_598_fu_13835_p1 = mul_res_312_fu_13829_p2;

assign sext_ln151_599_fu_13853_p1 = mul_res_313_fu_13847_p2;

assign sext_ln151_59_fu_4309_p1 = mul_res_24_fu_4303_p2;

assign sext_ln151_5_fu_3459_p1 = mul_res_1_fu_3453_p2;

assign sext_ln151_600_fu_13871_p1 = mul_res_314_fu_13865_p2;

assign sext_ln151_601_fu_13889_p1 = mul_res_315_fu_13883_p2;

assign sext_ln151_602_fu_13907_p1 = mul_res_316_fu_13901_p2;

assign sext_ln151_603_fu_21176_p1 = mul_res_317_reg_24962;

assign sext_ln151_604_fu_13939_p1 = mul_res_318_fu_13933_p2;

assign sext_ln151_605_fu_21179_p1 = mul_res_319_reg_24967;

assign sext_ln151_606_fu_21182_p1 = mul_res_320_reg_24972;

assign sext_ln151_607_fu_13985_p1 = mul_res_321_fu_13979_p2;

assign sext_ln151_608_fu_14003_p1 = mul_res_322_fu_13997_p2;

assign sext_ln151_609_fu_14069_p1 = mul_res_324_fu_14063_p2;

assign sext_ln151_60_fu_4323_p1 = $signed(tmp_48_fu_4313_p4);

assign sext_ln151_610_fu_14087_p1 = mul_res_325_fu_14081_p2;

assign sext_ln151_611_fu_14105_p1 = mul_res_326_fu_14099_p2;

assign sext_ln151_612_fu_14123_p1 = mul_res_327_fu_14117_p2;

assign sext_ln151_613_fu_14141_p1 = mul_res_328_fu_14135_p2;

assign sext_ln151_614_fu_21247_p1 = mul_res_329_reg_24997;

assign sext_ln151_615_fu_14173_p1 = mul_res_330_fu_14167_p2;

assign sext_ln151_616_fu_21250_p1 = mul_res_331_reg_25002;

assign sext_ln151_617_fu_21253_p1 = mul_res_332_reg_25007;

assign sext_ln151_618_fu_14219_p1 = mul_res_333_fu_14213_p2;

assign sext_ln151_619_fu_14237_p1 = mul_res_334_fu_14231_p2;

assign sext_ln151_61_fu_4341_p1 = mul_res_25_fu_4335_p2;

assign sext_ln151_620_fu_14303_p1 = mul_res_336_fu_14297_p2;

assign sext_ln151_621_fu_14321_p1 = mul_res_337_fu_14315_p2;

assign sext_ln151_622_fu_14339_p1 = mul_res_338_fu_14333_p2;

assign sext_ln151_623_fu_14357_p1 = mul_res_339_fu_14351_p2;

assign sext_ln151_624_fu_14375_p1 = mul_res_340_fu_14369_p2;

assign sext_ln151_625_fu_21318_p1 = mul_res_341_reg_25032;

assign sext_ln151_626_fu_14407_p1 = mul_res_342_fu_14401_p2;

assign sext_ln151_627_fu_21321_p1 = mul_res_343_reg_25037;

assign sext_ln151_628_fu_21324_p1 = mul_res_344_reg_25042;

assign sext_ln151_629_fu_14453_p1 = mul_res_345_fu_14447_p2;

assign sext_ln151_62_fu_4355_p1 = $signed(tmp_49_fu_4345_p4);

assign sext_ln151_630_fu_14471_p1 = mul_res_346_fu_14465_p2;

assign sext_ln151_631_fu_14537_p1 = mul_res_348_fu_14531_p2;

assign sext_ln151_632_fu_14555_p1 = mul_res_349_fu_14549_p2;

assign sext_ln151_633_fu_14573_p1 = mul_res_350_fu_14567_p2;

assign sext_ln151_634_fu_14591_p1 = mul_res_351_fu_14585_p2;

assign sext_ln151_635_fu_14609_p1 = mul_res_352_fu_14603_p2;

assign sext_ln151_636_fu_21389_p1 = mul_res_353_reg_25067;

assign sext_ln151_637_fu_14641_p1 = mul_res_354_fu_14635_p2;

assign sext_ln151_638_fu_21392_p1 = mul_res_355_reg_25072;

assign sext_ln151_639_fu_21395_p1 = mul_res_356_reg_25077;

assign sext_ln151_63_fu_4373_p1 = mul_res_26_fu_4367_p2;

assign sext_ln151_640_fu_14687_p1 = mul_res_357_fu_14681_p2;

assign sext_ln151_641_fu_14705_p1 = mul_res_358_fu_14699_p2;

assign sext_ln151_642_fu_14771_p1 = mul_res_360_fu_14765_p2;

assign sext_ln151_643_fu_14789_p1 = mul_res_361_fu_14783_p2;

assign sext_ln151_644_fu_14807_p1 = mul_res_362_fu_14801_p2;

assign sext_ln151_645_fu_14825_p1 = mul_res_363_fu_14819_p2;

assign sext_ln151_646_fu_14843_p1 = mul_res_364_fu_14837_p2;

assign sext_ln151_647_fu_21460_p1 = mul_res_365_reg_25102;

assign sext_ln151_648_fu_14875_p1 = mul_res_366_fu_14869_p2;

assign sext_ln151_649_fu_21463_p1 = mul_res_367_reg_25107;

assign sext_ln151_64_fu_4387_p1 = $signed(tmp_50_fu_4377_p4);

assign sext_ln151_650_fu_21466_p1 = mul_res_368_reg_25112;

assign sext_ln151_651_fu_14921_p1 = mul_res_369_fu_14915_p2;

assign sext_ln151_652_fu_14939_p1 = mul_res_370_fu_14933_p2;

assign sext_ln151_653_fu_15005_p1 = mul_res_372_fu_14999_p2;

assign sext_ln151_654_fu_15023_p1 = mul_res_373_fu_15017_p2;

assign sext_ln151_655_fu_15041_p1 = mul_res_374_fu_15035_p2;

assign sext_ln151_656_fu_15059_p1 = mul_res_375_fu_15053_p2;

assign sext_ln151_657_fu_15077_p1 = mul_res_376_fu_15071_p2;

assign sext_ln151_658_fu_21531_p1 = mul_res_377_reg_25137;

assign sext_ln151_659_fu_15109_p1 = mul_res_378_fu_15103_p2;

assign sext_ln151_65_fu_4405_p1 = mul_res_27_fu_4399_p2;

assign sext_ln151_660_fu_21534_p1 = mul_res_379_reg_25142;

assign sext_ln151_661_fu_21537_p1 = mul_res_380_reg_25147;

assign sext_ln151_662_fu_15155_p1 = mul_res_381_fu_15149_p2;

assign sext_ln151_663_fu_15173_p1 = mul_res_382_fu_15167_p2;

assign sext_ln151_664_fu_15239_p1 = mul_res_384_fu_15233_p2;

assign sext_ln151_665_fu_15257_p1 = mul_res_385_fu_15251_p2;

assign sext_ln151_666_fu_15275_p1 = mul_res_386_fu_15269_p2;

assign sext_ln151_667_fu_15293_p1 = mul_res_387_fu_15287_p2;

assign sext_ln151_668_fu_15311_p1 = mul_res_388_fu_15305_p2;

assign sext_ln151_669_fu_21602_p1 = mul_res_389_reg_25172;

assign sext_ln151_66_fu_4419_p1 = $signed(tmp_51_fu_4409_p4);

assign sext_ln151_670_fu_15343_p1 = mul_res_390_fu_15337_p2;

assign sext_ln151_671_fu_21605_p1 = mul_res_391_reg_25177;

assign sext_ln151_672_fu_21608_p1 = mul_res_392_reg_25182;

assign sext_ln151_673_fu_15389_p1 = mul_res_393_fu_15383_p2;

assign sext_ln151_674_fu_15407_p1 = mul_res_394_fu_15401_p2;

assign sext_ln151_675_fu_15473_p1 = mul_res_396_fu_15467_p2;

assign sext_ln151_676_fu_15491_p1 = mul_res_397_fu_15485_p2;

assign sext_ln151_677_fu_15509_p1 = mul_res_398_fu_15503_p2;

assign sext_ln151_678_fu_15527_p1 = mul_res_399_fu_15521_p2;

assign sext_ln151_679_fu_15545_p1 = mul_res_400_fu_15539_p2;

assign sext_ln151_67_fu_4437_p1 = mul_res_28_fu_4431_p2;

assign sext_ln151_680_fu_21673_p1 = mul_res_401_reg_25207;

assign sext_ln151_681_fu_15577_p1 = mul_res_402_fu_15571_p2;

assign sext_ln151_682_fu_21676_p1 = mul_res_403_reg_25212;

assign sext_ln151_683_fu_21679_p1 = mul_res_404_reg_25217;

assign sext_ln151_684_fu_15623_p1 = mul_res_405_fu_15617_p2;

assign sext_ln151_685_fu_15641_p1 = mul_res_406_fu_15635_p2;

assign sext_ln151_686_fu_15707_p1 = mul_res_408_fu_15701_p2;

assign sext_ln151_687_fu_15725_p1 = mul_res_409_fu_15719_p2;

assign sext_ln151_688_fu_15743_p1 = mul_res_410_fu_15737_p2;

assign sext_ln151_689_fu_15761_p1 = mul_res_411_fu_15755_p2;

assign sext_ln151_68_fu_4451_p1 = $signed(tmp_52_fu_4441_p4);

assign sext_ln151_690_fu_15779_p1 = mul_res_412_fu_15773_p2;

assign sext_ln151_691_fu_21744_p1 = mul_res_413_reg_25242;

assign sext_ln151_692_fu_15811_p1 = mul_res_414_fu_15805_p2;

assign sext_ln151_693_fu_21747_p1 = mul_res_415_reg_25247;

assign sext_ln151_694_fu_21750_p1 = mul_res_416_reg_25252;

assign sext_ln151_695_fu_15857_p1 = mul_res_417_fu_15851_p2;

assign sext_ln151_696_fu_15875_p1 = mul_res_418_fu_15869_p2;

assign sext_ln151_697_fu_15941_p1 = mul_res_420_fu_15935_p2;

assign sext_ln151_698_fu_15959_p1 = mul_res_421_fu_15953_p2;

assign sext_ln151_699_fu_15977_p1 = mul_res_422_fu_15971_p2;

assign sext_ln151_69_fu_4469_p1 = mul_res_29_fu_4463_p2;

assign sext_ln151_6_fu_3473_p1 = $signed(trunc_ln137_1_reg_23895);

assign sext_ln151_700_fu_15995_p1 = mul_res_423_fu_15989_p2;

assign sext_ln151_701_fu_16013_p1 = mul_res_424_fu_16007_p2;

assign sext_ln151_702_fu_21815_p1 = mul_res_425_reg_25277;

assign sext_ln151_703_fu_16045_p1 = mul_res_426_fu_16039_p2;

assign sext_ln151_704_fu_21818_p1 = mul_res_427_reg_25282;

assign sext_ln151_705_fu_21821_p1 = mul_res_428_reg_25287;

assign sext_ln151_706_fu_16091_p1 = mul_res_429_fu_16085_p2;

assign sext_ln151_707_fu_16109_p1 = mul_res_430_fu_16103_p2;

assign sext_ln151_708_fu_16175_p1 = mul_res_432_fu_16169_p2;

assign sext_ln151_709_fu_16193_p1 = mul_res_433_fu_16187_p2;

assign sext_ln151_70_fu_4483_p1 = $signed(tmp_53_fu_4473_p4);

assign sext_ln151_710_fu_16211_p1 = mul_res_434_fu_16205_p2;

assign sext_ln151_711_fu_16229_p1 = mul_res_435_fu_16223_p2;

assign sext_ln151_712_fu_16247_p1 = mul_res_436_fu_16241_p2;

assign sext_ln151_713_fu_21886_p1 = mul_res_437_reg_25312;

assign sext_ln151_714_fu_16279_p1 = mul_res_438_fu_16273_p2;

assign sext_ln151_715_fu_21889_p1 = mul_res_439_reg_25317;

assign sext_ln151_716_fu_21892_p1 = mul_res_440_reg_25322;

assign sext_ln151_717_fu_16325_p1 = mul_res_441_fu_16319_p2;

assign sext_ln151_718_fu_16343_p1 = mul_res_442_fu_16337_p2;

assign sext_ln151_719_fu_16409_p1 = mul_res_444_fu_16403_p2;

assign sext_ln151_71_fu_4501_p1 = mul_res_30_fu_4495_p2;

assign sext_ln151_720_fu_16427_p1 = mul_res_445_fu_16421_p2;

assign sext_ln151_721_fu_16445_p1 = mul_res_446_fu_16439_p2;

assign sext_ln151_722_fu_16463_p1 = mul_res_447_fu_16457_p2;

assign sext_ln151_723_fu_16481_p1 = mul_res_448_fu_16475_p2;

assign sext_ln151_724_fu_21957_p1 = mul_res_449_reg_25347;

assign sext_ln151_725_fu_16513_p1 = mul_res_450_fu_16507_p2;

assign sext_ln151_726_fu_21960_p1 = mul_res_451_reg_25352;

assign sext_ln151_727_fu_21963_p1 = mul_res_452_reg_25357;

assign sext_ln151_728_fu_16559_p1 = mul_res_453_fu_16553_p2;

assign sext_ln151_729_fu_16577_p1 = mul_res_454_fu_16571_p2;

assign sext_ln151_72_fu_4515_p1 = $signed(tmp_54_fu_4505_p4);

assign sext_ln151_730_fu_16643_p1 = mul_res_456_fu_16637_p2;

assign sext_ln151_731_fu_16661_p1 = mul_res_457_fu_16655_p2;

assign sext_ln151_732_fu_16679_p1 = mul_res_458_fu_16673_p2;

assign sext_ln151_733_fu_16697_p1 = mul_res_459_fu_16691_p2;

assign sext_ln151_734_fu_16715_p1 = mul_res_460_fu_16709_p2;

assign sext_ln151_735_fu_22028_p1 = mul_res_461_reg_25382;

assign sext_ln151_736_fu_16747_p1 = mul_res_462_fu_16741_p2;

assign sext_ln151_737_fu_22031_p1 = mul_res_463_reg_25387;

assign sext_ln151_738_fu_22034_p1 = mul_res_464_reg_25392;

assign sext_ln151_739_fu_16793_p1 = mul_res_465_fu_16787_p2;

assign sext_ln151_73_fu_4533_p1 = mul_res_31_fu_4527_p2;

assign sext_ln151_740_fu_16811_p1 = mul_res_466_fu_16805_p2;

assign sext_ln151_741_fu_16877_p1 = mul_res_468_fu_16871_p2;

assign sext_ln151_742_fu_16895_p1 = mul_res_469_fu_16889_p2;

assign sext_ln151_743_fu_16913_p1 = mul_res_470_fu_16907_p2;

assign sext_ln151_744_fu_16931_p1 = mul_res_471_fu_16925_p2;

assign sext_ln151_745_fu_16949_p1 = mul_res_472_fu_16943_p2;

assign sext_ln151_746_fu_22099_p1 = mul_res_473_reg_25417;

assign sext_ln151_747_fu_16981_p1 = mul_res_474_fu_16975_p2;

assign sext_ln151_748_fu_22102_p1 = mul_res_475_reg_25422;

assign sext_ln151_749_fu_22105_p1 = mul_res_476_reg_25427;

assign sext_ln151_74_fu_4547_p1 = $signed(tmp_55_fu_4537_p4);

assign sext_ln151_750_fu_17027_p1 = mul_res_477_fu_17021_p2;

assign sext_ln151_751_fu_17045_p1 = mul_res_478_fu_17039_p2;

assign sext_ln151_752_fu_17111_p1 = mul_res_480_fu_17105_p2;

assign sext_ln151_753_fu_17129_p1 = mul_res_481_fu_17123_p2;

assign sext_ln151_754_fu_17147_p1 = mul_res_482_fu_17141_p2;

assign sext_ln151_755_fu_17165_p1 = mul_res_483_fu_17159_p2;

assign sext_ln151_756_fu_17183_p1 = mul_res_484_fu_17177_p2;

assign sext_ln151_757_fu_22170_p1 = mul_res_485_reg_25452;

assign sext_ln151_758_fu_17215_p1 = mul_res_486_fu_17209_p2;

assign sext_ln151_759_fu_22173_p1 = mul_res_487_reg_25457;

assign sext_ln151_75_fu_4565_p1 = mul_res_32_fu_4559_p2;

assign sext_ln151_760_fu_22176_p1 = mul_res_488_reg_25462;

assign sext_ln151_761_fu_17261_p1 = mul_res_489_fu_17255_p2;

assign sext_ln151_762_fu_17279_p1 = mul_res_490_fu_17273_p2;

assign sext_ln151_763_fu_17345_p1 = mul_res_492_fu_17339_p2;

assign sext_ln151_764_fu_17363_p1 = mul_res_493_fu_17357_p2;

assign sext_ln151_765_fu_17381_p1 = mul_res_494_fu_17375_p2;

assign sext_ln151_766_fu_17399_p1 = mul_res_495_fu_17393_p2;

assign sext_ln151_767_fu_17417_p1 = mul_res_496_fu_17411_p2;

assign sext_ln151_768_fu_22241_p1 = mul_res_497_reg_25487;

assign sext_ln151_769_fu_17449_p1 = mul_res_498_fu_17443_p2;

assign sext_ln151_76_fu_4579_p1 = $signed(tmp_56_fu_4569_p4);

assign sext_ln151_770_fu_22244_p1 = mul_res_499_reg_25492;

assign sext_ln151_771_fu_22247_p1 = mul_res_500_reg_25497;

assign sext_ln151_772_fu_17495_p1 = mul_res_501_fu_17489_p2;

assign sext_ln151_773_fu_17513_p1 = mul_res_502_fu_17507_p2;

assign sext_ln151_774_fu_17579_p1 = mul_res_504_fu_17573_p2;

assign sext_ln151_775_fu_17597_p1 = mul_res_505_fu_17591_p2;

assign sext_ln151_776_fu_17615_p1 = mul_res_506_fu_17609_p2;

assign sext_ln151_777_fu_17633_p1 = mul_res_507_fu_17627_p2;

assign sext_ln151_778_fu_17651_p1 = mul_res_508_fu_17645_p2;

assign sext_ln151_779_fu_22312_p1 = mul_res_509_reg_25522;

assign sext_ln151_77_fu_4597_p1 = mul_res_33_fu_4591_p2;

assign sext_ln151_780_fu_17683_p1 = mul_res_510_fu_17677_p2;

assign sext_ln151_781_fu_22315_p1 = mul_res_511_reg_25527;

assign sext_ln151_782_fu_22318_p1 = mul_res_512_reg_25532;

assign sext_ln151_783_fu_17729_p1 = mul_res_513_fu_17723_p2;

assign sext_ln151_784_fu_17747_p1 = mul_res_514_fu_17741_p2;

assign sext_ln151_785_fu_17813_p1 = mul_res_516_fu_17807_p2;

assign sext_ln151_786_fu_17831_p1 = mul_res_517_fu_17825_p2;

assign sext_ln151_787_fu_17849_p1 = mul_res_518_fu_17843_p2;

assign sext_ln151_788_fu_17867_p1 = mul_res_519_fu_17861_p2;

assign sext_ln151_789_fu_17885_p1 = mul_res_520_fu_17879_p2;

assign sext_ln151_78_fu_4611_p1 = $signed(tmp_57_fu_4601_p4);

assign sext_ln151_790_fu_22383_p1 = mul_res_521_reg_25557;

assign sext_ln151_791_fu_17917_p1 = mul_res_522_fu_17911_p2;

assign sext_ln151_792_fu_22386_p1 = mul_res_523_reg_25562;

assign sext_ln151_793_fu_22389_p1 = mul_res_524_reg_25567;

assign sext_ln151_794_fu_17963_p1 = mul_res_525_fu_17957_p2;

assign sext_ln151_795_fu_17981_p1 = mul_res_526_fu_17975_p2;

assign sext_ln151_796_fu_18047_p1 = mul_res_528_fu_18041_p2;

assign sext_ln151_797_fu_18065_p1 = mul_res_529_fu_18059_p2;

assign sext_ln151_798_fu_18083_p1 = mul_res_530_fu_18077_p2;

assign sext_ln151_799_fu_18101_p1 = mul_res_531_fu_18095_p2;

assign sext_ln151_79_fu_4629_p1 = mul_res_34_fu_4623_p2;

assign sext_ln151_7_fu_3476_p1 = $signed(tmp_25_fu_3463_p4);

assign sext_ln151_800_fu_18119_p1 = mul_res_532_fu_18113_p2;

assign sext_ln151_801_fu_22454_p1 = mul_res_533_reg_25592;

assign sext_ln151_802_fu_18151_p1 = mul_res_534_fu_18145_p2;

assign sext_ln151_803_fu_22457_p1 = mul_res_535_reg_25597;

assign sext_ln151_804_fu_22460_p1 = mul_res_536_reg_25602;

assign sext_ln151_805_fu_18197_p1 = mul_res_537_fu_18191_p2;

assign sext_ln151_806_fu_18215_p1 = mul_res_538_fu_18209_p2;

assign sext_ln151_807_fu_18281_p1 = mul_res_540_fu_18275_p2;

assign sext_ln151_808_fu_18299_p1 = mul_res_541_fu_18293_p2;

assign sext_ln151_809_fu_18317_p1 = mul_res_542_fu_18311_p2;

assign sext_ln151_80_fu_4643_p1 = $signed(tmp_58_fu_4633_p4);

assign sext_ln151_810_fu_18335_p1 = mul_res_543_fu_18329_p2;

assign sext_ln151_811_fu_18353_p1 = mul_res_544_fu_18347_p2;

assign sext_ln151_812_fu_22525_p1 = mul_res_545_reg_25627;

assign sext_ln151_813_fu_18385_p1 = mul_res_546_fu_18379_p2;

assign sext_ln151_814_fu_22528_p1 = mul_res_547_reg_25632;

assign sext_ln151_815_fu_22531_p1 = mul_res_548_reg_25637;

assign sext_ln151_816_fu_18431_p1 = mul_res_549_fu_18425_p2;

assign sext_ln151_817_fu_18449_p1 = mul_res_550_fu_18443_p2;

assign sext_ln151_818_fu_18515_p1 = mul_res_552_fu_18509_p2;

assign sext_ln151_819_fu_18533_p1 = mul_res_553_fu_18527_p2;

assign sext_ln151_81_fu_4717_p1 = $signed(tmp_59_fu_4707_p4);

assign sext_ln151_820_fu_18551_p1 = mul_res_554_fu_18545_p2;

assign sext_ln151_821_fu_18569_p1 = mul_res_555_fu_18563_p2;

assign sext_ln151_822_fu_18587_p1 = mul_res_556_fu_18581_p2;

assign sext_ln151_823_fu_22596_p1 = mul_res_557_reg_25662;

assign sext_ln151_824_fu_18619_p1 = mul_res_558_fu_18613_p2;

assign sext_ln151_825_fu_22599_p1 = mul_res_559_reg_25667;

assign sext_ln151_826_fu_22602_p1 = mul_res_560_reg_25672;

assign sext_ln151_827_fu_18665_p1 = mul_res_561_fu_18659_p2;

assign sext_ln151_828_fu_18683_p1 = mul_res_562_fu_18677_p2;

assign sext_ln151_829_fu_18749_p1 = mul_res_564_fu_18743_p2;

assign sext_ln151_82_fu_4735_p1 = mul_res_36_fu_4729_p2;

assign sext_ln151_830_fu_18767_p1 = mul_res_565_fu_18761_p2;

assign sext_ln151_831_fu_18785_p1 = mul_res_566_fu_18779_p2;

assign sext_ln151_832_fu_18803_p1 = mul_res_567_fu_18797_p2;

assign sext_ln151_833_fu_18821_p1 = mul_res_568_fu_18815_p2;

assign sext_ln151_834_fu_22667_p1 = mul_res_569_reg_25697;

assign sext_ln151_835_fu_18853_p1 = mul_res_570_fu_18847_p2;

assign sext_ln151_836_fu_22670_p1 = mul_res_571_reg_25702;

assign sext_ln151_837_fu_22673_p1 = mul_res_572_reg_25707;

assign sext_ln151_838_fu_18899_p1 = mul_res_573_fu_18893_p2;

assign sext_ln151_839_fu_18917_p1 = mul_res_574_fu_18911_p2;

assign sext_ln151_83_fu_4749_p1 = $signed(tmp_60_fu_4739_p4);

assign sext_ln151_84_fu_4767_p1 = mul_res_37_fu_4761_p2;

assign sext_ln151_85_fu_4781_p1 = $signed(tmp_61_fu_4771_p4);

assign sext_ln151_86_fu_4799_p1 = mul_res_38_fu_4793_p2;

assign sext_ln151_87_fu_4813_p1 = $signed(tmp_62_fu_4803_p4);

assign sext_ln151_88_fu_4831_p1 = mul_res_39_fu_4825_p2;

assign sext_ln151_89_fu_4845_p1 = $signed(tmp_63_fu_4835_p4);

assign sext_ln151_8_fu_3494_p1 = mul_res_2_fu_3488_p2;

assign sext_ln151_90_fu_4863_p1 = mul_res_40_fu_4857_p2;

assign sext_ln151_91_fu_4877_p1 = $signed(tmp_64_fu_4867_p4);

assign sext_ln151_92_fu_4895_p1 = mul_res_41_fu_4889_p2;

assign sext_ln151_93_fu_4909_p1 = $signed(tmp_65_fu_4899_p4);

assign sext_ln151_94_fu_4927_p1 = mul_res_42_fu_4921_p2;

assign sext_ln151_95_fu_4941_p1 = $signed(tmp_66_fu_4931_p4);

assign sext_ln151_96_fu_4959_p1 = mul_res_43_fu_4953_p2;

assign sext_ln151_97_fu_4973_p1 = $signed(tmp_67_fu_4963_p4);

assign sext_ln151_98_fu_4991_p1 = mul_res_44_fu_4985_p2;

assign sext_ln151_99_fu_5005_p1 = $signed(tmp_68_fu_4995_p4);

assign sext_ln151_9_fu_3508_p1 = $signed(trunc_ln137_2_reg_23900);

assign sext_ln151_fu_3403_p1 = $signed(trunc_ln137_reg_23885);

assign sext_ln153_100_fu_20354_p1 = $signed(add_ln153_171_fu_20348_p2);

assign sext_ln153_101_fu_20364_p1 = $signed(add_ln153_174_reg_24562);

assign sext_ln153_102_fu_20367_p1 = $signed(add_ln153_175_reg_24567);

assign sext_ln153_103_fu_20370_p1 = $signed(add_ln153_176_reg_24572);

assign sext_ln153_104_fu_20385_p1 = $signed(add_ln153_178_fu_20379_p2);

assign sext_ln153_105_fu_10067_p1 = mul_res_191_fu_10061_p2;

assign sext_ln153_106_fu_20404_p1 = $signed(add_ln153_180_reg_24592);

assign sext_ln153_107_fu_20425_p1 = $signed(add_ln153_183_fu_20419_p2);

assign sext_ln153_108_fu_20435_p1 = $signed(add_ln153_186_reg_24597);

assign sext_ln153_109_fu_20438_p1 = $signed(add_ln153_187_reg_24602);

assign sext_ln153_10_fu_19611_p1 = $signed(add_ln153_18_reg_24187);

assign sext_ln153_110_fu_20441_p1 = $signed(add_ln153_188_reg_24607);

assign sext_ln153_111_fu_20456_p1 = $signed(add_ln153_190_fu_20450_p2);

assign sext_ln153_112_fu_10469_p1 = mul_res_203_fu_10463_p2;

assign sext_ln153_113_fu_20475_p1 = $signed(add_ln153_192_reg_24627);

assign sext_ln153_114_fu_20496_p1 = $signed(add_ln153_195_fu_20490_p2);

assign sext_ln153_115_fu_20506_p1 = $signed(add_ln153_198_reg_24632);

assign sext_ln153_116_fu_20509_p1 = $signed(add_ln153_199_reg_24637);

assign sext_ln153_117_fu_20512_p1 = $signed(add_ln153_200_reg_24642);

assign sext_ln153_118_fu_20527_p1 = $signed(add_ln153_202_fu_20521_p2);

assign sext_ln153_119_fu_10871_p1 = mul_res_215_fu_10865_p2;

assign sext_ln153_11_fu_19614_p1 = $signed(add_ln153_19_reg_24192);

assign sext_ln153_120_fu_20546_p1 = $signed(add_ln153_204_reg_24662);

assign sext_ln153_121_fu_20567_p1 = $signed(add_ln153_207_fu_20561_p2);

assign sext_ln153_122_fu_20577_p1 = $signed(add_ln153_210_reg_24667);

assign sext_ln153_123_fu_20580_p1 = $signed(add_ln153_211_reg_24672);

assign sext_ln153_124_fu_20583_p1 = $signed(add_ln153_212_reg_24677);

assign sext_ln153_125_fu_20598_p1 = $signed(add_ln153_214_fu_20592_p2);

assign sext_ln153_126_fu_11273_p1 = mul_res_227_fu_11267_p2;

assign sext_ln153_127_fu_20617_p1 = $signed(add_ln153_216_reg_24697);

assign sext_ln153_128_fu_20638_p1 = $signed(add_ln153_219_fu_20632_p2);

assign sext_ln153_129_fu_20648_p1 = $signed(add_ln153_222_reg_24702);

assign sext_ln153_12_fu_19617_p1 = $signed(add_ln153_20_reg_24197);

assign sext_ln153_130_fu_20651_p1 = $signed(add_ln153_223_reg_24707);

assign sext_ln153_131_fu_20654_p1 = $signed(add_ln153_224_reg_24712);

assign sext_ln153_132_fu_20669_p1 = $signed(add_ln153_226_fu_20663_p2);

assign sext_ln153_133_fu_11675_p1 = mul_res_239_fu_11669_p2;

assign sext_ln153_134_fu_20688_p1 = $signed(add_ln153_228_reg_24732);

assign sext_ln153_135_fu_20709_p1 = $signed(add_ln153_231_fu_20703_p2);

assign sext_ln153_136_fu_20719_p1 = $signed(add_ln153_234_reg_24737);

assign sext_ln153_137_fu_20722_p1 = $signed(add_ln153_235_reg_24742);

assign sext_ln153_138_fu_20725_p1 = $signed(add_ln153_236_reg_24747);

assign sext_ln153_139_fu_20740_p1 = $signed(add_ln153_238_fu_20734_p2);

assign sext_ln153_13_fu_19632_p1 = $signed(add_ln153_22_fu_19626_p2);

assign sext_ln153_140_fu_12077_p1 = mul_res_251_fu_12071_p2;

assign sext_ln153_141_fu_20759_p1 = $signed(add_ln153_240_reg_24767);

assign sext_ln153_142_fu_20780_p1 = $signed(add_ln153_243_fu_20774_p2);

assign sext_ln153_143_fu_20790_p1 = $signed(add_ln153_246_reg_24772);

assign sext_ln153_144_fu_20793_p1 = $signed(add_ln153_247_reg_24777);

assign sext_ln153_145_fu_20796_p1 = $signed(add_ln153_248_reg_24782);

assign sext_ln153_146_fu_20811_p1 = $signed(add_ln153_250_fu_20805_p2);

assign sext_ln153_147_fu_12479_p1 = mul_res_263_fu_12473_p2;

assign sext_ln153_148_fu_20830_p1 = $signed(add_ln153_252_reg_24802);

assign sext_ln153_149_fu_20851_p1 = $signed(add_ln153_255_fu_20845_p2);

assign sext_ln153_14_fu_4661_p1 = mul_res_35_fu_4655_p2;

assign sext_ln153_150_fu_20861_p1 = $signed(add_ln153_258_reg_24807);

assign sext_ln153_151_fu_20864_p1 = $signed(add_ln153_259_reg_24812);

assign sext_ln153_152_fu_20867_p1 = $signed(add_ln153_260_reg_24817);

assign sext_ln153_153_fu_20882_p1 = $signed(add_ln153_262_fu_20876_p2);

assign sext_ln153_154_fu_12881_p1 = mul_res_275_fu_12875_p2;

assign sext_ln153_155_fu_20901_p1 = $signed(add_ln153_264_reg_24837);

assign sext_ln153_156_fu_20922_p1 = $signed(add_ln153_267_fu_20916_p2);

assign sext_ln153_157_fu_20932_p1 = $signed(add_ln153_270_reg_24842);

assign sext_ln153_158_fu_20935_p1 = $signed(add_ln153_271_reg_24847);

assign sext_ln153_159_fu_20938_p1 = $signed(add_ln153_272_reg_24852);

assign sext_ln153_15_fu_19648_p1 = $signed(add_ln153_24_reg_24202);

assign sext_ln153_160_fu_20953_p1 = $signed(add_ln153_274_fu_20947_p2);

assign sext_ln153_161_fu_13283_p1 = mul_res_287_fu_13277_p2;

assign sext_ln153_162_fu_20972_p1 = $signed(add_ln153_276_reg_24872);

assign sext_ln153_163_fu_20993_p1 = $signed(add_ln153_279_fu_20987_p2);

assign sext_ln153_164_fu_21003_p1 = $signed(add_ln153_282_reg_24877);

assign sext_ln153_165_fu_21006_p1 = $signed(add_ln153_283_reg_24882);

assign sext_ln153_166_fu_21009_p1 = $signed(add_ln153_284_reg_24887);

assign sext_ln153_167_fu_21024_p1 = $signed(add_ln153_286_fu_21018_p2);

assign sext_ln153_168_fu_13553_p1 = mul_res_299_fu_13547_p2;

assign sext_ln153_169_fu_21043_p1 = $signed(add_ln153_288_reg_24907);

assign sext_ln153_16_fu_19651_p1 = $signed(add_ln153_27_reg_24207);

assign sext_ln153_170_fu_21064_p1 = $signed(add_ln153_291_fu_21058_p2);

assign sext_ln153_171_fu_21074_p1 = $signed(add_ln153_294_reg_24912);

assign sext_ln153_172_fu_21077_p1 = $signed(add_ln153_295_reg_24917);

assign sext_ln153_173_fu_21080_p1 = $signed(add_ln153_296_reg_24922);

assign sext_ln153_174_fu_21095_p1 = $signed(add_ln153_298_fu_21089_p2);

assign sext_ln153_175_fu_13787_p1 = mul_res_311_fu_13781_p2;

assign sext_ln153_176_fu_21114_p1 = $signed(add_ln153_300_reg_24942);

assign sext_ln153_177_fu_21135_p1 = $signed(add_ln153_303_fu_21129_p2);

assign sext_ln153_178_fu_21145_p1 = $signed(add_ln153_306_reg_24947);

assign sext_ln153_179_fu_21148_p1 = $signed(add_ln153_307_reg_24952);

assign sext_ln153_17_fu_19660_p1 = $signed(add_ln153_30_reg_24212);

assign sext_ln153_180_fu_21151_p1 = $signed(add_ln153_308_reg_24957);

assign sext_ln153_181_fu_21166_p1 = $signed(add_ln153_310_fu_21160_p2);

assign sext_ln153_182_fu_14021_p1 = mul_res_323_fu_14015_p2;

assign sext_ln153_183_fu_21185_p1 = $signed(add_ln153_312_reg_24977);

assign sext_ln153_184_fu_21206_p1 = $signed(add_ln153_315_fu_21200_p2);

assign sext_ln153_185_fu_21216_p1 = $signed(add_ln153_318_reg_24982);

assign sext_ln153_186_fu_21219_p1 = $signed(add_ln153_319_reg_24987);

assign sext_ln153_187_fu_21222_p1 = $signed(add_ln153_320_reg_24992);

assign sext_ln153_188_fu_21237_p1 = $signed(add_ln153_322_fu_21231_p2);

assign sext_ln153_189_fu_14255_p1 = mul_res_335_fu_14249_p2;

assign sext_ln153_18_fu_19663_p1 = $signed(add_ln153_31_reg_24217);

assign sext_ln153_190_fu_21256_p1 = $signed(add_ln153_324_reg_25012);

assign sext_ln153_191_fu_21277_p1 = $signed(add_ln153_327_fu_21271_p2);

assign sext_ln153_192_fu_21287_p1 = $signed(add_ln153_330_reg_25017);

assign sext_ln153_193_fu_21290_p1 = $signed(add_ln153_331_reg_25022);

assign sext_ln153_194_fu_21293_p1 = $signed(add_ln153_332_reg_25027);

assign sext_ln153_195_fu_21308_p1 = $signed(add_ln153_334_fu_21302_p2);

assign sext_ln153_196_fu_14489_p1 = mul_res_347_fu_14483_p2;

assign sext_ln153_197_fu_21327_p1 = $signed(add_ln153_336_reg_25047);

assign sext_ln153_198_fu_21348_p1 = $signed(add_ln153_339_fu_21342_p2);

assign sext_ln153_199_fu_21358_p1 = $signed(add_ln153_342_reg_25052);

assign sext_ln153_19_fu_19666_p1 = $signed(add_ln153_32_reg_24222);

assign sext_ln153_1_fu_19550_p1 = $signed(add_ln153_reg_24152);

assign sext_ln153_200_fu_21361_p1 = $signed(add_ln153_343_reg_25057);

assign sext_ln153_201_fu_21364_p1 = $signed(add_ln153_344_reg_25062);

assign sext_ln153_202_fu_21379_p1 = $signed(add_ln153_346_fu_21373_p2);

assign sext_ln153_203_fu_14723_p1 = mul_res_359_fu_14717_p2;

assign sext_ln153_204_fu_21398_p1 = $signed(add_ln153_348_reg_25082);

assign sext_ln153_205_fu_21419_p1 = $signed(add_ln153_351_fu_21413_p2);

assign sext_ln153_206_fu_21429_p1 = $signed(add_ln153_354_reg_25087);

assign sext_ln153_207_fu_21432_p1 = $signed(add_ln153_355_reg_25092);

assign sext_ln153_208_fu_21435_p1 = $signed(add_ln153_356_reg_25097);

assign sext_ln153_209_fu_21450_p1 = $signed(add_ln153_358_fu_21444_p2);

assign sext_ln153_20_fu_19681_p1 = $signed(add_ln153_34_fu_19675_p2);

assign sext_ln153_210_fu_14957_p1 = mul_res_371_fu_14951_p2;

assign sext_ln153_211_fu_21469_p1 = $signed(add_ln153_360_reg_25117);

assign sext_ln153_212_fu_21490_p1 = $signed(add_ln153_363_fu_21484_p2);

assign sext_ln153_213_fu_21500_p1 = $signed(add_ln153_366_reg_25122);

assign sext_ln153_214_fu_21503_p1 = $signed(add_ln153_367_reg_25127);

assign sext_ln153_215_fu_21506_p1 = $signed(add_ln153_368_reg_25132);

assign sext_ln153_216_fu_21521_p1 = $signed(add_ln153_370_fu_21515_p2);

assign sext_ln153_217_fu_15191_p1 = mul_res_383_fu_15185_p2;

assign sext_ln153_218_fu_21540_p1 = $signed(add_ln153_372_reg_25152);

assign sext_ln153_219_fu_21561_p1 = $signed(add_ln153_375_fu_21555_p2);

assign sext_ln153_21_fu_5087_p1 = mul_res_47_fu_5081_p2;

assign sext_ln153_220_fu_21571_p1 = $signed(add_ln153_378_reg_25157);

assign sext_ln153_221_fu_21574_p1 = $signed(add_ln153_379_reg_25162);

assign sext_ln153_222_fu_21577_p1 = $signed(add_ln153_380_reg_25167);

assign sext_ln153_223_fu_21592_p1 = $signed(add_ln153_382_fu_21586_p2);

assign sext_ln153_224_fu_15425_p1 = mul_res_395_fu_15419_p2;

assign sext_ln153_225_fu_21611_p1 = $signed(add_ln153_384_reg_25187);

assign sext_ln153_226_fu_21632_p1 = $signed(add_ln153_387_fu_21626_p2);

assign sext_ln153_227_fu_21642_p1 = $signed(add_ln153_390_reg_25192);

assign sext_ln153_228_fu_21645_p1 = $signed(add_ln153_391_reg_25197);

assign sext_ln153_229_fu_21648_p1 = $signed(add_ln153_392_reg_25202);

assign sext_ln153_22_fu_19697_p1 = $signed(add_ln153_36_reg_24227);

assign sext_ln153_230_fu_21663_p1 = $signed(add_ln153_394_fu_21657_p2);

assign sext_ln153_231_fu_15659_p1 = mul_res_407_fu_15653_p2;

assign sext_ln153_232_fu_21682_p1 = $signed(add_ln153_396_reg_25222);

assign sext_ln153_233_fu_21703_p1 = $signed(add_ln153_399_fu_21697_p2);

assign sext_ln153_234_fu_21713_p1 = $signed(add_ln153_402_reg_25227);

assign sext_ln153_235_fu_21716_p1 = $signed(add_ln153_403_reg_25232);

assign sext_ln153_236_fu_21719_p1 = $signed(add_ln153_404_reg_25237);

assign sext_ln153_237_fu_21734_p1 = $signed(add_ln153_406_fu_21728_p2);

assign sext_ln153_238_fu_15893_p1 = mul_res_419_fu_15887_p2;

assign sext_ln153_239_fu_21753_p1 = $signed(add_ln153_408_reg_25257);

assign sext_ln153_23_fu_19700_p1 = $signed(add_ln153_39_reg_24232);

assign sext_ln153_240_fu_21774_p1 = $signed(add_ln153_411_fu_21768_p2);

assign sext_ln153_241_fu_21784_p1 = $signed(add_ln153_414_reg_25262);

assign sext_ln153_242_fu_21787_p1 = $signed(add_ln153_415_reg_25267);

assign sext_ln153_243_fu_21790_p1 = $signed(add_ln153_416_reg_25272);

assign sext_ln153_244_fu_21805_p1 = $signed(add_ln153_418_fu_21799_p2);

assign sext_ln153_245_fu_16127_p1 = mul_res_431_fu_16121_p2;

assign sext_ln153_246_fu_21824_p1 = $signed(add_ln153_420_reg_25292);

assign sext_ln153_247_fu_21845_p1 = $signed(add_ln153_423_fu_21839_p2);

assign sext_ln153_248_fu_21855_p1 = $signed(add_ln153_426_reg_25297);

assign sext_ln153_249_fu_21858_p1 = $signed(add_ln153_427_reg_25302);

assign sext_ln153_24_fu_19709_p1 = $signed(add_ln153_42_reg_24237);

assign sext_ln153_250_fu_21861_p1 = $signed(add_ln153_428_reg_25307);

assign sext_ln153_251_fu_21876_p1 = $signed(add_ln153_430_fu_21870_p2);

assign sext_ln153_252_fu_16361_p1 = mul_res_443_fu_16355_p2;

assign sext_ln153_253_fu_21895_p1 = $signed(add_ln153_432_reg_25327);

assign sext_ln153_254_fu_21916_p1 = $signed(add_ln153_435_fu_21910_p2);

assign sext_ln153_255_fu_21926_p1 = $signed(add_ln153_438_reg_25332);

assign sext_ln153_256_fu_21929_p1 = $signed(add_ln153_439_reg_25337);

assign sext_ln153_257_fu_21932_p1 = $signed(add_ln153_440_reg_25342);

assign sext_ln153_258_fu_21947_p1 = $signed(add_ln153_442_fu_21941_p2);

assign sext_ln153_259_fu_16595_p1 = mul_res_455_fu_16589_p2;

assign sext_ln153_25_fu_19712_p1 = $signed(add_ln153_43_reg_24242);

assign sext_ln153_260_fu_21966_p1 = $signed(add_ln153_444_reg_25362);

assign sext_ln153_261_fu_21987_p1 = $signed(add_ln153_447_fu_21981_p2);

assign sext_ln153_262_fu_21997_p1 = $signed(add_ln153_450_reg_25367);

assign sext_ln153_263_fu_22000_p1 = $signed(add_ln153_451_reg_25372);

assign sext_ln153_264_fu_22003_p1 = $signed(add_ln153_452_reg_25377);

assign sext_ln153_265_fu_22018_p1 = $signed(add_ln153_454_fu_22012_p2);

assign sext_ln153_266_fu_16829_p1 = mul_res_467_fu_16823_p2;

assign sext_ln153_267_fu_22037_p1 = $signed(add_ln153_456_reg_25397);

assign sext_ln153_268_fu_22058_p1 = $signed(add_ln153_459_fu_22052_p2);

assign sext_ln153_269_fu_22068_p1 = $signed(add_ln153_462_reg_25402);

assign sext_ln153_26_fu_19715_p1 = $signed(add_ln153_44_reg_24247);

assign sext_ln153_270_fu_22071_p1 = $signed(add_ln153_463_reg_25407);

assign sext_ln153_271_fu_22074_p1 = $signed(add_ln153_464_reg_25412);

assign sext_ln153_272_fu_22089_p1 = $signed(add_ln153_466_fu_22083_p2);

assign sext_ln153_273_fu_17063_p1 = mul_res_479_fu_17057_p2;

assign sext_ln153_274_fu_22108_p1 = $signed(add_ln153_468_reg_25432);

assign sext_ln153_275_fu_22129_p1 = $signed(add_ln153_471_fu_22123_p2);

assign sext_ln153_276_fu_22139_p1 = $signed(add_ln153_474_reg_25437);

assign sext_ln153_277_fu_22142_p1 = $signed(add_ln153_475_reg_25442);

assign sext_ln153_278_fu_22145_p1 = $signed(add_ln153_476_reg_25447);

assign sext_ln153_279_fu_22160_p1 = $signed(add_ln153_478_fu_22154_p2);

assign sext_ln153_27_fu_19730_p1 = $signed(add_ln153_46_fu_19724_p2);

assign sext_ln153_280_fu_17297_p1 = mul_res_491_fu_17291_p2;

assign sext_ln153_281_fu_22179_p1 = $signed(add_ln153_480_reg_25467);

assign sext_ln153_282_fu_22200_p1 = $signed(add_ln153_483_fu_22194_p2);

assign sext_ln153_283_fu_22210_p1 = $signed(add_ln153_486_reg_25472);

assign sext_ln153_284_fu_22213_p1 = $signed(add_ln153_487_reg_25477);

assign sext_ln153_285_fu_22216_p1 = $signed(add_ln153_488_reg_25482);

assign sext_ln153_286_fu_22231_p1 = $signed(add_ln153_490_fu_22225_p2);

assign sext_ln153_287_fu_17531_p1 = mul_res_503_fu_17525_p2;

assign sext_ln153_288_fu_22250_p1 = $signed(add_ln153_492_reg_25502);

assign sext_ln153_289_fu_22271_p1 = $signed(add_ln153_495_fu_22265_p2);

assign sext_ln153_28_fu_5513_p1 = mul_res_59_fu_5507_p2;

assign sext_ln153_290_fu_22281_p1 = $signed(add_ln153_498_reg_25507);

assign sext_ln153_291_fu_22284_p1 = $signed(add_ln153_499_reg_25512);

assign sext_ln153_292_fu_22287_p1 = $signed(add_ln153_500_reg_25517);

assign sext_ln153_293_fu_22302_p1 = $signed(add_ln153_502_fu_22296_p2);

assign sext_ln153_294_fu_17765_p1 = mul_res_515_fu_17759_p2;

assign sext_ln153_295_fu_22321_p1 = $signed(add_ln153_504_reg_25537);

assign sext_ln153_296_fu_22342_p1 = $signed(add_ln153_507_fu_22336_p2);

assign sext_ln153_297_fu_22352_p1 = $signed(add_ln153_510_reg_25542);

assign sext_ln153_298_fu_22355_p1 = $signed(add_ln153_511_reg_25547);

assign sext_ln153_299_fu_22358_p1 = $signed(add_ln153_512_reg_25552);

assign sext_ln153_29_fu_19746_p1 = $signed(add_ln153_48_reg_24252);

assign sext_ln153_2_fu_19553_p1 = $signed(add_ln153_3_reg_24157);

assign sext_ln153_300_fu_22373_p1 = $signed(add_ln153_514_fu_22367_p2);

assign sext_ln153_301_fu_17999_p1 = mul_res_527_fu_17993_p2;

assign sext_ln153_302_fu_22392_p1 = $signed(add_ln153_516_reg_25572);

assign sext_ln153_303_fu_22413_p1 = $signed(add_ln153_519_fu_22407_p2);

assign sext_ln153_304_fu_22423_p1 = $signed(add_ln153_522_reg_25577);

assign sext_ln153_305_fu_22426_p1 = $signed(add_ln153_523_reg_25582);

assign sext_ln153_306_fu_22429_p1 = $signed(add_ln153_524_reg_25587);

assign sext_ln153_307_fu_22444_p1 = $signed(add_ln153_526_fu_22438_p2);

assign sext_ln153_308_fu_18233_p1 = mul_res_539_fu_18227_p2;

assign sext_ln153_309_fu_22463_p1 = $signed(add_ln153_528_reg_25607);

assign sext_ln153_30_fu_19749_p1 = $signed(add_ln153_51_reg_24257);

assign sext_ln153_310_fu_22484_p1 = $signed(add_ln153_531_fu_22478_p2);

assign sext_ln153_311_fu_22494_p1 = $signed(add_ln153_534_reg_25612);

assign sext_ln153_312_fu_22497_p1 = $signed(add_ln153_535_reg_25617);

assign sext_ln153_313_fu_22500_p1 = $signed(add_ln153_536_reg_25622);

assign sext_ln153_314_fu_22515_p1 = $signed(add_ln153_538_fu_22509_p2);

assign sext_ln153_315_fu_18467_p1 = mul_res_551_fu_18461_p2;

assign sext_ln153_316_fu_22534_p1 = $signed(add_ln153_540_reg_25642);

assign sext_ln153_317_fu_22555_p1 = $signed(add_ln153_543_fu_22549_p2);

assign sext_ln153_318_fu_22565_p1 = $signed(add_ln153_546_reg_25647);

assign sext_ln153_319_fu_22568_p1 = $signed(add_ln153_547_reg_25652);

assign sext_ln153_31_fu_19758_p1 = $signed(add_ln153_54_reg_24262);

assign sext_ln153_320_fu_22571_p1 = $signed(add_ln153_548_reg_25657);

assign sext_ln153_321_fu_22586_p1 = $signed(add_ln153_550_fu_22580_p2);

assign sext_ln153_322_fu_18701_p1 = mul_res_563_fu_18695_p2;

assign sext_ln153_323_fu_22605_p1 = $signed(add_ln153_552_reg_25677);

assign sext_ln153_324_fu_22626_p1 = $signed(add_ln153_555_fu_22620_p2);

assign sext_ln153_325_fu_22636_p1 = $signed(add_ln153_558_reg_25682);

assign sext_ln153_326_fu_22639_p1 = $signed(add_ln153_559_reg_25687);

assign sext_ln153_327_fu_22642_p1 = $signed(add_ln153_560_reg_25692);

assign sext_ln153_328_fu_22657_p1 = $signed(add_ln153_562_fu_22651_p2);

assign sext_ln153_329_fu_18935_p1 = mul_res_575_fu_18929_p2;

assign sext_ln153_32_fu_19761_p1 = $signed(add_ln153_55_reg_24267);

assign sext_ln153_330_fu_22676_p1 = $signed(add_ln153_564_reg_25712);

assign sext_ln153_331_fu_22697_p1 = $signed(add_ln153_567_fu_22691_p2);

assign sext_ln153_332_fu_22707_p1 = $signed(add_ln153_570_reg_25717);

assign sext_ln153_333_fu_22710_p1 = $signed(add_ln153_571_reg_25722);

assign sext_ln153_334_fu_22713_p1 = $signed(add_ln153_572_reg_25727);

assign sext_ln153_335_fu_22728_p1 = $signed(add_ln153_574_fu_22722_p2);

assign sext_ln153_33_fu_19764_p1 = $signed(add_ln153_56_reg_24272);

assign sext_ln153_34_fu_19779_p1 = $signed(add_ln153_58_fu_19773_p2);

assign sext_ln153_35_fu_5939_p1 = mul_res_71_fu_5933_p2;

assign sext_ln153_36_fu_19795_p1 = $signed(add_ln153_60_reg_24277);

assign sext_ln153_37_fu_19798_p1 = $signed(add_ln153_63_reg_24282);

assign sext_ln153_38_fu_19807_p1 = $signed(add_ln153_66_reg_24287);

assign sext_ln153_39_fu_19810_p1 = $signed(add_ln153_67_reg_24292);

assign sext_ln153_3_fu_19562_p1 = $signed(add_ln153_6_reg_24162);

assign sext_ln153_40_fu_19813_p1 = $signed(add_ln153_68_reg_24297);

assign sext_ln153_41_fu_19828_p1 = $signed(add_ln153_70_fu_19822_p2);

assign sext_ln153_42_fu_6365_p1 = mul_res_83_fu_6359_p2;

assign sext_ln153_43_fu_19844_p1 = $signed(add_ln153_72_reg_24302);

assign sext_ln153_44_fu_19847_p1 = $signed(add_ln153_75_reg_24307);

assign sext_ln153_45_fu_19856_p1 = $signed(add_ln153_78_reg_24312);

assign sext_ln153_46_fu_19859_p1 = $signed(add_ln153_79_reg_24317);

assign sext_ln153_47_fu_19862_p1 = $signed(add_ln153_80_reg_24322);

assign sext_ln153_48_fu_19877_p1 = $signed(add_ln153_82_fu_19871_p2);

assign sext_ln153_49_fu_6791_p1 = mul_res_95_fu_6785_p2;

assign sext_ln153_4_fu_19565_p1 = $signed(add_ln153_7_reg_24167);

assign sext_ln153_50_fu_19893_p1 = $signed(add_ln153_84_reg_24327);

assign sext_ln153_51_fu_19896_p1 = $signed(add_ln153_87_reg_24332);

assign sext_ln153_52_fu_19905_p1 = $signed(add_ln153_90_reg_24337);

assign sext_ln153_53_fu_19908_p1 = $signed(add_ln153_91_reg_24342);

assign sext_ln153_54_fu_19911_p1 = $signed(add_ln153_92_reg_24347);

assign sext_ln153_55_fu_19926_p1 = $signed(add_ln153_94_fu_19920_p2);

assign sext_ln153_56_fu_7217_p1 = mul_res_107_fu_7211_p2;

assign sext_ln153_57_fu_19942_p1 = $signed(add_ln153_96_reg_24352);

assign sext_ln153_58_fu_19945_p1 = $signed(add_ln153_99_reg_24357);

assign sext_ln153_59_fu_19954_p1 = $signed(add_ln153_102_reg_24362);

assign sext_ln153_5_fu_19568_p1 = $signed(add_ln153_8_reg_24172);

assign sext_ln153_60_fu_19957_p1 = $signed(add_ln153_103_reg_24367);

assign sext_ln153_61_fu_19960_p1 = $signed(add_ln153_104_reg_24372);

assign sext_ln153_62_fu_19975_p1 = $signed(add_ln153_106_fu_19969_p2);

assign sext_ln153_63_fu_7643_p1 = mul_res_119_fu_7637_p2;

assign sext_ln153_64_fu_19991_p1 = $signed(add_ln153_108_reg_24377);

assign sext_ln153_65_fu_19994_p1 = $signed(add_ln153_111_reg_24382);

assign sext_ln153_66_fu_20003_p1 = $signed(add_ln153_114_reg_24387);

assign sext_ln153_67_fu_20006_p1 = $signed(add_ln153_115_reg_24392);

assign sext_ln153_68_fu_20009_p1 = $signed(add_ln153_116_reg_24397);

assign sext_ln153_69_fu_20024_p1 = $signed(add_ln153_118_fu_20018_p2);

assign sext_ln153_6_fu_19583_p1 = $signed(add_ln153_10_fu_19577_p2);

assign sext_ln153_70_fu_8057_p1 = mul_res_131_fu_8051_p2;

assign sext_ln153_71_fu_20049_p1 = $signed(add_ln153_120_reg_24417);

assign sext_ln153_72_fu_20070_p1 = $signed(add_ln153_123_fu_20064_p2);

assign sext_ln153_73_fu_20080_p1 = $signed(add_ln153_126_reg_24422);

assign sext_ln153_74_fu_20083_p1 = $signed(add_ln153_127_reg_24427);

assign sext_ln153_75_fu_20086_p1 = $signed(add_ln153_128_reg_24432);

assign sext_ln153_76_fu_20101_p1 = $signed(add_ln153_130_fu_20095_p2);

assign sext_ln153_77_fu_8459_p1 = mul_res_143_fu_8453_p2;

assign sext_ln153_78_fu_20120_p1 = $signed(add_ln153_132_reg_24452);

assign sext_ln153_79_fu_20141_p1 = $signed(add_ln153_135_fu_20135_p2);

assign sext_ln153_7_fu_4235_p1 = mul_res_23_fu_4229_p2;

assign sext_ln153_80_fu_20151_p1 = $signed(add_ln153_138_reg_24457);

assign sext_ln153_81_fu_20154_p1 = $signed(add_ln153_139_reg_24462);

assign sext_ln153_82_fu_20157_p1 = $signed(add_ln153_140_reg_24467);

assign sext_ln153_83_fu_20172_p1 = $signed(add_ln153_142_fu_20166_p2);

assign sext_ln153_84_fu_8861_p1 = mul_res_155_fu_8855_p2;

assign sext_ln153_85_fu_20191_p1 = $signed(add_ln153_144_reg_24487);

assign sext_ln153_86_fu_20212_p1 = $signed(add_ln153_147_fu_20206_p2);

assign sext_ln153_87_fu_20222_p1 = $signed(add_ln153_150_reg_24492);

assign sext_ln153_88_fu_20225_p1 = $signed(add_ln153_151_reg_24497);

assign sext_ln153_89_fu_20228_p1 = $signed(add_ln153_152_reg_24502);

assign sext_ln153_8_fu_19599_p1 = $signed(add_ln153_12_reg_24177);

assign sext_ln153_90_fu_20243_p1 = $signed(add_ln153_154_fu_20237_p2);

assign sext_ln153_91_fu_9263_p1 = mul_res_167_fu_9257_p2;

assign sext_ln153_92_fu_20262_p1 = $signed(add_ln153_156_reg_24522);

assign sext_ln153_93_fu_20283_p1 = $signed(add_ln153_159_fu_20277_p2);

assign sext_ln153_94_fu_20293_p1 = $signed(add_ln153_162_reg_24527);

assign sext_ln153_95_fu_20296_p1 = $signed(add_ln153_163_reg_24532);

assign sext_ln153_96_fu_20299_p1 = $signed(add_ln153_164_reg_24537);

assign sext_ln153_97_fu_20314_p1 = $signed(add_ln153_166_fu_20308_p2);

assign sext_ln153_98_fu_9665_p1 = mul_res_179_fu_9659_p2;

assign sext_ln153_99_fu_20333_p1 = $signed(add_ln153_168_reg_24557);

assign sext_ln153_9_fu_19602_p1 = $signed(add_ln153_15_reg_24182);

assign sext_ln153_fu_3809_p1 = mul_res_11_fu_3803_p2;

assign start_out = real_start;

assign tmp_100_fu_6145_p4 = {{mlp_inst_m1_weight_arr_110_q0[233:231]}};

assign tmp_101_fu_6177_p4 = {{mlp_inst_m1_weight_arr_110_q0[236:234]}};

assign tmp_102_fu_6209_p4 = {{mlp_inst_m1_weight_arr_110_q0[239:237]}};

assign tmp_103_fu_6241_p4 = {{mlp_inst_m1_weight_arr_110_q0[242:240]}};

assign tmp_104_fu_6273_p4 = {{mlp_inst_m1_weight_arr_110_q0[245:243]}};

assign tmp_105_fu_6305_p4 = {{mlp_inst_m1_weight_arr_110_q0[248:246]}};

assign tmp_106_fu_6337_p4 = {{mlp_inst_m1_weight_arr_110_q0[251:249]}};

assign tmp_107_fu_6411_p4 = {{mlp_inst_m1_weight_arr_110_q0[254:252]}};

assign tmp_108_fu_6443_p4 = {{mlp_inst_m1_weight_arr_110_q0[257:255]}};

assign tmp_109_fu_6475_p4 = {{mlp_inst_m1_weight_arr_110_q0[260:258]}};

assign tmp_110_fu_6507_p4 = {{mlp_inst_m1_weight_arr_110_q0[263:261]}};

assign tmp_111_fu_6539_p4 = {{mlp_inst_m1_weight_arr_110_q0[266:264]}};

assign tmp_112_fu_6571_p4 = {{mlp_inst_m1_weight_arr_110_q0[269:267]}};

assign tmp_113_fu_6603_p4 = {{mlp_inst_m1_weight_arr_110_q0[272:270]}};

assign tmp_114_fu_6635_p4 = {{mlp_inst_m1_weight_arr_110_q0[275:273]}};

assign tmp_115_fu_6667_p4 = {{mlp_inst_m1_weight_arr_110_q0[278:276]}};

assign tmp_116_fu_6699_p4 = {{mlp_inst_m1_weight_arr_110_q0[281:279]}};

assign tmp_117_fu_6731_p4 = {{mlp_inst_m1_weight_arr_110_q0[284:282]}};

assign tmp_118_fu_6763_p4 = {{mlp_inst_m1_weight_arr_110_q0[287:285]}};

assign tmp_119_fu_6837_p4 = {{mlp_inst_m1_weight_arr_110_q0[290:288]}};

assign tmp_120_fu_6869_p4 = {{mlp_inst_m1_weight_arr_110_q0[293:291]}};

assign tmp_121_fu_6901_p4 = {{mlp_inst_m1_weight_arr_110_q0[296:294]}};

assign tmp_122_fu_6933_p4 = {{mlp_inst_m1_weight_arr_110_q0[299:297]}};

assign tmp_123_fu_6965_p4 = {{mlp_inst_m1_weight_arr_110_q0[302:300]}};

assign tmp_124_fu_6997_p4 = {{mlp_inst_m1_weight_arr_110_q0[305:303]}};

assign tmp_125_fu_7029_p4 = {{mlp_inst_m1_weight_arr_110_q0[308:306]}};

assign tmp_126_fu_7061_p4 = {{mlp_inst_m1_weight_arr_110_q0[311:309]}};

assign tmp_127_fu_7093_p4 = {{mlp_inst_m1_weight_arr_110_q0[314:312]}};

assign tmp_128_fu_7125_p4 = {{mlp_inst_m1_weight_arr_110_q0[317:315]}};

assign tmp_129_fu_7157_p4 = {{mlp_inst_m1_weight_arr_110_q0[320:318]}};

assign tmp_130_fu_7189_p4 = {{mlp_inst_m1_weight_arr_110_q0[323:321]}};

assign tmp_131_fu_7263_p4 = {{mlp_inst_m1_weight_arr_110_q0[326:324]}};

assign tmp_132_fu_7295_p4 = {{mlp_inst_m1_weight_arr_110_q0[329:327]}};

assign tmp_133_fu_7327_p4 = {{mlp_inst_m1_weight_arr_110_q0[332:330]}};

assign tmp_134_fu_7359_p4 = {{mlp_inst_m1_weight_arr_110_q0[335:333]}};

assign tmp_135_fu_7391_p4 = {{mlp_inst_m1_weight_arr_110_q0[338:336]}};

assign tmp_136_fu_7423_p4 = {{mlp_inst_m1_weight_arr_110_q0[341:339]}};

assign tmp_137_fu_7455_p4 = {{mlp_inst_m1_weight_arr_110_q0[344:342]}};

assign tmp_138_fu_7487_p4 = {{mlp_inst_m1_weight_arr_110_q0[347:345]}};

assign tmp_139_fu_7519_p4 = {{mlp_inst_m1_weight_arr_110_q0[350:348]}};

assign tmp_140_fu_7551_p4 = {{mlp_inst_m1_weight_arr_110_q0[353:351]}};

assign tmp_141_fu_7583_p4 = {{mlp_inst_m1_weight_arr_110_q0[356:354]}};

assign tmp_142_fu_7615_p4 = {{mlp_inst_m1_weight_arr_110_q0[359:357]}};

assign tmp_143_fu_7689_p4 = {{mlp_inst_m1_weight_arr_110_q0[362:360]}};

assign tmp_144_fu_7721_p4 = {{mlp_inst_m1_weight_arr_110_q0[365:363]}};

assign tmp_145_fu_7753_p4 = {{mlp_inst_m1_weight_arr_110_q0[368:366]}};

assign tmp_146_fu_7785_p4 = {{mlp_inst_m1_weight_arr_110_q0[371:369]}};

assign tmp_147_fu_7817_p4 = {{mlp_inst_m1_weight_arr_110_q0[374:372]}};

assign tmp_148_fu_7849_p4 = {{mlp_inst_m1_weight_arr_110_q0[377:375]}};

assign tmp_149_fu_7877_p4 = {{mlp_inst_m1_weight_arr_110_q0[380:378]}};

assign tmp_150_fu_7909_p4 = {{mlp_inst_m1_weight_arr_110_q0[383:381]}};

assign tmp_151_fu_7937_p4 = {{mlp_inst_m1_weight_arr_110_q0[386:384]}};

assign tmp_152_fu_7965_p4 = {{mlp_inst_m1_weight_arr_110_q0[389:387]}};

assign tmp_153_fu_7997_p4 = {{mlp_inst_m1_weight_arr_110_q0[392:390]}};

assign tmp_154_fu_8029_p4 = {{mlp_inst_m1_weight_arr_110_q0[395:393]}};

assign tmp_155_fu_8091_p4 = {{mlp_inst_m1_weight_arr_110_q0[398:396]}};

assign tmp_156_fu_8123_p4 = {{mlp_inst_m1_weight_arr_110_q0[401:399]}};

assign tmp_157_fu_8155_p4 = {{mlp_inst_m1_weight_arr_110_q0[404:402]}};

assign tmp_158_fu_8187_p4 = {{mlp_inst_m1_weight_arr_110_q0[407:405]}};

assign tmp_159_fu_8219_p4 = {{mlp_inst_m1_weight_arr_110_q0[410:408]}};

assign tmp_160_fu_8251_p4 = {{mlp_inst_m1_weight_arr_110_q0[413:411]}};

assign tmp_161_fu_8279_p4 = {{mlp_inst_m1_weight_arr_110_q0[416:414]}};

assign tmp_162_fu_8311_p4 = {{mlp_inst_m1_weight_arr_110_q0[419:417]}};

assign tmp_163_fu_8339_p4 = {{mlp_inst_m1_weight_arr_110_q0[422:420]}};

assign tmp_164_fu_8367_p4 = {{mlp_inst_m1_weight_arr_110_q0[425:423]}};

assign tmp_165_fu_8399_p4 = {{mlp_inst_m1_weight_arr_110_q0[428:426]}};

assign tmp_166_fu_8431_p4 = {{mlp_inst_m1_weight_arr_110_q0[431:429]}};

assign tmp_167_fu_8493_p4 = {{mlp_inst_m1_weight_arr_110_q0[434:432]}};

assign tmp_168_fu_8525_p4 = {{mlp_inst_m1_weight_arr_110_q0[437:435]}};

assign tmp_169_fu_8557_p4 = {{mlp_inst_m1_weight_arr_110_q0[440:438]}};

assign tmp_170_fu_8589_p4 = {{mlp_inst_m1_weight_arr_110_q0[443:441]}};

assign tmp_171_fu_8621_p4 = {{mlp_inst_m1_weight_arr_110_q0[446:444]}};

assign tmp_172_fu_8653_p4 = {{mlp_inst_m1_weight_arr_110_q0[449:447]}};

assign tmp_173_fu_8681_p4 = {{mlp_inst_m1_weight_arr_110_q0[452:450]}};

assign tmp_174_fu_8713_p4 = {{mlp_inst_m1_weight_arr_110_q0[455:453]}};

assign tmp_175_fu_8741_p4 = {{mlp_inst_m1_weight_arr_110_q0[458:456]}};

assign tmp_176_fu_8769_p4 = {{mlp_inst_m1_weight_arr_110_q0[461:459]}};

assign tmp_177_fu_8801_p4 = {{mlp_inst_m1_weight_arr_110_q0[464:462]}};

assign tmp_178_fu_8833_p4 = {{mlp_inst_m1_weight_arr_110_q0[467:465]}};

assign tmp_179_fu_8895_p4 = {{mlp_inst_m1_weight_arr_110_q0[470:468]}};

assign tmp_180_fu_8927_p4 = {{mlp_inst_m1_weight_arr_110_q0[473:471]}};

assign tmp_181_fu_8959_p4 = {{mlp_inst_m1_weight_arr_110_q0[476:474]}};

assign tmp_182_fu_8991_p4 = {{mlp_inst_m1_weight_arr_110_q0[479:477]}};

assign tmp_183_fu_9023_p4 = {{mlp_inst_m1_weight_arr_110_q0[482:480]}};

assign tmp_184_fu_9055_p4 = {{mlp_inst_m1_weight_arr_110_q0[485:483]}};

assign tmp_185_fu_9083_p4 = {{mlp_inst_m1_weight_arr_110_q0[488:486]}};

assign tmp_186_fu_9115_p4 = {{mlp_inst_m1_weight_arr_110_q0[491:489]}};

assign tmp_187_fu_9143_p4 = {{mlp_inst_m1_weight_arr_110_q0[494:492]}};

assign tmp_188_fu_9171_p4 = {{mlp_inst_m1_weight_arr_110_q0[497:495]}};

assign tmp_189_fu_9203_p4 = {{mlp_inst_m1_weight_arr_110_q0[500:498]}};

assign tmp_190_fu_9235_p4 = {{mlp_inst_m1_weight_arr_110_q0[503:501]}};

assign tmp_191_fu_9297_p4 = {{mlp_inst_m1_weight_arr_110_q0[506:504]}};

assign tmp_192_fu_9329_p4 = {{mlp_inst_m1_weight_arr_110_q0[509:507]}};

assign tmp_193_fu_9361_p4 = {{mlp_inst_m1_weight_arr_110_q0[512:510]}};

assign tmp_194_fu_9393_p4 = {{mlp_inst_m1_weight_arr_110_q0[515:513]}};

assign tmp_195_fu_9425_p4 = {{mlp_inst_m1_weight_arr_110_q0[518:516]}};

assign tmp_196_fu_9457_p4 = {{mlp_inst_m1_weight_arr_110_q0[521:519]}};

assign tmp_197_fu_9485_p4 = {{mlp_inst_m1_weight_arr_110_q0[524:522]}};

assign tmp_198_fu_9517_p4 = {{mlp_inst_m1_weight_arr_110_q0[527:525]}};

assign tmp_199_fu_9545_p4 = {{mlp_inst_m1_weight_arr_110_q0[530:528]}};

assign tmp_1_fu_2890_p3 = {{trunc_ln121_reg_23818}, {4'd0}};

assign tmp_200_fu_9573_p4 = {{mlp_inst_m1_weight_arr_110_q0[533:531]}};

assign tmp_201_fu_9605_p4 = {{mlp_inst_m1_weight_arr_110_q0[536:534]}};

assign tmp_202_fu_9637_p4 = {{mlp_inst_m1_weight_arr_110_q0[539:537]}};

assign tmp_203_fu_9699_p4 = {{mlp_inst_m1_weight_arr_110_q0[542:540]}};

assign tmp_204_fu_9731_p4 = {{mlp_inst_m1_weight_arr_110_q0[545:543]}};

assign tmp_205_fu_9763_p4 = {{mlp_inst_m1_weight_arr_110_q0[548:546]}};

assign tmp_206_fu_9795_p4 = {{mlp_inst_m1_weight_arr_110_q0[551:549]}};

assign tmp_207_fu_9827_p4 = {{mlp_inst_m1_weight_arr_110_q0[554:552]}};

assign tmp_208_fu_9859_p4 = {{mlp_inst_m1_weight_arr_110_q0[557:555]}};

assign tmp_209_fu_9887_p4 = {{mlp_inst_m1_weight_arr_110_q0[560:558]}};

assign tmp_210_fu_9919_p4 = {{mlp_inst_m1_weight_arr_110_q0[563:561]}};

assign tmp_211_fu_9947_p4 = {{mlp_inst_m1_weight_arr_110_q0[566:564]}};

assign tmp_212_fu_9975_p4 = {{mlp_inst_m1_weight_arr_110_q0[569:567]}};

assign tmp_213_fu_10007_p4 = {{mlp_inst_m1_weight_arr_110_q0[572:570]}};

assign tmp_214_fu_10039_p4 = {{mlp_inst_m1_weight_arr_110_q0[575:573]}};

assign tmp_215_fu_10101_p4 = {{mlp_inst_m1_weight_arr_110_q0[578:576]}};

assign tmp_216_fu_10133_p4 = {{mlp_inst_m1_weight_arr_110_q0[581:579]}};

assign tmp_217_fu_10165_p4 = {{mlp_inst_m1_weight_arr_110_q0[584:582]}};

assign tmp_218_fu_10197_p4 = {{mlp_inst_m1_weight_arr_110_q0[587:585]}};

assign tmp_219_fu_10229_p4 = {{mlp_inst_m1_weight_arr_110_q0[590:588]}};

assign tmp_220_fu_10261_p4 = {{mlp_inst_m1_weight_arr_110_q0[593:591]}};

assign tmp_221_fu_10289_p4 = {{mlp_inst_m1_weight_arr_110_q0[596:594]}};

assign tmp_222_fu_10321_p4 = {{mlp_inst_m1_weight_arr_110_q0[599:597]}};

assign tmp_223_fu_10349_p4 = {{mlp_inst_m1_weight_arr_110_q0[602:600]}};

assign tmp_224_fu_10377_p4 = {{mlp_inst_m1_weight_arr_110_q0[605:603]}};

assign tmp_225_fu_10409_p4 = {{mlp_inst_m1_weight_arr_110_q0[608:606]}};

assign tmp_226_fu_10441_p4 = {{mlp_inst_m1_weight_arr_110_q0[611:609]}};

assign tmp_227_fu_10503_p4 = {{mlp_inst_m1_weight_arr_110_q0[614:612]}};

assign tmp_228_fu_10535_p4 = {{mlp_inst_m1_weight_arr_110_q0[617:615]}};

assign tmp_229_fu_10567_p4 = {{mlp_inst_m1_weight_arr_110_q0[620:618]}};

assign tmp_230_fu_10599_p4 = {{mlp_inst_m1_weight_arr_110_q0[623:621]}};

assign tmp_231_fu_10631_p4 = {{mlp_inst_m1_weight_arr_110_q0[626:624]}};

assign tmp_232_fu_10663_p4 = {{mlp_inst_m1_weight_arr_110_q0[629:627]}};

assign tmp_233_fu_10691_p4 = {{mlp_inst_m1_weight_arr_110_q0[632:630]}};

assign tmp_234_fu_10723_p4 = {{mlp_inst_m1_weight_arr_110_q0[635:633]}};

assign tmp_235_fu_10751_p4 = {{mlp_inst_m1_weight_arr_110_q0[638:636]}};

assign tmp_236_fu_10779_p4 = {{mlp_inst_m1_weight_arr_110_q0[641:639]}};

assign tmp_237_fu_10811_p4 = {{mlp_inst_m1_weight_arr_110_q0[644:642]}};

assign tmp_238_fu_10843_p4 = {{mlp_inst_m1_weight_arr_110_q0[647:645]}};

assign tmp_239_fu_10905_p4 = {{mlp_inst_m1_weight_arr_110_q0[650:648]}};

assign tmp_240_fu_10937_p4 = {{mlp_inst_m1_weight_arr_110_q0[653:651]}};

assign tmp_241_fu_10969_p4 = {{mlp_inst_m1_weight_arr_110_q0[656:654]}};

assign tmp_242_fu_11001_p4 = {{mlp_inst_m1_weight_arr_110_q0[659:657]}};

assign tmp_243_fu_11033_p4 = {{mlp_inst_m1_weight_arr_110_q0[662:660]}};

assign tmp_244_fu_11065_p4 = {{mlp_inst_m1_weight_arr_110_q0[665:663]}};

assign tmp_245_fu_11093_p4 = {{mlp_inst_m1_weight_arr_110_q0[668:666]}};

assign tmp_246_fu_11125_p4 = {{mlp_inst_m1_weight_arr_110_q0[671:669]}};

assign tmp_247_fu_11153_p4 = {{mlp_inst_m1_weight_arr_110_q0[674:672]}};

assign tmp_248_fu_11181_p4 = {{mlp_inst_m1_weight_arr_110_q0[677:675]}};

assign tmp_249_fu_11213_p4 = {{mlp_inst_m1_weight_arr_110_q0[680:678]}};

assign tmp_24_fu_3428_p4 = {{mlp_inst_m1_weight_arr_110_q0[5:3]}};

assign tmp_250_fu_11245_p4 = {{mlp_inst_m1_weight_arr_110_q0[683:681]}};

assign tmp_251_fu_11307_p4 = {{mlp_inst_m1_weight_arr_110_q0[686:684]}};

assign tmp_252_fu_11339_p4 = {{mlp_inst_m1_weight_arr_110_q0[689:687]}};

assign tmp_253_fu_11371_p4 = {{mlp_inst_m1_weight_arr_110_q0[692:690]}};

assign tmp_254_fu_11403_p4 = {{mlp_inst_m1_weight_arr_110_q0[695:693]}};

assign tmp_255_fu_11435_p4 = {{mlp_inst_m1_weight_arr_110_q0[698:696]}};

assign tmp_256_fu_11467_p4 = {{mlp_inst_m1_weight_arr_110_q0[701:699]}};

assign tmp_257_fu_11495_p4 = {{mlp_inst_m1_weight_arr_110_q0[704:702]}};

assign tmp_258_fu_11527_p4 = {{mlp_inst_m1_weight_arr_110_q0[707:705]}};

assign tmp_259_fu_11555_p4 = {{mlp_inst_m1_weight_arr_110_q0[710:708]}};

assign tmp_25_fu_3463_p4 = {{mlp_inst_m1_weight_arr_110_q0[8:6]}};

assign tmp_260_fu_11583_p4 = {{mlp_inst_m1_weight_arr_110_q0[713:711]}};

assign tmp_261_fu_11615_p4 = {{mlp_inst_m1_weight_arr_110_q0[716:714]}};

assign tmp_262_fu_11647_p4 = {{mlp_inst_m1_weight_arr_110_q0[719:717]}};

assign tmp_263_fu_11709_p4 = {{mlp_inst_m1_weight_arr_110_q0[722:720]}};

assign tmp_264_fu_11741_p4 = {{mlp_inst_m1_weight_arr_110_q0[725:723]}};

assign tmp_265_fu_11773_p4 = {{mlp_inst_m1_weight_arr_110_q0[728:726]}};

assign tmp_266_fu_11805_p4 = {{mlp_inst_m1_weight_arr_110_q0[731:729]}};

assign tmp_267_fu_11837_p4 = {{mlp_inst_m1_weight_arr_110_q0[734:732]}};

assign tmp_268_fu_11869_p4 = {{mlp_inst_m1_weight_arr_110_q0[737:735]}};

assign tmp_269_fu_11897_p4 = {{mlp_inst_m1_weight_arr_110_q0[740:738]}};

assign tmp_26_fu_3498_p4 = {{mlp_inst_m1_weight_arr_110_q0[11:9]}};

assign tmp_270_fu_11929_p4 = {{mlp_inst_m1_weight_arr_110_q0[743:741]}};

assign tmp_271_fu_11957_p4 = {{mlp_inst_m1_weight_arr_110_q0[746:744]}};

assign tmp_272_fu_11985_p4 = {{mlp_inst_m1_weight_arr_110_q0[749:747]}};

assign tmp_273_fu_12017_p4 = {{mlp_inst_m1_weight_arr_110_q0[752:750]}};

assign tmp_274_fu_12049_p4 = {{mlp_inst_m1_weight_arr_110_q0[755:753]}};

assign tmp_275_fu_12111_p4 = {{mlp_inst_m1_weight_arr_110_q0[758:756]}};

assign tmp_276_fu_12143_p4 = {{mlp_inst_m1_weight_arr_110_q0[761:759]}};

assign tmp_277_fu_12175_p4 = {{mlp_inst_m1_weight_arr_110_q0[764:762]}};

assign tmp_278_fu_12207_p4 = {{mlp_inst_m1_weight_arr_110_q0[767:765]}};

assign tmp_279_fu_12239_p4 = {{mlp_inst_m1_weight_arr_110_q0[770:768]}};

assign tmp_27_fu_3533_p4 = {{mlp_inst_m1_weight_arr_110_q0[14:12]}};

assign tmp_280_fu_12271_p4 = {{mlp_inst_m1_weight_arr_110_q0[773:771]}};

assign tmp_281_fu_12299_p4 = {{mlp_inst_m1_weight_arr_110_q0[776:774]}};

assign tmp_282_fu_12331_p4 = {{mlp_inst_m1_weight_arr_110_q0[779:777]}};

assign tmp_283_fu_12359_p4 = {{mlp_inst_m1_weight_arr_110_q0[782:780]}};

assign tmp_284_fu_12387_p4 = {{mlp_inst_m1_weight_arr_110_q0[785:783]}};

assign tmp_285_fu_12419_p4 = {{mlp_inst_m1_weight_arr_110_q0[788:786]}};

assign tmp_286_fu_12451_p4 = {{mlp_inst_m1_weight_arr_110_q0[791:789]}};

assign tmp_287_fu_12513_p4 = {{mlp_inst_m1_weight_arr_110_q0[794:792]}};

assign tmp_288_fu_12545_p4 = {{mlp_inst_m1_weight_arr_110_q0[797:795]}};

assign tmp_289_fu_12577_p4 = {{mlp_inst_m1_weight_arr_110_q0[800:798]}};

assign tmp_28_fu_3568_p4 = {{mlp_inst_m1_weight_arr_110_q0[17:15]}};

assign tmp_290_fu_12609_p4 = {{mlp_inst_m1_weight_arr_110_q0[803:801]}};

assign tmp_291_fu_12641_p4 = {{mlp_inst_m1_weight_arr_110_q0[806:804]}};

assign tmp_292_fu_12673_p4 = {{mlp_inst_m1_weight_arr_110_q0[809:807]}};

assign tmp_293_fu_12701_p4 = {{mlp_inst_m1_weight_arr_110_q0[812:810]}};

assign tmp_294_fu_12733_p4 = {{mlp_inst_m1_weight_arr_110_q0[815:813]}};

assign tmp_295_fu_12761_p4 = {{mlp_inst_m1_weight_arr_110_q0[818:816]}};

assign tmp_296_fu_12789_p4 = {{mlp_inst_m1_weight_arr_110_q0[821:819]}};

assign tmp_297_fu_12821_p4 = {{mlp_inst_m1_weight_arr_110_q0[824:822]}};

assign tmp_298_fu_12853_p4 = {{mlp_inst_m1_weight_arr_110_q0[827:825]}};

assign tmp_299_fu_12915_p4 = {{mlp_inst_m1_weight_arr_110_q0[830:828]}};

assign tmp_29_fu_3603_p4 = {{mlp_inst_m1_weight_arr_110_q0[20:18]}};

assign tmp_300_fu_12947_p4 = {{mlp_inst_m1_weight_arr_110_q0[833:831]}};

assign tmp_301_fu_12979_p4 = {{mlp_inst_m1_weight_arr_110_q0[836:834]}};

assign tmp_302_fu_13011_p4 = {{mlp_inst_m1_weight_arr_110_q0[839:837]}};

assign tmp_303_fu_13043_p4 = {{mlp_inst_m1_weight_arr_110_q0[842:840]}};

assign tmp_304_fu_13075_p4 = {{mlp_inst_m1_weight_arr_110_q0[845:843]}};

assign tmp_305_fu_13103_p4 = {{mlp_inst_m1_weight_arr_110_q0[848:846]}};

assign tmp_306_fu_13135_p4 = {{mlp_inst_m1_weight_arr_110_q0[851:849]}};

assign tmp_307_fu_13163_p4 = {{mlp_inst_m1_weight_arr_110_q0[854:852]}};

assign tmp_308_fu_13191_p4 = {{mlp_inst_m1_weight_arr_110_q0[857:855]}};

assign tmp_309_fu_13223_p4 = {{mlp_inst_m1_weight_arr_110_q0[860:858]}};

assign tmp_30_fu_3638_p4 = {{mlp_inst_m1_weight_arr_110_q0[23:21]}};

assign tmp_310_fu_13255_p4 = {{mlp_inst_m1_weight_arr_110_q0[863:861]}};

assign tmp_31_fu_3673_p4 = {{mlp_inst_m1_weight_arr_110_q0[26:24]}};

assign tmp_32_fu_3708_p4 = {{mlp_inst_m1_weight_arr_110_q0[29:27]}};

assign tmp_33_fu_3743_p4 = {{mlp_inst_m1_weight_arr_110_q0[32:30]}};

assign tmp_34_fu_3778_p4 = {{mlp_inst_m1_weight_arr_110_q0[35:33]}};

assign tmp_35_fu_3855_p4 = {{mlp_inst_m1_weight_arr_110_q0[38:36]}};

assign tmp_36_fu_3887_p4 = {{mlp_inst_m1_weight_arr_110_q0[41:39]}};

assign tmp_37_fu_3919_p4 = {{mlp_inst_m1_weight_arr_110_q0[44:42]}};

assign tmp_38_fu_3951_p4 = {{mlp_inst_m1_weight_arr_110_q0[47:45]}};

assign tmp_39_fu_3983_p4 = {{mlp_inst_m1_weight_arr_110_q0[50:48]}};

assign tmp_40_fu_4015_p4 = {{mlp_inst_m1_weight_arr_110_q0[53:51]}};

assign tmp_41_fu_4047_p4 = {{mlp_inst_m1_weight_arr_110_q0[56:54]}};

assign tmp_42_fu_4079_p4 = {{mlp_inst_m1_weight_arr_110_q0[59:57]}};

assign tmp_43_fu_4111_p4 = {{mlp_inst_m1_weight_arr_110_q0[62:60]}};

assign tmp_44_fu_4143_p4 = {{mlp_inst_m1_weight_arr_110_q0[65:63]}};

assign tmp_45_fu_4175_p4 = {{mlp_inst_m1_weight_arr_110_q0[68:66]}};

assign tmp_46_fu_4207_p4 = {{mlp_inst_m1_weight_arr_110_q0[71:69]}};

assign tmp_47_fu_4281_p4 = {{mlp_inst_m1_weight_arr_110_q0[74:72]}};

assign tmp_48_fu_4313_p4 = {{mlp_inst_m1_weight_arr_110_q0[77:75]}};

assign tmp_49_fu_4345_p4 = {{mlp_inst_m1_weight_arr_110_q0[80:78]}};

assign tmp_50_fu_4377_p4 = {{mlp_inst_m1_weight_arr_110_q0[83:81]}};

assign tmp_51_fu_4409_p4 = {{mlp_inst_m1_weight_arr_110_q0[86:84]}};

assign tmp_52_fu_4441_p4 = {{mlp_inst_m1_weight_arr_110_q0[89:87]}};

assign tmp_53_fu_4473_p4 = {{mlp_inst_m1_weight_arr_110_q0[92:90]}};

assign tmp_54_fu_4505_p4 = {{mlp_inst_m1_weight_arr_110_q0[95:93]}};

assign tmp_55_fu_4537_p4 = {{mlp_inst_m1_weight_arr_110_q0[98:96]}};

assign tmp_56_fu_4569_p4 = {{mlp_inst_m1_weight_arr_110_q0[101:99]}};

assign tmp_57_fu_4601_p4 = {{mlp_inst_m1_weight_arr_110_q0[104:102]}};

assign tmp_58_fu_4633_p4 = {{mlp_inst_m1_weight_arr_110_q0[107:105]}};

assign tmp_59_fu_4707_p4 = {{mlp_inst_m1_weight_arr_110_q0[110:108]}};

assign tmp_60_fu_4739_p4 = {{mlp_inst_m1_weight_arr_110_q0[113:111]}};

assign tmp_61_fu_4771_p4 = {{mlp_inst_m1_weight_arr_110_q0[116:114]}};

assign tmp_62_fu_4803_p4 = {{mlp_inst_m1_weight_arr_110_q0[119:117]}};

assign tmp_63_fu_4835_p4 = {{mlp_inst_m1_weight_arr_110_q0[122:120]}};

assign tmp_64_fu_4867_p4 = {{mlp_inst_m1_weight_arr_110_q0[125:123]}};

assign tmp_65_fu_4899_p4 = {{mlp_inst_m1_weight_arr_110_q0[128:126]}};

assign tmp_66_fu_4931_p4 = {{mlp_inst_m1_weight_arr_110_q0[131:129]}};

assign tmp_67_fu_4963_p4 = {{mlp_inst_m1_weight_arr_110_q0[134:132]}};

assign tmp_68_fu_4995_p4 = {{mlp_inst_m1_weight_arr_110_q0[137:135]}};

assign tmp_69_fu_5027_p4 = {{mlp_inst_m1_weight_arr_110_q0[140:138]}};

assign tmp_70_fu_5059_p4 = {{mlp_inst_m1_weight_arr_110_q0[143:141]}};

assign tmp_71_fu_5133_p4 = {{mlp_inst_m1_weight_arr_110_q0[146:144]}};

assign tmp_72_fu_5165_p4 = {{mlp_inst_m1_weight_arr_110_q0[149:147]}};

assign tmp_73_fu_5197_p4 = {{mlp_inst_m1_weight_arr_110_q0[152:150]}};

assign tmp_74_fu_5229_p4 = {{mlp_inst_m1_weight_arr_110_q0[155:153]}};

assign tmp_75_fu_5261_p4 = {{mlp_inst_m1_weight_arr_110_q0[158:156]}};

assign tmp_76_fu_5293_p4 = {{mlp_inst_m1_weight_arr_110_q0[161:159]}};

assign tmp_77_fu_5325_p4 = {{mlp_inst_m1_weight_arr_110_q0[164:162]}};

assign tmp_78_fu_5357_p4 = {{mlp_inst_m1_weight_arr_110_q0[167:165]}};

assign tmp_79_fu_5389_p4 = {{mlp_inst_m1_weight_arr_110_q0[170:168]}};

assign tmp_80_fu_5421_p4 = {{mlp_inst_m1_weight_arr_110_q0[173:171]}};

assign tmp_81_fu_5453_p4 = {{mlp_inst_m1_weight_arr_110_q0[176:174]}};

assign tmp_82_fu_5485_p4 = {{mlp_inst_m1_weight_arr_110_q0[179:177]}};

assign tmp_83_fu_5559_p4 = {{mlp_inst_m1_weight_arr_110_q0[182:180]}};

assign tmp_84_fu_5591_p4 = {{mlp_inst_m1_weight_arr_110_q0[185:183]}};

assign tmp_85_fu_5623_p4 = {{mlp_inst_m1_weight_arr_110_q0[188:186]}};

assign tmp_86_fu_5655_p4 = {{mlp_inst_m1_weight_arr_110_q0[191:189]}};

assign tmp_87_fu_5687_p4 = {{mlp_inst_m1_weight_arr_110_q0[194:192]}};

assign tmp_88_fu_5719_p4 = {{mlp_inst_m1_weight_arr_110_q0[197:195]}};

assign tmp_89_fu_5751_p4 = {{mlp_inst_m1_weight_arr_110_q0[200:198]}};

assign tmp_90_fu_5783_p4 = {{mlp_inst_m1_weight_arr_110_q0[203:201]}};

assign tmp_91_fu_5815_p4 = {{mlp_inst_m1_weight_arr_110_q0[206:204]}};

assign tmp_92_fu_5847_p4 = {{mlp_inst_m1_weight_arr_110_q0[209:207]}};

assign tmp_93_fu_5879_p4 = {{mlp_inst_m1_weight_arr_110_q0[212:210]}};

assign tmp_94_fu_5911_p4 = {{mlp_inst_m1_weight_arr_110_q0[215:213]}};

assign tmp_95_fu_5985_p4 = {{mlp_inst_m1_weight_arr_110_q0[218:216]}};

assign tmp_96_fu_6017_p4 = {{mlp_inst_m1_weight_arr_110_q0[221:219]}};

assign tmp_97_fu_6049_p4 = {{mlp_inst_m1_weight_arr_110_q0[224:222]}};

assign tmp_98_fu_6081_p4 = {{mlp_inst_m1_weight_arr_110_q0[227:225]}};

assign tmp_99_fu_6113_p4 = {{mlp_inst_m1_weight_arr_110_q0[230:228]}};

assign trunc_ln121_fu_2852_p1 = select_ln121_1_fu_2844_p3[4:0];

assign trunc_ln131_fu_3165_p1 = mlp_inst_m1_bias_arr_111_q0[9:0];

assign trunc_ln137_fu_2922_p1 = cache_window_sm_dout[2:0];

assign trunc_ln151_fu_3399_p1 = mlp_inst_m1_weight_arr_110_q0[2:0];

assign xor_ln120_fu_2808_p2 = (icmp_ln121_reg_23799 ^ 1'd1);

assign zext_ln121_fu_2886_p1 = select_ln121_1_reg_23813;

assign zext_ln151_1_fu_2910_p1 = add_ln151_fu_2904_p2;

assign zext_ln151_fu_2901_p1 = select_ln121_reg_23806;

endmodule //MLP8_matmul_step2_mac_1
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_matmul_step2_mac_1_mlp_inst_m1_bias_arr_111_ROM_AUTO_1R (
    address0, ce0, q0, 
    reset, clk);

parameter DataWidth = 238;
parameter AddressWidth = 5;
parameter AddressRange = 32;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_matmul_step2_mac_1_mlp_inst_m1_bias_arr_111_ROM_AUTO_1R.dat", rom0);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end


endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_matmul_step2_mac_1_mlp_inst_m1_weight_arr_110_ROM_AUTO_1R (
    address0, ce0, q0, 
    reset, clk);

parameter DataWidth = 864;
parameter AddressWidth = 9;
parameter AddressRange = 512;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_matmul_step2_mac_1_mlp_inst_m1_weight_arr_110_ROM_AUTO_1R.dat", rom0);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end


endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_matmul_step2_mac_mlp_inst_m2_bias_arr_113_ROM_AUTO_1R (
    address0, ce0, q0, 
    reset, clk);

parameter DataWidth = 151;
parameter AddressWidth = 4;
parameter AddressRange = 16;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_matmul_step2_mac_mlp_inst_m2_bias_arr_113_ROM_AUTO_1R.dat", rom0);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end


endmodule

// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP8_matmul_step2_mac_mlp_inst_m2_weight_arr_112_ROM_AUTO_1R (
    address0, ce0, q0, 
    reset, clk);

parameter DataWidth = 864;
parameter AddressWidth = 9;
parameter AddressRange = 512;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];


initial begin
     
    $readmemh("C:/projects/AAAProjects/PROJ15_HG_PIPE_GITHUB/HG-PIPE/SPINAL/src/main/verilog/MLP8/MLP8_matmul_step2_mac_mlp_inst_m2_weight_arr_112_ROM_AUTO_1R.dat", rom0);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end


endmodule

// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1 ns / 1 ps

  (* use_dsp = "yes" *)  module MLP8_mul_14s_12ns_26_2_1(clk,ce,reset,din0, din1, dout);
parameter ID = 1;
parameter NUM_STAGE = 0;
parameter din0_WIDTH = 14;
parameter din1_WIDTH = 12;
parameter dout_WIDTH = 26;

input clk;
input ce;
input reset;

input [din0_WIDTH - 1 : 0] din0; 
input [din1_WIDTH - 1 : 0] din1; 
output [dout_WIDTH - 1 : 0] dout;

wire signed [dout_WIDTH - 1 : 0] tmp_product;


reg signed [dout_WIDTH - 1 : 0] buff0;











assign tmp_product = $signed(din0) * $signed({1'b0, din1});







always @(posedge clk)
begin
    if (ce) begin
        buff0 <= tmp_product;





    end
end




assign dout = buff0;






endmodule
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1 ns / 1 ps

  (* use_dsp = "yes" *)  module MLP8_mul_14s_14s_26_2_1(clk,ce,reset,din0, din1, dout);
parameter ID = 1;
parameter NUM_STAGE = 0;
parameter din0_WIDTH = 14;
parameter din1_WIDTH = 12;
parameter dout_WIDTH = 26;

input clk;
input ce;
input reset;

input [din0_WIDTH - 1 : 0] din0; 
input [din1_WIDTH - 1 : 0] din1; 
output [dout_WIDTH - 1 : 0] dout;

wire signed [dout_WIDTH - 1 : 0] tmp_product;


reg signed [dout_WIDTH - 1 : 0] buff0;












assign tmp_product = $signed(din0) * $signed(din1);






always @(posedge clk)
begin
    if (ce) begin
        buff0 <= tmp_product;





    end
end




assign dout = buff0;






endmodule
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1 ns / 1 ps

  (* use_dsp = "no" *)  module MLP8_mul_3ns_3s_6_1_1(din0, din1, dout);
parameter ID = 1;
parameter NUM_STAGE = 0;
parameter din0_WIDTH = 14;
parameter din1_WIDTH = 12;
parameter dout_WIDTH = 26;

input [din0_WIDTH - 1 : 0] din0; 
input [din1_WIDTH - 1 : 0] din1; 
output [dout_WIDTH - 1 : 0] dout;

wire signed [dout_WIDTH - 1 : 0] tmp_product;











assign tmp_product = $signed({1'b0, din0}) * $signed(din1);










assign dout = tmp_product;







endmodule
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1 ns / 1 ps

  (* use_dsp = "no" *)  module MLP8_mul_3s_3ns_6_1_1(din0, din1, dout);
parameter ID = 1;
parameter NUM_STAGE = 0;
parameter din0_WIDTH = 14;
parameter din1_WIDTH = 12;
parameter dout_WIDTH = 26;

input [din0_WIDTH - 1 : 0] din0; 
input [din1_WIDTH - 1 : 0] din1; 
output [dout_WIDTH - 1 : 0] dout;

wire signed [dout_WIDTH - 1 : 0] tmp_product;












assign tmp_product = $signed(din0) * $signed({1'b0, din1});









assign dout = tmp_product;







endmodule
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1 ns / 1 ps

  (* use_dsp = "no" *)  module MLP8_mul_3s_3s_6_1_1(din0, din1, dout);
parameter ID = 1;
parameter NUM_STAGE = 0;
parameter din0_WIDTH = 14;
parameter din1_WIDTH = 12;
parameter dout_WIDTH = 26;

input [din0_WIDTH - 1 : 0] din0; 
input [din1_WIDTH - 1 : 0] din1; 
output [dout_WIDTH - 1 : 0] dout;

wire signed [dout_WIDTH - 1 : 0] tmp_product;













assign tmp_product = $signed(din0) * $signed(din1);








assign dout = tmp_product;







endmodule
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.2 (64-bit)
// Tool Version Limit: 2023.10
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1ns/1ps

module MLP8_regslice_both
#(parameter 
    DataWidth=32
)(
    input ap_clk ,
    input ap_rst,

    input [DataWidth-1:0] data_in , 
    input vld_in , 
    output ack_in ,
    output [DataWidth-1:0] data_out, 
    output vld_out,
    input ack_out,
    output apdone_blk
);
 

reg   [1:0] B_V_data_1_state;
wire   [DataWidth-1:0] B_V_data_1_data_in;
reg   [DataWidth-1:0] B_V_data_1_data_out;
wire    B_V_data_1_vld_reg;
wire    B_V_data_1_vld_in;
wire    B_V_data_1_vld_out;
reg   [DataWidth-1:0] B_V_data_1_payload_A;
reg   [DataWidth-1:0] B_V_data_1_payload_B;
reg    B_V_data_1_sel_rd;
reg    B_V_data_1_sel_wr;
wire    B_V_data_1_sel;
wire    B_V_data_1_load_A;
wire    B_V_data_1_load_B;
wire    B_V_data_1_state_cmp_full;
wire    B_V_data_1_ack_in;
wire    B_V_data_1_ack_out;

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        B_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == B_V_data_1_vld_out) & (1'b1 == B_V_data_1_ack_out))) begin
            B_V_data_1_sel_rd <= ~B_V_data_1_sel_rd;
        end else begin
            B_V_data_1_sel_rd <= B_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        B_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == B_V_data_1_vld_in) & (1'b1 == B_V_data_1_ack_in))) begin
            B_V_data_1_sel_wr <= ~B_V_data_1_sel_wr;
        end else begin
            B_V_data_1_sel_wr <= B_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        B_V_data_1_state <= 2'd0;
    end else begin
        if ((((2'd3 == B_V_data_1_state) & (1'b0 == B_V_data_1_vld_in) & (1'b1 == B_V_data_1_ack_out)) | ((2'd2 == B_V_data_1_state) & (1'b0 == B_V_data_1_vld_in)))) begin
            B_V_data_1_state <= 2'd2;
        end else if ((((2'd1 == B_V_data_1_state) & (1'b0 == B_V_data_1_ack_out)) | ((2'd3 == B_V_data_1_state) & (1'b0 == B_V_data_1_ack_out) & (1'b1 == B_V_data_1_vld_in)))) begin
            B_V_data_1_state <= 2'd1;
        end else if ((((2'd1 == B_V_data_1_state) & (1'b1 == B_V_data_1_ack_out)) | (~((1'b0 == B_V_data_1_ack_out) & (1'b1 == B_V_data_1_vld_in)) & ~((1'b0 == B_V_data_1_vld_in) & (1'b1 == B_V_data_1_ack_out)) & (2'd3 == B_V_data_1_state)) | ((2'd2 == B_V_data_1_state) & (1'b1 == B_V_data_1_vld_in)))) begin
            B_V_data_1_state <= 2'd3;
        end else begin
            B_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == B_V_data_1_load_A)) begin
        B_V_data_1_payload_A <= B_V_data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == B_V_data_1_load_B)) begin
        B_V_data_1_payload_B <= B_V_data_1_data_in;
    end
end

always @ (*) begin
    if ((1'b1 == B_V_data_1_sel)) begin
        B_V_data_1_data_out = B_V_data_1_payload_B;
    end else begin
        B_V_data_1_data_out = B_V_data_1_payload_A;
    end
end

assign B_V_data_1_ack_in = B_V_data_1_state[1'd1];
assign B_V_data_1_load_A = (~B_V_data_1_sel_wr & B_V_data_1_state_cmp_full);
assign B_V_data_1_load_B = (B_V_data_1_state_cmp_full & B_V_data_1_sel_wr);
assign B_V_data_1_sel = B_V_data_1_sel_rd;
assign B_V_data_1_state_cmp_full = ((B_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);
assign B_V_data_1_vld_out = B_V_data_1_state[1'd0];

assign ack_in = B_V_data_1_ack_in;
assign B_V_data_1_data_in = data_in;
assign B_V_data_1_vld_in = vld_in;

assign vld_out = B_V_data_1_vld_out;
assign data_out = B_V_data_1_data_out;
assign B_V_data_1_ack_out = ack_out;

assign apdone_blk = ((B_V_data_1_state == 2'd3 && ack_out == 1'b0) | (B_V_data_1_state == 2'd1));

endmodule // both

module MLP8_regslice_both_w1
#(parameter 
    DataWidth=1
)(
    input ap_clk ,
    input ap_rst,

    input data_in , 
    input vld_in , 
    output ack_in ,
    output data_out, 
    output vld_out,
    input ack_out,
    output apdone_blk
);

reg     [1:0] B_V_data_1_state;
wire    B_V_data_1_data_in;
reg     B_V_data_1_data_out;
wire    B_V_data_1_vld_reg;
wire    B_V_data_1_vld_in;
wire    B_V_data_1_vld_out;
reg     B_V_data_1_payload_A;
reg     B_V_data_1_payload_B;
reg     B_V_data_1_sel_rd;
reg     B_V_data_1_sel_wr;
wire    B_V_data_1_sel;
wire    B_V_data_1_load_A;
wire    B_V_data_1_load_B;
wire    B_V_data_1_state_cmp_full;
wire    B_V_data_1_ack_in;
wire    B_V_data_1_ack_out;

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        B_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == B_V_data_1_vld_out) & (1'b1 == B_V_data_1_ack_out))) begin
            B_V_data_1_sel_rd <= ~B_V_data_1_sel_rd;
        end else begin
            B_V_data_1_sel_rd <= B_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        B_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == B_V_data_1_vld_in) & (1'b1 == B_V_data_1_ack_in))) begin
            B_V_data_1_sel_wr <= ~B_V_data_1_sel_wr;
        end else begin
            B_V_data_1_sel_wr <= B_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        B_V_data_1_state <= 2'd0;
    end else begin
        if ((((2'd3 == B_V_data_1_state) & (1'b0 == B_V_data_1_vld_in) & (1'b1 == B_V_data_1_ack_out)) | ((2'd2 == B_V_data_1_state) & (1'b0 == B_V_data_1_vld_in)))) begin
            B_V_data_1_state <= 2'd2;
        end else if ((((2'd1 == B_V_data_1_state) & (1'b0 == B_V_data_1_ack_out)) | ((2'd3 == B_V_data_1_state) & (1'b0 == B_V_data_1_ack_out) & (1'b1 == B_V_data_1_vld_in)))) begin
            B_V_data_1_state <= 2'd1;
        end else if ((((2'd1 == B_V_data_1_state) & (1'b1 == B_V_data_1_ack_out)) | (~((1'b0 == B_V_data_1_ack_out) & (1'b1 == B_V_data_1_vld_in)) & ~((1'b0 == B_V_data_1_vld_in) & (1'b1 == B_V_data_1_ack_out)) & (2'd3 == B_V_data_1_state)) | ((2'd2 == B_V_data_1_state) & (1'b1 == B_V_data_1_vld_in)))) begin
            B_V_data_1_state <= 2'd3;
        end else begin
            B_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == B_V_data_1_load_A)) begin
        B_V_data_1_payload_A <= B_V_data_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == B_V_data_1_load_B)) begin
        B_V_data_1_payload_B <= B_V_data_1_data_in;
    end
end

always @ (*) begin
    if ((1'b1 == B_V_data_1_sel)) begin
        B_V_data_1_data_out = B_V_data_1_payload_B;
    end else begin
        B_V_data_1_data_out = B_V_data_1_payload_A;
    end
end

assign B_V_data_1_ack_in = B_V_data_1_state[1'd1];
assign B_V_data_1_load_A = (~B_V_data_1_sel_wr & B_V_data_1_state_cmp_full);
assign B_V_data_1_load_B = (B_V_data_1_state_cmp_full & B_V_data_1_sel_wr);
assign B_V_data_1_sel = B_V_data_1_sel_rd;
assign B_V_data_1_state_cmp_full = ((B_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);
assign B_V_data_1_vld_out = B_V_data_1_state[1'd0];

assign ack_in = B_V_data_1_ack_in;
assign B_V_data_1_data_in = data_in;
assign B_V_data_1_vld_in = vld_in;

assign vld_out = B_V_data_1_vld_out;
assign data_out = B_V_data_1_data_out;
assign B_V_data_1_ack_out = ack_out;

assign apdone_blk = ((B_V_data_1_state == 2'd3 && ack_out == 1'b0) | (B_V_data_1_state == 2'd1));

endmodule // both


// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_adapt_2_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_adapt_2_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_adapt_2_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_adapt_2_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_adapt_3_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_adapt_3_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_adapt_3_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_adapt_3_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_adapt_4_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_adapt_4_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_adapt_4_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_adapt_4_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_adapt_5_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_adapt_5_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_adapt_5_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_adapt_5_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_gelu_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_gelu_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_gelu_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_gelu_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_layernorm_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_layernorm_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_layernorm_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_layernorm_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_matmul_1_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_matmul_1_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_matmul_1_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_matmul_1_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_do_matmul_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_do_matmul_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_do_matmul_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_do_matmul_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_matmul_step1_cache_window_1_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_matmul_step1_cache_window_1_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_matmul_step1_cache_window_1_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_matmul_step1_cache_window_1_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_matmul_step1_cache_window_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_matmul_step1_cache_window_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_matmul_step1_cache_window_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_matmul_step1_cache_window_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_matmul_step2_mac_1_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_matmul_step2_mac_1_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_matmul_step2_mac_1_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_matmul_step2_mac_1_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_matmul_step2_mac_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 1,
    DEPTH        = 2)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_matmul_step2_mac_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_matmul_step2_mac_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_matmul_step2_mac_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 1,
    DEPTH       = 2)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689

`timescale 1ns/1ps
//RAW latency 1 

module MLP8_start_for_stream_merge_U0
#(parameter
    MEM_STYLE    = "shiftReg",
    DATA_WIDTH   = 1,
    ADDR_WIDTH   = 2,
    DEPTH        = 4)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,
    
    // read 

    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
    wire [ADDR_WIDTH-1:0] addr;
    wire                  push;
    wire                  pop;
    reg signed [ADDR_WIDTH:0] mOutPtr;
    reg                   empty_n = 1'b0;
    reg                   full_n = 1'b1; 
    // has num_data_valid?  no 
//------------------------Instantiation------------------
    MLP8_start_for_stream_merge_U0_ShiftReg 
    #(  .DATA_WIDTH (DATA_WIDTH),
        .ADDR_WIDTH (ADDR_WIDTH),
        .DEPTH      (DEPTH))
    U_MLP8_start_for_stream_merge_U0_ShiftReg (
        .clk        (clk),
        .we         (push),
        .addr       (addr),
        .din        (if_din),
        .dout       (if_dout)
    );
//------------------------Task and function--------------

//------------------------Body---------------------------
    // num_data_valid 

    // almost full/empty 

    // program full/empty 

    assign if_full_n  = full_n; 
    assign if_empty_n = empty_n;

    assign push       = full_n & if_write_ce & if_write;
    assign pop        = empty_n & if_read_ce & if_read;

    assign addr       = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0] : {ADDR_WIDTH{1'b0}};

    // mOutPtr
    always @(posedge clk) begin
        if (reset)
            mOutPtr <= {ADDR_WIDTH+1{1'b1}};
        else if (push & ~pop)
            mOutPtr <= mOutPtr + 1'b1;
        else if (~push & pop)
            mOutPtr <= mOutPtr - 1'b1;
    end

    // full_n
    always @(posedge clk) begin
        if (reset)
            full_n <= 1'b1;
        else if ((push & ~pop) && (mOutPtr == DEPTH - 2))
            full_n <= 1'b0;
        else if (~push & pop)
            full_n <= 1'b1;
    end

    // empty_n
    always @(posedge clk) begin
        if (reset)
            empty_n <= 1'b0;
        else if (push & ~pop)
            empty_n <= 1'b1;
        else if ((~push & pop) && (mOutPtr == 0))
            empty_n <= 1'b0;
    end

    // almost_full_n 

    // almost_empty_n 

    // prog_full_n 
 
    // prog_empty_n 

    // num_data_valid 

endmodule  


module MLP8_start_for_stream_merge_U0_ShiftReg
#(parameter
    DATA_WIDTH  = 1,
    ADDR_WIDTH  = 2,
    DEPTH       = 4)
(
    input  wire                  clk,
    input  wire                  reset,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] addr,
    input  wire [DATA_WIDTH-1:0] din,
    output wire [DATA_WIDTH-1:0] dout
);

    reg [DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
    integer i;

    always @ (posedge clk) begin
        if (we) begin
            for (i=0; i<DEPTH-1; i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= din;
        end
    end

    assign dout = SRL_SIG[addr];

endmodule// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_stream_copy (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        i_stream_TVALID,
        main_sm_din,
        main_sm_num_data_valid,
        main_sm_fifo_cap,
        main_sm_full_n,
        main_sm_write,
        resi_i_sm_din,
        resi_i_sm_num_data_valid,
        resi_i_sm_fifo_cap,
        resi_i_sm_full_n,
        resi_i_sm_write,
        start_out,
        start_write,
        i_stream_TDATA,
        i_stream_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   i_stream_TVALID;
output  [27:0] main_sm_din;
input  [2:0] main_sm_num_data_valid;
input  [2:0] main_sm_fifo_cap;
input   main_sm_full_n;
output   main_sm_write;
output  [27:0] resi_i_sm_din;
input  [2:0] resi_i_sm_num_data_valid;
input  [2:0] resi_i_sm_fifo_cap;
input   resi_i_sm_full_n;
output   resi_i_sm_write;
output   start_out;
output   start_write;
input  [31:0] i_stream_TDATA;
output   i_stream_TREADY;

reg ap_idle;
reg main_sm_write;
reg resi_i_sm_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire   [0:0] icmp_ln186_fu_98_p2;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    i_stream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    main_sm_blk_n;
reg    resi_i_sm_blk_n;
wire   [13:0] trunc_ln191_fu_106_p1;
reg   [13:0] trunc_ln191_reg_161;
reg    ap_block_pp0_stage0_11001;
reg   [13:0] trunc_ln191_1_reg_166;
reg   [14:0] indvar_flatten_fu_50;
wire   [14:0] add_ln186_fu_92_p2;
wire    ap_loop_init;
reg   [14:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [27:0] tmp_s_fu_132_p3;
reg    ap_block_pp0_stage0_01001;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    regslice_both_i_stream_U_apdone_blk;
wire   [31:0] i_stream_TDATA_int_regslice;
wire    i_stream_TVALID_int_regslice;
reg    i_stream_TREADY_int_regslice;
wire    regslice_both_i_stream_U_ack_in;
reg    ap_condition_121;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 indvar_flatten_fu_50 = 15'd0;
end

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

MLP8_regslice_both #(
    .DataWidth( 32 ))
regslice_both_i_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(i_stream_TDATA),
    .vld_in(i_stream_TVALID),
    .ack_in(regslice_both_i_stream_U_ack_in),
    .data_out(i_stream_TDATA_int_regslice),
    .vld_out(i_stream_TVALID_int_regslice),
    .ack_out(i_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_i_stream_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_121)) begin
        if ((icmp_ln186_fu_98_p2 == 1'd0)) begin
            indvar_flatten_fu_50 <= add_ln186_fu_92_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_50 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln191_1_reg_166 <= {{i_stream_TDATA_int_regslice[29:16]}};
        trunc_ln191_reg_161 <= trunc_ln191_fu_106_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln186_fu_98_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_50;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (icmp_ln186_fu_98_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_stream_TDATA_blk_n = i_stream_TVALID_int_regslice;
    end else begin
        i_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln186_fu_98_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_stream_TREADY_int_regslice = 1'b1;
    end else begin
        i_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        main_sm_blk_n = main_sm_full_n;
    end else begin
        main_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        main_sm_write = 1'b1;
    end else begin
        main_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_blk_n = resi_i_sm_full_n;
    end else begin
        resi_i_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_write = 1'b1;
    end else begin
        resi_i_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln186_fu_92_p2 = (ap_sig_allocacmp_indvar_flatten_load + 15'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((icmp_ln186_fu_98_p2 == 1'd0) & (i_stream_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((resi_i_sm_full_n == 1'b0) | (main_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_121 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign i_stream_TREADY = regslice_both_i_stream_U_ack_in;

assign icmp_ln186_fu_98_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 15'd18816) ? 1'b1 : 1'b0);

assign main_sm_din = tmp_s_fu_132_p3;

assign resi_i_sm_din = tmp_s_fu_132_p3;

assign start_out = real_start;

assign tmp_s_fu_132_p3 = {{trunc_ln191_1_reg_166}, {trunc_ln191_reg_161}};

assign trunc_ln191_fu_106_p1 = i_stream_TDATA_int_regslice[13:0];

endmodule //MLP8_stream_copy
// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MLP8_stream_merge (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        resi_o_sm_dout,
        resi_o_sm_num_data_valid,
        resi_o_sm_fifo_cap,
        resi_o_sm_empty_n,
        resi_o_sm_read,
        m2_sm_dout,
        m2_sm_num_data_valid,
        m2_sm_fifo_cap,
        m2_sm_empty_n,
        m2_sm_read,
        o_stream_TREADY,
        o_stream_TDATA,
        o_stream_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [27:0] resi_o_sm_dout;
input  [2:0] resi_o_sm_num_data_valid;
input  [2:0] resi_o_sm_fifo_cap;
input   resi_o_sm_empty_n;
output   resi_o_sm_read;
input  [19:0] m2_sm_dout;
input  [2:0] m2_sm_num_data_valid;
input  [2:0] m2_sm_fifo_cap;
input   m2_sm_empty_n;
output   m2_sm_read;
input   o_stream_TREADY;
output  [31:0] o_stream_TDATA;
output   o_stream_TVALID;

reg ap_idle;
reg resi_o_sm_read;
reg m2_sm_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    regslice_both_o_stream_U_apdone_blk;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_state7_pp0_stage0_iter6;
wire    ap_loop_exit_ready;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln203_fu_117_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    resi_o_sm_blk_n;
wire    ap_block_pp0_stage0;
reg    m2_sm_blk_n;
reg    o_stream_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] trunc_ln208_fu_153_p1;
reg   [9:0] trunc_ln208_reg_276;
reg   [9:0] trunc_ln208_reg_276_pp0_iter2_reg;
reg   [9:0] trunc_ln208_reg_276_pp0_iter3_reg;
reg   [9:0] trunc_ln208_1_reg_281;
reg   [9:0] trunc_ln208_1_reg_281_pp0_iter2_reg;
reg   [9:0] trunc_ln208_1_reg_281_pp0_iter3_reg;
wire   [12:0] add_ln215_1_fu_203_p2;
reg   [12:0] add_ln215_1_reg_296;
wire   [12:0] add_ln215_3_fu_221_p2;
reg   [12:0] add_ln215_3_reg_301;
reg   [14:0] indvar_flatten_fu_70;
wire   [14:0] add_ln203_fu_111_p2;
wire    ap_loop_init;
reg   [14:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire  signed [13:0] trunc_ln207_fu_137_p1;
wire  signed [13:0] trunc_ln207_1_fu_141_p4;
wire  signed [32:0] trunc_ln2_fu_191_p1;
wire   [32:0] grp_fu_244_p3;
wire   [12:0] trunc_ln2_fu_191_p4;
wire  signed [12:0] sext_ln215_1_fu_200_p1;
wire  signed [32:0] trunc_ln215_1_fu_209_p1;
wire   [32:0] grp_fu_253_p3;
wire   [12:0] trunc_ln215_1_fu_209_p4;
wire  signed [12:0] sext_ln215_3_fu_218_p1;
wire   [28:0] tmp_fu_227_p4;
wire   [19:0] grp_fu_244_p1;
wire   [19:0] grp_fu_244_p2;
wire   [19:0] grp_fu_253_p1;
wire   [19:0] grp_fu_253_p2;
reg    grp_fu_244_ce;
reg    grp_fu_253_ce;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [31:0] o_stream_TDATA_int_regslice;
reg    o_stream_TVALID_int_regslice;
wire    o_stream_TREADY_int_regslice;
wire    regslice_both_o_stream_U_vld_out;
reg    ap_condition_158;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 ap_CS_fsm = 1'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter4 = 1'b0;
//#0 ap_enable_reg_pp0_iter5 = 1'b0;
//#0 ap_enable_reg_pp0_iter6 = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 indvar_flatten_fu_70 = 15'd0;
end

MLP8_mac_muladd_14s_20ns_20ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 33 ))
mac_muladd_14s_20ns_20ns_33_4_1_U1224(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln207_fu_137_p1),
    .din1(grp_fu_244_p1),
    .din2(grp_fu_244_p2),
    .ce(grp_fu_244_ce),
    .dout(grp_fu_244_p3)
);

MLP8_mac_muladd_14s_20ns_20ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 33 ))
mac_muladd_14s_20ns_20ns_33_4_1_U1225(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln207_1_fu_141_p4),
    .din1(grp_fu_253_p1),
    .din2(grp_fu_253_p2),
    .ce(grp_fu_253_ce),
    .dout(grp_fu_253_p3)
);

MLP8_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

MLP8_regslice_both #(
    .DataWidth( 32 ))
regslice_both_o_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(o_stream_TDATA_int_regslice),
    .vld_in(o_stream_TVALID_int_regslice),
    .ack_in(o_stream_TREADY_int_regslice),
    .data_out(o_stream_TDATA),
    .vld_out(regslice_both_o_stream_U_vld_out),
    .ack_out(o_stream_TREADY),
    .apdone_blk(regslice_both_o_stream_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_158)) begin
        if ((icmp_ln203_fu_117_p2 == 1'd0)) begin
            indvar_flatten_fu_70 <= add_ln203_fu_111_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_70 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln215_1_reg_296 <= add_ln215_1_fu_203_p2;
        add_ln215_3_reg_301 <= add_ln215_3_fu_221_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        trunc_ln208_1_reg_281_pp0_iter2_reg <= trunc_ln208_1_reg_281;
        trunc_ln208_1_reg_281_pp0_iter3_reg <= trunc_ln208_1_reg_281_pp0_iter2_reg;
        trunc_ln208_reg_276_pp0_iter2_reg <= trunc_ln208_reg_276;
        trunc_ln208_reg_276_pp0_iter3_reg <= trunc_ln208_reg_276_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        trunc_ln208_1_reg_281 <= {{m2_sm_dout[19:10]}};
        trunc_ln208_reg_276 <= trunc_ln208_fu_153_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln203_fu_117_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_244_ce = 1'b1;
    end else begin
        grp_fu_244_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_253_ce = 1'b1;
    end else begin
        grp_fu_253_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m2_sm_blk_n = m2_sm_empty_n;
    end else begin
        m2_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m2_sm_read = 1'b1;
    end else begin
        m2_sm_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        o_stream_TDATA_blk_n = o_stream_TREADY_int_regslice;
    end else begin
        o_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        o_stream_TVALID_int_regslice = 1'b1;
    end else begin
        o_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_o_sm_blk_n = resi_o_sm_empty_n;
    end else begin
        resi_o_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_o_sm_read = 1'b1;
    end else begin
        resi_o_sm_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln203_fu_111_p2 = (ap_sig_allocacmp_indvar_flatten_load + 15'd1);

assign add_ln215_1_fu_203_p2 = ($signed(trunc_ln2_fu_191_p4) + $signed(sext_ln215_1_fu_200_p1));

assign add_ln215_3_fu_221_p2 = ($signed(trunc_ln215_1_fu_209_p4) + $signed(sext_ln215_3_fu_218_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_o_stream_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage0_iter6)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_o_stream_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((o_stream_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state7_pp0_stage0_iter6))) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((o_stream_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state6_pp0_stage0_iter5))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_o_stream_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((o_stream_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state7_pp0_stage0_iter6))) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((o_stream_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state6_pp0_stage0_iter5))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((m2_sm_empty_n == 1'b0) | (resi_o_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((regslice_both_o_stream_U_apdone_blk == 1'b1) | (o_stream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = (o_stream_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_condition_158 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_244_p1 = 33'd670714;

assign grp_fu_244_p2 = 33'd524288;

assign grp_fu_253_p1 = 33'd670714;

assign grp_fu_253_p2 = 33'd524288;

assign icmp_ln203_fu_117_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 15'd18816) ? 1'b1 : 1'b0);

assign o_stream_TDATA_int_regslice = tmp_fu_227_p4;

assign o_stream_TVALID = regslice_both_o_stream_U_vld_out;

assign sext_ln215_1_fu_200_p1 = $signed(trunc_ln208_reg_276_pp0_iter3_reg);

assign sext_ln215_3_fu_218_p1 = $signed(trunc_ln208_1_reg_281_pp0_iter3_reg);

assign tmp_fu_227_p4 = {{{add_ln215_3_reg_301}, {3'd0}}, {add_ln215_1_reg_296}};

assign trunc_ln207_1_fu_141_p4 = {{resi_o_sm_dout[27:14]}};

assign trunc_ln207_fu_137_p1 = resi_o_sm_dout[13:0];

assign trunc_ln208_fu_153_p1 = m2_sm_dout[9:0];

assign trunc_ln215_1_fu_209_p1 = grp_fu_253_p3;

assign trunc_ln215_1_fu_209_p4 = {{trunc_ln215_1_fu_209_p1[32:20]}};

assign trunc_ln2_fu_191_p1 = grp_fu_244_p3;

assign trunc_ln2_fu_191_p4 = {{trunc_ln2_fu_191_p1[32:20]}};

endmodule //MLP8_stream_merge
